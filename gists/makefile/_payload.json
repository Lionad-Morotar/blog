[{"data":1,"prerenderedAt":821},["ShallowReactive",2],{"navigation":3,"/gists/makefile":393,"/gists/makefile-surround":816},[4,35,86,105,132,138,144,150,387],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"数字化转型","/gists/digital-transformation",{"title":205,"_path":206},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":208,"_path":209},"正则表达式","/gists/eegex",{"title":211,"_path":212},"Emoji","/gists/emoji",{"title":214,"_path":215},"工程","/gists/engineering",{"title":217,"_path":218},"熵","/gists/entropy",{"title":220,"_path":221},"Environment","/gists/environment",{"title":223,"_path":224},"Erlang","/gists/erlang",{"title":226,"_path":227},"逃离塔克夫","/gists/escape-from-tarkov",{"title":229,"_path":230},"ESNext (ES6-ES11)","/gists/esnext",{"title":232,"_path":233},"Eval！","/gists/eval",{"title":235,"_path":236},"Flutter","/gists/flutter",{"title":238,"_path":239},"字体","/gists/font",{"title":241,"_path":242},"JS 函数式编程","/gists/functional",{"title":244,"_path":245},"游戏化","/gists/gamification",{"title":247,"_path":248},"Google C++ Standard","/gists/google-cpp-standard",{"title":250,"_path":251},"双向链接完全体","/gists/graph",{"title":253,"_path":254},"Hardwares","/gists/hardwares",{"title":256,"_path":257},"哈希冲突","/gists/hash-collision",{"title":259,"_path":260},"信息设计","/gists/information-design",{"title":262,"_path":263},"InstantPage","/gists/instant.page",{"title":265,"_path":266},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":268,"_path":269},"KVStore","/gists/key-value-db",{"title":271,"_path":272},"Kubernetes","/gists/kubernetes",{"title":274,"_path":275},"Makefile","/gists/makefile",{"title":277,"_path":278},"Markdown Inline Style","/gists/markdown-nice",{"title":280,"_path":281},"小程序","/gists/miniapp",{"title":283,"_path":284},"减小页面快照体积","/gists/minify-html",{"title":286,"_path":287},"mklink","/gists/mklink",{"title":289,"_path":290},"Mock","/gists/mock",{"title":292,"_path":293},"多人协作系统","/gists/multiplayer",{"title":295,"_path":296},"多端应用","/gists/multy-end-app",{"title":298,"_path":299},"神经科学","/gists/neuroscience",{"title":301,"_path":302},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":304,"_path":305},"PInvoke","/gists/pinvoke",{"title":307,"_path":308},"像素","/gists/pixel",{"title":310,"_path":311},"PowerShell","/gists/powershell",{"title":313,"_path":314},"量子","/gists/quantum",{"title":316,"_path":317},"保持好奇心","/gists/questions",{"title":319,"_path":320},"React Native","/gists/react-native",{"title":322,"_path":323},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":325,"_path":326},"SEO","/gists/seo",{"title":328,"_path":329},"Shader","/gists/shader",{"title":331,"_path":332},"Shape Up","/gists/shape-up",{"title":334,"_path":335},"睡觉","/gists/sleep",{"title":337,"_path":338},"记录奇怪的问题","/gists/solved",{"title":340,"_path":341},"States","/gists/states",{"title":343,"_path":344},"Storage","/gists/storage",{"title":346,"_path":347},"音视频流处理","/gists/stream-cli",{"title":349,"_path":350},"Symbol","/gists/symbol",{"title":352,"_path":353},"系统论","/gists/systems-theory",{"title":355,"_path":356},"Taro","/gists/taro",{"title":358,"_path":359},"任务切片","/gists/task-slice",{"title":361,"_path":362},"技术偏好","/gists/tech-dudge",{"title":364,"_path":365},"Untitled","/gists/untitled",{"title":367,"_path":368},"可变字体","/gists/variable-font",{"title":370,"_path":371},"视觉错觉","/gists/visual-illusion",{"title":373,"_path":374},"SS(SSR)","/gists/vpn",{"title":376,"_path":377},"VS Code 插件开发","/gists/vscode-plugin",{"title":379,"_path":380},"Web Components","/gists/web-components",{"title":382,"_path":383},"Windows","/gists/windows",{"title":385,"_path":386},"查缺补漏","/gists/wrong",{"title":388,"_path":389,"children":390},"我 / About","/hire",[391],{"title":392,"_path":389},"📬 技术简历",{"_path":275,"_dir":394,"_draft":395,"_partial":395,"_locale":396,"title":274,"description":397,"body":398,"_type":810,"_id":811,"_source":812,"_file":813,"_stem":814,"_extension":815},"gists",false,"","Makefile 构建工具基础教程，结合 ElementUI 和 C++ 项目实践的深入解析。",{"type":399,"children":400,"toc":806},"root",[401,409,415,420,425,469,474,479,484,489,551,556,577,582,587,592,746,758,763,800],{"type":402,"tag":403,"props":404,"children":405},"element","p",{},[406],{"type":407,"value":408},"text","之前看 ElementUI 的时候有了解一点 Makefile 的语法，现在正在看 C++，恰好是更细致学习一下的好机会。",{"type":402,"tag":410,"props":411,"children":413},"h2",{"id":412},"概述",[414],{"type":407,"value":412},{"type":402,"tag":403,"props":416,"children":417},{},[418],{"type":407,"value":419},"Make（GNU Make）是一个自动化工具，它的特色在于有基本逻辑能力，可以跟踪特定文件。这样一来，诸如按需编译这种任务就可以高效完成。",{"type":402,"tag":403,"props":421,"children":422},{},[423],{"type":407,"value":424},"它最主要的语法结构如下代码所示。",{"type":402,"tag":426,"props":427,"children":431},"pre",{"className":428,"code":429,"language":430,"meta":396,"style":396},"language-makefile shiki shiki-themes material-theme-lighter github-light github-dark monokai","target: dependencies\n        commands\n","makefile",[432],{"type":402,"tag":433,"props":434,"children":435},"code",{"__ignoreMap":396},[436,460],{"type":402,"tag":437,"props":438,"children":441},"span",{"class":439,"line":440},"line",1,[442,448,454],{"type":402,"tag":437,"props":443,"children":445},{"style":444},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[446],{"type":407,"value":447},"target",{"type":402,"tag":437,"props":449,"children":451},{"style":450},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[452],{"type":407,"value":453},":",{"type":402,"tag":437,"props":455,"children":457},{"style":456},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[458],{"type":407,"value":459}," dependencies\n",{"type":402,"tag":437,"props":461,"children":463},{"class":439,"line":462},2,[464],{"type":402,"tag":437,"props":465,"children":466},{"style":456},[467],{"type":407,"value":468},"        commands\n",{"type":402,"tag":403,"props":470,"children":471},{},[472],{"type":407,"value":473},"这意味着：构建目标（target） = 依赖（dependencies） + 执行命令（commands）。",{"type":402,"tag":403,"props":475,"children":476},{},[477],{"type":407,"value":478},"就语法来说，依赖可以不存在，这就表示某个目标意味着直接执行对应的指令。这有点像是定义了一个命令名，或者是一个快捷入口之类的。比如，你可以定义一个 help 目标，以便执行 make help 时，在控制台输出一串帮助文本。",{"type":402,"tag":403,"props":480,"children":481},{},[482],{"type":407,"value":483},"执行时，直接使用 make \u003Ctarget> 就可以了。如果构建目标的修改日期比依赖更新的话，显而易见就不需要再执行对应的指令；如果依赖不存在，那么会自动回溯执行依赖作为目标时的指令，如此一层一层递归下去，直到所有的 target 及 dependencies 的关系被确认。",{"type":402,"tag":403,"props":485,"children":486},{},[487],{"type":407,"value":488},"由于 Make 不会像解析编程语言一样去细致解析 Makefile，所以其语法能力还是稍弱。不会鉴于其隐含的终极目标只是说明各个文件的依赖关系时顺带执行指令，所以也就可以理解为什么 Makefile 中变量只是类似 C 语言中宏一样的字符串替换了。",{"type":402,"tag":426,"props":490,"children":492},{"className":428,"code":491,"language":430,"meta":396,"style":396},"# define my variable\nvar = strings\ntarget: $(var)\n",[493],{"type":402,"tag":433,"props":494,"children":495},{"__ignoreMap":396},[496,505,523],{"type":402,"tag":437,"props":497,"children":498},{"class":439,"line":440},[499],{"type":402,"tag":437,"props":500,"children":502},{"style":501},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[503],{"type":407,"value":504},"# define my variable\n",{"type":402,"tag":437,"props":506,"children":507},{"class":439,"line":462},[508,513,518],{"type":402,"tag":437,"props":509,"children":510},{"style":456},[511],{"type":407,"value":512},"var ",{"type":402,"tag":437,"props":514,"children":515},{"style":450},[516],{"type":407,"value":517},"=",{"type":402,"tag":437,"props":519,"children":520},{"style":456},[521],{"type":407,"value":522}," strings\n",{"type":402,"tag":437,"props":524,"children":526},{"class":439,"line":525},3,[527,531,535,541,546],{"type":402,"tag":437,"props":528,"children":529},{"style":444},[530],{"type":407,"value":447},{"type":402,"tag":437,"props":532,"children":533},{"style":450},[534],{"type":407,"value":453},{"type":402,"tag":437,"props":536,"children":538},{"style":537},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[539],{"type":407,"value":540}," $(",{"type":402,"tag":437,"props":542,"children":543},{"style":456},[544],{"type":407,"value":545},"var",{"type":402,"tag":437,"props":547,"children":548},{"style":537},[549],{"type":407,"value":550},")\n",{"type":402,"tag":403,"props":552,"children":553},{},[554],{"type":407,"value":555},"Make 和 C/C++ 确实是一对儿。Make 在识别 .o 文件时，能自动把 .c 添加为依赖关系。这功能叫做自动推导（或隐私推导）。除了隐私推导，他还支持类似 C 的 Include，把别的 Makefile 整个包含进来。",{"type":402,"tag":426,"props":557,"children":559},{"className":428,"code":558,"language":430,"meta":396,"style":396},"include foo.make a.mk b.mk\n",[560],{"type":402,"tag":433,"props":561,"children":562},{"__ignoreMap":396},[563],{"type":402,"tag":437,"props":564,"children":565},{"class":439,"line":440},[566,572],{"type":402,"tag":437,"props":567,"children":569},{"style":568},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[570],{"type":407,"value":571},"include",{"type":402,"tag":437,"props":573,"children":574},{"style":456},[575],{"type":407,"value":576}," foo.make a.mk b.mk\n",{"type":402,"tag":403,"props":578,"children":579},{},[580],{"type":407,"value":581},"可以发现，Make 和字符串要打非常多交道，所以它支持各种通配符也就不令人意外了。如同 SHELL 中的通配符，* 和 ⁓ 分别代表任意长度字符串和用户主目录。不知道你用过正则没有，通配符就用作匹配及确认，再返回 true 或 false。这时候有人要问了，既然 Makefile 和字符串打交道，通配符返回布尔有啥用啊，它没办法表示列表哇！",{"type":402,"tag":403,"props":583,"children":584},{},[585],{"type":407,"value":586},"这就要说到 Makefile 的关键字了，wildcard，它是扩展关键字，可以把通配符匹配到的所有东西“扩展”为“列表”。列表当然是想象中的列表，其实际产物还是字符串的啦。不过为了更方便操作列表，还有辅助用的其它关键字，比如 patsubst，它是类似正则中的 replaceAll 那种效果。",{"type":402,"tag":403,"props":588,"children":589},{},[590],{"type":407,"value":591},"下面用一个例子来说明吧，把目录下所有 C 文件找出来，替换为 .o 后缀，这样一来，就可以用 gcc 全部编译了。",{"type":402,"tag":426,"props":593,"children":595},{"className":428,"code":594,"language":430,"meta":396,"style":396},"cfiles := $(wildcard *.c)\nofiles := $(patsubst %.c, %.o, %(cfiles))\ncompile: $(ofiles)\n         gcc -o $(ofiles)\n",[596],{"type":402,"tag":433,"props":597,"children":598},{"__ignoreMap":396},[599,638,699,724],{"type":402,"tag":437,"props":600,"children":601},{"class":439,"line":440},[602,607,612,616,622,628,634],{"type":402,"tag":437,"props":603,"children":604},{"style":456},[605],{"type":407,"value":606},"cfiles ",{"type":402,"tag":437,"props":608,"children":609},{"style":450},[610],{"type":407,"value":611},":=",{"type":402,"tag":437,"props":613,"children":614},{"style":537},[615],{"type":407,"value":540},{"type":402,"tag":437,"props":617,"children":619},{"style":618},"--shiki-light:#6182B8;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF",[620],{"type":407,"value":621},"wildcard",{"type":402,"tag":437,"props":623,"children":625},{"style":624},"--shiki-light:#E53935;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[626],{"type":407,"value":627}," *",{"type":402,"tag":437,"props":629,"children":631},{"style":630},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[632],{"type":407,"value":633},".c",{"type":402,"tag":437,"props":635,"children":636},{"style":537},[637],{"type":407,"value":550},{"type":402,"tag":437,"props":639,"children":640},{"class":439,"line":462},[641,646,650,654,659,664,668,673,677,682,686,690,695],{"type":402,"tag":437,"props":642,"children":643},{"style":456},[644],{"type":407,"value":645},"ofiles ",{"type":402,"tag":437,"props":647,"children":648},{"style":450},[649],{"type":407,"value":611},{"type":402,"tag":437,"props":651,"children":652},{"style":537},[653],{"type":407,"value":540},{"type":402,"tag":437,"props":655,"children":656},{"style":618},[657],{"type":407,"value":658},"patsubst",{"type":402,"tag":437,"props":660,"children":661},{"style":624},[662],{"type":407,"value":663}," %",{"type":402,"tag":437,"props":665,"children":666},{"style":630},[667],{"type":407,"value":633},{"type":402,"tag":437,"props":669,"children":670},{"style":537},[671],{"type":407,"value":672},",",{"type":402,"tag":437,"props":674,"children":675},{"style":624},[676],{"type":407,"value":663},{"type":402,"tag":437,"props":678,"children":679},{"style":630},[680],{"type":407,"value":681},".o",{"type":402,"tag":437,"props":683,"children":684},{"style":537},[685],{"type":407,"value":672},{"type":402,"tag":437,"props":687,"children":688},{"style":624},[689],{"type":407,"value":663},{"type":402,"tag":437,"props":691,"children":692},{"style":630},[693],{"type":407,"value":694},"(cfiles)",{"type":402,"tag":437,"props":696,"children":697},{"style":537},[698],{"type":407,"value":550},{"type":402,"tag":437,"props":700,"children":701},{"class":439,"line":525},[702,707,711,715,720],{"type":402,"tag":437,"props":703,"children":704},{"style":444},[705],{"type":407,"value":706},"compile",{"type":402,"tag":437,"props":708,"children":709},{"style":450},[710],{"type":407,"value":453},{"type":402,"tag":437,"props":712,"children":713},{"style":537},[714],{"type":407,"value":540},{"type":402,"tag":437,"props":716,"children":717},{"style":456},[718],{"type":407,"value":719},"ofiles",{"type":402,"tag":437,"props":721,"children":722},{"style":537},[723],{"type":407,"value":550},{"type":402,"tag":437,"props":725,"children":727},{"class":439,"line":726},4,[728,733,738,742],{"type":402,"tag":437,"props":729,"children":730},{"style":456},[731],{"type":407,"value":732},"         gcc -o ",{"type":402,"tag":437,"props":734,"children":735},{"style":537},[736],{"type":407,"value":737},"$(",{"type":402,"tag":437,"props":739,"children":740},{"style":456},[741],{"type":407,"value":719},{"type":402,"tag":437,"props":743,"children":744},{"style":537},[745],{"type":407,"value":550},{"type":402,"tag":403,"props":747,"children":748},{},[749],{"type":402,"tag":750,"props":751,"children":755},"a",{"href":752,"rel":753},"https://seisman.github.io/how-to-write-makefile/rules.html#id5",[754],"nofollow",[756],{"type":407,"value":757},"TODO continue",{"type":402,"tag":410,"props":759,"children":761},{"id":760},"相关",[762],{"type":407,"value":760},{"type":402,"tag":764,"props":765,"children":766},"ul",{},[767,780,790],{"type":402,"tag":768,"props":769,"children":770},"li",{},[771,778],{"type":402,"tag":750,"props":772,"children":775},{"href":773,"rel":774},"https://github.com/seisman/how-to-write-makefile",[754],[776],{"type":407,"value":777},"跟我一起写 Makefile",{"type":407,"value":779},"，陈皓老师在 2004 年写的博客。非常易读，适合入门学习。",{"type":402,"tag":768,"props":781,"children":782},{},[783],{"type":402,"tag":750,"props":784,"children":787},{"href":785,"rel":786},"https://blog.csdn.net/qq_31811537/article/details/82892128",[754],[788],{"type":407,"value":789},"Makefile 中的 wildcard 用法",{"type":402,"tag":768,"props":791,"children":792},{},[793],{"type":402,"tag":750,"props":794,"children":797},{"href":795,"rel":796},"https://coolshell.cn/articles/3790.html",[754],[798],{"type":407,"value":799},"如何调试 MAKEFILE 变量",{"type":402,"tag":801,"props":802,"children":803},"style",{},[804],{"type":407,"value":805},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":396,"searchDepth":462,"depth":462,"links":807},[808,809],{"id":412,"depth":462,"text":412},{"id":760,"depth":462,"text":760},"markdown","content:7.gists:makefile.md","content","7.gists/makefile.md","7.gists/makefile","md",[817,819],{"_path":272,"title":271,"description":818},"Kubernetes，K8s，是一个基于容器的集群管理平台，主要用于控制容器",{"_path":278,"title":277,"description":820},"通过 VuePress 可以在 Markdown 文件中嵌套 HTML 和 VueJS 代码，然而贴到掘金之后需要我手动贴图，太麻烦了。",1741604945915]