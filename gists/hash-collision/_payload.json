[{"data":1,"prerenderedAt":586},["ShallowReactive",2],{"navigation":3,"/gists/hash-collision":410,"/gists/hash-collision-surround":582},[4,32,83,102,129,135,141,147,393,399,405],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":42,"_path":43},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":45,"_path":46},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":48,"_path":49},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":51,"_path":52},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":54,"_path":55},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":57,"_path":58},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":60,"_path":61},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":63,"_path":64},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":66,"_path":67},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":69,"_path":70},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":72,"_path":73},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":75,"_path":76},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":78,"_path":79},"🚝 四十二篇系列","/articles/fourty-two",{"title":81,"_path":82},"📝 技术博客归档","/articles/fold",{"title":84,"_path":85,"children":86},"造物 / Make","/tools",[87,90,93,96,99],{"title":88,"_path":89},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":91,"_path":92},"🌐 AnySort","/tools/anysort",{"title":94,"_path":95},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":97,"_path":98},"👓 Crapto","/tools/crypto-inline",{"title":100,"_path":101},"🖨️ any-to-base64","/tools/any-to-base64",{"title":103,"_path":104,"children":105},"吉他剧场 / Music","/music",[106,108,111,114,117,120,123,126],{"title":107,"_path":104},"🎸 FingerStyle！",{"title":109,"_path":110},"🌬️ 等待的风","/music/wind",{"title":112,"_path":113},"💕 约定的海洋","/music/ocean",{"title":115,"_path":116},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":118,"_path":119},"🌏 残酷天使的行动纲领","/music/eva",{"title":121,"_path":122},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":124,"_path":125},"🍷 Wu Wei","/music/wu-wei",{"title":127,"_path":128},"🌅 无题","/music/untitled",{"title":130,"_path":131,"children":132},"画点什么 / Paint","/paint",[133],{"title":134,"_path":131},"🚧 正在施工",{"title":136,"_path":137,"children":138},"读书笔记 / Notes","/books",[139],{"title":140,"_path":137},"📕 读书笔记",{"title":142,"_path":143,"children":144},"知识地图 / Maps","/maps",[145],{"title":146,"_path":143},"🏁 知识地图",{"title":148,"_path":149,"children":150},"零散的笔记 / Gists","/gists",[151,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390],{"title":152,"_path":149},"🧊 Gists",{"title":154,"_path":155},"网站的可访问性","/gists/accessibility",{"title":157,"_path":158},"Bit","/gists/bit",{"title":160,"_path":161},"图片模糊","/gists/blur",{"title":163,"_path":164},"渲染相关笔记","/gists/c4d",{"title":166,"_path":167},"CDN 问题记录","/gists/cdn",{"title":169,"_path":170},"消毒剂","/gists/cleaner",{"title":172,"_path":173},"Windows Command","/gists/cmd",{"title":175,"_path":176},"Command","/gists/command",{"title":178,"_path":179},"复杂科学","/gists/complexity-science",{"title":181,"_path":182},"GitHub Copilot","/gists/copilot",{"title":184,"_path":185},"宇宙","/gists/cosmos",{"title":187,"_path":188},"C++","/gists/cpp",{"title":190,"_path":191},"Data Structure","/gists/data-structure",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"设计模式","/gists/design-patterns",{"title":199,"_path":200},"Developer Experience","/gists/developer-experience",{"title":202,"_path":203},"Device Metrics","/gists/device-metrix",{"title":205,"_path":206},"数字化转型","/gists/digital-transformation",{"title":208,"_path":209},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":211,"_path":212},"正则表达式","/gists/eegex",{"title":214,"_path":215},"Emoji","/gists/emoji",{"title":217,"_path":218},"工程","/gists/engineering",{"title":220,"_path":221},"熵","/gists/entropy",{"title":223,"_path":224},"Environment","/gists/environment",{"title":226,"_path":227},"Erlang","/gists/erlang",{"title":229,"_path":230},"逃离塔克夫","/gists/escape-from-tarkov",{"title":232,"_path":233},"ESNext (ES6-ES11)","/gists/esnext",{"title":235,"_path":236},"Eval！","/gists/eval",{"title":238,"_path":239},"Flutter","/gists/flutter",{"title":241,"_path":242},"字体","/gists/font",{"title":244,"_path":245},"JS 函数式编程","/gists/functional",{"title":247,"_path":248},"游戏化","/gists/gamification",{"title":250,"_path":251},"Google C++ Standard","/gists/google-cpp-standard",{"title":253,"_path":254},"双向链接完全体","/gists/graph",{"title":256,"_path":257},"Hardwares","/gists/hardwares",{"title":259,"_path":260},"哈希冲突","/gists/hash-collision",{"title":262,"_path":263},"信息设计","/gists/information-design",{"title":265,"_path":266},"InstantPage","/gists/instant.page",{"title":268,"_path":269},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":271,"_path":272},"KVStore","/gists/key-value-db",{"title":274,"_path":275},"Kubernetes","/gists/kubernetes",{"title":277,"_path":278},"Makefile","/gists/makefile",{"title":280,"_path":281},"Markdown Inline Style","/gists/markdown-nice",{"title":283,"_path":284},"小程序","/gists/miniapp",{"title":286,"_path":287},"减小页面快照体积","/gists/minify-html",{"title":289,"_path":290},"mklink","/gists/mklink",{"title":292,"_path":293},"Mock","/gists/mock",{"title":295,"_path":296},"多人协作系统","/gists/multiplayer",{"title":298,"_path":299},"多端应用","/gists/multy-end-app",{"title":301,"_path":302},"神经科学","/gists/neuroscience",{"title":304,"_path":305},"OO","/gists/oo",{"title":307,"_path":308},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":310,"_path":311},"PInvoke","/gists/pinvoke",{"title":313,"_path":314},"像素","/gists/pixel",{"title":316,"_path":317},"PowerShell","/gists/powershell",{"title":319,"_path":320},"量子","/gists/quantum",{"title":322,"_path":323},"保持好奇心","/gists/questions",{"title":325,"_path":326},"React Native","/gists/react-native",{"title":328,"_path":329},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":331,"_path":332},"SEO","/gists/seo",{"title":334,"_path":335},"Shader","/gists/shader",{"title":337,"_path":338},"Shape Up","/gists/shape-up",{"title":340,"_path":341},"睡觉","/gists/sleep",{"title":343,"_path":344},"记录奇怪的问题","/gists/solved",{"title":346,"_path":347},"States","/gists/states",{"title":349,"_path":350},"Storage","/gists/storage",{"title":352,"_path":353},"音视频流处理","/gists/stream-cli",{"title":355,"_path":356},"Symbol","/gists/symbol",{"title":358,"_path":359},"系统论","/gists/systems-theory",{"title":361,"_path":362},"Taro","/gists/taro",{"title":364,"_path":365},"任务切片","/gists/task-slice",{"title":367,"_path":368},"技术偏好","/gists/tech-dudge",{"title":370,"_path":371},"Untitled","/gists/untitled",{"title":373,"_path":374},"可变字体","/gists/variable-font",{"title":376,"_path":377},"视觉错觉","/gists/visual-illusion",{"title":379,"_path":380},"SS(SSR)","/gists/vpn",{"title":382,"_path":383},"VS Code 插件开发","/gists/vscode-plugin",{"title":385,"_path":386},"Web Components","/gists/web-components",{"title":388,"_path":389},"Windows","/gists/windows",{"title":391,"_path":392},"查缺补漏","/gists/wrong",{"title":394,"_path":395,"children":396},"代码笔记 / Gists","/source-code",[397],{"title":398,"_path":395},"🚄 代码笔记",{"title":400,"_path":401,"children":402},"我 / Abount","/hire",[403],{"title":404,"_path":401},"📬 技术简历",{"title":406,"_path":407,"children":408},"todo","/todo",[409],{"title":406,"_path":407},{"_path":260,"_dir":411,"_draft":412,"_partial":412,"_locale":413,"title":259,"description":413,"body":414,"_type":576,"_id":577,"_source":578,"_file":579,"_stem":580,"_extension":581},"gists",false,"",{"type":415,"children":416,"toc":571},"root",[417,424,430,449,455,470,485,490,495,503,518,523,530,535,540,553,558],{"type":418,"tag":419,"props":420,"children":421},"element","h1",{"id":259},[422],{"type":423,"value":259},"text",{"type":418,"tag":425,"props":426,"children":428},"h2",{"id":427},"线性寻址",[429],{"type":423,"value":427},{"type":418,"tag":431,"props":432,"children":434},"h5",{"id":433},"cuckoo-hashing",[435],{"type":418,"tag":436,"props":437,"children":441},"a",{"href":438,"rel":439},"https://codecapsule.com/2013/07/20/cuckoo-hashing/",[440],"nofollow",[442],{"type":418,"tag":443,"props":444,"children":446},"i",{"title":445},"布谷鸟哈希、杜鹃哈希",[447],{"type":423,"value":448},"Cuckoo Hashing",{"type":418,"tag":450,"props":451,"children":452},"p",{},[453],{"type":423,"value":454},"最初的布谷鸟哈希使用了 hash1() 和 hash2() 两个哈希函数以及 T1、T2 两个表来存放键值对。它保证大多数键值对能在 T1 或 T2 中的一次哈希中就被找到（O(1)），这要优于某种情况下需要连续查找十几个位置的线性寻址方法。不过其弱势也很明显，其插入非常消耗性能，因为要对入口进行重排。如果 hash1(x) 在 T1 和 hash2(x) 在 T2 的位置都被占了，那么选择其中一个表中的元素如 T1 中的 y，用 x 把 y 的位置占了（鸠占鹊巢），然后继续计算 hash2(y) 在 T2 的位置。如果此时又遇到了碰撞，则继续递归地计算鸠占鹊巢（用 y 占新元素然后再找新元素的位置）。当然，如果计算了一堆位置仍然有碰撞存在，那只能选择给桶扩容了。一般情况下，会在负载因子大于 0.5 时主动扩容。而多个表带来了另外一个问题，布谷鸟哈希需要在多个位置寻找元素，这这些位置并不是临近的。在硬件上，其读取速度取决于硬盘随机读取速度。",{"type":418,"tag":456,"props":457,"children":458},"ul",{},[459],{"type":418,"tag":460,"props":461,"children":462},"li",{},[463],{"type":418,"tag":436,"props":464,"children":467},{"href":465,"rel":466},"https://www.bilibili.com/video/BV1dh411x761",[440],[468],{"type":423,"value":469},"CMU 15-445/645 数据库-LEC6-04-3-布谷鸟哈希",{"type":418,"tag":431,"props":471,"children":473},{"id":472},"hopscotch-hashing",[474],{"type":418,"tag":436,"props":475,"children":478},{"href":476,"rel":477},"https://codecapsule.com/2013/08/11/hopscotch-hashing/",[440],[479],{"type":418,"tag":443,"props":480,"children":482},{"title":481},"跳房子哈希",[483],{"type":423,"value":484},"Hopscotch hashing",{"type":418,"tag":450,"props":486,"children":487},{},[488],{"type":423,"value":489},"跳房子哈希规定每一个桶都拥有其在储存顺序中接下来 H 个位置的邻域，当出现碰撞时，值会储存到桶或其邻域中，这保证了常数级的读取时间，且相比布谷鸟哈希提高了缓存利用率。",{"type":418,"tag":450,"props":491,"children":492},{},[493],{"type":423,"value":494},"在给新元素寻找空位时，使用线性寻址。如果找到的这个空位的地址不在初始位置或其邻域中，那么回溯 H 个地址并逐个检查这些地址能否于空位进行交换。如果不会把值抛出其对应的邻域，就能交换，这样一来空位就离其初始地址要近一些。一直交换，直到能把新元素储存到其初始位置的邻域中。",{"type":418,"tag":450,"props":496,"children":497},{},[498],{"type":418,"tag":499,"props":500,"children":502},"img",{"alt":481,"src":501},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220323203225.png?w=60",[],{"type":418,"tag":431,"props":504,"children":506},{"id":505},"robin-hood-hashing",[507],{"type":418,"tag":436,"props":508,"children":511},{"href":509,"rel":510},"https://codecapsule.com/2013/11/11/robin-hood-hashing/",[440],[512],{"type":418,"tag":443,"props":513,"children":515},{"title":514},"罗宾汉哈希",[516],{"type":423,"value":517},"Robin Hood hashing",{"type":418,"tag":450,"props":519,"children":520},{},[521],{"type":423,"value":522},"罗宾汉哈希记录下每一个元素其储存位置与初始位置的偏移量 DIB，并在插入新元素时对比这些偏移量。它使用线性寻址逐个对比当前位置与新元素的 DIB，并把 DIB 更大的那个储存当前位置，然后继续扫描，直到放下所有元素。这种算法会使得所有元素距离的 DIB 的方差较小，让读取时间解决常数级。",{"type":418,"tag":450,"props":524,"children":525},{},[526],{"type":418,"tag":499,"props":527,"children":529},{"alt":514,"src":528},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220323210710.png?w=60",[],{"type":418,"tag":450,"props":531,"children":532},{},[533],{"type":423,"value":534},"判断元素是否在表中的算法会比其它哈希稍微繁琐一些，因为它使用线性扫描会得到四种情况：找到该元素、找到空桶、找到某扫描元素其 DIB 小于当前扫描距离、找到某扫描元素其 DIB 大于等于当前扫描距离。其中，找到某不等于该元素的元素，如果其 DIB 大于等于当前扫描距离，则需要继续线性扫描，直到遇见剩下三种情况才能分辨该元素是否位于表中，停止扫描。",{"type":418,"tag":450,"props":536,"children":537},{},[538],{"type":423,"value":539},"为了使删除元素不需要像插入元素那样交换入口的位置，一般会给删除的对象打一个墓碑标记，以在后续插入时将它当作一个空元素。Emmanuel 还介绍了一种性能更好的删除方法，向后移位法，见原文引用。",{"type":418,"tag":456,"props":541,"children":542},{},[543],{"type":418,"tag":460,"props":544,"children":545},{},[546],{"type":418,"tag":436,"props":547,"children":550},{"href":548,"rel":549},"https://www.bilibili.com/video/BV1RL4y1v7vQ",[440],[551],{"type":423,"value":552},"CMU 15-445/645 数据库-LEC6-04-2-罗宾汉哈希",{"type":418,"tag":425,"props":554,"children":556},{"id":555},"平方探测",[557],{"type":423,"value":555},{"type":418,"tag":456,"props":559,"children":560},{},[561],{"type":418,"tag":460,"props":562,"children":563},{},[564],{"type":418,"tag":436,"props":565,"children":568},{"href":566,"rel":567},"https://www.bilibili.com/video/BV1qJ411k7wc",[440],[569],{"type":423,"value":570},"平方探测法",{"title":413,"searchDepth":572,"depth":572,"links":573},2,[574,575],{"id":427,"depth":572,"text":427},{"id":555,"depth":572,"text":555},"markdown","content:7.gists:hash-collision.md","content","7.gists/hash-collision.md","7.gists/hash-collision","md",[583,584],{"_path":257,"title":256,"description":413},{"_path":263,"title":262,"description":585},"毫无疑问，信息设计包含两个重要的概念：设计以及信息。即，在传统设计理论的指导下，研究如何展示信息。不仅是“展示”，换个词“呈现”意思更加确切一些，因为设计工作中，我们不仅仅只面向形状、色彩、容器等信息的视觉映像，通常还会涉及视角、情绪、隐喻等心理层面因素。比方说，字体衬线体的古典对比非衬线体的现代感；文字的严肃对比图文的冲击力；黑白的冷淡对比红色的热情。",1732808700830]