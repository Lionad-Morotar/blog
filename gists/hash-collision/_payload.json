[{"data":1,"prerenderedAt":561},["Reactive",2],{"navigation":3,"/gists/hash-collision":386,"/gists/hash-collision-surround":557},[4,32,80,96,123,129,135,369,375,381],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"Bit","/gists/bit",{"title":148,"_path":149},"图片模糊","/gists/blur",{"title":151,"_path":152},"渲染相关笔记","/gists/c4d",{"title":154,"_path":155},"CDN 问题记录","/gists/cdn",{"title":157,"_path":158},"消毒剂","/gists/cleaner",{"title":160,"_path":161},"Windows Command","/gists/cmd",{"title":163,"_path":164},"Command","/gists/command",{"title":166,"_path":167},"复杂科学","/gists/complexity-science",{"title":169,"_path":170},"宇宙","/gists/cosmos",{"title":172,"_path":173},"C++","/gists/cpp",{"title":175,"_path":176},"Data Structure","/gists/data-structure",{"title":178,"_path":179},"DEPRESSION","/gists/depression",{"title":181,"_path":182},"设计模式","/gists/design-patterns",{"title":184,"_path":185},"Developer Experience","/gists/developer-experience",{"title":187,"_path":188},"Device Metrics","/gists/device-metrix",{"title":190,"_path":191},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":193,"_path":194},"正则表达式","/gists/eegex",{"title":196,"_path":197},"Emoji","/gists/emoji",{"title":199,"_path":200},"工程","/gists/engineering",{"title":202,"_path":203},"熵","/gists/entropy",{"title":205,"_path":206},"Environment","/gists/environment",{"title":208,"_path":209},"Erlang","/gists/erlang",{"title":211,"_path":212},"逃离塔克夫","/gists/escape-from-tarkov",{"title":214,"_path":215},"ESNext (ES6-ES11)","/gists/esnext",{"title":217,"_path":218},"Eval！","/gists/eval",{"title":220,"_path":221},"Flutter","/gists/flutter",{"title":223,"_path":224},"字体","/gists/font",{"title":226,"_path":227},"JS 函数式编程","/gists/functional",{"title":229,"_path":230},"Google C++ Standard","/gists/google-cpp-standard",{"title":232,"_path":233},"双向链接完全体","/gists/graph",{"title":235,"_path":236},"Hardwares","/gists/hardwares",{"title":238,"_path":239},"哈希冲突","/gists/hash-collision",{"title":241,"_path":242},"信息设计","/gists/information-design",{"title":244,"_path":245},"InstantPage","/gists/instant.page",{"title":247,"_path":248},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":250,"_path":251},"KVStore","/gists/key-value-db",{"title":253,"_path":254},"Kubernetes","/gists/kubernetes",{"title":256,"_path":257},"Makefile","/gists/makefile",{"title":259,"_path":260},"Markdown Inline Style","/gists/markdown-nice",{"title":262,"_path":263},"小程序","/gists/miniapp",{"title":265,"_path":266},"减小页面快照体积","/gists/minify-html",{"title":268,"_path":269},"mklink","/gists/mklink",{"title":271,"_path":272},"Mock","/gists/mock",{"title":274,"_path":275},"多端应用","/gists/multy-end-app",{"title":277,"_path":278},"神经科学","/gists/neuroscience",{"title":280,"_path":281},"OO","/gists/oo",{"title":283,"_path":284},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":286,"_path":287},"人物","/gists/person",{"title":289,"_path":290},"PInvoke","/gists/pinvoke",{"title":292,"_path":293},"像素","/gists/pixel",{"title":295,"_path":296},"PowerShell","/gists/powershell",{"title":298,"_path":299},"量子","/gists/quantum",{"title":301,"_path":302},"保持好奇心","/gists/questions",{"title":304,"_path":305},"React Native","/gists/react-native",{"title":307,"_path":308},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":310,"_path":311},"SEO","/gists/seo",{"title":313,"_path":314},"Shader","/gists/shader",{"title":316,"_path":317},"Shape Up","/gists/shape-up",{"title":319,"_path":320},"睡觉","/gists/sleep",{"title":322,"_path":323},"States","/gists/states",{"title":325,"_path":326},"Storage","/gists/storage",{"title":328,"_path":329},"音视频流处理","/gists/stream-cli",{"title":331,"_path":332},"Symbol","/gists/symbol",{"title":334,"_path":335},"系统论","/gists/systems-theory",{"title":337,"_path":338},"Taro","/gists/taro",{"title":340,"_path":341},"任务切片","/gists/task-slice",{"title":343,"_path":344},"技术偏好","/gists/tech-dudge",{"title":346,"_path":347},"Untitled","/gists/untitled",{"title":349,"_path":350},"可变字体","/gists/variable-font",{"title":352,"_path":353},"视觉错觉","/gists/visual-illusion",{"title":355,"_path":356},"SS(SSR)","/gists/vpn",{"title":358,"_path":359},"VS Code 插件开发","/gists/vscode-plugin",{"title":361,"_path":362},"Web Components","/gists/web-components",{"title":364,"_path":365},"Windows","/gists/windows",{"title":367,"_path":368},"查缺补漏","/gists/wrong",{"title":370,"_path":371,"children":372},"代码笔记 / Gists","/source-code",[373],{"title":374,"_path":371},"🚄 代码笔记",{"title":376,"_path":377,"children":378},"我 / Abount","/hire",[379],{"title":380,"_path":377},"📬 技术简历",{"title":382,"_path":383,"children":384},"todo","/todo",[385],{"title":382,"_path":383},{"_path":239,"_dir":387,"_draft":388,"_partial":388,"_locale":389,"title":238,"description":389,"body":390,"_type":552,"_id":553,"_source":554,"_file":555,"_extension":556},"gists",false,"",{"type":391,"children":392,"toc":547},"root",[393,400,406,425,431,446,461,466,471,479,494,499,506,511,516,529,534],{"type":394,"tag":395,"props":396,"children":397},"element","h1",{"id":238},[398],{"type":399,"value":238},"text",{"type":394,"tag":401,"props":402,"children":404},"h2",{"id":403},"线性寻址",[405],{"type":399,"value":403},{"type":394,"tag":407,"props":408,"children":410},"h5",{"id":409},"cuckoo-hashing",[411],{"type":394,"tag":412,"props":413,"children":417},"a",{"href":414,"rel":415},"https://codecapsule.com/2013/07/20/cuckoo-hashing/",[416],"nofollow",[418],{"type":394,"tag":419,"props":420,"children":422},"i",{"title":421},"布谷鸟哈希、杜鹃哈希",[423],{"type":399,"value":424},"Cuckoo Hashing",{"type":394,"tag":426,"props":427,"children":428},"p",{},[429],{"type":399,"value":430},"最初的布谷鸟哈希使用了 hash1() 和 hash2() 两个哈希函数以及 T1、T2 两个表来存放键值对。它保证大多数键值对能在 T1 或 T2 中的一次哈希中就被找到（O(1)），这要优于某种情况下需要连续查找十几个位置的线性寻址方法。不过其弱势也很明显，其插入非常消耗性能，因为要对入口进行重排。如果 hash1(x) 在 T1 和 hash2(x) 在 T2 的位置都被占了，那么选择其中一个表中的元素如 T1 中的 y，用 x 把 y 的位置占了（鸠占鹊巢），然后继续计算 hash2(y) 在 T2 的位置。如果此时又遇到了碰撞，则继续递归地计算鸠占鹊巢（用 y 占新元素然后再找新元素的位置）。当然，如果计算了一堆位置仍然有碰撞存在，那只能选择给桶扩容了。一般情况下，会在负载因子大于 0.5 时主动扩容。而多个表带来了另外一个问题，布谷鸟哈希需要在多个位置寻找元素，这这些位置并不是临近的。在硬件上，其读取速度取决于硬盘随机读取速度。",{"type":394,"tag":432,"props":433,"children":434},"ul",{},[435],{"type":394,"tag":436,"props":437,"children":438},"li",{},[439],{"type":394,"tag":412,"props":440,"children":443},{"href":441,"rel":442},"https://www.bilibili.com/video/BV1dh411x761",[416],[444],{"type":399,"value":445},"CMU 15-445/645 数据库-LEC6-04-3-布谷鸟哈希",{"type":394,"tag":407,"props":447,"children":449},{"id":448},"hopscotch-hashing",[450],{"type":394,"tag":412,"props":451,"children":454},{"href":452,"rel":453},"https://codecapsule.com/2013/08/11/hopscotch-hashing/",[416],[455],{"type":394,"tag":419,"props":456,"children":458},{"title":457},"跳房子哈希",[459],{"type":399,"value":460},"Hopscotch hashing",{"type":394,"tag":426,"props":462,"children":463},{},[464],{"type":399,"value":465},"跳房子哈希规定每一个桶都拥有其在储存顺序中接下来 H 个位置的邻域，当出现碰撞时，值会储存到桶或其邻域中，这保证了常数级的读取时间，且相比布谷鸟哈希提高了缓存利用率。",{"type":394,"tag":426,"props":467,"children":468},{},[469],{"type":399,"value":470},"在给新元素寻找空位时，使用线性寻址。如果找到的这个空位的地址不在初始位置或其邻域中，那么回溯 H 个地址并逐个检查这些地址能否于空位进行交换。如果不会把值抛出其对应的邻域，就能交换，这样一来空位就离其初始地址要近一些。一直交换，直到能把新元素储存到其初始位置的邻域中。",{"type":394,"tag":426,"props":472,"children":473},{},[474],{"type":394,"tag":475,"props":476,"children":478},"img",{"alt":457,"src":477},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220323203225.png?w=60",[],{"type":394,"tag":407,"props":480,"children":482},{"id":481},"robin-hood-hashing",[483],{"type":394,"tag":412,"props":484,"children":487},{"href":485,"rel":486},"https://codecapsule.com/2013/11/11/robin-hood-hashing/",[416],[488],{"type":394,"tag":419,"props":489,"children":491},{"title":490},"罗宾汉哈希",[492],{"type":399,"value":493},"Robin Hood hashing",{"type":394,"tag":426,"props":495,"children":496},{},[497],{"type":399,"value":498},"罗宾汉哈希记录下每一个元素其储存位置与初始位置的偏移量 DIB，并在插入新元素时对比这些偏移量。它使用线性寻址逐个对比当前位置与新元素的 DIB，并把 DIB 更大的那个储存当前位置，然后继续扫描，直到放下所有元素。这种算法会使得所有元素距离的 DIB 的方差较小，让读取时间解决常数级。",{"type":394,"tag":426,"props":500,"children":501},{},[502],{"type":394,"tag":475,"props":503,"children":505},{"alt":490,"src":504},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220323210710.png?w=60",[],{"type":394,"tag":426,"props":507,"children":508},{},[509],{"type":399,"value":510},"判断元素是否在表中的算法会比其它哈希稍微繁琐一些，因为它使用线性扫描会得到四种情况：找到该元素、找到空桶、找到某扫描元素其 DIB 小于当前扫描距离、找到某扫描元素其 DIB 大于等于当前扫描距离。其中，找到某不等于该元素的元素，如果其 DIB 大于等于当前扫描距离，则需要继续线性扫描，直到遇见剩下三种情况才能分辨该元素是否位于表中，停止扫描。",{"type":394,"tag":426,"props":512,"children":513},{},[514],{"type":399,"value":515},"为了使删除元素不需要像插入元素那样交换入口的位置，一般会给删除的对象打一个墓碑标记，以在后续插入时将它当作一个空元素。Emmanuel 还介绍了一种性能更好的删除方法，向后移位法，见原文引用。",{"type":394,"tag":432,"props":517,"children":518},{},[519],{"type":394,"tag":436,"props":520,"children":521},{},[522],{"type":394,"tag":412,"props":523,"children":526},{"href":524,"rel":525},"https://www.bilibili.com/video/BV1RL4y1v7vQ",[416],[527],{"type":399,"value":528},"CMU 15-445/645 数据库-LEC6-04-2-罗宾汉哈希",{"type":394,"tag":401,"props":530,"children":532},{"id":531},"平方探测",[533],{"type":399,"value":531},{"type":394,"tag":432,"props":535,"children":536},{},[537],{"type":394,"tag":436,"props":538,"children":539},{},[540],{"type":394,"tag":412,"props":541,"children":544},{"href":542,"rel":543},"https://www.bilibili.com/video/BV1qJ411k7wc",[416],[545],{"type":399,"value":546},"平方探测法",{"title":389,"searchDepth":548,"depth":548,"links":549},2,[550,551],{"id":403,"depth":548,"text":403},{"id":531,"depth":548,"text":531},"markdown","content:7.gists:hash-collision.md","content","7.gists/hash-collision.md","md",[558,559],{"_path":236,"title":235,"description":389},{"_path":242,"title":241,"description":560},"毫无疑问，信息设计包含两个重要的概念：设计以及信息。即，在传统设计理论的指导下，研究如何展示信息。不仅是“展示”，换个词“呈现”意思更加确切一些，因为设计工作中，我们不仅仅只面向形状、色彩、容器等信息的视觉映像，通常还会涉及视角、情绪、隐喻等心理层面因素。比方说，字体衬线体的古典对比非衬线体的现代感；文字的严肃对比图文的冲击力；黑白的冷淡对比红色的热情。",1710257711334]