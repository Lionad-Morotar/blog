[{"data":1,"prerenderedAt":2798},["ShallowReactive",2],{"navigation":3,"/_achieved/2020-05/type-check":161,"/_achieved/2020-05/type-check-surround":2791},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":166,"body":168,"_type":2785,"_id":2786,"_source":2787,"_file":2788,"_stem":2789,"_extension":2790},"/_achieved/2020-05/type-check","2020-05",false,true,"","🎫 常用类型判断方法的优势及缺陷",{"type":169,"children":170,"toc":2768},"root",[171,179,185,205,210,214,219,224,229,298,303,446,451,464,469,483,496,501,507,512,540,545,568,573,577,582,921,926,934,1040,1045,1074,1079,1084,1306,1311,1338,1343,1348,1353,1366,1371,1376,1586,1591,1612,1616,1621,1914,1919,1924,1929,2057,2062,2308,2313,2458,2463,2468,2576,2581,2586,2646,2654,2659,2664,2669,2674,2692,2697,2702,2707,2762],{"type":172,"tag":173,"props":174,"children":176},"element","h2",{"id":175},"常用判断方法",[177],{"type":178,"value":175},"text",{"type":172,"tag":180,"props":181,"children":182},"p",{},[183],{"type":178,"value":184},"类型判断，在 JavaScript 中是一个很经典的问题了。围绕类型判断，有几种常见的解决方法，下是最常用的三种：",{"type":172,"tag":186,"props":187,"children":188},"ul",{},[189,195,200],{"type":172,"tag":190,"props":191,"children":192},"li",{},[193],{"type":178,"value":194},"typeof",{"type":172,"tag":190,"props":196,"children":197},{},[198],{"type":178,"value":199},"instanceof",{"type":172,"tag":190,"props":201,"children":202},{},[203],{"type":178,"value":204},"Object.prototype.toString.call",{"type":172,"tag":180,"props":206,"children":207},{},[208],{"type":178,"value":209},"我将在此文中根据这几种方法在 ECMAScript 规范下的描述及我们开发时的实际情况，聊聊这几种方法的优劣势所在。",{"type":172,"tag":173,"props":211,"children":212},{"id":194},[213],{"type":178,"value":194},{"type":172,"tag":180,"props":215,"children":216},{},[217],{"type":178,"value":218},"当我还是一个 JS 萌新的时候，我就爱上了 typeof 运算符，因为它的作用正如其名，非常好理解。\n利用 typeof 我们可以轻松判断常见的基础类型，如 Number、String、Boolean 等。",{"type":172,"tag":180,"props":220,"children":221},{},[222],{"type":178,"value":223},"ECMAScript 文档中有对 typeof 这样描述：",{"type":172,"tag":180,"props":225,"children":226},{},[227],{"type":178,"value":228},"$\\it{UnaryExpression} \\quad: \\quad \\bf{typeof} \\quad \\it{UnaryExpression}$",{"type":172,"tag":230,"props":231,"children":232},"ol",{},[233,238,273,284,293],{"type":172,"tag":190,"props":234,"children":235},{},[236],{"type":178,"value":237},"Let val be the result of evaluating UnaryExpression.",{"type":172,"tag":190,"props":239,"children":240},{},[241,243,249,251],{"type":178,"value":242},"If ",{"type":172,"tag":244,"props":245,"children":246},"em",{},[247],{"type":178,"value":248},"Type(val)",{"type":178,"value":250}," is Reference, then\n",{"type":172,"tag":186,"props":252,"children":253},{},[254],{"type":172,"tag":190,"props":255,"children":256},{},[257,258,263,265,271],{"type":178,"value":242},{"type":172,"tag":244,"props":259,"children":260},{},[261],{"type":178,"value":262},"IsUnresolvableReference(val)",{"type":178,"value":264}," is true, return ",{"type":172,"tag":266,"props":267,"children":268},"strong",{},[269],{"type":178,"value":270},"\"undefined\"",{"type":178,"value":272},".",{"type":172,"tag":190,"props":274,"children":275},{},[276,278,283],{"type":178,"value":277},"Let val be ",{"type":172,"tag":244,"props":279,"children":280},{},[281],{"type":178,"value":282},"GetValue(val)",{"type":178,"value":272},{"type":172,"tag":190,"props":285,"children":286},{},[287,292],{"type":172,"tag":244,"props":288,"children":289},{},[290],{"type":178,"value":291},"ReturnIfAbrupt(val)",{"type":178,"value":272},{"type":172,"tag":190,"props":294,"children":295},{},[296],{"type":178,"value":297},"Return a String according to Table Below.",{"type":172,"tag":180,"props":299,"children":300},{},[301],{"type":178,"value":302},"简单来说，就是先判断是不是引用未知，是则返回 'undefined'，不然就根据下表找值。",{"type":172,"tag":304,"props":305,"children":306},"table",{},[307,327],{"type":172,"tag":308,"props":309,"children":310},"thead",{},[311],{"type":172,"tag":312,"props":313,"children":314},"tr",{},[315,322],{"type":172,"tag":316,"props":317,"children":319},"th",{"align":318},"center",[320],{"type":178,"value":321},"类型",{"type":172,"tag":316,"props":323,"children":324},{"align":318},[325],{"type":178,"value":326},"返回",{"type":172,"tag":328,"props":329,"children":330},"tbody",{},[331,344,357,370,383,396,408,420,433],{"type":172,"tag":312,"props":332,"children":333},{},[334,340],{"type":172,"tag":335,"props":336,"children":337},"td",{"align":318},[338],{"type":178,"value":339},"Undefined",{"type":172,"tag":335,"props":341,"children":342},{"align":318},[343],{"type":178,"value":270},{"type":172,"tag":312,"props":345,"children":346},{},[347,352],{"type":172,"tag":335,"props":348,"children":349},{"align":318},[350],{"type":178,"value":351},"Null",{"type":172,"tag":335,"props":353,"children":354},{"align":318},[355],{"type":178,"value":356},"\"object\"",{"type":172,"tag":312,"props":358,"children":359},{},[360,365],{"type":172,"tag":335,"props":361,"children":362},{"align":318},[363],{"type":178,"value":364},"Boolean",{"type":172,"tag":335,"props":366,"children":367},{"align":318},[368],{"type":178,"value":369},"\"boolean\"",{"type":172,"tag":312,"props":371,"children":372},{},[373,378],{"type":172,"tag":335,"props":374,"children":375},{"align":318},[376],{"type":178,"value":377},"Number",{"type":172,"tag":335,"props":379,"children":380},{"align":318},[381],{"type":178,"value":382},"\"number\"",{"type":172,"tag":312,"props":384,"children":385},{},[386,391],{"type":172,"tag":335,"props":387,"children":388},{"align":318},[389],{"type":178,"value":390},"String",{"type":172,"tag":335,"props":392,"children":393},{"align":318},[394],{"type":178,"value":395},"\"string\"",{"type":172,"tag":312,"props":397,"children":398},{},[399,404],{"type":172,"tag":335,"props":400,"children":401},{"align":318},[402],{"type":178,"value":403},"Object (ordinary and does not implement [[Call]])",{"type":172,"tag":335,"props":405,"children":406},{"align":318},[407],{"type":178,"value":356},{"type":172,"tag":312,"props":409,"children":410},{},[411,416],{"type":172,"tag":335,"props":412,"children":413},{"align":318},[414],{"type":178,"value":415},"Object (standard exotic and does not implement [[Call]])",{"type":172,"tag":335,"props":417,"children":418},{"align":318},[419],{"type":178,"value":356},{"type":172,"tag":312,"props":421,"children":422},{},[423,428],{"type":172,"tag":335,"props":424,"children":425},{"align":318},[426],{"type":178,"value":427},"Object (implements [[Call]])",{"type":172,"tag":335,"props":429,"children":430},{"align":318},[431],{"type":178,"value":432},"\"function\"",{"type":172,"tag":312,"props":434,"children":435},{},[436,441],{"type":172,"tag":335,"props":437,"children":438},{"align":318},[439],{"type":178,"value":440},"Object (non-standard exotic and does not implement [[Call]])",{"type":172,"tag":335,"props":442,"children":443},{"align":318},[444],{"type":178,"value":445},"Implementation-defined. Must not be \"undefined\", \"boolean\", \"function\", \"number\", \"symbol\", or \"string\".",{"type":172,"tag":180,"props":447,"children":448},{},[449],{"type":178,"value":450},"这里我们详细说说两点：",{"type":172,"tag":230,"props":452,"children":453},{},[454,459],{"type":172,"tag":190,"props":455,"children":456},{},[457],{"type":178,"value":458},"判断内置对象",{"type":172,"tag":190,"props":460,"children":461},{},[462],{"type":178,"value":463},"typeof null === 'object'",{"type":172,"tag":465,"props":466,"children":467},"h3",{"id":458},[468],{"type":178,"value":458},{"type":172,"tag":180,"props":470,"children":471},{},[472,474,481],{"type":178,"value":473},"Function 作为内置对象，为什么 ",{"type":172,"tag":475,"props":476,"children":478},"code",{"className":477},[],[479],{"type":178,"value":480},"typeof (function a(){})",{"type":178,"value":482}," 的值不为“object”呢？",{"type":172,"tag":180,"props":484,"children":485},{},[486,488,494],{"type":178,"value":487},"其实上面那张表有相应线索，倒数第二条，这是一个特殊判定，“如果对象实现了内部方法[[Call]]” 或 “是 ",{"type":172,"tag":475,"props":489,"children":491},{"className":490},[],[492],{"type":178,"value":493},"Callable",{"type":178,"value":495}," 对象”，那么返回值为“function”。",{"type":172,"tag":180,"props":497,"children":498},{},[499],{"type":178,"value":500},"用 typeof 判断对象太麻烦了，一点儿也不实在。一般情况下，我们会用等下介绍的 Object.prototype.toString 去判断内置对象。",{"type":172,"tag":465,"props":502,"children":504},{"id":503},"typeof-null",[505],{"type":178,"value":506},"typeof null",{"type":172,"tag":180,"props":508,"children":509},{},[510],{"type":178,"value":511},"null 是用来标记“期待指向”的，不是 Object 类型，所以 typeof null === 'object' 是一个程序错误。\n这要追溯到第一版 JavaScript。这版 JS 的实现中，值是存储在 32 位单位中，其中端序最小的 3 位，用来表示值的类型，如下：",{"type":172,"tag":186,"props":513,"children":514},{},[515,520,525,530,535],{"type":172,"tag":190,"props":516,"children":517},{},[518],{"type":178,"value":519},"000：Object",{"type":172,"tag":190,"props":521,"children":522},{},[523],{"type":178,"value":524},"001：Int",{"type":172,"tag":190,"props":526,"children":527},{},[528],{"type":178,"value":529},"010：Double",{"type":172,"tag":190,"props":531,"children":532},{},[533],{"type":178,"value":534},"100：String",{"type":172,"tag":190,"props":536,"children":537},{},[538],{"type":178,"value":539},"110：Boolean",{"type":172,"tag":180,"props":541,"children":542},{},[543],{"type":178,"value":544},"此外，还有两种特殊值：",{"type":172,"tag":186,"props":546,"children":547},{},[548,558],{"type":172,"tag":190,"props":549,"children":550},{},[551,556],{"type":172,"tag":266,"props":552,"children":553},{},[554],{"type":178,"value":555},"undefined",{"type":178,"value":557}," (JSVAL_VOID): $-2^{32}$",{"type":172,"tag":190,"props":559,"children":560},{},[561,566],{"type":172,"tag":266,"props":562,"children":563},{},[564],{"type":178,"value":565},"null",{"type":178,"value":567}," (JSVAL_NULL): 用全为 0 的机器码表示的 NULL 指针（或，一个指向 0 的 Object 类型的值）",{"type":172,"tag":180,"props":569,"children":570},{},[571],{"type":178,"value":572},"也就是说，对程序而言，typeof null 判断类型是根据前三位 0 取得的“object”。这是一个历史遗留问题，有人提出过修复方案，但是怕影响历史遗留代码，修复便被否决了。",{"type":172,"tag":173,"props":574,"children":575},{"id":199},[576],{"type":178,"value":199},{"type":172,"tag":180,"props":578,"children":579},{},[580],{"type":178,"value":581},"内置 instanceof 运算符是用来检测构造函数的 prototype 属性是否存在于某个实例对象的原型链。\n用代码解释要更直观一些：",{"type":172,"tag":583,"props":584,"children":588},"pre",{"className":585,"code":586,"language":587,"meta":166,"style":166},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","function Car(make, model, year) {\n  this.make = make\n  this.model = model\n  this.year = year\n}\nconst auto = new Car('Honda', 'Accord', 1998)\n\n// true\nconsole.log((auto.__proto__ === Car.prototype) === auto instanceof Car)\n","js",[589],{"type":172,"tag":475,"props":590,"children":591},{"__ignoreMap":166},[592,651,681,707,733,742,823,832,842],{"type":172,"tag":593,"props":594,"children":597},"span",{"class":595,"line":596},"line",1,[598,604,610,616,622,627,632,636,641,646],{"type":172,"tag":593,"props":599,"children":601},{"style":600},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[602],{"type":178,"value":603},"function",{"type":172,"tag":593,"props":605,"children":607},{"style":606},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[608],{"type":178,"value":609}," Car",{"type":172,"tag":593,"props":611,"children":613},{"style":612},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[614],{"type":178,"value":615},"(",{"type":172,"tag":593,"props":617,"children":619},{"style":618},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[620],{"type":178,"value":621},"make",{"type":172,"tag":593,"props":623,"children":624},{"style":612},[625],{"type":178,"value":626},",",{"type":172,"tag":593,"props":628,"children":629},{"style":618},[630],{"type":178,"value":631}," model",{"type":172,"tag":593,"props":633,"children":634},{"style":612},[635],{"type":178,"value":626},{"type":172,"tag":593,"props":637,"children":638},{"style":618},[639],{"type":178,"value":640}," year",{"type":172,"tag":593,"props":642,"children":643},{"style":612},[644],{"type":178,"value":645},")",{"type":172,"tag":593,"props":647,"children":648},{"style":612},[649],{"type":178,"value":650}," {\n",{"type":172,"tag":593,"props":652,"children":654},{"class":595,"line":653},2,[655,661,665,670,676],{"type":172,"tag":593,"props":656,"children":658},{"style":657},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[659],{"type":178,"value":660},"  this",{"type":172,"tag":593,"props":662,"children":663},{"style":612},[664],{"type":178,"value":272},{"type":172,"tag":593,"props":666,"children":668},{"style":667},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[669],{"type":178,"value":621},{"type":172,"tag":593,"props":671,"children":673},{"style":672},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[674],{"type":178,"value":675}," =",{"type":172,"tag":593,"props":677,"children":678},{"style":667},[679],{"type":178,"value":680}," make\n",{"type":172,"tag":593,"props":682,"children":684},{"class":595,"line":683},3,[685,689,693,698,702],{"type":172,"tag":593,"props":686,"children":687},{"style":657},[688],{"type":178,"value":660},{"type":172,"tag":593,"props":690,"children":691},{"style":612},[692],{"type":178,"value":272},{"type":172,"tag":593,"props":694,"children":695},{"style":667},[696],{"type":178,"value":697},"model",{"type":172,"tag":593,"props":699,"children":700},{"style":672},[701],{"type":178,"value":675},{"type":172,"tag":593,"props":703,"children":704},{"style":667},[705],{"type":178,"value":706}," model\n",{"type":172,"tag":593,"props":708,"children":710},{"class":595,"line":709},4,[711,715,719,724,728],{"type":172,"tag":593,"props":712,"children":713},{"style":657},[714],{"type":178,"value":660},{"type":172,"tag":593,"props":716,"children":717},{"style":612},[718],{"type":178,"value":272},{"type":172,"tag":593,"props":720,"children":721},{"style":667},[722],{"type":178,"value":723},"year",{"type":172,"tag":593,"props":725,"children":726},{"style":672},[727],{"type":178,"value":675},{"type":172,"tag":593,"props":729,"children":730},{"style":667},[731],{"type":178,"value":732}," year\n",{"type":172,"tag":593,"props":734,"children":736},{"class":595,"line":735},5,[737],{"type":172,"tag":593,"props":738,"children":739},{"style":612},[740],{"type":178,"value":741},"}\n",{"type":172,"tag":593,"props":743,"children":745},{"class":595,"line":744},6,[746,751,757,761,766,770,774,780,786,790,794,799,804,808,812,818],{"type":172,"tag":593,"props":747,"children":748},{"style":600},[749],{"type":178,"value":750},"const",{"type":172,"tag":593,"props":752,"children":754},{"style":753},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[755],{"type":178,"value":756}," auto",{"type":172,"tag":593,"props":758,"children":759},{"style":672},[760],{"type":178,"value":675},{"type":172,"tag":593,"props":762,"children":763},{"style":672},[764],{"type":178,"value":765}," new",{"type":172,"tag":593,"props":767,"children":768},{"style":606},[769],{"type":178,"value":609},{"type":172,"tag":593,"props":771,"children":772},{"style":667},[773],{"type":178,"value":615},{"type":172,"tag":593,"props":775,"children":777},{"style":776},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[778],{"type":178,"value":779},"'",{"type":172,"tag":593,"props":781,"children":783},{"style":782},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[784],{"type":178,"value":785},"Honda",{"type":172,"tag":593,"props":787,"children":788},{"style":776},[789],{"type":178,"value":779},{"type":172,"tag":593,"props":791,"children":792},{"style":612},[793],{"type":178,"value":626},{"type":172,"tag":593,"props":795,"children":796},{"style":776},[797],{"type":178,"value":798}," '",{"type":172,"tag":593,"props":800,"children":801},{"style":782},[802],{"type":178,"value":803},"Accord",{"type":172,"tag":593,"props":805,"children":806},{"style":776},[807],{"type":178,"value":779},{"type":172,"tag":593,"props":809,"children":810},{"style":612},[811],{"type":178,"value":626},{"type":172,"tag":593,"props":813,"children":815},{"style":814},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[816],{"type":178,"value":817}," 1998",{"type":172,"tag":593,"props":819,"children":820},{"style":667},[821],{"type":178,"value":822},")\n",{"type":172,"tag":593,"props":824,"children":826},{"class":595,"line":825},7,[827],{"type":172,"tag":593,"props":828,"children":829},{"emptyLinePlaceholder":165},[830],{"type":178,"value":831},"\n",{"type":172,"tag":593,"props":833,"children":835},{"class":595,"line":834},8,[836],{"type":172,"tag":593,"props":837,"children":839},{"style":838},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[840],{"type":178,"value":841},"// true\n",{"type":172,"tag":593,"props":843,"children":845},{"class":595,"line":844},9,[846,851,855,860,865,869,874,879,884,888,893,898,903,908,912,917],{"type":172,"tag":593,"props":847,"children":848},{"style":667},[849],{"type":178,"value":850},"console",{"type":172,"tag":593,"props":852,"children":853},{"style":612},[854],{"type":178,"value":272},{"type":172,"tag":593,"props":856,"children":857},{"style":606},[858],{"type":178,"value":859},"log",{"type":172,"tag":593,"props":861,"children":862},{"style":667},[863],{"type":178,"value":864},"((auto",{"type":172,"tag":593,"props":866,"children":867},{"style":612},[868],{"type":178,"value":272},{"type":172,"tag":593,"props":870,"children":871},{"style":753},[872],{"type":178,"value":873},"__proto__",{"type":172,"tag":593,"props":875,"children":876},{"style":672},[877],{"type":178,"value":878}," ===",{"type":172,"tag":593,"props":880,"children":882},{"style":881},"--shiki-light:#E2931D;--shiki-light-font-style:inherit;--shiki-default:#005CC5;--shiki-default-font-style:inherit;--shiki-dark:#79B8FF;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[883],{"type":178,"value":609},{"type":172,"tag":593,"props":885,"children":886},{"style":612},[887],{"type":178,"value":272},{"type":172,"tag":593,"props":889,"children":890},{"style":753},[891],{"type":178,"value":892},"prototype",{"type":172,"tag":593,"props":894,"children":895},{"style":667},[896],{"type":178,"value":897},") ",{"type":172,"tag":593,"props":899,"children":900},{"style":672},[901],{"type":178,"value":902},"===",{"type":172,"tag":593,"props":904,"children":905},{"style":667},[906],{"type":178,"value":907}," auto ",{"type":172,"tag":593,"props":909,"children":910},{"style":672},[911],{"type":178,"value":199},{"type":172,"tag":593,"props":913,"children":915},{"style":914},"--shiki-light:#E2931D;--shiki-light-text-decoration:inherit;--shiki-default:#6F42C1;--shiki-default-text-decoration:inherit;--shiki-dark:#B392F0;--shiki-dark-text-decoration:inherit;--shiki-sepia:#A6E22E;--shiki-sepia-text-decoration:underline",[916],{"type":178,"value":609},{"type":172,"tag":593,"props":918,"children":919},{"style":667},[920],{"type":178,"value":822},{"type":172,"tag":180,"props":922,"children":923},{},[924],{"type":178,"value":925},"我们直接看看规范是怎么定义 instanceof 运算符的：",{"type":172,"tag":180,"props":927,"children":928},{},[929],{"type":172,"tag":266,"props":930,"children":931},{},[932],{"type":178,"value":933},"InstanceofOperator(O, C)",{"type":172,"tag":230,"props":935,"children":936},{},[937,955,973,982,1007,1030],{"type":172,"tag":190,"props":938,"children":939},{},[940,941,946,948,953],{"type":178,"value":242},{"type":172,"tag":244,"props":942,"children":943},{},[944],{"type":178,"value":945},"Type(C)",{"type":178,"value":947}," is not Object, throw a ",{"type":172,"tag":266,"props":949,"children":950},{},[951],{"type":178,"value":952},"TypeError",{"type":178,"value":954}," exception.",{"type":172,"tag":190,"props":956,"children":957},{},[958,960,965,967,972],{"type":178,"value":959},"Let ",{"type":172,"tag":244,"props":961,"children":962},{},[963],{"type":178,"value":964},"instOfHandler",{"type":178,"value":966}," be ",{"type":172,"tag":244,"props":968,"children":969},{},[970],{"type":178,"value":971},"GetMethod(C,@@hasInstance)",{"type":178,"value":272},{"type":172,"tag":190,"props":974,"children":975},{},[976,981],{"type":172,"tag":244,"props":977,"children":978},{},[979],{"type":178,"value":980},"ReturnIfAbrupt(instOfHandler)",{"type":178,"value":272},{"type":172,"tag":190,"props":983,"children":984},{},[985,987,991,993],{"type":178,"value":986},"If instOfHandler is not ",{"type":172,"tag":266,"props":988,"children":989},{},[990],{"type":178,"value":555},{"type":178,"value":992},", then\n",{"type":172,"tag":186,"props":994,"children":995},{},[996],{"type":172,"tag":190,"props":997,"children":998},{},[999,1001,1006],{"type":178,"value":1000},"Return ",{"type":172,"tag":244,"props":1002,"children":1003},{},[1004],{"type":178,"value":1005},"ToBoolean(Call(instOfHandler, C, «O»))",{"type":178,"value":272},{"type":172,"tag":190,"props":1008,"children":1009},{},[1010,1011,1016,1018,1023,1025,1029],{"type":178,"value":242},{"type":172,"tag":244,"props":1012,"children":1013},{},[1014],{"type":178,"value":1015},"IsCallable(C)",{"type":178,"value":1017}," is ",{"type":172,"tag":266,"props":1019,"children":1020},{},[1021],{"type":178,"value":1022},"false",{"type":178,"value":1024},", throw a ",{"type":172,"tag":266,"props":1026,"children":1027},{},[1028],{"type":178,"value":952},{"type":178,"value":954},{"type":172,"tag":190,"props":1031,"children":1032},{},[1033,1034,1039],{"type":178,"value":1000},{"type":172,"tag":244,"props":1035,"children":1036},{},[1037],{"type":178,"value":1038},"OrdinaryHasInstance(C, O)",{"type":178,"value":272},{"type":172,"tag":180,"props":1041,"children":1042},{},[1043],{"type":178,"value":1044},"第一条，如果 C 的类型不是对象，那么会抛出类型错误，重现如下：",{"type":172,"tag":583,"props":1046,"children":1048},{"className":585,"code":1047,"language":587,"meta":166,"style":166},";[] instanceof 1\n",[1049],{"type":172,"tag":475,"props":1050,"children":1051},{"__ignoreMap":166},[1052],{"type":172,"tag":593,"props":1053,"children":1054},{"class":595,"line":596},[1055,1060,1065,1069],{"type":172,"tag":593,"props":1056,"children":1057},{"style":612},[1058],{"type":178,"value":1059},";",{"type":172,"tag":593,"props":1061,"children":1062},{"style":667},[1063],{"type":178,"value":1064},"[] ",{"type":172,"tag":593,"props":1066,"children":1067},{"style":672},[1068],{"type":178,"value":199},{"type":172,"tag":593,"props":1070,"children":1071},{"style":814},[1072],{"type":178,"value":1073}," 1\n",{"type":172,"tag":180,"props":1075,"children":1076},{},[1077],{"type":178,"value":1078},"::: danger\nVM1008:1 Uncaught TypeError: Right-hand side of 'instanceof' is not an object\n:::",{"type":172,"tag":180,"props":1080,"children":1081},{},[1082],{"type":178,"value":1083},"第二至第四条，判断 C 是否有内置的 hasInstance 实现，即 Symbol.hasInstance，如果有，则调用此方法。\n也就是说，对复杂类型，我们可以通过 Symbol，自定义 instanceof 运算符的实现，用下列代码举例：",{"type":172,"tag":583,"props":1085,"children":1087},{"className":585,"code":1086,"language":587,"meta":166,"style":166},"class Lionad {\n  static [Symbol.hasInstance](obj) {\n    return obj && obj.isCute\n  }\n}\n\nconsole.log({} instanceof Lionad) // false\nconsole.log({ isCute: true } instanceof Lionad) // true\n",[1088],{"type":172,"tag":475,"props":1089,"children":1090},{"__ignoreMap":166},[1091,1108,1148,1180,1188,1195,1202,1244],{"type":172,"tag":593,"props":1092,"children":1093},{"class":595,"line":596},[1094,1099,1104],{"type":172,"tag":593,"props":1095,"children":1096},{"style":600},[1097],{"type":178,"value":1098},"class",{"type":172,"tag":593,"props":1100,"children":1101},{"style":914},[1102],{"type":178,"value":1103}," Lionad",{"type":172,"tag":593,"props":1105,"children":1106},{"style":612},[1107],{"type":178,"value":650},{"type":172,"tag":593,"props":1109,"children":1110},{"class":595,"line":653},[1111,1117,1122,1126,1131,1135,1140,1144],{"type":172,"tag":593,"props":1112,"children":1114},{"style":1113},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[1115],{"type":178,"value":1116},"  static",{"type":172,"tag":593,"props":1118,"children":1119},{"style":667},[1120],{"type":178,"value":1121}," [Symbol",{"type":172,"tag":593,"props":1123,"children":1124},{"style":612},[1125],{"type":178,"value":272},{"type":172,"tag":593,"props":1127,"children":1128},{"style":667},[1129],{"type":178,"value":1130},"hasInstance]",{"type":172,"tag":593,"props":1132,"children":1133},{"style":612},[1134],{"type":178,"value":615},{"type":172,"tag":593,"props":1136,"children":1137},{"style":618},[1138],{"type":178,"value":1139},"obj",{"type":172,"tag":593,"props":1141,"children":1142},{"style":612},[1143],{"type":178,"value":645},{"type":172,"tag":593,"props":1145,"children":1146},{"style":612},[1147],{"type":178,"value":650},{"type":172,"tag":593,"props":1149,"children":1150},{"class":595,"line":683},[1151,1157,1162,1167,1171,1175],{"type":172,"tag":593,"props":1152,"children":1154},{"style":1153},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[1155],{"type":178,"value":1156},"    return",{"type":172,"tag":593,"props":1158,"children":1159},{"style":667},[1160],{"type":178,"value":1161}," obj",{"type":172,"tag":593,"props":1163,"children":1164},{"style":672},[1165],{"type":178,"value":1166}," &&",{"type":172,"tag":593,"props":1168,"children":1169},{"style":667},[1170],{"type":178,"value":1161},{"type":172,"tag":593,"props":1172,"children":1173},{"style":612},[1174],{"type":178,"value":272},{"type":172,"tag":593,"props":1176,"children":1177},{"style":667},[1178],{"type":178,"value":1179},"isCute\n",{"type":172,"tag":593,"props":1181,"children":1182},{"class":595,"line":709},[1183],{"type":172,"tag":593,"props":1184,"children":1185},{"style":612},[1186],{"type":178,"value":1187},"  }\n",{"type":172,"tag":593,"props":1189,"children":1190},{"class":595,"line":735},[1191],{"type":172,"tag":593,"props":1192,"children":1193},{"style":612},[1194],{"type":178,"value":741},{"type":172,"tag":593,"props":1196,"children":1197},{"class":595,"line":744},[1198],{"type":172,"tag":593,"props":1199,"children":1200},{"emptyLinePlaceholder":165},[1201],{"type":178,"value":831},{"type":172,"tag":593,"props":1203,"children":1204},{"class":595,"line":825},[1205,1209,1213,1217,1221,1226,1231,1235,1239],{"type":172,"tag":593,"props":1206,"children":1207},{"style":667},[1208],{"type":178,"value":850},{"type":172,"tag":593,"props":1210,"children":1211},{"style":612},[1212],{"type":178,"value":272},{"type":172,"tag":593,"props":1214,"children":1215},{"style":606},[1216],{"type":178,"value":859},{"type":172,"tag":593,"props":1218,"children":1219},{"style":667},[1220],{"type":178,"value":615},{"type":172,"tag":593,"props":1222,"children":1223},{"style":612},[1224],{"type":178,"value":1225},"{}",{"type":172,"tag":593,"props":1227,"children":1228},{"style":672},[1229],{"type":178,"value":1230}," instanceof",{"type":172,"tag":593,"props":1232,"children":1233},{"style":914},[1234],{"type":178,"value":1103},{"type":172,"tag":593,"props":1236,"children":1237},{"style":667},[1238],{"type":178,"value":897},{"type":172,"tag":593,"props":1240,"children":1241},{"style":838},[1242],{"type":178,"value":1243},"// false\n",{"type":172,"tag":593,"props":1245,"children":1246},{"class":595,"line":834},[1247,1251,1255,1259,1263,1268,1274,1279,1285,1290,1294,1298,1302],{"type":172,"tag":593,"props":1248,"children":1249},{"style":667},[1250],{"type":178,"value":850},{"type":172,"tag":593,"props":1252,"children":1253},{"style":612},[1254],{"type":178,"value":272},{"type":172,"tag":593,"props":1256,"children":1257},{"style":606},[1258],{"type":178,"value":859},{"type":172,"tag":593,"props":1260,"children":1261},{"style":667},[1262],{"type":178,"value":615},{"type":172,"tag":593,"props":1264,"children":1265},{"style":612},[1266],{"type":178,"value":1267},"{",{"type":172,"tag":593,"props":1269,"children":1271},{"style":1270},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1272],{"type":178,"value":1273}," isCute",{"type":172,"tag":593,"props":1275,"children":1276},{"style":612},[1277],{"type":178,"value":1278},":",{"type":172,"tag":593,"props":1280,"children":1282},{"style":1281},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1283],{"type":178,"value":1284}," true",{"type":172,"tag":593,"props":1286,"children":1287},{"style":612},[1288],{"type":178,"value":1289}," }",{"type":172,"tag":593,"props":1291,"children":1292},{"style":672},[1293],{"type":178,"value":1230},{"type":172,"tag":593,"props":1295,"children":1296},{"style":914},[1297],{"type":178,"value":1103},{"type":172,"tag":593,"props":1299,"children":1300},{"style":667},[1301],{"type":178,"value":897},{"type":172,"tag":593,"props":1303,"children":1304},{"style":838},[1305],{"type":178,"value":841},{"type":172,"tag":180,"props":1307,"children":1308},{},[1309],{"type":178,"value":1310},"这之后，第五条，如果 C 非 Callable 对象（还记得我们在 typeof 提到的内部方法[[call]]吗，Callable 对象即实现了[[call]]内部方法的对象，比如说某个函数），抛出类型错误，重现如下：",{"type":172,"tag":583,"props":1312,"children":1314},{"className":585,"code":1313,"language":587,"meta":166,"style":166},";[] instanceof []\n",[1315],{"type":172,"tag":475,"props":1316,"children":1317},{"__ignoreMap":166},[1318],{"type":172,"tag":593,"props":1319,"children":1320},{"class":595,"line":596},[1321,1325,1329,1333],{"type":172,"tag":593,"props":1322,"children":1323},{"style":612},[1324],{"type":178,"value":1059},{"type":172,"tag":593,"props":1326,"children":1327},{"style":667},[1328],{"type":178,"value":1064},{"type":172,"tag":593,"props":1330,"children":1331},{"style":672},[1332],{"type":178,"value":199},{"type":172,"tag":593,"props":1334,"children":1335},{"style":667},[1336],{"type":178,"value":1337}," []\n",{"type":172,"tag":180,"props":1339,"children":1340},{},[1341],{"type":178,"value":1342},"::: danger\nVM684:1 Uncaught TypeError: Right-hand side of 'instanceof' is not callable\n:::",{"type":172,"tag":180,"props":1344,"children":1345},{},[1346],{"type":178,"value":1347},"最后，返回调用内置 instanceof 实现的结果。",{"type":172,"tag":180,"props":1349,"children":1350},{},[1351],{"type":178,"value":1352},"不过，需要强调的是，instanceof 也有缺陷存在，主要体现在两个方面：",{"type":172,"tag":230,"props":1354,"children":1355},{},[1356,1361],{"type":172,"tag":190,"props":1357,"children":1358},{},[1359],{"type":178,"value":1360},"判断的依据是原型链",{"type":172,"tag":190,"props":1362,"children":1363},{},[1364],{"type":178,"value":1365},"跨宿主运算",{"type":172,"tag":465,"props":1367,"children":1369},{"id":1368},"依据原型链",[1370],{"type":178,"value":1368},{"type":172,"tag":180,"props":1372,"children":1373},{},[1374],{"type":178,"value":1375},"使用 instanceof 运算符判断对象字面量，会出现另人诧异的结果，见下代码：",{"type":172,"tag":583,"props":1377,"children":1379},{"className":585,"code":1378,"language":587,"meta":166,"style":166},"console.log(\n  'hello world' instanceof String, // false\n  new String('asdf') instanceof String, // true\n  {} instanceof Object, // true\n  [] instanceof Object, // true\n  Object.create(null) instanceof Object // false\n)\n",[1380],{"type":172,"tag":475,"props":1381,"children":1382},{"__ignoreMap":166},[1383,1403,1438,1488,1513,1537,1579],{"type":172,"tag":593,"props":1384,"children":1385},{"class":595,"line":596},[1386,1390,1394,1398],{"type":172,"tag":593,"props":1387,"children":1388},{"style":667},[1389],{"type":178,"value":850},{"type":172,"tag":593,"props":1391,"children":1392},{"style":612},[1393],{"type":178,"value":272},{"type":172,"tag":593,"props":1395,"children":1396},{"style":606},[1397],{"type":178,"value":859},{"type":172,"tag":593,"props":1399,"children":1400},{"style":667},[1401],{"type":178,"value":1402},"(\n",{"type":172,"tag":593,"props":1404,"children":1405},{"class":595,"line":653},[1406,1411,1416,1420,1424,1429,1433],{"type":172,"tag":593,"props":1407,"children":1408},{"style":776},[1409],{"type":178,"value":1410},"  '",{"type":172,"tag":593,"props":1412,"children":1413},{"style":782},[1414],{"type":178,"value":1415},"hello world",{"type":172,"tag":593,"props":1417,"children":1418},{"style":776},[1419],{"type":178,"value":779},{"type":172,"tag":593,"props":1421,"children":1422},{"style":672},[1423],{"type":178,"value":1230},{"type":172,"tag":593,"props":1425,"children":1426},{"style":914},[1427],{"type":178,"value":1428}," String",{"type":172,"tag":593,"props":1430,"children":1431},{"style":612},[1432],{"type":178,"value":626},{"type":172,"tag":593,"props":1434,"children":1435},{"style":838},[1436],{"type":178,"value":1437}," // false\n",{"type":172,"tag":593,"props":1439,"children":1440},{"class":595,"line":683},[1441,1446,1450,1454,1458,1463,1467,1471,1475,1479,1483],{"type":172,"tag":593,"props":1442,"children":1443},{"style":672},[1444],{"type":178,"value":1445},"  new",{"type":172,"tag":593,"props":1447,"children":1448},{"style":606},[1449],{"type":178,"value":1428},{"type":172,"tag":593,"props":1451,"children":1452},{"style":667},[1453],{"type":178,"value":615},{"type":172,"tag":593,"props":1455,"children":1456},{"style":776},[1457],{"type":178,"value":779},{"type":172,"tag":593,"props":1459,"children":1460},{"style":782},[1461],{"type":178,"value":1462},"asdf",{"type":172,"tag":593,"props":1464,"children":1465},{"style":776},[1466],{"type":178,"value":779},{"type":172,"tag":593,"props":1468,"children":1469},{"style":667},[1470],{"type":178,"value":897},{"type":172,"tag":593,"props":1472,"children":1473},{"style":672},[1474],{"type":178,"value":199},{"type":172,"tag":593,"props":1476,"children":1477},{"style":914},[1478],{"type":178,"value":1428},{"type":172,"tag":593,"props":1480,"children":1481},{"style":612},[1482],{"type":178,"value":626},{"type":172,"tag":593,"props":1484,"children":1485},{"style":838},[1486],{"type":178,"value":1487}," // true\n",{"type":172,"tag":593,"props":1489,"children":1490},{"class":595,"line":709},[1491,1496,1500,1505,1509],{"type":172,"tag":593,"props":1492,"children":1493},{"style":612},[1494],{"type":178,"value":1495},"  {}",{"type":172,"tag":593,"props":1497,"children":1498},{"style":672},[1499],{"type":178,"value":1230},{"type":172,"tag":593,"props":1501,"children":1502},{"style":914},[1503],{"type":178,"value":1504}," Object",{"type":172,"tag":593,"props":1506,"children":1507},{"style":612},[1508],{"type":178,"value":626},{"type":172,"tag":593,"props":1510,"children":1511},{"style":838},[1512],{"type":178,"value":1487},{"type":172,"tag":593,"props":1514,"children":1515},{"class":595,"line":735},[1516,1521,1525,1529,1533],{"type":172,"tag":593,"props":1517,"children":1518},{"style":667},[1519],{"type":178,"value":1520},"  [] ",{"type":172,"tag":593,"props":1522,"children":1523},{"style":672},[1524],{"type":178,"value":199},{"type":172,"tag":593,"props":1526,"children":1527},{"style":914},[1528],{"type":178,"value":1504},{"type":172,"tag":593,"props":1530,"children":1531},{"style":612},[1532],{"type":178,"value":626},{"type":172,"tag":593,"props":1534,"children":1535},{"style":838},[1536],{"type":178,"value":1487},{"type":172,"tag":593,"props":1538,"children":1539},{"class":595,"line":744},[1540,1545,1549,1554,1558,1563,1567,1571,1575],{"type":172,"tag":593,"props":1541,"children":1542},{"style":667},[1543],{"type":178,"value":1544},"  Object",{"type":172,"tag":593,"props":1546,"children":1547},{"style":612},[1548],{"type":178,"value":272},{"type":172,"tag":593,"props":1550,"children":1551},{"style":606},[1552],{"type":178,"value":1553},"create",{"type":172,"tag":593,"props":1555,"children":1556},{"style":667},[1557],{"type":178,"value":615},{"type":172,"tag":593,"props":1559,"children":1561},{"style":1560},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1562],{"type":178,"value":565},{"type":172,"tag":593,"props":1564,"children":1565},{"style":667},[1566],{"type":178,"value":897},{"type":172,"tag":593,"props":1568,"children":1569},{"style":672},[1570],{"type":178,"value":199},{"type":172,"tag":593,"props":1572,"children":1573},{"style":914},[1574],{"type":178,"value":1504},{"type":172,"tag":593,"props":1576,"children":1577},{"style":838},[1578],{"type":178,"value":1437},{"type":172,"tag":593,"props":1580,"children":1581},{"class":595,"line":825},[1582],{"type":172,"tag":593,"props":1583,"children":1584},{"style":667},[1585],{"type":178,"value":822},{"type":172,"tag":180,"props":1587,"children":1588},{},[1589],{"type":178,"value":1590},"题外话，上面几行代码还隐式说明了这些问题：",{"type":172,"tag":186,"props":1592,"children":1593},{},[1594],{"type":172,"tag":190,"props":1595,"children":1596},{},[1597,1599,1604,1606],{"type":178,"value":1598},"对于对象字面量 ",{"type":172,"tag":475,"props":1600,"children":1602},{"className":1601},[],[1603],{"type":178,"value":1225},{"type":178,"value":1605}," 有 ",{"type":172,"tag":475,"props":1607,"children":1609},{"className":1608},[],[1610],{"type":178,"value":1611},"({}).__proto__ === Object.prototype",{"type":172,"tag":465,"props":1613,"children":1614},{"id":1365},[1615],{"type":178,"value":1365},{"type":172,"tag":180,"props":1617,"children":1618},{},[1619],{"type":178,"value":1620},"关于跨宿主运算，可以尝试以下代码重现:",{"type":172,"tag":583,"props":1622,"children":1624},{"className":585,"code":1623,"language":587,"meta":166,"style":166},"const iframe = document.createElement('iframe')\ndocument.body.appendChild(iframe)\nxArray = window.frames[window.frames.length - 1].Array\nconst xArr = new xArray(1, 2, 3)\n\nconsole.log(xArr instanceof xArray) // true\nconsole.log(xArr instanceof Array) // false\n",[1625],{"type":172,"tag":475,"props":1626,"children":1627},{"__ignoreMap":166},[1628,1679,1710,1779,1835,1842,1878],{"type":172,"tag":593,"props":1629,"children":1630},{"class":595,"line":596},[1631,1635,1640,1644,1649,1653,1658,1662,1666,1671,1675],{"type":172,"tag":593,"props":1632,"children":1633},{"style":600},[1634],{"type":178,"value":750},{"type":172,"tag":593,"props":1636,"children":1637},{"style":753},[1638],{"type":178,"value":1639}," iframe",{"type":172,"tag":593,"props":1641,"children":1642},{"style":672},[1643],{"type":178,"value":675},{"type":172,"tag":593,"props":1645,"children":1646},{"style":667},[1647],{"type":178,"value":1648}," document",{"type":172,"tag":593,"props":1650,"children":1651},{"style":612},[1652],{"type":178,"value":272},{"type":172,"tag":593,"props":1654,"children":1655},{"style":606},[1656],{"type":178,"value":1657},"createElement",{"type":172,"tag":593,"props":1659,"children":1660},{"style":667},[1661],{"type":178,"value":615},{"type":172,"tag":593,"props":1663,"children":1664},{"style":776},[1665],{"type":178,"value":779},{"type":172,"tag":593,"props":1667,"children":1668},{"style":782},[1669],{"type":178,"value":1670},"iframe",{"type":172,"tag":593,"props":1672,"children":1673},{"style":776},[1674],{"type":178,"value":779},{"type":172,"tag":593,"props":1676,"children":1677},{"style":667},[1678],{"type":178,"value":822},{"type":172,"tag":593,"props":1680,"children":1681},{"class":595,"line":653},[1682,1687,1691,1696,1700,1705],{"type":172,"tag":593,"props":1683,"children":1684},{"style":667},[1685],{"type":178,"value":1686},"document",{"type":172,"tag":593,"props":1688,"children":1689},{"style":612},[1690],{"type":178,"value":272},{"type":172,"tag":593,"props":1692,"children":1693},{"style":667},[1694],{"type":178,"value":1695},"body",{"type":172,"tag":593,"props":1697,"children":1698},{"style":612},[1699],{"type":178,"value":272},{"type":172,"tag":593,"props":1701,"children":1702},{"style":606},[1703],{"type":178,"value":1704},"appendChild",{"type":172,"tag":593,"props":1706,"children":1707},{"style":667},[1708],{"type":178,"value":1709},"(iframe)\n",{"type":172,"tag":593,"props":1711,"children":1712},{"class":595,"line":683},[1713,1718,1723,1728,1732,1737,1741,1746,1750,1755,1760,1765,1770,1774],{"type":172,"tag":593,"props":1714,"children":1715},{"style":667},[1716],{"type":178,"value":1717},"xArray ",{"type":172,"tag":593,"props":1719,"children":1720},{"style":672},[1721],{"type":178,"value":1722},"=",{"type":172,"tag":593,"props":1724,"children":1725},{"style":667},[1726],{"type":178,"value":1727}," window",{"type":172,"tag":593,"props":1729,"children":1730},{"style":612},[1731],{"type":178,"value":272},{"type":172,"tag":593,"props":1733,"children":1734},{"style":667},[1735],{"type":178,"value":1736},"frames[window",{"type":172,"tag":593,"props":1738,"children":1739},{"style":612},[1740],{"type":178,"value":272},{"type":172,"tag":593,"props":1742,"children":1743},{"style":667},[1744],{"type":178,"value":1745},"frames",{"type":172,"tag":593,"props":1747,"children":1748},{"style":612},[1749],{"type":178,"value":272},{"type":172,"tag":593,"props":1751,"children":1752},{"style":753},[1753],{"type":178,"value":1754},"length",{"type":172,"tag":593,"props":1756,"children":1757},{"style":672},[1758],{"type":178,"value":1759}," -",{"type":172,"tag":593,"props":1761,"children":1762},{"style":814},[1763],{"type":178,"value":1764}," 1",{"type":172,"tag":593,"props":1766,"children":1767},{"style":667},[1768],{"type":178,"value":1769},"]",{"type":172,"tag":593,"props":1771,"children":1772},{"style":612},[1773],{"type":178,"value":272},{"type":172,"tag":593,"props":1775,"children":1776},{"style":667},[1777],{"type":178,"value":1778},"Array\n",{"type":172,"tag":593,"props":1780,"children":1781},{"class":595,"line":709},[1782,1786,1791,1795,1799,1804,1808,1813,1817,1822,1826,1831],{"type":172,"tag":593,"props":1783,"children":1784},{"style":600},[1785],{"type":178,"value":750},{"type":172,"tag":593,"props":1787,"children":1788},{"style":753},[1789],{"type":178,"value":1790}," xArr",{"type":172,"tag":593,"props":1792,"children":1793},{"style":672},[1794],{"type":178,"value":675},{"type":172,"tag":593,"props":1796,"children":1797},{"style":672},[1798],{"type":178,"value":765},{"type":172,"tag":593,"props":1800,"children":1801},{"style":606},[1802],{"type":178,"value":1803}," xArray",{"type":172,"tag":593,"props":1805,"children":1806},{"style":667},[1807],{"type":178,"value":615},{"type":172,"tag":593,"props":1809,"children":1810},{"style":814},[1811],{"type":178,"value":1812},"1",{"type":172,"tag":593,"props":1814,"children":1815},{"style":612},[1816],{"type":178,"value":626},{"type":172,"tag":593,"props":1818,"children":1819},{"style":814},[1820],{"type":178,"value":1821}," 2",{"type":172,"tag":593,"props":1823,"children":1824},{"style":612},[1825],{"type":178,"value":626},{"type":172,"tag":593,"props":1827,"children":1828},{"style":814},[1829],{"type":178,"value":1830}," 3",{"type":172,"tag":593,"props":1832,"children":1833},{"style":667},[1834],{"type":178,"value":822},{"type":172,"tag":593,"props":1836,"children":1837},{"class":595,"line":735},[1838],{"type":172,"tag":593,"props":1839,"children":1840},{"emptyLinePlaceholder":165},[1841],{"type":178,"value":831},{"type":172,"tag":593,"props":1843,"children":1844},{"class":595,"line":744},[1845,1849,1853,1857,1862,1866,1870,1874],{"type":172,"tag":593,"props":1846,"children":1847},{"style":667},[1848],{"type":178,"value":850},{"type":172,"tag":593,"props":1850,"children":1851},{"style":612},[1852],{"type":178,"value":272},{"type":172,"tag":593,"props":1854,"children":1855},{"style":606},[1856],{"type":178,"value":859},{"type":172,"tag":593,"props":1858,"children":1859},{"style":667},[1860],{"type":178,"value":1861},"(xArr ",{"type":172,"tag":593,"props":1863,"children":1864},{"style":672},[1865],{"type":178,"value":199},{"type":172,"tag":593,"props":1867,"children":1868},{"style":914},[1869],{"type":178,"value":1803},{"type":172,"tag":593,"props":1871,"children":1872},{"style":667},[1873],{"type":178,"value":897},{"type":172,"tag":593,"props":1875,"children":1876},{"style":838},[1877],{"type":178,"value":841},{"type":172,"tag":593,"props":1879,"children":1880},{"class":595,"line":825},[1881,1885,1889,1893,1897,1901,1906,1910],{"type":172,"tag":593,"props":1882,"children":1883},{"style":667},[1884],{"type":178,"value":850},{"type":172,"tag":593,"props":1886,"children":1887},{"style":612},[1888],{"type":178,"value":272},{"type":172,"tag":593,"props":1890,"children":1891},{"style":606},[1892],{"type":178,"value":859},{"type":172,"tag":593,"props":1894,"children":1895},{"style":667},[1896],{"type":178,"value":1861},{"type":172,"tag":593,"props":1898,"children":1899},{"style":672},[1900],{"type":178,"value":199},{"type":172,"tag":593,"props":1902,"children":1903},{"style":914},[1904],{"type":178,"value":1905}," Array",{"type":172,"tag":593,"props":1907,"children":1908},{"style":667},[1909],{"type":178,"value":897},{"type":172,"tag":593,"props":1911,"children":1912},{"style":838},[1913],{"type":178,"value":1243},{"type":172,"tag":180,"props":1915,"children":1916},{},[1917],{"type":178,"value":1918},"因为 iframe 中的数组实例不是父窗口的 Array 的实例，所以在 xArr 的原型链上是找不到 Array 的，所以结果为 false。",{"type":172,"tag":173,"props":1920,"children":1922},{"id":1921},"objectprototypetostringcall",[1923],{"type":178,"value":204},{"type":172,"tag":180,"props":1925,"children":1926},{},[1927],{"type":178,"value":1928},"一般来说，在业务代码中，我们使用 typeof 和 instanceof 运算符判断变量的类型就足够了。虽然这两种方法都有缺陷，但是我们记住这些常见的容易混淆的地方，避免使用就可以。\n下面要介绍的是一种更精确的方法，一般会用在工具函数或者类库中，如：",{"type":172,"tag":583,"props":1930,"children":1932},{"className":585,"code":1931,"language":587,"meta":166,"style":166},"function isArray(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\nisArray([]) // true\n",[1933],{"type":172,"tag":475,"props":1934,"children":1935},{"__ignoreMap":166},[1936,1965,2033,2040],{"type":172,"tag":593,"props":1937,"children":1938},{"class":595,"line":596},[1939,1943,1948,1952,1957,1961],{"type":172,"tag":593,"props":1940,"children":1941},{"style":600},[1942],{"type":178,"value":603},{"type":172,"tag":593,"props":1944,"children":1945},{"style":606},[1946],{"type":178,"value":1947}," isArray",{"type":172,"tag":593,"props":1949,"children":1950},{"style":612},[1951],{"type":178,"value":615},{"type":172,"tag":593,"props":1953,"children":1954},{"style":618},[1955],{"type":178,"value":1956},"arr",{"type":172,"tag":593,"props":1958,"children":1959},{"style":612},[1960],{"type":178,"value":645},{"type":172,"tag":593,"props":1962,"children":1963},{"style":612},[1964],{"type":178,"value":650},{"type":172,"tag":593,"props":1966,"children":1967},{"class":595,"line":653},[1968,1973,1977,1981,1985,1989,1994,1998,2003,2007,2011,2015,2019,2023,2028],{"type":172,"tag":593,"props":1969,"children":1970},{"style":1153},[1971],{"type":178,"value":1972},"  return",{"type":172,"tag":593,"props":1974,"children":1975},{"style":881},[1976],{"type":178,"value":1504},{"type":172,"tag":593,"props":1978,"children":1979},{"style":612},[1980],{"type":178,"value":272},{"type":172,"tag":593,"props":1982,"children":1983},{"style":753},[1984],{"type":178,"value":892},{"type":172,"tag":593,"props":1986,"children":1987},{"style":612},[1988],{"type":178,"value":272},{"type":172,"tag":593,"props":1990,"children":1991},{"style":667},[1992],{"type":178,"value":1993},"toString",{"type":172,"tag":593,"props":1995,"children":1996},{"style":612},[1997],{"type":178,"value":272},{"type":172,"tag":593,"props":1999,"children":2000},{"style":606},[2001],{"type":178,"value":2002},"call",{"type":172,"tag":593,"props":2004,"children":2005},{"style":1270},[2006],{"type":178,"value":615},{"type":172,"tag":593,"props":2008,"children":2009},{"style":667},[2010],{"type":178,"value":1956},{"type":172,"tag":593,"props":2012,"children":2013},{"style":1270},[2014],{"type":178,"value":897},{"type":172,"tag":593,"props":2016,"children":2017},{"style":672},[2018],{"type":178,"value":902},{"type":172,"tag":593,"props":2020,"children":2021},{"style":776},[2022],{"type":178,"value":798},{"type":172,"tag":593,"props":2024,"children":2025},{"style":782},[2026],{"type":178,"value":2027},"[object Array]",{"type":172,"tag":593,"props":2029,"children":2030},{"style":776},[2031],{"type":178,"value":2032},"'\n",{"type":172,"tag":593,"props":2034,"children":2035},{"class":595,"line":683},[2036],{"type":172,"tag":593,"props":2037,"children":2038},{"style":612},[2039],{"type":178,"value":741},{"type":172,"tag":593,"props":2041,"children":2042},{"class":595,"line":709},[2043,2048,2053],{"type":172,"tag":593,"props":2044,"children":2045},{"style":606},[2046],{"type":178,"value":2047},"isArray",{"type":172,"tag":593,"props":2049,"children":2050},{"style":667},[2051],{"type":178,"value":2052},"([]) ",{"type":172,"tag":593,"props":2054,"children":2055},{"style":838},[2056],{"type":178,"value":841},{"type":172,"tag":180,"props":2058,"children":2059},{},[2060],{"type":178,"value":2061},"那么 Object.prototype.toString 到底能分辨几种类型呢？查阅 ES6 规范文档，可以得到其实现，如下：",{"type":172,"tag":230,"props":2063,"children":2064},{},[2065,2095,2120,2131,2142,2151,2162,2173,2184,2195,2206,2217,2228,2239,2250,2261,2272,2281,2292],{"type":172,"tag":190,"props":2066,"children":2067},{},[2068,2070,2075,2077,2081,2083,2094],{"type":178,"value":2069},"If the ",{"type":172,"tag":266,"props":2071,"children":2072},{},[2073],{"type":178,"value":2074},"this",{"type":178,"value":2076}," value is ",{"type":172,"tag":266,"props":2078,"children":2079},{},[2080],{"type":178,"value":555},{"type":178,"value":2082},", return ",{"type":172,"tag":266,"props":2084,"children":2085},{},[2086,2088,2093],{"type":178,"value":2087},"\"",{"type":172,"tag":593,"props":2089,"children":2090},{},[2091],{"type":178,"value":2092},"object Undefined",{"type":178,"value":2087},{"type":178,"value":272},{"type":172,"tag":190,"props":2096,"children":2097},{},[2098,2099,2103,2104,2108,2109,2119],{"type":178,"value":2069},{"type":172,"tag":266,"props":2100,"children":2101},{},[2102],{"type":178,"value":2074},{"type":178,"value":2076},{"type":172,"tag":266,"props":2105,"children":2106},{},[2107],{"type":178,"value":565},{"type":178,"value":2082},{"type":172,"tag":266,"props":2110,"children":2111},{},[2112,2113,2118],{"type":178,"value":2087},{"type":172,"tag":593,"props":2114,"children":2115},{},[2116],{"type":178,"value":2117},"object Null",{"type":178,"value":2087},{"type":178,"value":272},{"type":172,"tag":190,"props":2121,"children":2122},{},[2123,2125,2130],{"type":178,"value":2124},"Let O be ",{"type":172,"tag":244,"props":2126,"children":2127},{},[2128],{"type":178,"value":2129},"ToObject(this value)",{"type":178,"value":272},{"type":172,"tag":190,"props":2132,"children":2133},{},[2134,2136,2141],{"type":178,"value":2135},"Let isArray be ",{"type":172,"tag":244,"props":2137,"children":2138},{},[2139],{"type":178,"value":2140},"IsArray(O)",{"type":178,"value":272},{"type":172,"tag":190,"props":2143,"children":2144},{},[2145,2150],{"type":172,"tag":244,"props":2146,"children":2147},{},[2148],{"type":178,"value":2149},"ReturnIfAbrupt(isArray)",{"type":178,"value":272},{"type":172,"tag":190,"props":2152,"children":2153},{},[2154,2156,2161],{"type":178,"value":2155},"If isArray is true, let builtinTag be ",{"type":172,"tag":266,"props":2157,"children":2158},{},[2159],{"type":178,"value":2160},"\"Array\"",{"type":178,"value":272},{"type":172,"tag":190,"props":2163,"children":2164},{},[2165,2167,2172],{"type":178,"value":2166},"Else, if O is an exotic String object, let builtinTag be ",{"type":172,"tag":266,"props":2168,"children":2169},{},[2170],{"type":178,"value":2171},"\"String\"",{"type":178,"value":272},{"type":172,"tag":190,"props":2174,"children":2175},{},[2176,2178,2183],{"type":178,"value":2177},"Else, if O has an [[ParameterMap]] internal slot, let builtinTag be ",{"type":172,"tag":266,"props":2179,"children":2180},{},[2181],{"type":178,"value":2182},"\"Arguments\"",{"type":178,"value":272},{"type":172,"tag":190,"props":2185,"children":2186},{},[2187,2189,2194],{"type":178,"value":2188},"Else, if O has a [[Call]] internal method, let builtinTag be ",{"type":172,"tag":266,"props":2190,"children":2191},{},[2192],{"type":178,"value":2193},"\"Function\"",{"type":178,"value":272},{"type":172,"tag":190,"props":2196,"children":2197},{},[2198,2200,2205],{"type":178,"value":2199},"Else, if O has an [[ErrorData]] internal slot, let builtinTag be ",{"type":172,"tag":266,"props":2201,"children":2202},{},[2203],{"type":178,"value":2204},"\"Error\"",{"type":178,"value":272},{"type":172,"tag":190,"props":2207,"children":2208},{},[2209,2211,2216],{"type":178,"value":2210},"Else, if O has a [[BooleanData]] internal slot, let builtinTag be ",{"type":172,"tag":266,"props":2212,"children":2213},{},[2214],{"type":178,"value":2215},"\"Boolean\"",{"type":178,"value":272},{"type":172,"tag":190,"props":2218,"children":2219},{},[2220,2222,2227],{"type":178,"value":2221},"Else, if O has a [[NumberData]] internal slot, let builtinTag be ",{"type":172,"tag":266,"props":2223,"children":2224},{},[2225],{"type":178,"value":2226},"\"Number\"",{"type":178,"value":272},{"type":172,"tag":190,"props":2229,"children":2230},{},[2231,2233,2238],{"type":178,"value":2232},"Else, if O has a [[DateValue]] internal slot, let builtinTag be ",{"type":172,"tag":266,"props":2234,"children":2235},{},[2236],{"type":178,"value":2237},"\"Date\"",{"type":178,"value":272},{"type":172,"tag":190,"props":2240,"children":2241},{},[2242,2244,2249],{"type":178,"value":2243},"Else, if O has a [[RegExpMatcher]] internal slot, let builtinTag be ",{"type":172,"tag":266,"props":2245,"children":2246},{},[2247],{"type":178,"value":2248},"\"RegExp\"",{"type":178,"value":272},{"type":172,"tag":190,"props":2251,"children":2252},{},[2253,2255,2260],{"type":178,"value":2254},"Else, let builtinTag be ",{"type":172,"tag":266,"props":2256,"children":2257},{},[2258],{"type":178,"value":2259},"\"Object\"",{"type":178,"value":272},{"type":172,"tag":190,"props":2262,"children":2263},{},[2264,2266,2271],{"type":178,"value":2265},"Let tag be ",{"type":172,"tag":244,"props":2267,"children":2268},{},[2269],{"type":178,"value":2270},"Get(O, @@toStringTag)",{"type":178,"value":272},{"type":172,"tag":190,"props":2273,"children":2274},{},[2275,2280],{"type":172,"tag":244,"props":2276,"children":2277},{},[2278],{"type":178,"value":2279},"ReturnIfAbrupt(tag)",{"type":178,"value":272},{"type":172,"tag":190,"props":2282,"children":2283},{},[2284,2285,2290],{"type":178,"value":242},{"type":172,"tag":244,"props":2286,"children":2287},{},[2288],{"type":178,"value":2289},"Type(tag)",{"type":178,"value":2291}," is not String, let tag be builtinTag.",{"type":172,"tag":190,"props":2293,"children":2294},{},[2295,2297,2307],{"type":178,"value":2296},"Return the String that is the result of concatenating ",{"type":172,"tag":266,"props":2298,"children":2299},{},[2300,2301,2306],{"type":178,"value":2087},{"type":172,"tag":593,"props":2302,"children":2303},{},[2304],{"type":178,"value":2305},"object \"**, tag, and **\"",{"type":178,"value":2087},{"type":178,"value":272},{"type":172,"tag":180,"props":2309,"children":2310},{},[2311],{"type":178,"value":2312},"细数下来，Object.prototype.toString 不仅可以区分 Object、Function、Date、RegExp 等常见对象，它还能区分 Error、Arguments 等，见下代码：",{"type":172,"tag":583,"props":2314,"children":2316},{"className":585,"code":2315,"language":587,"meta":166,"style":166},";(function() {\n  console.log(\n    typeof arguments, // 'object'\n    Object.prototype.toString.call(arguments) // '[object Arguments]'\n  )\n})()\n",[2317],{"type":172,"tag":475,"props":2318,"children":2319},{"__ignoreMap":166},[2320,2344,2364,2387,2437,2445],{"type":172,"tag":593,"props":2321,"children":2322},{"class":595,"line":596},[2323,2327,2331,2335,2340],{"type":172,"tag":593,"props":2324,"children":2325},{"style":612},[2326],{"type":178,"value":1059},{"type":172,"tag":593,"props":2328,"children":2329},{"style":667},[2330],{"type":178,"value":615},{"type":172,"tag":593,"props":2332,"children":2333},{"style":600},[2334],{"type":178,"value":603},{"type":172,"tag":593,"props":2336,"children":2337},{"style":612},[2338],{"type":178,"value":2339},"()",{"type":172,"tag":593,"props":2341,"children":2342},{"style":612},[2343],{"type":178,"value":650},{"type":172,"tag":593,"props":2345,"children":2346},{"class":595,"line":653},[2347,2352,2356,2360],{"type":172,"tag":593,"props":2348,"children":2349},{"style":667},[2350],{"type":178,"value":2351},"  console",{"type":172,"tag":593,"props":2353,"children":2354},{"style":612},[2355],{"type":178,"value":272},{"type":172,"tag":593,"props":2357,"children":2358},{"style":606},[2359],{"type":178,"value":859},{"type":172,"tag":593,"props":2361,"children":2362},{"style":1270},[2363],{"type":178,"value":1402},{"type":172,"tag":593,"props":2365,"children":2366},{"class":595,"line":683},[2367,2372,2378,2382],{"type":172,"tag":593,"props":2368,"children":2369},{"style":672},[2370],{"type":178,"value":2371},"    typeof",{"type":172,"tag":593,"props":2373,"children":2375},{"style":2374},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[2376],{"type":178,"value":2377}," arguments",{"type":172,"tag":593,"props":2379,"children":2380},{"style":612},[2381],{"type":178,"value":626},{"type":172,"tag":593,"props":2383,"children":2384},{"style":838},[2385],{"type":178,"value":2386}," // 'object'\n",{"type":172,"tag":593,"props":2388,"children":2389},{"class":595,"line":709},[2390,2395,2399,2403,2407,2411,2415,2419,2423,2428,2432],{"type":172,"tag":593,"props":2391,"children":2392},{"style":881},[2393],{"type":178,"value":2394},"    Object",{"type":172,"tag":593,"props":2396,"children":2397},{"style":612},[2398],{"type":178,"value":272},{"type":172,"tag":593,"props":2400,"children":2401},{"style":753},[2402],{"type":178,"value":892},{"type":172,"tag":593,"props":2404,"children":2405},{"style":612},[2406],{"type":178,"value":272},{"type":172,"tag":593,"props":2408,"children":2409},{"style":667},[2410],{"type":178,"value":1993},{"type":172,"tag":593,"props":2412,"children":2413},{"style":612},[2414],{"type":178,"value":272},{"type":172,"tag":593,"props":2416,"children":2417},{"style":606},[2418],{"type":178,"value":2002},{"type":172,"tag":593,"props":2420,"children":2421},{"style":1270},[2422],{"type":178,"value":615},{"type":172,"tag":593,"props":2424,"children":2425},{"style":2374},[2426],{"type":178,"value":2427},"arguments",{"type":172,"tag":593,"props":2429,"children":2430},{"style":1270},[2431],{"type":178,"value":897},{"type":172,"tag":593,"props":2433,"children":2434},{"style":838},[2435],{"type":178,"value":2436},"// '[object Arguments]'\n",{"type":172,"tag":593,"props":2438,"children":2439},{"class":595,"line":735},[2440],{"type":172,"tag":593,"props":2441,"children":2442},{"style":1270},[2443],{"type":178,"value":2444},"  )\n",{"type":172,"tag":593,"props":2446,"children":2447},{"class":595,"line":744},[2448,2453],{"type":172,"tag":593,"props":2449,"children":2450},{"style":612},[2451],{"type":178,"value":2452},"}",{"type":172,"tag":593,"props":2454,"children":2455},{"style":667},[2456],{"type":178,"value":2457},")()\n",{"type":172,"tag":465,"props":2459,"children":2461},{"id":2460},"如何扩展",[2462],{"type":178,"value":2460},{"type":172,"tag":180,"props":2464,"children":2465},{},[2466],{"type":178,"value":2467},"可以通过 Symbol.toStringTag 对已有对象的内置标签进行修改。这样就可以不需要通过构造函数的方法来分辨程序中不同种类的新对象。如下代码：",{"type":172,"tag":583,"props":2469,"children":2471},{"className":585,"code":2470,"language":587,"meta":166,"style":166},"var a = {}\na[Symbol.toStringTag] = '1234'\nObject.prototype.toString.call(a)\n// >>> \"[object 1234]\"\n",[2472],{"type":172,"tag":475,"props":2473,"children":2474},{"__ignoreMap":166},[2475,2497,2531,2568],{"type":172,"tag":593,"props":2476,"children":2477},{"class":595,"line":596},[2478,2483,2488,2492],{"type":172,"tag":593,"props":2479,"children":2480},{"style":600},[2481],{"type":178,"value":2482},"var",{"type":172,"tag":593,"props":2484,"children":2485},{"style":667},[2486],{"type":178,"value":2487}," a ",{"type":172,"tag":593,"props":2489,"children":2490},{"style":672},[2491],{"type":178,"value":1722},{"type":172,"tag":593,"props":2493,"children":2494},{"style":612},[2495],{"type":178,"value":2496}," {}\n",{"type":172,"tag":593,"props":2498,"children":2499},{"class":595,"line":653},[2500,2505,2509,2514,2518,2522,2527],{"type":172,"tag":593,"props":2501,"children":2502},{"style":667},[2503],{"type":178,"value":2504},"a[Symbol",{"type":172,"tag":593,"props":2506,"children":2507},{"style":612},[2508],{"type":178,"value":272},{"type":172,"tag":593,"props":2510,"children":2511},{"style":667},[2512],{"type":178,"value":2513},"toStringTag] ",{"type":172,"tag":593,"props":2515,"children":2516},{"style":672},[2517],{"type":178,"value":1722},{"type":172,"tag":593,"props":2519,"children":2520},{"style":776},[2521],{"type":178,"value":798},{"type":172,"tag":593,"props":2523,"children":2524},{"style":782},[2525],{"type":178,"value":2526},"1234",{"type":172,"tag":593,"props":2528,"children":2529},{"style":776},[2530],{"type":178,"value":2032},{"type":172,"tag":593,"props":2532,"children":2533},{"class":595,"line":683},[2534,2539,2543,2547,2551,2555,2559,2563],{"type":172,"tag":593,"props":2535,"children":2536},{"style":881},[2537],{"type":178,"value":2538},"Object",{"type":172,"tag":593,"props":2540,"children":2541},{"style":612},[2542],{"type":178,"value":272},{"type":172,"tag":593,"props":2544,"children":2545},{"style":753},[2546],{"type":178,"value":892},{"type":172,"tag":593,"props":2548,"children":2549},{"style":612},[2550],{"type":178,"value":272},{"type":172,"tag":593,"props":2552,"children":2553},{"style":667},[2554],{"type":178,"value":1993},{"type":172,"tag":593,"props":2556,"children":2557},{"style":612},[2558],{"type":178,"value":272},{"type":172,"tag":593,"props":2560,"children":2561},{"style":606},[2562],{"type":178,"value":2002},{"type":172,"tag":593,"props":2564,"children":2565},{"style":667},[2566],{"type":178,"value":2567},"(a)\n",{"type":172,"tag":593,"props":2569,"children":2570},{"class":595,"line":709},[2571],{"type":172,"tag":593,"props":2572,"children":2573},{"style":838},[2574],{"type":178,"value":2575},"// >>> \"[object 1234]\"\n",{"type":172,"tag":465,"props":2577,"children":2579},{"id":2578},"缺陷所在",[2580],{"type":178,"value":2578},{"type":172,"tag":180,"props":2582,"children":2583},{},[2584],{"type":178,"value":2585},"JS 中的对象，按照执行环境来划分可以分为内置对象（Build-In Object）和宿主对象（Host Object），如 Window、History 就是执行环境（浏览器）提供的对象。\n缺陷呢，往往就存在于规范中没有被定义的行为。\n比如，Window 对象的 Symbol.toString 是浏览器定义的行为，而且往往不同浏览器，实现还不一样。",{"type":172,"tag":583,"props":2587,"children":2589},{"className":585,"code":2588,"language":587,"meta":166,"style":166},"Window.toString()\n// [object Window] ?\n// [object Object] ?\n// [object DOMWindow] ?\n// [object global] ? (这个尤其为叛徒，第一个字母居然是小写的)\n",[2590],{"type":172,"tag":475,"props":2591,"children":2592},{"__ignoreMap":166},[2593,2614,2622,2630,2638],{"type":172,"tag":593,"props":2594,"children":2595},{"class":595,"line":596},[2596,2601,2605,2609],{"type":172,"tag":593,"props":2597,"children":2598},{"style":667},[2599],{"type":178,"value":2600},"Window",{"type":172,"tag":593,"props":2602,"children":2603},{"style":612},[2604],{"type":178,"value":272},{"type":172,"tag":593,"props":2606,"children":2607},{"style":606},[2608],{"type":178,"value":1993},{"type":172,"tag":593,"props":2610,"children":2611},{"style":667},[2612],{"type":178,"value":2613},"()\n",{"type":172,"tag":593,"props":2615,"children":2616},{"class":595,"line":653},[2617],{"type":172,"tag":593,"props":2618,"children":2619},{"style":838},[2620],{"type":178,"value":2621},"// [object Window] ?\n",{"type":172,"tag":593,"props":2623,"children":2624},{"class":595,"line":683},[2625],{"type":172,"tag":593,"props":2626,"children":2627},{"style":838},[2628],{"type":178,"value":2629},"// [object Object] ?\n",{"type":172,"tag":593,"props":2631,"children":2632},{"class":595,"line":709},[2633],{"type":172,"tag":593,"props":2634,"children":2635},{"style":838},[2636],{"type":178,"value":2637},"// [object DOMWindow] ?\n",{"type":172,"tag":593,"props":2639,"children":2640},{"class":595,"line":735},[2641],{"type":172,"tag":593,"props":2642,"children":2643},{"style":838},[2644],{"type":178,"value":2645},"// [object global] ? (这个尤其为叛徒，第一个字母居然是小写的)\n",{"type":172,"tag":180,"props":2647,"children":2648},{},[2649],{"type":172,"tag":266,"props":2650,"children":2651},{},[2652],{"type":178,"value":2653},"(￣ ▽ ￣)\" 害。",{"type":172,"tag":173,"props":2655,"children":2657},{"id":2656},"最后",[2658],{"type":178,"value":2656},{"type":172,"tag":180,"props":2660,"children":2661},{},[2662],{"type":178,"value":2663},"想不到吧，JS 类型判断这个问题居然没有完美的解法，每种解法都有缺陷。",{"type":172,"tag":180,"props":2665,"children":2666},{},[2667],{"type":178,"value":2668},"那么我们平常写代码到底用哪种呢？",{"type":172,"tag":180,"props":2670,"children":2671},{},[2672],{"type":178,"value":2673},"虽然我刚才提到“业务代码可以使用 typeof 或 instanceof，库和工具函数等需要更精准的情况则用 Object.prototype.toString”，但是，这并不是绝对的。\n我们仔细思考一下这三种方法的本质：",{"type":172,"tag":186,"props":2675,"children":2676},{},[2677,2682,2687],{"type":172,"tag":190,"props":2678,"children":2679},{},[2680],{"type":178,"value":2681},"typeof 根据最小三位字节判断变量类型",{"type":172,"tag":190,"props":2683,"children":2684},{},[2685],{"type":178,"value":2686},"instanceof 根据原型链判断",{"type":172,"tag":190,"props":2688,"children":2689},{},[2690],{"type":178,"value":2691},"Object.prototype.toString 主要是根据对象的内置标签（Build-In Tag）判断",{"type":172,"tag":180,"props":2693,"children":2694},{},[2695],{"type":178,"value":2696},"那么熟记这三条规则，写代码时就能游刃有余了。",{"type":172,"tag":180,"props":2698,"children":2699},{},[2700],{"type":178,"value":2701},"感谢看到结尾，如有错误请务必指正，十分感谢。如果喜欢请点赞、投币、关注三连吧！我是 Lionad，爱你萌！",{"type":172,"tag":173,"props":2703,"children":2705},{"id":2704},"阅读更多",[2706],{"type":178,"value":2704},{"type":172,"tag":186,"props":2708,"children":2709},{},[2710,2722,2732,2742,2752],{"type":172,"tag":190,"props":2711,"children":2712},{},[2713],{"type":172,"tag":2714,"props":2715,"children":2719},"a",{"href":2716,"rel":2717},"https://book.douban.com/subject/27133542/",[2718],"nofollow",[2720],{"type":178,"value":2721},"《JavaScript 框架设计》",{"type":172,"tag":190,"props":2723,"children":2724},{},[2725],{"type":172,"tag":2714,"props":2726,"children":2729},{"href":2727,"rel":2728},"https://justjavac.com/javascript/2012/12/23/what-is-javascripts-typeof-operator-used-for.html",[2718],[2730],{"type":178,"value":2731},"JavaScript 的 typeof 的用途",{"type":172,"tag":190,"props":2733,"children":2734},{},[2735],{"type":172,"tag":2714,"props":2736,"children":2739},{"href":2737,"rel":2738},"https://2ality.com/2013/10/typeof-null.html",[2718],[2740],{"type":178,"value":2741},"The history of “typeof null”",{"type":172,"tag":190,"props":2743,"children":2744},{},[2745],{"type":172,"tag":2714,"props":2746,"children":2749},{"href":2747,"rel":2748},"http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator",[2718],[2750],{"type":178,"value":2751},"ECMAScript® 2015 Language Specification",{"type":172,"tag":190,"props":2753,"children":2754},{},[2755],{"type":172,"tag":2714,"props":2756,"children":2759},{"href":2757,"rel":2758},"https://juejin.im/post/5b0b9b9051882515773ae714",[2718],[2760],{"type":178,"value":2761},"instanceof 和 typeof 原理",{"type":172,"tag":2763,"props":2764,"children":2765},"style",{},[2766],{"type":178,"value":2767},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":166,"searchDepth":653,"depth":653,"links":2769},[2770,2771,2775,2779,2783,2784],{"id":175,"depth":653,"text":175},{"id":194,"depth":653,"text":194,"children":2772},[2773,2774],{"id":458,"depth":683,"text":458},{"id":503,"depth":683,"text":506},{"id":199,"depth":653,"text":199,"children":2776},[2777,2778],{"id":1368,"depth":683,"text":1368},{"id":1365,"depth":683,"text":1365},{"id":1921,"depth":653,"text":204,"children":2780},[2781,2782],{"id":2460,"depth":683,"text":2460},{"id":2578,"depth":683,"text":2578},{"id":2656,"depth":653,"text":2656},{"id":2704,"depth":653,"text":2704},"markdown","content:_achieved:2020-05:type-check.md","content","_achieved/2020-05/type-check.md","_achieved/2020-05/type-check","md",[2792,2795],{"_path":2793,"title":2794,"description":166},"/_achieved/2020-05/js-module-history","JS 模块化简史",{"_path":2796,"title":2797,"description":166},"/_achieved/2020-06/punctuations","✒️ 关于标点的那些事儿",1750854651814]