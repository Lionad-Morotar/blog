[{"data":1,"prerenderedAt":3021},["ShallowReactive",2],{"navigation":3,"/_achieved/2020-05/type-check":384,"/_achieved/2020-05/type-check-surround":3014},[4,35,86,105,132,138,144,150,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":205,"_path":206},"正则表达式","/gists/eegex",{"title":208,"_path":209},"Emoji","/gists/emoji",{"title":211,"_path":212},"工程","/gists/engineering",{"title":214,"_path":215},"熵","/gists/entropy",{"title":217,"_path":218},"Environment","/gists/environment",{"title":220,"_path":221},"Erlang","/gists/erlang",{"title":223,"_path":224},"逃离塔克夫","/gists/escape-from-tarkov",{"title":226,"_path":227},"ESNext (ES6-ES11)","/gists/esnext",{"title":229,"_path":230},"Eval！","/gists/eval",{"title":232,"_path":233},"Flutter","/gists/flutter",{"title":235,"_path":236},"字体","/gists/font",{"title":238,"_path":239},"JS 函数式编程","/gists/functional",{"title":241,"_path":242},"游戏化","/gists/gamification",{"title":244,"_path":245},"Google C++ Standard","/gists/google-cpp-standard",{"title":247,"_path":248},"双向链接完全体","/gists/graph",{"title":250,"_path":251},"Hardwares","/gists/hardwares",{"title":253,"_path":254},"哈希冲突","/gists/hash-collision",{"title":256,"_path":257},"信息设计","/gists/information-design",{"title":259,"_path":260},"InstantPage","/gists/instant.page",{"title":262,"_path":263},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":265,"_path":266},"KVStore","/gists/key-value-db",{"title":268,"_path":269},"Kubernetes","/gists/kubernetes",{"title":271,"_path":272},"Makefile","/gists/makefile",{"title":274,"_path":275},"Markdown Inline Style","/gists/markdown-nice",{"title":277,"_path":278},"减小页面快照体积","/gists/minify-html",{"title":280,"_path":281},"mklink","/gists/mklink",{"title":283,"_path":284},"Mock","/gists/mock",{"title":286,"_path":287},"多人协作系统","/gists/multiplayer",{"title":289,"_path":290},"多端应用","/gists/multy-end-app",{"title":292,"_path":293},"神经科学","/gists/neuroscience",{"title":295,"_path":296},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":298,"_path":299},"PInvoke","/gists/pinvoke",{"title":301,"_path":302},"像素","/gists/pixel",{"title":304,"_path":305},"PowerShell","/gists/powershell",{"title":307,"_path":308},"量子","/gists/quantum",{"title":310,"_path":311},"保持好奇心","/gists/questions",{"title":313,"_path":314},"React Native","/gists/react-native",{"title":316,"_path":317},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":319,"_path":320},"SEO","/gists/seo",{"title":322,"_path":323},"Shader","/gists/shader",{"title":325,"_path":326},"Shape Up","/gists/shape-up",{"title":328,"_path":329},"睡觉","/gists/sleep",{"title":331,"_path":332},"记录奇怪的问题","/gists/solved",{"title":334,"_path":335},"States","/gists/states",{"title":337,"_path":338},"Storage","/gists/storage",{"title":340,"_path":341},"音视频流处理","/gists/stream-cli",{"title":343,"_path":344},"Symbol","/gists/symbol",{"title":346,"_path":347},"系统论","/gists/systems-theory",{"title":349,"_path":350},"任务切片","/gists/task-slice",{"title":352,"_path":353},"技术偏好","/gists/tech-dudge",{"title":355,"_path":356},"Untitled","/gists/untitled",{"title":358,"_path":359},"可变字体","/gists/variable-font",{"title":361,"_path":362},"视觉错觉","/gists/visual-illusion",{"title":364,"_path":365},"SS(SSR)","/gists/vpn",{"title":367,"_path":368},"VS Code 插件开发","/gists/vscode-plugin",{"title":370,"_path":371},"Web Components","/gists/web-components",{"title":373,"_path":374},"Windows","/gists/windows",{"title":376,"_path":377},"查缺补漏","/gists/wrong",{"title":379,"_path":380,"children":381},"我 / About","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"_path":385,"_dir":386,"_draft":387,"_partial":388,"_locale":389,"title":390,"description":389,"body":391,"_type":3008,"_id":3009,"_source":3010,"_file":3011,"_stem":3012,"_extension":3013},"/_achieved/2020-05/type-check","2020-05",false,true,"","🎫 常用类型判断方法的优势及缺陷",{"type":392,"children":393,"toc":2991},"root",[394,402,408,428,433,437,442,447,452,521,526,669,674,687,692,706,719,724,730,735,763,768,791,796,800,805,1144,1149,1157,1263,1268,1297,1302,1307,1529,1534,1561,1566,1571,1576,1589,1594,1599,1809,1814,1835,1839,1844,2137,2142,2147,2152,2280,2285,2531,2536,2681,2686,2691,2799,2804,2809,2869,2877,2882,2887,2892,2897,2915,2920,2925,2930,2985],{"type":395,"tag":396,"props":397,"children":399},"element","h2",{"id":398},"常用判断方法",[400],{"type":401,"value":398},"text",{"type":395,"tag":403,"props":404,"children":405},"p",{},[406],{"type":401,"value":407},"类型判断，在 JavaScript 中是一个很经典的问题了。围绕类型判断，有几种常见的解决方法，下是最常用的三种：",{"type":395,"tag":409,"props":410,"children":411},"ul",{},[412,418,423],{"type":395,"tag":413,"props":414,"children":415},"li",{},[416],{"type":401,"value":417},"typeof",{"type":395,"tag":413,"props":419,"children":420},{},[421],{"type":401,"value":422},"instanceof",{"type":395,"tag":413,"props":424,"children":425},{},[426],{"type":401,"value":427},"Object.prototype.toString.call",{"type":395,"tag":403,"props":429,"children":430},{},[431],{"type":401,"value":432},"我将在此文中根据这几种方法在 ECMAScript 规范下的描述及我们开发时的实际情况，聊聊这几种方法的优劣势所在。",{"type":395,"tag":396,"props":434,"children":435},{"id":417},[436],{"type":401,"value":417},{"type":395,"tag":403,"props":438,"children":439},{},[440],{"type":401,"value":441},"当我还是一个 JS 萌新的时候，我就爱上了 typeof 运算符，因为它的作用正如其名，非常好理解。\n利用 typeof 我们可以轻松判断常见的基础类型，如 Number、String、Boolean 等。",{"type":395,"tag":403,"props":443,"children":444},{},[445],{"type":401,"value":446},"ECMAScript 文档中有对 typeof 这样描述：",{"type":395,"tag":403,"props":448,"children":449},{},[450],{"type":401,"value":451},"$\\it{UnaryExpression} \\quad: \\quad \\bf{typeof} \\quad \\it{UnaryExpression}$",{"type":395,"tag":453,"props":454,"children":455},"ol",{},[456,461,496,507,516],{"type":395,"tag":413,"props":457,"children":458},{},[459],{"type":401,"value":460},"Let val be the result of evaluating UnaryExpression.",{"type":395,"tag":413,"props":462,"children":463},{},[464,466,472,474],{"type":401,"value":465},"If ",{"type":395,"tag":467,"props":468,"children":469},"em",{},[470],{"type":401,"value":471},"Type(val)",{"type":401,"value":473}," is Reference, then\n",{"type":395,"tag":409,"props":475,"children":476},{},[477],{"type":395,"tag":413,"props":478,"children":479},{},[480,481,486,488,494],{"type":401,"value":465},{"type":395,"tag":467,"props":482,"children":483},{},[484],{"type":401,"value":485},"IsUnresolvableReference(val)",{"type":401,"value":487}," is true, return ",{"type":395,"tag":489,"props":490,"children":491},"strong",{},[492],{"type":401,"value":493},"\"undefined\"",{"type":401,"value":495},".",{"type":395,"tag":413,"props":497,"children":498},{},[499,501,506],{"type":401,"value":500},"Let val be ",{"type":395,"tag":467,"props":502,"children":503},{},[504],{"type":401,"value":505},"GetValue(val)",{"type":401,"value":495},{"type":395,"tag":413,"props":508,"children":509},{},[510,515],{"type":395,"tag":467,"props":511,"children":512},{},[513],{"type":401,"value":514},"ReturnIfAbrupt(val)",{"type":401,"value":495},{"type":395,"tag":413,"props":517,"children":518},{},[519],{"type":401,"value":520},"Return a String according to Table Below.",{"type":395,"tag":403,"props":522,"children":523},{},[524],{"type":401,"value":525},"简单来说，就是先判断是不是引用未知，是则返回 'undefined'，不然就根据下表找值。",{"type":395,"tag":527,"props":528,"children":529},"table",{},[530,550],{"type":395,"tag":531,"props":532,"children":533},"thead",{},[534],{"type":395,"tag":535,"props":536,"children":537},"tr",{},[538,545],{"type":395,"tag":539,"props":540,"children":542},"th",{"align":541},"center",[543],{"type":401,"value":544},"类型",{"type":395,"tag":539,"props":546,"children":547},{"align":541},[548],{"type":401,"value":549},"返回",{"type":395,"tag":551,"props":552,"children":553},"tbody",{},[554,567,580,593,606,619,631,643,656],{"type":395,"tag":535,"props":555,"children":556},{},[557,563],{"type":395,"tag":558,"props":559,"children":560},"td",{"align":541},[561],{"type":401,"value":562},"Undefined",{"type":395,"tag":558,"props":564,"children":565},{"align":541},[566],{"type":401,"value":493},{"type":395,"tag":535,"props":568,"children":569},{},[570,575],{"type":395,"tag":558,"props":571,"children":572},{"align":541},[573],{"type":401,"value":574},"Null",{"type":395,"tag":558,"props":576,"children":577},{"align":541},[578],{"type":401,"value":579},"\"object\"",{"type":395,"tag":535,"props":581,"children":582},{},[583,588],{"type":395,"tag":558,"props":584,"children":585},{"align":541},[586],{"type":401,"value":587},"Boolean",{"type":395,"tag":558,"props":589,"children":590},{"align":541},[591],{"type":401,"value":592},"\"boolean\"",{"type":395,"tag":535,"props":594,"children":595},{},[596,601],{"type":395,"tag":558,"props":597,"children":598},{"align":541},[599],{"type":401,"value":600},"Number",{"type":395,"tag":558,"props":602,"children":603},{"align":541},[604],{"type":401,"value":605},"\"number\"",{"type":395,"tag":535,"props":607,"children":608},{},[609,614],{"type":395,"tag":558,"props":610,"children":611},{"align":541},[612],{"type":401,"value":613},"String",{"type":395,"tag":558,"props":615,"children":616},{"align":541},[617],{"type":401,"value":618},"\"string\"",{"type":395,"tag":535,"props":620,"children":621},{},[622,627],{"type":395,"tag":558,"props":623,"children":624},{"align":541},[625],{"type":401,"value":626},"Object (ordinary and does not implement [[Call]])",{"type":395,"tag":558,"props":628,"children":629},{"align":541},[630],{"type":401,"value":579},{"type":395,"tag":535,"props":632,"children":633},{},[634,639],{"type":395,"tag":558,"props":635,"children":636},{"align":541},[637],{"type":401,"value":638},"Object (standard exotic and does not implement [[Call]])",{"type":395,"tag":558,"props":640,"children":641},{"align":541},[642],{"type":401,"value":579},{"type":395,"tag":535,"props":644,"children":645},{},[646,651],{"type":395,"tag":558,"props":647,"children":648},{"align":541},[649],{"type":401,"value":650},"Object (implements [[Call]])",{"type":395,"tag":558,"props":652,"children":653},{"align":541},[654],{"type":401,"value":655},"\"function\"",{"type":395,"tag":535,"props":657,"children":658},{},[659,664],{"type":395,"tag":558,"props":660,"children":661},{"align":541},[662],{"type":401,"value":663},"Object (non-standard exotic and does not implement [[Call]])",{"type":395,"tag":558,"props":665,"children":666},{"align":541},[667],{"type":401,"value":668},"Implementation-defined. Must not be \"undefined\", \"boolean\", \"function\", \"number\", \"symbol\", or \"string\".",{"type":395,"tag":403,"props":670,"children":671},{},[672],{"type":401,"value":673},"这里我们详细说说两点：",{"type":395,"tag":453,"props":675,"children":676},{},[677,682],{"type":395,"tag":413,"props":678,"children":679},{},[680],{"type":401,"value":681},"判断内置对象",{"type":395,"tag":413,"props":683,"children":684},{},[685],{"type":401,"value":686},"typeof null === 'object'",{"type":395,"tag":688,"props":689,"children":690},"h3",{"id":681},[691],{"type":401,"value":681},{"type":395,"tag":403,"props":693,"children":694},{},[695,697,704],{"type":401,"value":696},"Function 作为内置对象，为什么 ",{"type":395,"tag":698,"props":699,"children":701},"code",{"className":700},[],[702],{"type":401,"value":703},"typeof (function a(){})",{"type":401,"value":705}," 的值不为“object”呢？",{"type":395,"tag":403,"props":707,"children":708},{},[709,711,717],{"type":401,"value":710},"其实上面那张表有相应线索，倒数第二条，这是一个特殊判定，“如果对象实现了内部方法[[Call]]” 或 “是 ",{"type":395,"tag":698,"props":712,"children":714},{"className":713},[],[715],{"type":401,"value":716},"Callable",{"type":401,"value":718}," 对象”，那么返回值为“function”。",{"type":395,"tag":403,"props":720,"children":721},{},[722],{"type":401,"value":723},"用 typeof 判断对象太麻烦了，一点儿也不实在。一般情况下，我们会用等下介绍的 Object.prototype.toString 去判断内置对象。",{"type":395,"tag":688,"props":725,"children":727},{"id":726},"typeof-null",[728],{"type":401,"value":729},"typeof null",{"type":395,"tag":403,"props":731,"children":732},{},[733],{"type":401,"value":734},"null 是用来标记“期待指向”的，不是 Object 类型，所以 typeof null === 'object' 是一个程序错误。\n这要追溯到第一版 JavaScript。这版 JS 的实现中，值是存储在 32 位单位中，其中端序最小的 3 位，用来表示值的类型，如下：",{"type":395,"tag":409,"props":736,"children":737},{},[738,743,748,753,758],{"type":395,"tag":413,"props":739,"children":740},{},[741],{"type":401,"value":742},"000：Object",{"type":395,"tag":413,"props":744,"children":745},{},[746],{"type":401,"value":747},"001：Int",{"type":395,"tag":413,"props":749,"children":750},{},[751],{"type":401,"value":752},"010：Double",{"type":395,"tag":413,"props":754,"children":755},{},[756],{"type":401,"value":757},"100：String",{"type":395,"tag":413,"props":759,"children":760},{},[761],{"type":401,"value":762},"110：Boolean",{"type":395,"tag":403,"props":764,"children":765},{},[766],{"type":401,"value":767},"此外，还有两种特殊值：",{"type":395,"tag":409,"props":769,"children":770},{},[771,781],{"type":395,"tag":413,"props":772,"children":773},{},[774,779],{"type":395,"tag":489,"props":775,"children":776},{},[777],{"type":401,"value":778},"undefined",{"type":401,"value":780}," (JSVAL_VOID): $-2^{32}$",{"type":395,"tag":413,"props":782,"children":783},{},[784,789],{"type":395,"tag":489,"props":785,"children":786},{},[787],{"type":401,"value":788},"null",{"type":401,"value":790}," (JSVAL_NULL): 用全为 0 的机器码表示的 NULL 指针（或，一个指向 0 的 Object 类型的值）",{"type":395,"tag":403,"props":792,"children":793},{},[794],{"type":401,"value":795},"也就是说，对程序而言，typeof null 判断类型是根据前三位 0 取得的“object”。这是一个历史遗留问题，有人提出过修复方案，但是怕影响历史遗留代码，修复便被否决了。",{"type":395,"tag":396,"props":797,"children":798},{"id":422},[799],{"type":401,"value":422},{"type":395,"tag":403,"props":801,"children":802},{},[803],{"type":401,"value":804},"内置 instanceof 运算符是用来检测构造函数的 prototype 属性是否存在于某个实例对象的原型链。\n用代码解释要更直观一些：",{"type":395,"tag":806,"props":807,"children":811},"pre",{"className":808,"code":809,"language":810,"meta":389,"style":389},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","function Car(make, model, year) {\n  this.make = make\n  this.model = model\n  this.year = year\n}\nconst auto = new Car('Honda', 'Accord', 1998)\n\n// true\nconsole.log((auto.__proto__ === Car.prototype) === auto instanceof Car)\n","js",[812],{"type":395,"tag":698,"props":813,"children":814},{"__ignoreMap":389},[815,874,904,930,956,965,1046,1055,1065],{"type":395,"tag":816,"props":817,"children":820},"span",{"class":818,"line":819},"line",1,[821,827,833,839,845,850,855,859,864,869],{"type":395,"tag":816,"props":822,"children":824},{"style":823},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[825],{"type":401,"value":826},"function",{"type":395,"tag":816,"props":828,"children":830},{"style":829},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[831],{"type":401,"value":832}," Car",{"type":395,"tag":816,"props":834,"children":836},{"style":835},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[837],{"type":401,"value":838},"(",{"type":395,"tag":816,"props":840,"children":842},{"style":841},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[843],{"type":401,"value":844},"make",{"type":395,"tag":816,"props":846,"children":847},{"style":835},[848],{"type":401,"value":849},",",{"type":395,"tag":816,"props":851,"children":852},{"style":841},[853],{"type":401,"value":854}," model",{"type":395,"tag":816,"props":856,"children":857},{"style":835},[858],{"type":401,"value":849},{"type":395,"tag":816,"props":860,"children":861},{"style":841},[862],{"type":401,"value":863}," year",{"type":395,"tag":816,"props":865,"children":866},{"style":835},[867],{"type":401,"value":868},")",{"type":395,"tag":816,"props":870,"children":871},{"style":835},[872],{"type":401,"value":873}," {\n",{"type":395,"tag":816,"props":875,"children":877},{"class":818,"line":876},2,[878,884,888,893,899],{"type":395,"tag":816,"props":879,"children":881},{"style":880},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[882],{"type":401,"value":883},"  this",{"type":395,"tag":816,"props":885,"children":886},{"style":835},[887],{"type":401,"value":495},{"type":395,"tag":816,"props":889,"children":891},{"style":890},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[892],{"type":401,"value":844},{"type":395,"tag":816,"props":894,"children":896},{"style":895},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[897],{"type":401,"value":898}," =",{"type":395,"tag":816,"props":900,"children":901},{"style":890},[902],{"type":401,"value":903}," make\n",{"type":395,"tag":816,"props":905,"children":907},{"class":818,"line":906},3,[908,912,916,921,925],{"type":395,"tag":816,"props":909,"children":910},{"style":880},[911],{"type":401,"value":883},{"type":395,"tag":816,"props":913,"children":914},{"style":835},[915],{"type":401,"value":495},{"type":395,"tag":816,"props":917,"children":918},{"style":890},[919],{"type":401,"value":920},"model",{"type":395,"tag":816,"props":922,"children":923},{"style":895},[924],{"type":401,"value":898},{"type":395,"tag":816,"props":926,"children":927},{"style":890},[928],{"type":401,"value":929}," model\n",{"type":395,"tag":816,"props":931,"children":933},{"class":818,"line":932},4,[934,938,942,947,951],{"type":395,"tag":816,"props":935,"children":936},{"style":880},[937],{"type":401,"value":883},{"type":395,"tag":816,"props":939,"children":940},{"style":835},[941],{"type":401,"value":495},{"type":395,"tag":816,"props":943,"children":944},{"style":890},[945],{"type":401,"value":946},"year",{"type":395,"tag":816,"props":948,"children":949},{"style":895},[950],{"type":401,"value":898},{"type":395,"tag":816,"props":952,"children":953},{"style":890},[954],{"type":401,"value":955}," year\n",{"type":395,"tag":816,"props":957,"children":959},{"class":818,"line":958},5,[960],{"type":395,"tag":816,"props":961,"children":962},{"style":835},[963],{"type":401,"value":964},"}\n",{"type":395,"tag":816,"props":966,"children":968},{"class":818,"line":967},6,[969,974,980,984,989,993,997,1003,1009,1013,1017,1022,1027,1031,1035,1041],{"type":395,"tag":816,"props":970,"children":971},{"style":823},[972],{"type":401,"value":973},"const",{"type":395,"tag":816,"props":975,"children":977},{"style":976},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[978],{"type":401,"value":979}," auto",{"type":395,"tag":816,"props":981,"children":982},{"style":895},[983],{"type":401,"value":898},{"type":395,"tag":816,"props":985,"children":986},{"style":895},[987],{"type":401,"value":988}," new",{"type":395,"tag":816,"props":990,"children":991},{"style":829},[992],{"type":401,"value":832},{"type":395,"tag":816,"props":994,"children":995},{"style":890},[996],{"type":401,"value":838},{"type":395,"tag":816,"props":998,"children":1000},{"style":999},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[1001],{"type":401,"value":1002},"'",{"type":395,"tag":816,"props":1004,"children":1006},{"style":1005},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[1007],{"type":401,"value":1008},"Honda",{"type":395,"tag":816,"props":1010,"children":1011},{"style":999},[1012],{"type":401,"value":1002},{"type":395,"tag":816,"props":1014,"children":1015},{"style":835},[1016],{"type":401,"value":849},{"type":395,"tag":816,"props":1018,"children":1019},{"style":999},[1020],{"type":401,"value":1021}," '",{"type":395,"tag":816,"props":1023,"children":1024},{"style":1005},[1025],{"type":401,"value":1026},"Accord",{"type":395,"tag":816,"props":1028,"children":1029},{"style":999},[1030],{"type":401,"value":1002},{"type":395,"tag":816,"props":1032,"children":1033},{"style":835},[1034],{"type":401,"value":849},{"type":395,"tag":816,"props":1036,"children":1038},{"style":1037},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1039],{"type":401,"value":1040}," 1998",{"type":395,"tag":816,"props":1042,"children":1043},{"style":890},[1044],{"type":401,"value":1045},")\n",{"type":395,"tag":816,"props":1047,"children":1049},{"class":818,"line":1048},7,[1050],{"type":395,"tag":816,"props":1051,"children":1052},{"emptyLinePlaceholder":388},[1053],{"type":401,"value":1054},"\n",{"type":395,"tag":816,"props":1056,"children":1058},{"class":818,"line":1057},8,[1059],{"type":395,"tag":816,"props":1060,"children":1062},{"style":1061},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[1063],{"type":401,"value":1064},"// true\n",{"type":395,"tag":816,"props":1066,"children":1068},{"class":818,"line":1067},9,[1069,1074,1078,1083,1088,1092,1097,1102,1107,1111,1116,1121,1126,1131,1135,1140],{"type":395,"tag":816,"props":1070,"children":1071},{"style":890},[1072],{"type":401,"value":1073},"console",{"type":395,"tag":816,"props":1075,"children":1076},{"style":835},[1077],{"type":401,"value":495},{"type":395,"tag":816,"props":1079,"children":1080},{"style":829},[1081],{"type":401,"value":1082},"log",{"type":395,"tag":816,"props":1084,"children":1085},{"style":890},[1086],{"type":401,"value":1087},"((auto",{"type":395,"tag":816,"props":1089,"children":1090},{"style":835},[1091],{"type":401,"value":495},{"type":395,"tag":816,"props":1093,"children":1094},{"style":976},[1095],{"type":401,"value":1096},"__proto__",{"type":395,"tag":816,"props":1098,"children":1099},{"style":895},[1100],{"type":401,"value":1101}," ===",{"type":395,"tag":816,"props":1103,"children":1105},{"style":1104},"--shiki-light:#E2931D;--shiki-light-font-style:inherit;--shiki-default:#005CC5;--shiki-default-font-style:inherit;--shiki-dark:#79B8FF;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[1106],{"type":401,"value":832},{"type":395,"tag":816,"props":1108,"children":1109},{"style":835},[1110],{"type":401,"value":495},{"type":395,"tag":816,"props":1112,"children":1113},{"style":976},[1114],{"type":401,"value":1115},"prototype",{"type":395,"tag":816,"props":1117,"children":1118},{"style":890},[1119],{"type":401,"value":1120},") ",{"type":395,"tag":816,"props":1122,"children":1123},{"style":895},[1124],{"type":401,"value":1125},"===",{"type":395,"tag":816,"props":1127,"children":1128},{"style":890},[1129],{"type":401,"value":1130}," auto ",{"type":395,"tag":816,"props":1132,"children":1133},{"style":895},[1134],{"type":401,"value":422},{"type":395,"tag":816,"props":1136,"children":1138},{"style":1137},"--shiki-light:#E2931D;--shiki-light-text-decoration:inherit;--shiki-default:#6F42C1;--shiki-default-text-decoration:inherit;--shiki-dark:#B392F0;--shiki-dark-text-decoration:inherit;--shiki-sepia:#A6E22E;--shiki-sepia-text-decoration:underline",[1139],{"type":401,"value":832},{"type":395,"tag":816,"props":1141,"children":1142},{"style":890},[1143],{"type":401,"value":1045},{"type":395,"tag":403,"props":1145,"children":1146},{},[1147],{"type":401,"value":1148},"我们直接看看规范是怎么定义 instanceof 运算符的：",{"type":395,"tag":403,"props":1150,"children":1151},{},[1152],{"type":395,"tag":489,"props":1153,"children":1154},{},[1155],{"type":401,"value":1156},"InstanceofOperator(O, C)",{"type":395,"tag":453,"props":1158,"children":1159},{},[1160,1178,1196,1205,1230,1253],{"type":395,"tag":413,"props":1161,"children":1162},{},[1163,1164,1169,1171,1176],{"type":401,"value":465},{"type":395,"tag":467,"props":1165,"children":1166},{},[1167],{"type":401,"value":1168},"Type(C)",{"type":401,"value":1170}," is not Object, throw a ",{"type":395,"tag":489,"props":1172,"children":1173},{},[1174],{"type":401,"value":1175},"TypeError",{"type":401,"value":1177}," exception.",{"type":395,"tag":413,"props":1179,"children":1180},{},[1181,1183,1188,1190,1195],{"type":401,"value":1182},"Let ",{"type":395,"tag":467,"props":1184,"children":1185},{},[1186],{"type":401,"value":1187},"instOfHandler",{"type":401,"value":1189}," be ",{"type":395,"tag":467,"props":1191,"children":1192},{},[1193],{"type":401,"value":1194},"GetMethod(C,@@hasInstance)",{"type":401,"value":495},{"type":395,"tag":413,"props":1197,"children":1198},{},[1199,1204],{"type":395,"tag":467,"props":1200,"children":1201},{},[1202],{"type":401,"value":1203},"ReturnIfAbrupt(instOfHandler)",{"type":401,"value":495},{"type":395,"tag":413,"props":1206,"children":1207},{},[1208,1210,1214,1216],{"type":401,"value":1209},"If instOfHandler is not ",{"type":395,"tag":489,"props":1211,"children":1212},{},[1213],{"type":401,"value":778},{"type":401,"value":1215},", then\n",{"type":395,"tag":409,"props":1217,"children":1218},{},[1219],{"type":395,"tag":413,"props":1220,"children":1221},{},[1222,1224,1229],{"type":401,"value":1223},"Return ",{"type":395,"tag":467,"props":1225,"children":1226},{},[1227],{"type":401,"value":1228},"ToBoolean(Call(instOfHandler, C, «O»))",{"type":401,"value":495},{"type":395,"tag":413,"props":1231,"children":1232},{},[1233,1234,1239,1241,1246,1248,1252],{"type":401,"value":465},{"type":395,"tag":467,"props":1235,"children":1236},{},[1237],{"type":401,"value":1238},"IsCallable(C)",{"type":401,"value":1240}," is ",{"type":395,"tag":489,"props":1242,"children":1243},{},[1244],{"type":401,"value":1245},"false",{"type":401,"value":1247},", throw a ",{"type":395,"tag":489,"props":1249,"children":1250},{},[1251],{"type":401,"value":1175},{"type":401,"value":1177},{"type":395,"tag":413,"props":1254,"children":1255},{},[1256,1257,1262],{"type":401,"value":1223},{"type":395,"tag":467,"props":1258,"children":1259},{},[1260],{"type":401,"value":1261},"OrdinaryHasInstance(C, O)",{"type":401,"value":495},{"type":395,"tag":403,"props":1264,"children":1265},{},[1266],{"type":401,"value":1267},"第一条，如果 C 的类型不是对象，那么会抛出类型错误，重现如下：",{"type":395,"tag":806,"props":1269,"children":1271},{"className":808,"code":1270,"language":810,"meta":389,"style":389},";[] instanceof 1\n",[1272],{"type":395,"tag":698,"props":1273,"children":1274},{"__ignoreMap":389},[1275],{"type":395,"tag":816,"props":1276,"children":1277},{"class":818,"line":819},[1278,1283,1288,1292],{"type":395,"tag":816,"props":1279,"children":1280},{"style":835},[1281],{"type":401,"value":1282},";",{"type":395,"tag":816,"props":1284,"children":1285},{"style":890},[1286],{"type":401,"value":1287},"[] ",{"type":395,"tag":816,"props":1289,"children":1290},{"style":895},[1291],{"type":401,"value":422},{"type":395,"tag":816,"props":1293,"children":1294},{"style":1037},[1295],{"type":401,"value":1296}," 1\n",{"type":395,"tag":403,"props":1298,"children":1299},{},[1300],{"type":401,"value":1301},"::: danger\nVM1008:1 Uncaught TypeError: Right-hand side of 'instanceof' is not an object\n:::",{"type":395,"tag":403,"props":1303,"children":1304},{},[1305],{"type":401,"value":1306},"第二至第四条，判断 C 是否有内置的 hasInstance 实现，即 Symbol.hasInstance，如果有，则调用此方法。\n也就是说，对复杂类型，我们可以通过 Symbol，自定义 instanceof 运算符的实现，用下列代码举例：",{"type":395,"tag":806,"props":1308,"children":1310},{"className":808,"code":1309,"language":810,"meta":389,"style":389},"class Lionad {\n  static [Symbol.hasInstance](obj) {\n    return obj && obj.isCute\n  }\n}\n\nconsole.log({} instanceof Lionad) // false\nconsole.log({ isCute: true } instanceof Lionad) // true\n",[1311],{"type":395,"tag":698,"props":1312,"children":1313},{"__ignoreMap":389},[1314,1331,1371,1403,1411,1418,1425,1467],{"type":395,"tag":816,"props":1315,"children":1316},{"class":818,"line":819},[1317,1322,1327],{"type":395,"tag":816,"props":1318,"children":1319},{"style":823},[1320],{"type":401,"value":1321},"class",{"type":395,"tag":816,"props":1323,"children":1324},{"style":1137},[1325],{"type":401,"value":1326}," Lionad",{"type":395,"tag":816,"props":1328,"children":1329},{"style":835},[1330],{"type":401,"value":873},{"type":395,"tag":816,"props":1332,"children":1333},{"class":818,"line":876},[1334,1340,1345,1349,1354,1358,1363,1367],{"type":395,"tag":816,"props":1335,"children":1337},{"style":1336},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[1338],{"type":401,"value":1339},"  static",{"type":395,"tag":816,"props":1341,"children":1342},{"style":890},[1343],{"type":401,"value":1344}," [Symbol",{"type":395,"tag":816,"props":1346,"children":1347},{"style":835},[1348],{"type":401,"value":495},{"type":395,"tag":816,"props":1350,"children":1351},{"style":890},[1352],{"type":401,"value":1353},"hasInstance]",{"type":395,"tag":816,"props":1355,"children":1356},{"style":835},[1357],{"type":401,"value":838},{"type":395,"tag":816,"props":1359,"children":1360},{"style":841},[1361],{"type":401,"value":1362},"obj",{"type":395,"tag":816,"props":1364,"children":1365},{"style":835},[1366],{"type":401,"value":868},{"type":395,"tag":816,"props":1368,"children":1369},{"style":835},[1370],{"type":401,"value":873},{"type":395,"tag":816,"props":1372,"children":1373},{"class":818,"line":906},[1374,1380,1385,1390,1394,1398],{"type":395,"tag":816,"props":1375,"children":1377},{"style":1376},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[1378],{"type":401,"value":1379},"    return",{"type":395,"tag":816,"props":1381,"children":1382},{"style":890},[1383],{"type":401,"value":1384}," obj",{"type":395,"tag":816,"props":1386,"children":1387},{"style":895},[1388],{"type":401,"value":1389}," &&",{"type":395,"tag":816,"props":1391,"children":1392},{"style":890},[1393],{"type":401,"value":1384},{"type":395,"tag":816,"props":1395,"children":1396},{"style":835},[1397],{"type":401,"value":495},{"type":395,"tag":816,"props":1399,"children":1400},{"style":890},[1401],{"type":401,"value":1402},"isCute\n",{"type":395,"tag":816,"props":1404,"children":1405},{"class":818,"line":932},[1406],{"type":395,"tag":816,"props":1407,"children":1408},{"style":835},[1409],{"type":401,"value":1410},"  }\n",{"type":395,"tag":816,"props":1412,"children":1413},{"class":818,"line":958},[1414],{"type":395,"tag":816,"props":1415,"children":1416},{"style":835},[1417],{"type":401,"value":964},{"type":395,"tag":816,"props":1419,"children":1420},{"class":818,"line":967},[1421],{"type":395,"tag":816,"props":1422,"children":1423},{"emptyLinePlaceholder":388},[1424],{"type":401,"value":1054},{"type":395,"tag":816,"props":1426,"children":1427},{"class":818,"line":1048},[1428,1432,1436,1440,1444,1449,1454,1458,1462],{"type":395,"tag":816,"props":1429,"children":1430},{"style":890},[1431],{"type":401,"value":1073},{"type":395,"tag":816,"props":1433,"children":1434},{"style":835},[1435],{"type":401,"value":495},{"type":395,"tag":816,"props":1437,"children":1438},{"style":829},[1439],{"type":401,"value":1082},{"type":395,"tag":816,"props":1441,"children":1442},{"style":890},[1443],{"type":401,"value":838},{"type":395,"tag":816,"props":1445,"children":1446},{"style":835},[1447],{"type":401,"value":1448},"{}",{"type":395,"tag":816,"props":1450,"children":1451},{"style":895},[1452],{"type":401,"value":1453}," instanceof",{"type":395,"tag":816,"props":1455,"children":1456},{"style":1137},[1457],{"type":401,"value":1326},{"type":395,"tag":816,"props":1459,"children":1460},{"style":890},[1461],{"type":401,"value":1120},{"type":395,"tag":816,"props":1463,"children":1464},{"style":1061},[1465],{"type":401,"value":1466},"// false\n",{"type":395,"tag":816,"props":1468,"children":1469},{"class":818,"line":1057},[1470,1474,1478,1482,1486,1491,1497,1502,1508,1513,1517,1521,1525],{"type":395,"tag":816,"props":1471,"children":1472},{"style":890},[1473],{"type":401,"value":1073},{"type":395,"tag":816,"props":1475,"children":1476},{"style":835},[1477],{"type":401,"value":495},{"type":395,"tag":816,"props":1479,"children":1480},{"style":829},[1481],{"type":401,"value":1082},{"type":395,"tag":816,"props":1483,"children":1484},{"style":890},[1485],{"type":401,"value":838},{"type":395,"tag":816,"props":1487,"children":1488},{"style":835},[1489],{"type":401,"value":1490},"{",{"type":395,"tag":816,"props":1492,"children":1494},{"style":1493},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1495],{"type":401,"value":1496}," isCute",{"type":395,"tag":816,"props":1498,"children":1499},{"style":835},[1500],{"type":401,"value":1501},":",{"type":395,"tag":816,"props":1503,"children":1505},{"style":1504},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1506],{"type":401,"value":1507}," true",{"type":395,"tag":816,"props":1509,"children":1510},{"style":835},[1511],{"type":401,"value":1512}," }",{"type":395,"tag":816,"props":1514,"children":1515},{"style":895},[1516],{"type":401,"value":1453},{"type":395,"tag":816,"props":1518,"children":1519},{"style":1137},[1520],{"type":401,"value":1326},{"type":395,"tag":816,"props":1522,"children":1523},{"style":890},[1524],{"type":401,"value":1120},{"type":395,"tag":816,"props":1526,"children":1527},{"style":1061},[1528],{"type":401,"value":1064},{"type":395,"tag":403,"props":1530,"children":1531},{},[1532],{"type":401,"value":1533},"这之后，第五条，如果 C 非 Callable 对象（还记得我们在 typeof 提到的内部方法[[call]]吗，Callable 对象即实现了[[call]]内部方法的对象，比如说某个函数），抛出类型错误，重现如下：",{"type":395,"tag":806,"props":1535,"children":1537},{"className":808,"code":1536,"language":810,"meta":389,"style":389},";[] instanceof []\n",[1538],{"type":395,"tag":698,"props":1539,"children":1540},{"__ignoreMap":389},[1541],{"type":395,"tag":816,"props":1542,"children":1543},{"class":818,"line":819},[1544,1548,1552,1556],{"type":395,"tag":816,"props":1545,"children":1546},{"style":835},[1547],{"type":401,"value":1282},{"type":395,"tag":816,"props":1549,"children":1550},{"style":890},[1551],{"type":401,"value":1287},{"type":395,"tag":816,"props":1553,"children":1554},{"style":895},[1555],{"type":401,"value":422},{"type":395,"tag":816,"props":1557,"children":1558},{"style":890},[1559],{"type":401,"value":1560}," []\n",{"type":395,"tag":403,"props":1562,"children":1563},{},[1564],{"type":401,"value":1565},"::: danger\nVM684:1 Uncaught TypeError: Right-hand side of 'instanceof' is not callable\n:::",{"type":395,"tag":403,"props":1567,"children":1568},{},[1569],{"type":401,"value":1570},"最后，返回调用内置 instanceof 实现的结果。",{"type":395,"tag":403,"props":1572,"children":1573},{},[1574],{"type":401,"value":1575},"不过，需要强调的是，instanceof 也有缺陷存在，主要体现在两个方面：",{"type":395,"tag":453,"props":1577,"children":1578},{},[1579,1584],{"type":395,"tag":413,"props":1580,"children":1581},{},[1582],{"type":401,"value":1583},"判断的依据是原型链",{"type":395,"tag":413,"props":1585,"children":1586},{},[1587],{"type":401,"value":1588},"跨宿主运算",{"type":395,"tag":688,"props":1590,"children":1592},{"id":1591},"依据原型链",[1593],{"type":401,"value":1591},{"type":395,"tag":403,"props":1595,"children":1596},{},[1597],{"type":401,"value":1598},"使用 instanceof 运算符判断对象字面量，会出现另人诧异的结果，见下代码：",{"type":395,"tag":806,"props":1600,"children":1602},{"className":808,"code":1601,"language":810,"meta":389,"style":389},"console.log(\n  'hello world' instanceof String, // false\n  new String('asdf') instanceof String, // true\n  {} instanceof Object, // true\n  [] instanceof Object, // true\n  Object.create(null) instanceof Object // false\n)\n",[1603],{"type":395,"tag":698,"props":1604,"children":1605},{"__ignoreMap":389},[1606,1626,1661,1711,1736,1760,1802],{"type":395,"tag":816,"props":1607,"children":1608},{"class":818,"line":819},[1609,1613,1617,1621],{"type":395,"tag":816,"props":1610,"children":1611},{"style":890},[1612],{"type":401,"value":1073},{"type":395,"tag":816,"props":1614,"children":1615},{"style":835},[1616],{"type":401,"value":495},{"type":395,"tag":816,"props":1618,"children":1619},{"style":829},[1620],{"type":401,"value":1082},{"type":395,"tag":816,"props":1622,"children":1623},{"style":890},[1624],{"type":401,"value":1625},"(\n",{"type":395,"tag":816,"props":1627,"children":1628},{"class":818,"line":876},[1629,1634,1639,1643,1647,1652,1656],{"type":395,"tag":816,"props":1630,"children":1631},{"style":999},[1632],{"type":401,"value":1633},"  '",{"type":395,"tag":816,"props":1635,"children":1636},{"style":1005},[1637],{"type":401,"value":1638},"hello world",{"type":395,"tag":816,"props":1640,"children":1641},{"style":999},[1642],{"type":401,"value":1002},{"type":395,"tag":816,"props":1644,"children":1645},{"style":895},[1646],{"type":401,"value":1453},{"type":395,"tag":816,"props":1648,"children":1649},{"style":1137},[1650],{"type":401,"value":1651}," String",{"type":395,"tag":816,"props":1653,"children":1654},{"style":835},[1655],{"type":401,"value":849},{"type":395,"tag":816,"props":1657,"children":1658},{"style":1061},[1659],{"type":401,"value":1660}," // false\n",{"type":395,"tag":816,"props":1662,"children":1663},{"class":818,"line":906},[1664,1669,1673,1677,1681,1686,1690,1694,1698,1702,1706],{"type":395,"tag":816,"props":1665,"children":1666},{"style":895},[1667],{"type":401,"value":1668},"  new",{"type":395,"tag":816,"props":1670,"children":1671},{"style":829},[1672],{"type":401,"value":1651},{"type":395,"tag":816,"props":1674,"children":1675},{"style":890},[1676],{"type":401,"value":838},{"type":395,"tag":816,"props":1678,"children":1679},{"style":999},[1680],{"type":401,"value":1002},{"type":395,"tag":816,"props":1682,"children":1683},{"style":1005},[1684],{"type":401,"value":1685},"asdf",{"type":395,"tag":816,"props":1687,"children":1688},{"style":999},[1689],{"type":401,"value":1002},{"type":395,"tag":816,"props":1691,"children":1692},{"style":890},[1693],{"type":401,"value":1120},{"type":395,"tag":816,"props":1695,"children":1696},{"style":895},[1697],{"type":401,"value":422},{"type":395,"tag":816,"props":1699,"children":1700},{"style":1137},[1701],{"type":401,"value":1651},{"type":395,"tag":816,"props":1703,"children":1704},{"style":835},[1705],{"type":401,"value":849},{"type":395,"tag":816,"props":1707,"children":1708},{"style":1061},[1709],{"type":401,"value":1710}," // true\n",{"type":395,"tag":816,"props":1712,"children":1713},{"class":818,"line":932},[1714,1719,1723,1728,1732],{"type":395,"tag":816,"props":1715,"children":1716},{"style":835},[1717],{"type":401,"value":1718},"  {}",{"type":395,"tag":816,"props":1720,"children":1721},{"style":895},[1722],{"type":401,"value":1453},{"type":395,"tag":816,"props":1724,"children":1725},{"style":1137},[1726],{"type":401,"value":1727}," Object",{"type":395,"tag":816,"props":1729,"children":1730},{"style":835},[1731],{"type":401,"value":849},{"type":395,"tag":816,"props":1733,"children":1734},{"style":1061},[1735],{"type":401,"value":1710},{"type":395,"tag":816,"props":1737,"children":1738},{"class":818,"line":958},[1739,1744,1748,1752,1756],{"type":395,"tag":816,"props":1740,"children":1741},{"style":890},[1742],{"type":401,"value":1743},"  [] ",{"type":395,"tag":816,"props":1745,"children":1746},{"style":895},[1747],{"type":401,"value":422},{"type":395,"tag":816,"props":1749,"children":1750},{"style":1137},[1751],{"type":401,"value":1727},{"type":395,"tag":816,"props":1753,"children":1754},{"style":835},[1755],{"type":401,"value":849},{"type":395,"tag":816,"props":1757,"children":1758},{"style":1061},[1759],{"type":401,"value":1710},{"type":395,"tag":816,"props":1761,"children":1762},{"class":818,"line":967},[1763,1768,1772,1777,1781,1786,1790,1794,1798],{"type":395,"tag":816,"props":1764,"children":1765},{"style":890},[1766],{"type":401,"value":1767},"  Object",{"type":395,"tag":816,"props":1769,"children":1770},{"style":835},[1771],{"type":401,"value":495},{"type":395,"tag":816,"props":1773,"children":1774},{"style":829},[1775],{"type":401,"value":1776},"create",{"type":395,"tag":816,"props":1778,"children":1779},{"style":890},[1780],{"type":401,"value":838},{"type":395,"tag":816,"props":1782,"children":1784},{"style":1783},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1785],{"type":401,"value":788},{"type":395,"tag":816,"props":1787,"children":1788},{"style":890},[1789],{"type":401,"value":1120},{"type":395,"tag":816,"props":1791,"children":1792},{"style":895},[1793],{"type":401,"value":422},{"type":395,"tag":816,"props":1795,"children":1796},{"style":1137},[1797],{"type":401,"value":1727},{"type":395,"tag":816,"props":1799,"children":1800},{"style":1061},[1801],{"type":401,"value":1660},{"type":395,"tag":816,"props":1803,"children":1804},{"class":818,"line":1048},[1805],{"type":395,"tag":816,"props":1806,"children":1807},{"style":890},[1808],{"type":401,"value":1045},{"type":395,"tag":403,"props":1810,"children":1811},{},[1812],{"type":401,"value":1813},"题外话，上面几行代码还隐式说明了这些问题：",{"type":395,"tag":409,"props":1815,"children":1816},{},[1817],{"type":395,"tag":413,"props":1818,"children":1819},{},[1820,1822,1827,1829],{"type":401,"value":1821},"对于对象字面量 ",{"type":395,"tag":698,"props":1823,"children":1825},{"className":1824},[],[1826],{"type":401,"value":1448},{"type":401,"value":1828}," 有 ",{"type":395,"tag":698,"props":1830,"children":1832},{"className":1831},[],[1833],{"type":401,"value":1834},"({}).__proto__ === Object.prototype",{"type":395,"tag":688,"props":1836,"children":1837},{"id":1588},[1838],{"type":401,"value":1588},{"type":395,"tag":403,"props":1840,"children":1841},{},[1842],{"type":401,"value":1843},"关于跨宿主运算，可以尝试以下代码重现:",{"type":395,"tag":806,"props":1845,"children":1847},{"className":808,"code":1846,"language":810,"meta":389,"style":389},"const iframe = document.createElement('iframe')\ndocument.body.appendChild(iframe)\nxArray = window.frames[window.frames.length - 1].Array\nconst xArr = new xArray(1, 2, 3)\n\nconsole.log(xArr instanceof xArray) // true\nconsole.log(xArr instanceof Array) // false\n",[1848],{"type":395,"tag":698,"props":1849,"children":1850},{"__ignoreMap":389},[1851,1902,1933,2002,2058,2065,2101],{"type":395,"tag":816,"props":1852,"children":1853},{"class":818,"line":819},[1854,1858,1863,1867,1872,1876,1881,1885,1889,1894,1898],{"type":395,"tag":816,"props":1855,"children":1856},{"style":823},[1857],{"type":401,"value":973},{"type":395,"tag":816,"props":1859,"children":1860},{"style":976},[1861],{"type":401,"value":1862}," iframe",{"type":395,"tag":816,"props":1864,"children":1865},{"style":895},[1866],{"type":401,"value":898},{"type":395,"tag":816,"props":1868,"children":1869},{"style":890},[1870],{"type":401,"value":1871}," document",{"type":395,"tag":816,"props":1873,"children":1874},{"style":835},[1875],{"type":401,"value":495},{"type":395,"tag":816,"props":1877,"children":1878},{"style":829},[1879],{"type":401,"value":1880},"createElement",{"type":395,"tag":816,"props":1882,"children":1883},{"style":890},[1884],{"type":401,"value":838},{"type":395,"tag":816,"props":1886,"children":1887},{"style":999},[1888],{"type":401,"value":1002},{"type":395,"tag":816,"props":1890,"children":1891},{"style":1005},[1892],{"type":401,"value":1893},"iframe",{"type":395,"tag":816,"props":1895,"children":1896},{"style":999},[1897],{"type":401,"value":1002},{"type":395,"tag":816,"props":1899,"children":1900},{"style":890},[1901],{"type":401,"value":1045},{"type":395,"tag":816,"props":1903,"children":1904},{"class":818,"line":876},[1905,1910,1914,1919,1923,1928],{"type":395,"tag":816,"props":1906,"children":1907},{"style":890},[1908],{"type":401,"value":1909},"document",{"type":395,"tag":816,"props":1911,"children":1912},{"style":835},[1913],{"type":401,"value":495},{"type":395,"tag":816,"props":1915,"children":1916},{"style":890},[1917],{"type":401,"value":1918},"body",{"type":395,"tag":816,"props":1920,"children":1921},{"style":835},[1922],{"type":401,"value":495},{"type":395,"tag":816,"props":1924,"children":1925},{"style":829},[1926],{"type":401,"value":1927},"appendChild",{"type":395,"tag":816,"props":1929,"children":1930},{"style":890},[1931],{"type":401,"value":1932},"(iframe)\n",{"type":395,"tag":816,"props":1934,"children":1935},{"class":818,"line":906},[1936,1941,1946,1951,1955,1960,1964,1969,1973,1978,1983,1988,1993,1997],{"type":395,"tag":816,"props":1937,"children":1938},{"style":890},[1939],{"type":401,"value":1940},"xArray ",{"type":395,"tag":816,"props":1942,"children":1943},{"style":895},[1944],{"type":401,"value":1945},"=",{"type":395,"tag":816,"props":1947,"children":1948},{"style":890},[1949],{"type":401,"value":1950}," window",{"type":395,"tag":816,"props":1952,"children":1953},{"style":835},[1954],{"type":401,"value":495},{"type":395,"tag":816,"props":1956,"children":1957},{"style":890},[1958],{"type":401,"value":1959},"frames[window",{"type":395,"tag":816,"props":1961,"children":1962},{"style":835},[1963],{"type":401,"value":495},{"type":395,"tag":816,"props":1965,"children":1966},{"style":890},[1967],{"type":401,"value":1968},"frames",{"type":395,"tag":816,"props":1970,"children":1971},{"style":835},[1972],{"type":401,"value":495},{"type":395,"tag":816,"props":1974,"children":1975},{"style":976},[1976],{"type":401,"value":1977},"length",{"type":395,"tag":816,"props":1979,"children":1980},{"style":895},[1981],{"type":401,"value":1982}," -",{"type":395,"tag":816,"props":1984,"children":1985},{"style":1037},[1986],{"type":401,"value":1987}," 1",{"type":395,"tag":816,"props":1989,"children":1990},{"style":890},[1991],{"type":401,"value":1992},"]",{"type":395,"tag":816,"props":1994,"children":1995},{"style":835},[1996],{"type":401,"value":495},{"type":395,"tag":816,"props":1998,"children":1999},{"style":890},[2000],{"type":401,"value":2001},"Array\n",{"type":395,"tag":816,"props":2003,"children":2004},{"class":818,"line":932},[2005,2009,2014,2018,2022,2027,2031,2036,2040,2045,2049,2054],{"type":395,"tag":816,"props":2006,"children":2007},{"style":823},[2008],{"type":401,"value":973},{"type":395,"tag":816,"props":2010,"children":2011},{"style":976},[2012],{"type":401,"value":2013}," xArr",{"type":395,"tag":816,"props":2015,"children":2016},{"style":895},[2017],{"type":401,"value":898},{"type":395,"tag":816,"props":2019,"children":2020},{"style":895},[2021],{"type":401,"value":988},{"type":395,"tag":816,"props":2023,"children":2024},{"style":829},[2025],{"type":401,"value":2026}," xArray",{"type":395,"tag":816,"props":2028,"children":2029},{"style":890},[2030],{"type":401,"value":838},{"type":395,"tag":816,"props":2032,"children":2033},{"style":1037},[2034],{"type":401,"value":2035},"1",{"type":395,"tag":816,"props":2037,"children":2038},{"style":835},[2039],{"type":401,"value":849},{"type":395,"tag":816,"props":2041,"children":2042},{"style":1037},[2043],{"type":401,"value":2044}," 2",{"type":395,"tag":816,"props":2046,"children":2047},{"style":835},[2048],{"type":401,"value":849},{"type":395,"tag":816,"props":2050,"children":2051},{"style":1037},[2052],{"type":401,"value":2053}," 3",{"type":395,"tag":816,"props":2055,"children":2056},{"style":890},[2057],{"type":401,"value":1045},{"type":395,"tag":816,"props":2059,"children":2060},{"class":818,"line":958},[2061],{"type":395,"tag":816,"props":2062,"children":2063},{"emptyLinePlaceholder":388},[2064],{"type":401,"value":1054},{"type":395,"tag":816,"props":2066,"children":2067},{"class":818,"line":967},[2068,2072,2076,2080,2085,2089,2093,2097],{"type":395,"tag":816,"props":2069,"children":2070},{"style":890},[2071],{"type":401,"value":1073},{"type":395,"tag":816,"props":2073,"children":2074},{"style":835},[2075],{"type":401,"value":495},{"type":395,"tag":816,"props":2077,"children":2078},{"style":829},[2079],{"type":401,"value":1082},{"type":395,"tag":816,"props":2081,"children":2082},{"style":890},[2083],{"type":401,"value":2084},"(xArr ",{"type":395,"tag":816,"props":2086,"children":2087},{"style":895},[2088],{"type":401,"value":422},{"type":395,"tag":816,"props":2090,"children":2091},{"style":1137},[2092],{"type":401,"value":2026},{"type":395,"tag":816,"props":2094,"children":2095},{"style":890},[2096],{"type":401,"value":1120},{"type":395,"tag":816,"props":2098,"children":2099},{"style":1061},[2100],{"type":401,"value":1064},{"type":395,"tag":816,"props":2102,"children":2103},{"class":818,"line":1048},[2104,2108,2112,2116,2120,2124,2129,2133],{"type":395,"tag":816,"props":2105,"children":2106},{"style":890},[2107],{"type":401,"value":1073},{"type":395,"tag":816,"props":2109,"children":2110},{"style":835},[2111],{"type":401,"value":495},{"type":395,"tag":816,"props":2113,"children":2114},{"style":829},[2115],{"type":401,"value":1082},{"type":395,"tag":816,"props":2117,"children":2118},{"style":890},[2119],{"type":401,"value":2084},{"type":395,"tag":816,"props":2121,"children":2122},{"style":895},[2123],{"type":401,"value":422},{"type":395,"tag":816,"props":2125,"children":2126},{"style":1137},[2127],{"type":401,"value":2128}," Array",{"type":395,"tag":816,"props":2130,"children":2131},{"style":890},[2132],{"type":401,"value":1120},{"type":395,"tag":816,"props":2134,"children":2135},{"style":1061},[2136],{"type":401,"value":1466},{"type":395,"tag":403,"props":2138,"children":2139},{},[2140],{"type":401,"value":2141},"因为 iframe 中的数组实例不是父窗口的 Array 的实例，所以在 xArr 的原型链上是找不到 Array 的，所以结果为 false。",{"type":395,"tag":396,"props":2143,"children":2145},{"id":2144},"objectprototypetostringcall",[2146],{"type":401,"value":427},{"type":395,"tag":403,"props":2148,"children":2149},{},[2150],{"type":401,"value":2151},"一般来说，在业务代码中，我们使用 typeof 和 instanceof 运算符判断变量的类型就足够了。虽然这两种方法都有缺陷，但是我们记住这些常见的容易混淆的地方，避免使用就可以。\n下面要介绍的是一种更精确的方法，一般会用在工具函数或者类库中，如：",{"type":395,"tag":806,"props":2153,"children":2155},{"className":808,"code":2154,"language":810,"meta":389,"style":389},"function isArray(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\nisArray([]) // true\n",[2156],{"type":395,"tag":698,"props":2157,"children":2158},{"__ignoreMap":389},[2159,2188,2256,2263],{"type":395,"tag":816,"props":2160,"children":2161},{"class":818,"line":819},[2162,2166,2171,2175,2180,2184],{"type":395,"tag":816,"props":2163,"children":2164},{"style":823},[2165],{"type":401,"value":826},{"type":395,"tag":816,"props":2167,"children":2168},{"style":829},[2169],{"type":401,"value":2170}," isArray",{"type":395,"tag":816,"props":2172,"children":2173},{"style":835},[2174],{"type":401,"value":838},{"type":395,"tag":816,"props":2176,"children":2177},{"style":841},[2178],{"type":401,"value":2179},"arr",{"type":395,"tag":816,"props":2181,"children":2182},{"style":835},[2183],{"type":401,"value":868},{"type":395,"tag":816,"props":2185,"children":2186},{"style":835},[2187],{"type":401,"value":873},{"type":395,"tag":816,"props":2189,"children":2190},{"class":818,"line":876},[2191,2196,2200,2204,2208,2212,2217,2221,2226,2230,2234,2238,2242,2246,2251],{"type":395,"tag":816,"props":2192,"children":2193},{"style":1376},[2194],{"type":401,"value":2195},"  return",{"type":395,"tag":816,"props":2197,"children":2198},{"style":1104},[2199],{"type":401,"value":1727},{"type":395,"tag":816,"props":2201,"children":2202},{"style":835},[2203],{"type":401,"value":495},{"type":395,"tag":816,"props":2205,"children":2206},{"style":976},[2207],{"type":401,"value":1115},{"type":395,"tag":816,"props":2209,"children":2210},{"style":835},[2211],{"type":401,"value":495},{"type":395,"tag":816,"props":2213,"children":2214},{"style":890},[2215],{"type":401,"value":2216},"toString",{"type":395,"tag":816,"props":2218,"children":2219},{"style":835},[2220],{"type":401,"value":495},{"type":395,"tag":816,"props":2222,"children":2223},{"style":829},[2224],{"type":401,"value":2225},"call",{"type":395,"tag":816,"props":2227,"children":2228},{"style":1493},[2229],{"type":401,"value":838},{"type":395,"tag":816,"props":2231,"children":2232},{"style":890},[2233],{"type":401,"value":2179},{"type":395,"tag":816,"props":2235,"children":2236},{"style":1493},[2237],{"type":401,"value":1120},{"type":395,"tag":816,"props":2239,"children":2240},{"style":895},[2241],{"type":401,"value":1125},{"type":395,"tag":816,"props":2243,"children":2244},{"style":999},[2245],{"type":401,"value":1021},{"type":395,"tag":816,"props":2247,"children":2248},{"style":1005},[2249],{"type":401,"value":2250},"[object Array]",{"type":395,"tag":816,"props":2252,"children":2253},{"style":999},[2254],{"type":401,"value":2255},"'\n",{"type":395,"tag":816,"props":2257,"children":2258},{"class":818,"line":906},[2259],{"type":395,"tag":816,"props":2260,"children":2261},{"style":835},[2262],{"type":401,"value":964},{"type":395,"tag":816,"props":2264,"children":2265},{"class":818,"line":932},[2266,2271,2276],{"type":395,"tag":816,"props":2267,"children":2268},{"style":829},[2269],{"type":401,"value":2270},"isArray",{"type":395,"tag":816,"props":2272,"children":2273},{"style":890},[2274],{"type":401,"value":2275},"([]) ",{"type":395,"tag":816,"props":2277,"children":2278},{"style":1061},[2279],{"type":401,"value":1064},{"type":395,"tag":403,"props":2281,"children":2282},{},[2283],{"type":401,"value":2284},"那么 Object.prototype.toString 到底能分辨几种类型呢？查阅 ES6 规范文档，可以得到其实现，如下：",{"type":395,"tag":453,"props":2286,"children":2287},{},[2288,2318,2343,2354,2365,2374,2385,2396,2407,2418,2429,2440,2451,2462,2473,2484,2495,2504,2515],{"type":395,"tag":413,"props":2289,"children":2290},{},[2291,2293,2298,2300,2304,2306,2317],{"type":401,"value":2292},"If the ",{"type":395,"tag":489,"props":2294,"children":2295},{},[2296],{"type":401,"value":2297},"this",{"type":401,"value":2299}," value is ",{"type":395,"tag":489,"props":2301,"children":2302},{},[2303],{"type":401,"value":778},{"type":401,"value":2305},", return ",{"type":395,"tag":489,"props":2307,"children":2308},{},[2309,2311,2316],{"type":401,"value":2310},"\"",{"type":395,"tag":816,"props":2312,"children":2313},{},[2314],{"type":401,"value":2315},"object Undefined",{"type":401,"value":2310},{"type":401,"value":495},{"type":395,"tag":413,"props":2319,"children":2320},{},[2321,2322,2326,2327,2331,2332,2342],{"type":401,"value":2292},{"type":395,"tag":489,"props":2323,"children":2324},{},[2325],{"type":401,"value":2297},{"type":401,"value":2299},{"type":395,"tag":489,"props":2328,"children":2329},{},[2330],{"type":401,"value":788},{"type":401,"value":2305},{"type":395,"tag":489,"props":2333,"children":2334},{},[2335,2336,2341],{"type":401,"value":2310},{"type":395,"tag":816,"props":2337,"children":2338},{},[2339],{"type":401,"value":2340},"object Null",{"type":401,"value":2310},{"type":401,"value":495},{"type":395,"tag":413,"props":2344,"children":2345},{},[2346,2348,2353],{"type":401,"value":2347},"Let O be ",{"type":395,"tag":467,"props":2349,"children":2350},{},[2351],{"type":401,"value":2352},"ToObject(this value)",{"type":401,"value":495},{"type":395,"tag":413,"props":2355,"children":2356},{},[2357,2359,2364],{"type":401,"value":2358},"Let isArray be ",{"type":395,"tag":467,"props":2360,"children":2361},{},[2362],{"type":401,"value":2363},"IsArray(O)",{"type":401,"value":495},{"type":395,"tag":413,"props":2366,"children":2367},{},[2368,2373],{"type":395,"tag":467,"props":2369,"children":2370},{},[2371],{"type":401,"value":2372},"ReturnIfAbrupt(isArray)",{"type":401,"value":495},{"type":395,"tag":413,"props":2375,"children":2376},{},[2377,2379,2384],{"type":401,"value":2378},"If isArray is true, let builtinTag be ",{"type":395,"tag":489,"props":2380,"children":2381},{},[2382],{"type":401,"value":2383},"\"Array\"",{"type":401,"value":495},{"type":395,"tag":413,"props":2386,"children":2387},{},[2388,2390,2395],{"type":401,"value":2389},"Else, if O is an exotic String object, let builtinTag be ",{"type":395,"tag":489,"props":2391,"children":2392},{},[2393],{"type":401,"value":2394},"\"String\"",{"type":401,"value":495},{"type":395,"tag":413,"props":2397,"children":2398},{},[2399,2401,2406],{"type":401,"value":2400},"Else, if O has an [[ParameterMap]] internal slot, let builtinTag be ",{"type":395,"tag":489,"props":2402,"children":2403},{},[2404],{"type":401,"value":2405},"\"Arguments\"",{"type":401,"value":495},{"type":395,"tag":413,"props":2408,"children":2409},{},[2410,2412,2417],{"type":401,"value":2411},"Else, if O has a [[Call]] internal method, let builtinTag be ",{"type":395,"tag":489,"props":2413,"children":2414},{},[2415],{"type":401,"value":2416},"\"Function\"",{"type":401,"value":495},{"type":395,"tag":413,"props":2419,"children":2420},{},[2421,2423,2428],{"type":401,"value":2422},"Else, if O has an [[ErrorData]] internal slot, let builtinTag be ",{"type":395,"tag":489,"props":2424,"children":2425},{},[2426],{"type":401,"value":2427},"\"Error\"",{"type":401,"value":495},{"type":395,"tag":413,"props":2430,"children":2431},{},[2432,2434,2439],{"type":401,"value":2433},"Else, if O has a [[BooleanData]] internal slot, let builtinTag be ",{"type":395,"tag":489,"props":2435,"children":2436},{},[2437],{"type":401,"value":2438},"\"Boolean\"",{"type":401,"value":495},{"type":395,"tag":413,"props":2441,"children":2442},{},[2443,2445,2450],{"type":401,"value":2444},"Else, if O has a [[NumberData]] internal slot, let builtinTag be ",{"type":395,"tag":489,"props":2446,"children":2447},{},[2448],{"type":401,"value":2449},"\"Number\"",{"type":401,"value":495},{"type":395,"tag":413,"props":2452,"children":2453},{},[2454,2456,2461],{"type":401,"value":2455},"Else, if O has a [[DateValue]] internal slot, let builtinTag be ",{"type":395,"tag":489,"props":2457,"children":2458},{},[2459],{"type":401,"value":2460},"\"Date\"",{"type":401,"value":495},{"type":395,"tag":413,"props":2463,"children":2464},{},[2465,2467,2472],{"type":401,"value":2466},"Else, if O has a [[RegExpMatcher]] internal slot, let builtinTag be ",{"type":395,"tag":489,"props":2468,"children":2469},{},[2470],{"type":401,"value":2471},"\"RegExp\"",{"type":401,"value":495},{"type":395,"tag":413,"props":2474,"children":2475},{},[2476,2478,2483],{"type":401,"value":2477},"Else, let builtinTag be ",{"type":395,"tag":489,"props":2479,"children":2480},{},[2481],{"type":401,"value":2482},"\"Object\"",{"type":401,"value":495},{"type":395,"tag":413,"props":2485,"children":2486},{},[2487,2489,2494],{"type":401,"value":2488},"Let tag be ",{"type":395,"tag":467,"props":2490,"children":2491},{},[2492],{"type":401,"value":2493},"Get(O, @@toStringTag)",{"type":401,"value":495},{"type":395,"tag":413,"props":2496,"children":2497},{},[2498,2503],{"type":395,"tag":467,"props":2499,"children":2500},{},[2501],{"type":401,"value":2502},"ReturnIfAbrupt(tag)",{"type":401,"value":495},{"type":395,"tag":413,"props":2505,"children":2506},{},[2507,2508,2513],{"type":401,"value":465},{"type":395,"tag":467,"props":2509,"children":2510},{},[2511],{"type":401,"value":2512},"Type(tag)",{"type":401,"value":2514}," is not String, let tag be builtinTag.",{"type":395,"tag":413,"props":2516,"children":2517},{},[2518,2520,2530],{"type":401,"value":2519},"Return the String that is the result of concatenating ",{"type":395,"tag":489,"props":2521,"children":2522},{},[2523,2524,2529],{"type":401,"value":2310},{"type":395,"tag":816,"props":2525,"children":2526},{},[2527],{"type":401,"value":2528},"object \"**, tag, and **\"",{"type":401,"value":2310},{"type":401,"value":495},{"type":395,"tag":403,"props":2532,"children":2533},{},[2534],{"type":401,"value":2535},"细数下来，Object.prototype.toString 不仅可以区分 Object、Function、Date、RegExp 等常见对象，它还能区分 Error、Arguments 等，见下代码：",{"type":395,"tag":806,"props":2537,"children":2539},{"className":808,"code":2538,"language":810,"meta":389,"style":389},";(function() {\n  console.log(\n    typeof arguments, // 'object'\n    Object.prototype.toString.call(arguments) // '[object Arguments]'\n  )\n})()\n",[2540],{"type":395,"tag":698,"props":2541,"children":2542},{"__ignoreMap":389},[2543,2567,2587,2610,2660,2668],{"type":395,"tag":816,"props":2544,"children":2545},{"class":818,"line":819},[2546,2550,2554,2558,2563],{"type":395,"tag":816,"props":2547,"children":2548},{"style":835},[2549],{"type":401,"value":1282},{"type":395,"tag":816,"props":2551,"children":2552},{"style":890},[2553],{"type":401,"value":838},{"type":395,"tag":816,"props":2555,"children":2556},{"style":823},[2557],{"type":401,"value":826},{"type":395,"tag":816,"props":2559,"children":2560},{"style":835},[2561],{"type":401,"value":2562},"()",{"type":395,"tag":816,"props":2564,"children":2565},{"style":835},[2566],{"type":401,"value":873},{"type":395,"tag":816,"props":2568,"children":2569},{"class":818,"line":876},[2570,2575,2579,2583],{"type":395,"tag":816,"props":2571,"children":2572},{"style":890},[2573],{"type":401,"value":2574},"  console",{"type":395,"tag":816,"props":2576,"children":2577},{"style":835},[2578],{"type":401,"value":495},{"type":395,"tag":816,"props":2580,"children":2581},{"style":829},[2582],{"type":401,"value":1082},{"type":395,"tag":816,"props":2584,"children":2585},{"style":1493},[2586],{"type":401,"value":1625},{"type":395,"tag":816,"props":2588,"children":2589},{"class":818,"line":906},[2590,2595,2601,2605],{"type":395,"tag":816,"props":2591,"children":2592},{"style":895},[2593],{"type":401,"value":2594},"    typeof",{"type":395,"tag":816,"props":2596,"children":2598},{"style":2597},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[2599],{"type":401,"value":2600}," arguments",{"type":395,"tag":816,"props":2602,"children":2603},{"style":835},[2604],{"type":401,"value":849},{"type":395,"tag":816,"props":2606,"children":2607},{"style":1061},[2608],{"type":401,"value":2609}," // 'object'\n",{"type":395,"tag":816,"props":2611,"children":2612},{"class":818,"line":932},[2613,2618,2622,2626,2630,2634,2638,2642,2646,2651,2655],{"type":395,"tag":816,"props":2614,"children":2615},{"style":1104},[2616],{"type":401,"value":2617},"    Object",{"type":395,"tag":816,"props":2619,"children":2620},{"style":835},[2621],{"type":401,"value":495},{"type":395,"tag":816,"props":2623,"children":2624},{"style":976},[2625],{"type":401,"value":1115},{"type":395,"tag":816,"props":2627,"children":2628},{"style":835},[2629],{"type":401,"value":495},{"type":395,"tag":816,"props":2631,"children":2632},{"style":890},[2633],{"type":401,"value":2216},{"type":395,"tag":816,"props":2635,"children":2636},{"style":835},[2637],{"type":401,"value":495},{"type":395,"tag":816,"props":2639,"children":2640},{"style":829},[2641],{"type":401,"value":2225},{"type":395,"tag":816,"props":2643,"children":2644},{"style":1493},[2645],{"type":401,"value":838},{"type":395,"tag":816,"props":2647,"children":2648},{"style":2597},[2649],{"type":401,"value":2650},"arguments",{"type":395,"tag":816,"props":2652,"children":2653},{"style":1493},[2654],{"type":401,"value":1120},{"type":395,"tag":816,"props":2656,"children":2657},{"style":1061},[2658],{"type":401,"value":2659},"// '[object Arguments]'\n",{"type":395,"tag":816,"props":2661,"children":2662},{"class":818,"line":958},[2663],{"type":395,"tag":816,"props":2664,"children":2665},{"style":1493},[2666],{"type":401,"value":2667},"  )\n",{"type":395,"tag":816,"props":2669,"children":2670},{"class":818,"line":967},[2671,2676],{"type":395,"tag":816,"props":2672,"children":2673},{"style":835},[2674],{"type":401,"value":2675},"}",{"type":395,"tag":816,"props":2677,"children":2678},{"style":890},[2679],{"type":401,"value":2680},")()\n",{"type":395,"tag":688,"props":2682,"children":2684},{"id":2683},"如何扩展",[2685],{"type":401,"value":2683},{"type":395,"tag":403,"props":2687,"children":2688},{},[2689],{"type":401,"value":2690},"可以通过 Symbol.toStringTag 对已有对象的内置标签进行修改。这样就可以不需要通过构造函数的方法来分辨程序中不同种类的新对象。如下代码：",{"type":395,"tag":806,"props":2692,"children":2694},{"className":808,"code":2693,"language":810,"meta":389,"style":389},"var a = {}\na[Symbol.toStringTag] = '1234'\nObject.prototype.toString.call(a)\n// >>> \"[object 1234]\"\n",[2695],{"type":395,"tag":698,"props":2696,"children":2697},{"__ignoreMap":389},[2698,2720,2754,2791],{"type":395,"tag":816,"props":2699,"children":2700},{"class":818,"line":819},[2701,2706,2711,2715],{"type":395,"tag":816,"props":2702,"children":2703},{"style":823},[2704],{"type":401,"value":2705},"var",{"type":395,"tag":816,"props":2707,"children":2708},{"style":890},[2709],{"type":401,"value":2710}," a ",{"type":395,"tag":816,"props":2712,"children":2713},{"style":895},[2714],{"type":401,"value":1945},{"type":395,"tag":816,"props":2716,"children":2717},{"style":835},[2718],{"type":401,"value":2719}," {}\n",{"type":395,"tag":816,"props":2721,"children":2722},{"class":818,"line":876},[2723,2728,2732,2737,2741,2745,2750],{"type":395,"tag":816,"props":2724,"children":2725},{"style":890},[2726],{"type":401,"value":2727},"a[Symbol",{"type":395,"tag":816,"props":2729,"children":2730},{"style":835},[2731],{"type":401,"value":495},{"type":395,"tag":816,"props":2733,"children":2734},{"style":890},[2735],{"type":401,"value":2736},"toStringTag] ",{"type":395,"tag":816,"props":2738,"children":2739},{"style":895},[2740],{"type":401,"value":1945},{"type":395,"tag":816,"props":2742,"children":2743},{"style":999},[2744],{"type":401,"value":1021},{"type":395,"tag":816,"props":2746,"children":2747},{"style":1005},[2748],{"type":401,"value":2749},"1234",{"type":395,"tag":816,"props":2751,"children":2752},{"style":999},[2753],{"type":401,"value":2255},{"type":395,"tag":816,"props":2755,"children":2756},{"class":818,"line":906},[2757,2762,2766,2770,2774,2778,2782,2786],{"type":395,"tag":816,"props":2758,"children":2759},{"style":1104},[2760],{"type":401,"value":2761},"Object",{"type":395,"tag":816,"props":2763,"children":2764},{"style":835},[2765],{"type":401,"value":495},{"type":395,"tag":816,"props":2767,"children":2768},{"style":976},[2769],{"type":401,"value":1115},{"type":395,"tag":816,"props":2771,"children":2772},{"style":835},[2773],{"type":401,"value":495},{"type":395,"tag":816,"props":2775,"children":2776},{"style":890},[2777],{"type":401,"value":2216},{"type":395,"tag":816,"props":2779,"children":2780},{"style":835},[2781],{"type":401,"value":495},{"type":395,"tag":816,"props":2783,"children":2784},{"style":829},[2785],{"type":401,"value":2225},{"type":395,"tag":816,"props":2787,"children":2788},{"style":890},[2789],{"type":401,"value":2790},"(a)\n",{"type":395,"tag":816,"props":2792,"children":2793},{"class":818,"line":932},[2794],{"type":395,"tag":816,"props":2795,"children":2796},{"style":1061},[2797],{"type":401,"value":2798},"// >>> \"[object 1234]\"\n",{"type":395,"tag":688,"props":2800,"children":2802},{"id":2801},"缺陷所在",[2803],{"type":401,"value":2801},{"type":395,"tag":403,"props":2805,"children":2806},{},[2807],{"type":401,"value":2808},"JS 中的对象，按照执行环境来划分可以分为内置对象（Build-In Object）和宿主对象（Host Object），如 Window、History 就是执行环境（浏览器）提供的对象。\n缺陷呢，往往就存在于规范中没有被定义的行为。\n比如，Window 对象的 Symbol.toString 是浏览器定义的行为，而且往往不同浏览器，实现还不一样。",{"type":395,"tag":806,"props":2810,"children":2812},{"className":808,"code":2811,"language":810,"meta":389,"style":389},"Window.toString()\n// [object Window] ?\n// [object Object] ?\n// [object DOMWindow] ?\n// [object global] ? (这个尤其为叛徒，第一个字母居然是小写的)\n",[2813],{"type":395,"tag":698,"props":2814,"children":2815},{"__ignoreMap":389},[2816,2837,2845,2853,2861],{"type":395,"tag":816,"props":2817,"children":2818},{"class":818,"line":819},[2819,2824,2828,2832],{"type":395,"tag":816,"props":2820,"children":2821},{"style":890},[2822],{"type":401,"value":2823},"Window",{"type":395,"tag":816,"props":2825,"children":2826},{"style":835},[2827],{"type":401,"value":495},{"type":395,"tag":816,"props":2829,"children":2830},{"style":829},[2831],{"type":401,"value":2216},{"type":395,"tag":816,"props":2833,"children":2834},{"style":890},[2835],{"type":401,"value":2836},"()\n",{"type":395,"tag":816,"props":2838,"children":2839},{"class":818,"line":876},[2840],{"type":395,"tag":816,"props":2841,"children":2842},{"style":1061},[2843],{"type":401,"value":2844},"// [object Window] ?\n",{"type":395,"tag":816,"props":2846,"children":2847},{"class":818,"line":906},[2848],{"type":395,"tag":816,"props":2849,"children":2850},{"style":1061},[2851],{"type":401,"value":2852},"// [object Object] ?\n",{"type":395,"tag":816,"props":2854,"children":2855},{"class":818,"line":932},[2856],{"type":395,"tag":816,"props":2857,"children":2858},{"style":1061},[2859],{"type":401,"value":2860},"// [object DOMWindow] ?\n",{"type":395,"tag":816,"props":2862,"children":2863},{"class":818,"line":958},[2864],{"type":395,"tag":816,"props":2865,"children":2866},{"style":1061},[2867],{"type":401,"value":2868},"// [object global] ? (这个尤其为叛徒，第一个字母居然是小写的)\n",{"type":395,"tag":403,"props":2870,"children":2871},{},[2872],{"type":395,"tag":489,"props":2873,"children":2874},{},[2875],{"type":401,"value":2876},"(￣ ▽ ￣)\" 害。",{"type":395,"tag":396,"props":2878,"children":2880},{"id":2879},"最后",[2881],{"type":401,"value":2879},{"type":395,"tag":403,"props":2883,"children":2884},{},[2885],{"type":401,"value":2886},"想不到吧，JS 类型判断这个问题居然没有完美的解法，每种解法都有缺陷。",{"type":395,"tag":403,"props":2888,"children":2889},{},[2890],{"type":401,"value":2891},"那么我们平常写代码到底用哪种呢？",{"type":395,"tag":403,"props":2893,"children":2894},{},[2895],{"type":401,"value":2896},"虽然我刚才提到“业务代码可以使用 typeof 或 instanceof，库和工具函数等需要更精准的情况则用 Object.prototype.toString”，但是，这并不是绝对的。\n我们仔细思考一下这三种方法的本质：",{"type":395,"tag":409,"props":2898,"children":2899},{},[2900,2905,2910],{"type":395,"tag":413,"props":2901,"children":2902},{},[2903],{"type":401,"value":2904},"typeof 根据最小三位字节判断变量类型",{"type":395,"tag":413,"props":2906,"children":2907},{},[2908],{"type":401,"value":2909},"instanceof 根据原型链判断",{"type":395,"tag":413,"props":2911,"children":2912},{},[2913],{"type":401,"value":2914},"Object.prototype.toString 主要是根据对象的内置标签（Build-In Tag）判断",{"type":395,"tag":403,"props":2916,"children":2917},{},[2918],{"type":401,"value":2919},"那么熟记这三条规则，写代码时就能游刃有余了。",{"type":395,"tag":403,"props":2921,"children":2922},{},[2923],{"type":401,"value":2924},"感谢看到结尾，如有错误请务必指正，十分感谢。如果喜欢请点赞、投币、关注三连吧！我是 Lionad，爱你萌！",{"type":395,"tag":396,"props":2926,"children":2928},{"id":2927},"阅读更多",[2929],{"type":401,"value":2927},{"type":395,"tag":409,"props":2931,"children":2932},{},[2933,2945,2955,2965,2975],{"type":395,"tag":413,"props":2934,"children":2935},{},[2936],{"type":395,"tag":2937,"props":2938,"children":2942},"a",{"href":2939,"rel":2940},"https://book.douban.com/subject/27133542/",[2941],"nofollow",[2943],{"type":401,"value":2944},"《JavaScript 框架设计》",{"type":395,"tag":413,"props":2946,"children":2947},{},[2948],{"type":395,"tag":2937,"props":2949,"children":2952},{"href":2950,"rel":2951},"https://justjavac.com/javascript/2012/12/23/what-is-javascripts-typeof-operator-used-for.html",[2941],[2953],{"type":401,"value":2954},"JavaScript 的 typeof 的用途",{"type":395,"tag":413,"props":2956,"children":2957},{},[2958],{"type":395,"tag":2937,"props":2959,"children":2962},{"href":2960,"rel":2961},"https://2ality.com/2013/10/typeof-null.html",[2941],[2963],{"type":401,"value":2964},"The history of “typeof null”",{"type":395,"tag":413,"props":2966,"children":2967},{},[2968],{"type":395,"tag":2937,"props":2969,"children":2972},{"href":2970,"rel":2971},"http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator",[2941],[2973],{"type":401,"value":2974},"ECMAScript® 2015 Language Specification",{"type":395,"tag":413,"props":2976,"children":2977},{},[2978],{"type":395,"tag":2937,"props":2979,"children":2982},{"href":2980,"rel":2981},"https://juejin.im/post/5b0b9b9051882515773ae714",[2941],[2983],{"type":401,"value":2984},"instanceof 和 typeof 原理",{"type":395,"tag":2986,"props":2987,"children":2988},"style",{},[2989],{"type":401,"value":2990},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":389,"searchDepth":876,"depth":876,"links":2992},[2993,2994,2998,3002,3006,3007],{"id":398,"depth":876,"text":398},{"id":417,"depth":876,"text":417,"children":2995},[2996,2997],{"id":681,"depth":906,"text":681},{"id":726,"depth":906,"text":729},{"id":422,"depth":876,"text":422,"children":2999},[3000,3001],{"id":1591,"depth":906,"text":1591},{"id":1588,"depth":906,"text":1588},{"id":2144,"depth":876,"text":427,"children":3003},[3004,3005],{"id":2683,"depth":906,"text":2683},{"id":2801,"depth":906,"text":2801},{"id":2879,"depth":876,"text":2879},{"id":2927,"depth":876,"text":2927},"markdown","content:_achieved:2020-05:type-check.md","content","_achieved/2020-05/type-check.md","_achieved/2020-05/type-check","md",[3015,3018],{"_path":3016,"title":3017,"description":389},"/_achieved/2020-05/js-module-history","JS 模块化简史",{"_path":3019,"title":3020,"description":389},"/_achieved/2020-06/punctuations","✒️ 关于标点的那些事儿",1741914077213]