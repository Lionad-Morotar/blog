[{"data":1,"prerenderedAt":3297},["Reactive",2],{"navigation":3,"/_archieved/2019-05/reactive-in-150loc":386,"/_archieved/2019-05/reactive-in-150loc-surround":3290},[4,32,80,96,123,129,135,369,375,381],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"Bit","/gists/bit",{"title":148,"_path":149},"图片模糊","/gists/blur",{"title":151,"_path":152},"渲染相关笔记","/gists/c4d",{"title":154,"_path":155},"CDN 问题记录","/gists/cdn",{"title":157,"_path":158},"消毒剂","/gists/cleaner",{"title":160,"_path":161},"Windows Command","/gists/cmd",{"title":163,"_path":164},"Command","/gists/command",{"title":166,"_path":167},"复杂科学","/gists/complexity-science",{"title":169,"_path":170},"宇宙","/gists/cosmos",{"title":172,"_path":173},"C++","/gists/cpp",{"title":175,"_path":176},"Data Structure","/gists/data-structure",{"title":178,"_path":179},"DEPRESSION","/gists/depression",{"title":181,"_path":182},"设计模式","/gists/design-patterns",{"title":184,"_path":185},"Developer Experience","/gists/developer-experience",{"title":187,"_path":188},"Device Metrics","/gists/device-metrix",{"title":190,"_path":191},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":193,"_path":194},"正则表达式","/gists/eegex",{"title":196,"_path":197},"Emoji","/gists/emoji",{"title":199,"_path":200},"工程","/gists/engineering",{"title":202,"_path":203},"熵","/gists/entropy",{"title":205,"_path":206},"Environment","/gists/environment",{"title":208,"_path":209},"Erlang","/gists/erlang",{"title":211,"_path":212},"逃离塔克夫","/gists/escape-from-tarkov",{"title":214,"_path":215},"ESNext (ES6-ES11)","/gists/esnext",{"title":217,"_path":218},"Eval！","/gists/eval",{"title":220,"_path":221},"Flutter","/gists/flutter",{"title":223,"_path":224},"字体","/gists/font",{"title":226,"_path":227},"JS 函数式编程","/gists/functional",{"title":229,"_path":230},"Google C++ Standard","/gists/google-cpp-standard",{"title":232,"_path":233},"双向链接完全体","/gists/graph",{"title":235,"_path":236},"Hardwares","/gists/hardwares",{"title":238,"_path":239},"哈希冲突","/gists/hash-collision",{"title":241,"_path":242},"信息设计","/gists/information-design",{"title":244,"_path":245},"InstantPage","/gists/instant.page",{"title":247,"_path":248},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":250,"_path":251},"KVStore","/gists/key-value-db",{"title":253,"_path":254},"Kubernetes","/gists/kubernetes",{"title":256,"_path":257},"Makefile","/gists/makefile",{"title":259,"_path":260},"Markdown Inline Style","/gists/markdown-nice",{"title":262,"_path":263},"小程序","/gists/miniapp",{"title":265,"_path":266},"减小页面快照体积","/gists/minify-html",{"title":268,"_path":269},"mklink","/gists/mklink",{"title":271,"_path":272},"Mock","/gists/mock",{"title":274,"_path":275},"多端应用","/gists/multy-end-app",{"title":277,"_path":278},"神经科学","/gists/neuroscience",{"title":280,"_path":281},"OO","/gists/oo",{"title":283,"_path":284},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":286,"_path":287},"人物","/gists/person",{"title":289,"_path":290},"PInvoke","/gists/pinvoke",{"title":292,"_path":293},"像素","/gists/pixel",{"title":295,"_path":296},"PowerShell","/gists/powershell",{"title":298,"_path":299},"量子","/gists/quantum",{"title":301,"_path":302},"保持好奇心","/gists/questions",{"title":304,"_path":305},"React Native","/gists/react-native",{"title":307,"_path":308},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":310,"_path":311},"SEO","/gists/seo",{"title":313,"_path":314},"Shader","/gists/shader",{"title":316,"_path":317},"Shape Up","/gists/shape-up",{"title":319,"_path":320},"睡觉","/gists/sleep",{"title":322,"_path":323},"States","/gists/states",{"title":325,"_path":326},"Storage","/gists/storage",{"title":328,"_path":329},"音视频流处理","/gists/stream-cli",{"title":331,"_path":332},"Symbol","/gists/symbol",{"title":334,"_path":335},"系统论","/gists/systems-theory",{"title":337,"_path":338},"Taro","/gists/taro",{"title":340,"_path":341},"任务切片","/gists/task-slice",{"title":343,"_path":344},"技术偏好","/gists/tech-dudge",{"title":346,"_path":347},"Untitled","/gists/untitled",{"title":349,"_path":350},"可变字体","/gists/variable-font",{"title":352,"_path":353},"视觉错觉","/gists/visual-illusion",{"title":355,"_path":356},"SS(SSR)","/gists/vpn",{"title":358,"_path":359},"VS Code 插件开发","/gists/vscode-plugin",{"title":361,"_path":362},"Web Components","/gists/web-components",{"title":364,"_path":365},"Windows","/gists/windows",{"title":367,"_path":368},"查缺补漏","/gists/wrong",{"title":370,"_path":371,"children":372},"代码笔记 / Gists","/source-code",[373],{"title":374,"_path":371},"🚄 代码笔记",{"title":376,"_path":377,"children":378},"我 / Abount","/hire",[379],{"title":380,"_path":377},"📬 技术简历",{"title":382,"_path":383,"children":384},"todo","/todo",[385],{"title":382,"_path":383},{"_path":387,"_dir":388,"_draft":389,"_partial":390,"_locale":391,"title":392,"description":393,"body":394,"_type":3285,"_id":3286,"_source":3287,"_file":3288,"_extension":3289},"/_archieved/2019-05/reactive-in-150loc","2019-05",false,true,"","🚀 150 行代码带你实现小程序中的数据侦听","本文介绍了在 150 行代码内使用 defineProperty 实现一个简单的拥有事件发布订阅能力的状态管理库的思路。",{"type":395,"children":396,"toc":3263},"root",[397,405,420,425,500,513,518,523,528,533,546,653,666,671,678,690,836,841,983,988,993,998,1189,1212,1217,1223,1228,1233,1242,1247,1255,1261,1266,1334,1339,1344,1845,1850,1879,2155,2161,2174,2286,2299,2312,2499,2504,2509,2514,2519,2532,2723,2728,2734,2739,2744,2803,2809,2814,3049,3087,3099,3233,3238,3243,3257],{"type":398,"tag":399,"props":400,"children":402},"element","h2",{"id":401},"前言",[403],{"type":404,"value":401},"text",{"type":398,"tag":406,"props":407,"children":408},"p",{},[409,411,418],{"type":404,"value":410},"在小程序项目中, 我们的通常会使用到使用到一个全局对象作为各个页面通用的数据存储容器, 将它绑定到 app 对象后, 就能在每一个页面都自由的操纵这个对象. 然而在实践中, 由于这个对象及其属性不具备响应式条件, 它不能直接参与业务逻辑的编写, 能力仅仅局限于数据储存. 若是在 VueJS 项目中, 我们可能经常使用到",{"type":398,"tag":412,"props":413,"children":415},"code",{"className":414},[],[416],{"type":404,"value":417},"Vue.$watch",{"type":404,"value":419},"去侦听某个数据是否发生变化, 小程序却缺乏这种能力.",{"type":398,"tag":406,"props":421,"children":422},{},[423],{"type":404,"value":424},"在这篇文章中, 我将用 150 行代码, 手把手带你打造一个小程序也可以使用的侦听器(下简称 VX):",{"type":398,"tag":426,"props":427,"children":431},"pre",{"className":428,"code":429,"language":430,"meta":391,"style":391},"language-JS shiki shiki-themes material-theme-lighter github-light github-dark monokai","// 一个快速赋值的语法糖函数, 可以创建结构为 { value: a { b: { val: ''} } } 的对象\nvx.set('value.a.d', { val: '' })\n// 对某个属性进行侦听, 如果发生改变, 则执行相应函数(可多次watch以执行多个函数)\nvx.watch('value.a.d.val', newVal => {\n  console.log(`val改变为 : `, newVal)\n})\nvalue.a.d.val = 3 // val改编为 : 3\n","JS",[432],{"type":398,"tag":412,"props":433,"children":434},{"__ignoreMap":391},[435,446,455,464,473,482,491],{"type":398,"tag":436,"props":437,"children":440},"span",{"class":438,"line":439},"line",1,[441],{"type":398,"tag":436,"props":442,"children":443},{},[444],{"type":404,"value":445},"// 一个快速赋值的语法糖函数, 可以创建结构为 { value: a { b: { val: ''} } } 的对象\n",{"type":398,"tag":436,"props":447,"children":449},{"class":438,"line":448},2,[450],{"type":398,"tag":436,"props":451,"children":452},{},[453],{"type":404,"value":454},"vx.set('value.a.d', { val: '' })\n",{"type":398,"tag":436,"props":456,"children":458},{"class":438,"line":457},3,[459],{"type":398,"tag":436,"props":460,"children":461},{},[462],{"type":404,"value":463},"// 对某个属性进行侦听, 如果发生改变, 则执行相应函数(可多次watch以执行多个函数)\n",{"type":398,"tag":436,"props":465,"children":467},{"class":438,"line":466},4,[468],{"type":398,"tag":436,"props":469,"children":470},{},[471],{"type":404,"value":472},"vx.watch('value.a.d.val', newVal => {\n",{"type":398,"tag":436,"props":474,"children":476},{"class":438,"line":475},5,[477],{"type":398,"tag":436,"props":478,"children":479},{},[480],{"type":404,"value":481},"  console.log(`val改变为 : `, newVal)\n",{"type":398,"tag":436,"props":483,"children":485},{"class":438,"line":484},6,[486],{"type":398,"tag":436,"props":487,"children":488},{},[489],{"type":404,"value":490},"})\n",{"type":398,"tag":436,"props":492,"children":494},{"class":438,"line":493},7,[495],{"type":398,"tag":436,"props":496,"children":497},{},[498],{"type":404,"value":499},"value.a.d.val = 3 // val改编为 : 3\n",{"type":398,"tag":406,"props":501,"children":502},{},[503,505,511],{"type":404,"value":504},"使用 VX 侦听器, 我们可以更加方便的管理各个页面的状态. 同时, 我们凭借",{"type":398,"tag":412,"props":506,"children":508},{"className":507},[],[509],{"type":404,"value":510},"watch",{"type":404,"value":512},"语法, 可以更优雅地编写业务逻辑.",{"type":398,"tag":406,"props":514,"children":515},{},[516],{"type":404,"value":517},"坐稳了, 三轮车准备启动了~ 各位评论见~ 😋",{"type":398,"tag":399,"props":519,"children":521},{"id":520},"稍微理一理思路",[522],{"type":404,"value":520},{"type":398,"tag":406,"props":524,"children":525},{},[526],{"type":404,"value":527},"在全局对象中, 我们不一定要对每一个属性都进行侦听, 所以 VX 主要的功能就是通过 set 去设置某个具体属性的 setter/getter, 同时通过 watch 向添加该属性添加需要订阅的回调函数.",{"type":398,"tag":399,"props":529,"children":531},{"id":530},"依赖对象的实现",[532],{"type":404,"value":530},{"type":398,"tag":406,"props":534,"children":535},{},[536,538,544],{"type":404,"value":537},"首先我们需要造一个通用的",{"type":398,"tag":539,"props":540,"children":541},"strong",{},[542],{"type":404,"value":543},"依赖对象",{"type":404,"value":545},", 依赖对象携带一个订阅数组用于存放一组回调函数, 同时它还应该包括一些操作订阅数组能力(如添加订阅, 清空订阅)的函数",{"type":398,"tag":426,"props":547,"children":549},{"className":428,"code":548,"language":430,"meta":391,"style":391},"class Dep {\n  constructor () {\n    this.subs = []\n  }\n  // 将回调添加到数组中\n  addSub (fn) { /*...*/ }\n  delSub (fn) { /*...*/ }\n  // 执行数组中每一项函数\n  notify (newVal, oldVal) {\n    this.subs.forEach(func => func(newVal, oldVal))\n  }\n}\n",[550],{"type":398,"tag":412,"props":551,"children":552},{"__ignoreMap":391},[553,561,569,577,585,593,601,609,618,627,636,644],{"type":398,"tag":436,"props":554,"children":555},{"class":438,"line":439},[556],{"type":398,"tag":436,"props":557,"children":558},{},[559],{"type":404,"value":560},"class Dep {\n",{"type":398,"tag":436,"props":562,"children":563},{"class":438,"line":448},[564],{"type":398,"tag":436,"props":565,"children":566},{},[567],{"type":404,"value":568},"  constructor () {\n",{"type":398,"tag":436,"props":570,"children":571},{"class":438,"line":457},[572],{"type":398,"tag":436,"props":573,"children":574},{},[575],{"type":404,"value":576},"    this.subs = []\n",{"type":398,"tag":436,"props":578,"children":579},{"class":438,"line":466},[580],{"type":398,"tag":436,"props":581,"children":582},{},[583],{"type":404,"value":584},"  }\n",{"type":398,"tag":436,"props":586,"children":587},{"class":438,"line":475},[588],{"type":398,"tag":436,"props":589,"children":590},{},[591],{"type":404,"value":592},"  // 将回调添加到数组中\n",{"type":398,"tag":436,"props":594,"children":595},{"class":438,"line":484},[596],{"type":398,"tag":436,"props":597,"children":598},{},[599],{"type":404,"value":600},"  addSub (fn) { /*...*/ }\n",{"type":398,"tag":436,"props":602,"children":603},{"class":438,"line":493},[604],{"type":398,"tag":436,"props":605,"children":606},{},[607],{"type":404,"value":608},"  delSub (fn) { /*...*/ }\n",{"type":398,"tag":436,"props":610,"children":612},{"class":438,"line":611},8,[613],{"type":398,"tag":436,"props":614,"children":615},{},[616],{"type":404,"value":617},"  // 执行数组中每一项函数\n",{"type":398,"tag":436,"props":619,"children":621},{"class":438,"line":620},9,[622],{"type":398,"tag":436,"props":623,"children":624},{},[625],{"type":404,"value":626},"  notify (newVal, oldVal) {\n",{"type":398,"tag":436,"props":628,"children":630},{"class":438,"line":629},10,[631],{"type":398,"tag":436,"props":632,"children":633},{},[634],{"type":404,"value":635},"    this.subs.forEach(func => func(newVal, oldVal))\n",{"type":398,"tag":436,"props":637,"children":639},{"class":438,"line":638},11,[640],{"type":398,"tag":436,"props":641,"children":642},{},[643],{"type":404,"value":584},{"type":398,"tag":436,"props":645,"children":647},{"class":438,"line":646},12,[648],{"type":398,"tag":436,"props":649,"children":650},{},[651],{"type":404,"value":652},"}\n",{"type":398,"tag":406,"props":654,"children":655},{},[656,658,664],{"type":404,"value":657},"全局对象中每一个响应式属性(及其每一个子属性), 都应该和一个新的 Dep 实例保持一一对应的关系, 这样我们进行侦听变化, 执行订阅的回调函数时, 只需要找到对应的实例执行",{"type":398,"tag":412,"props":659,"children":661},{"className":660},[],[662],{"type":404,"value":663},"notify",{"type":404,"value":665},"通知更新即可.",{"type":398,"tag":399,"props":667,"children":669},{"id":668},"设置响应式属性",[670],{"type":404,"value":668},{"type":398,"tag":672,"props":673,"children":675},"h3",{"id":674},"defineproperty",[676],{"type":404,"value":677},"defineProperty",{"type":398,"tag":406,"props":679,"children":680},{},[681,683,688],{"type":404,"value":682},"可能是因为接触 DefineProperty 要比接触 Proxy 早一些的缘故, 代码使用了前者进行响应式的实现, Object.defineProperty 方法会直接在一个对象上定义一个新属性, 这里快速过一遍",{"type":398,"tag":412,"props":684,"children":686},{"className":685},[],[687],{"type":404,"value":677},{"type":404,"value":689},"具体配置:",{"type":398,"tag":426,"props":691,"children":693},{"className":428,"code":692,"language":430,"meta":391,"style":391},"// @param obj 要在其上定义属性的对象\n// @param key 要定义或修改的属性的名称\nObject.defineProperty(obj, key, {\n  // 该属性是否能被枚举\n  enumerable: true,\n  // 该属性能否被删除\n  configurable: true,\n  // 访问该属性则会执行此方法\n  get: () => {\n    return val\n  },\n  // 修改该属性时会执行此方法\n  set: newVal => {\n    val = newVal\n  },\n  // value & writeble 不能和 getter/setter 同时出现\n})\n",[694],{"type":398,"tag":412,"props":695,"children":696},{"__ignoreMap":391},[697,705,713,721,729,737,745,753,761,769,777,785,793,802,811,819,828],{"type":398,"tag":436,"props":698,"children":699},{"class":438,"line":439},[700],{"type":398,"tag":436,"props":701,"children":702},{},[703],{"type":404,"value":704},"// @param obj 要在其上定义属性的对象\n",{"type":398,"tag":436,"props":706,"children":707},{"class":438,"line":448},[708],{"type":398,"tag":436,"props":709,"children":710},{},[711],{"type":404,"value":712},"// @param key 要定义或修改的属性的名称\n",{"type":398,"tag":436,"props":714,"children":715},{"class":438,"line":457},[716],{"type":398,"tag":436,"props":717,"children":718},{},[719],{"type":404,"value":720},"Object.defineProperty(obj, key, {\n",{"type":398,"tag":436,"props":722,"children":723},{"class":438,"line":466},[724],{"type":398,"tag":436,"props":725,"children":726},{},[727],{"type":404,"value":728},"  // 该属性是否能被枚举\n",{"type":398,"tag":436,"props":730,"children":731},{"class":438,"line":475},[732],{"type":398,"tag":436,"props":733,"children":734},{},[735],{"type":404,"value":736},"  enumerable: true,\n",{"type":398,"tag":436,"props":738,"children":739},{"class":438,"line":484},[740],{"type":398,"tag":436,"props":741,"children":742},{},[743],{"type":404,"value":744},"  // 该属性能否被删除\n",{"type":398,"tag":436,"props":746,"children":747},{"class":438,"line":493},[748],{"type":398,"tag":436,"props":749,"children":750},{},[751],{"type":404,"value":752},"  configurable: true,\n",{"type":398,"tag":436,"props":754,"children":755},{"class":438,"line":611},[756],{"type":398,"tag":436,"props":757,"children":758},{},[759],{"type":404,"value":760},"  // 访问该属性则会执行此方法\n",{"type":398,"tag":436,"props":762,"children":763},{"class":438,"line":620},[764],{"type":398,"tag":436,"props":765,"children":766},{},[767],{"type":404,"value":768},"  get: () => {\n",{"type":398,"tag":436,"props":770,"children":771},{"class":438,"line":629},[772],{"type":398,"tag":436,"props":773,"children":774},{},[775],{"type":404,"value":776},"    return val\n",{"type":398,"tag":436,"props":778,"children":779},{"class":438,"line":638},[780],{"type":398,"tag":436,"props":781,"children":782},{},[783],{"type":404,"value":784},"  },\n",{"type":398,"tag":436,"props":786,"children":787},{"class":438,"line":646},[788],{"type":398,"tag":436,"props":789,"children":790},{},[791],{"type":404,"value":792},"  // 修改该属性时会执行此方法\n",{"type":398,"tag":436,"props":794,"children":796},{"class":438,"line":795},13,[797],{"type":398,"tag":436,"props":798,"children":799},{},[800],{"type":404,"value":801},"  set: newVal => {\n",{"type":398,"tag":436,"props":803,"children":805},{"class":438,"line":804},14,[806],{"type":398,"tag":436,"props":807,"children":808},{},[809],{"type":404,"value":810},"    val = newVal\n",{"type":398,"tag":436,"props":812,"children":814},{"class":438,"line":813},15,[815],{"type":398,"tag":436,"props":816,"children":817},{},[818],{"type":404,"value":784},{"type":398,"tag":436,"props":820,"children":822},{"class":438,"line":821},16,[823],{"type":398,"tag":436,"props":824,"children":825},{},[826],{"type":404,"value":827},"  // value & writeble 不能和 getter/setter 同时出现\n",{"type":398,"tag":436,"props":829,"children":831},{"class":438,"line":830},17,[832],{"type":398,"tag":436,"props":833,"children":834},{},[835],{"type":404,"value":490},{"type":398,"tag":406,"props":837,"children":838},{},[839],{"type":404,"value":840},"通过对 defineProperty 进行上层封装, 我们可以轻松的实现在全局对象上设置响应式属性功能, 在此, 我们结合刚才定义的 Dep 对象, 将一个新的 dep 实例绑定到新增属性的 setter 中:",{"type":398,"tag":426,"props":842,"children":844},{"className":428,"code":843,"language":430,"meta":391,"style":391},"set (key, val, options = {}, obj = this.store) {\n  const dep = new Dep()\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: () => {\n      return val\n    },\n    set: newVal => {\n      if (newVal === val) {\n        return\n      }\n      dep.notify(newVal, val)\n      val = newVal\n    }\n  })\n}\n",[845],{"type":398,"tag":412,"props":846,"children":847},{"__ignoreMap":391},[848,856,864,872,880,888,896,904,912,920,928,936,944,952,960,968,976],{"type":398,"tag":436,"props":849,"children":850},{"class":438,"line":439},[851],{"type":398,"tag":436,"props":852,"children":853},{},[854],{"type":404,"value":855},"set (key, val, options = {}, obj = this.store) {\n",{"type":398,"tag":436,"props":857,"children":858},{"class":438,"line":448},[859],{"type":398,"tag":436,"props":860,"children":861},{},[862],{"type":404,"value":863},"  const dep = new Dep()\n",{"type":398,"tag":436,"props":865,"children":866},{"class":438,"line":457},[867],{"type":398,"tag":436,"props":868,"children":869},{},[870],{"type":404,"value":871},"  Object.defineProperty(obj, key, {\n",{"type":398,"tag":436,"props":873,"children":874},{"class":438,"line":466},[875],{"type":398,"tag":436,"props":876,"children":877},{},[878],{"type":404,"value":879},"    enumerable: true,\n",{"type":398,"tag":436,"props":881,"children":882},{"class":438,"line":475},[883],{"type":398,"tag":436,"props":884,"children":885},{},[886],{"type":404,"value":887},"    configurable: true,\n",{"type":398,"tag":436,"props":889,"children":890},{"class":438,"line":484},[891],{"type":398,"tag":436,"props":892,"children":893},{},[894],{"type":404,"value":895},"    get: () => {\n",{"type":398,"tag":436,"props":897,"children":898},{"class":438,"line":493},[899],{"type":398,"tag":436,"props":900,"children":901},{},[902],{"type":404,"value":903},"      return val\n",{"type":398,"tag":436,"props":905,"children":906},{"class":438,"line":611},[907],{"type":398,"tag":436,"props":908,"children":909},{},[910],{"type":404,"value":911},"    },\n",{"type":398,"tag":436,"props":913,"children":914},{"class":438,"line":620},[915],{"type":398,"tag":436,"props":916,"children":917},{},[918],{"type":404,"value":919},"    set: newVal => {\n",{"type":398,"tag":436,"props":921,"children":922},{"class":438,"line":629},[923],{"type":398,"tag":436,"props":924,"children":925},{},[926],{"type":404,"value":927},"      if (newVal === val) {\n",{"type":398,"tag":436,"props":929,"children":930},{"class":438,"line":638},[931],{"type":398,"tag":436,"props":932,"children":933},{},[934],{"type":404,"value":935},"        return\n",{"type":398,"tag":436,"props":937,"children":938},{"class":438,"line":646},[939],{"type":398,"tag":436,"props":940,"children":941},{},[942],{"type":404,"value":943},"      }\n",{"type":398,"tag":436,"props":945,"children":946},{"class":438,"line":795},[947],{"type":398,"tag":436,"props":948,"children":949},{},[950],{"type":404,"value":951},"      dep.notify(newVal, val)\n",{"type":398,"tag":436,"props":953,"children":954},{"class":438,"line":804},[955],{"type":398,"tag":436,"props":956,"children":957},{},[958],{"type":404,"value":959},"      val = newVal\n",{"type":398,"tag":436,"props":961,"children":962},{"class":438,"line":813},[963],{"type":398,"tag":436,"props":964,"children":965},{},[966],{"type":404,"value":967},"    }\n",{"type":398,"tag":436,"props":969,"children":970},{"class":438,"line":821},[971],{"type":398,"tag":436,"props":972,"children":973},{},[974],{"type":404,"value":975},"  })\n",{"type":398,"tag":436,"props":977,"children":978},{"class":438,"line":830},[979],{"type":398,"tag":436,"props":980,"children":981},{},[982],{"type":404,"value":652},{"type":398,"tag":406,"props":984,"children":985},{},[986],{"type":404,"value":987},"每当对应属性被赋值, 就会执行依赖数组中的回调函数.",{"type":398,"tag":406,"props":989,"children":990},{},[991],{"type":404,"value":992},"不过这样还不够, 我们还得想办法获取到这个 dep 实例, 才能给它的依赖数组填充函数.",{"type":398,"tag":406,"props":994,"children":995},{},[996],{"type":404,"value":997},"这边提供一个很简单的思路, 并不推荐实践中这么做:",{"type":398,"tag":426,"props":999,"children":1003},{"className":1000,"code":1001,"language":1002,"meta":391,"style":391},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","set (key, val, options = {}, obj = this.store) {\n  const dep = new Dep()\n  Object.defineProperty(obj, key, {})\n  return dep\n}\n","js",[1004],{"type":398,"tag":412,"props":1005,"children":1006},{"__ignoreMap":391},[1007,1083,1119,1168,1182],{"type":398,"tag":436,"props":1008,"children":1009},{"class":438,"line":439},[1010,1016,1022,1028,1033,1037,1042,1048,1053,1058,1062,1068,1073,1078],{"type":398,"tag":436,"props":1011,"children":1013},{"style":1012},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1014],{"type":404,"value":1015},"set",{"type":398,"tag":436,"props":1017,"children":1019},{"style":1018},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1020],{"type":404,"value":1021}," (key",{"type":398,"tag":436,"props":1023,"children":1025},{"style":1024},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1026],{"type":404,"value":1027},",",{"type":398,"tag":436,"props":1029,"children":1030},{"style":1018},[1031],{"type":404,"value":1032}," val",{"type":398,"tag":436,"props":1034,"children":1035},{"style":1024},[1036],{"type":404,"value":1027},{"type":398,"tag":436,"props":1038,"children":1039},{"style":1018},[1040],{"type":404,"value":1041}," options ",{"type":398,"tag":436,"props":1043,"children":1045},{"style":1044},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[1046],{"type":404,"value":1047},"=",{"type":398,"tag":436,"props":1049,"children":1050},{"style":1024},[1051],{"type":404,"value":1052}," {},",{"type":398,"tag":436,"props":1054,"children":1055},{"style":1018},[1056],{"type":404,"value":1057}," obj ",{"type":398,"tag":436,"props":1059,"children":1060},{"style":1044},[1061],{"type":404,"value":1047},{"type":398,"tag":436,"props":1063,"children":1065},{"style":1064},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[1066],{"type":404,"value":1067}," this",{"type":398,"tag":436,"props":1069,"children":1070},{"style":1024},[1071],{"type":404,"value":1072},".",{"type":398,"tag":436,"props":1074,"children":1075},{"style":1018},[1076],{"type":404,"value":1077},"store) ",{"type":398,"tag":436,"props":1079,"children":1080},{"style":1024},[1081],{"type":404,"value":1082},"{\n",{"type":398,"tag":436,"props":1084,"children":1085},{"class":438,"line":448},[1086,1092,1098,1103,1108,1113],{"type":398,"tag":436,"props":1087,"children":1089},{"style":1088},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#66D9EF;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[1090],{"type":404,"value":1091},"  const",{"type":398,"tag":436,"props":1093,"children":1095},{"style":1094},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[1096],{"type":404,"value":1097}," dep",{"type":398,"tag":436,"props":1099,"children":1100},{"style":1044},[1101],{"type":404,"value":1102}," =",{"type":398,"tag":436,"props":1104,"children":1105},{"style":1044},[1106],{"type":404,"value":1107}," new",{"type":398,"tag":436,"props":1109,"children":1110},{"style":1012},[1111],{"type":404,"value":1112}," Dep",{"type":398,"tag":436,"props":1114,"children":1116},{"style":1115},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1117],{"type":404,"value":1118},"()\n",{"type":398,"tag":436,"props":1120,"children":1121},{"class":438,"line":457},[1122,1127,1131,1135,1140,1145,1149,1154,1158,1163],{"type":398,"tag":436,"props":1123,"children":1124},{"style":1018},[1125],{"type":404,"value":1126},"  Object",{"type":398,"tag":436,"props":1128,"children":1129},{"style":1024},[1130],{"type":404,"value":1072},{"type":398,"tag":436,"props":1132,"children":1133},{"style":1012},[1134],{"type":404,"value":677},{"type":398,"tag":436,"props":1136,"children":1137},{"style":1115},[1138],{"type":404,"value":1139},"(",{"type":398,"tag":436,"props":1141,"children":1142},{"style":1018},[1143],{"type":404,"value":1144},"obj",{"type":398,"tag":436,"props":1146,"children":1147},{"style":1024},[1148],{"type":404,"value":1027},{"type":398,"tag":436,"props":1150,"children":1151},{"style":1018},[1152],{"type":404,"value":1153}," key",{"type":398,"tag":436,"props":1155,"children":1156},{"style":1024},[1157],{"type":404,"value":1027},{"type":398,"tag":436,"props":1159,"children":1160},{"style":1024},[1161],{"type":404,"value":1162}," {}",{"type":398,"tag":436,"props":1164,"children":1165},{"style":1115},[1166],{"type":404,"value":1167},")\n",{"type":398,"tag":436,"props":1169,"children":1170},{"class":438,"line":466},[1171,1177],{"type":398,"tag":436,"props":1172,"children":1174},{"style":1173},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[1175],{"type":404,"value":1176},"  return",{"type":398,"tag":436,"props":1178,"children":1179},{"style":1018},[1180],{"type":404,"value":1181}," dep\n",{"type":398,"tag":436,"props":1183,"children":1184},{"class":438,"line":475},[1185],{"type":398,"tag":436,"props":1186,"children":1187},{"style":1024},[1188],{"type":404,"value":652},{"type":398,"tag":426,"props":1190,"children":1192},{"className":428,"code":1191,"language":430,"meta":391,"style":391},"const valueDep = set('value', b, {})\nvalueDep.addSub(() => { console.log('value changed!') })\n",[1193],{"type":398,"tag":412,"props":1194,"children":1195},{"__ignoreMap":391},[1196,1204],{"type":398,"tag":436,"props":1197,"children":1198},{"class":438,"line":439},[1199],{"type":398,"tag":436,"props":1200,"children":1201},{},[1202],{"type":404,"value":1203},"const valueDep = set('value', b, {})\n",{"type":398,"tag":436,"props":1205,"children":1206},{"class":438,"line":448},[1207],{"type":398,"tag":436,"props":1208,"children":1209},{},[1210],{"type":404,"value":1211},"valueDep.addSub(() => { console.log('value changed!') })\n",{"type":398,"tag":406,"props":1213,"children":1214},{},[1215],{"type":404,"value":1216},"虽然代码能使用了, 就是是看起来怪怪的~ 😋 我们的三轮车开进了岔路~",{"type":398,"tag":399,"props":1218,"children":1220},{"id":1219},"通过-watch-添加订阅",[1221],{"type":404,"value":1222},"通过 watch 添加订阅",{"type":398,"tag":672,"props":1224,"children":1226},{"id":1225},"喝口水我们继续",[1227],{"type":404,"value":1225},{"type":398,"tag":406,"props":1229,"children":1230},{},[1231],{"type":404,"value":1232},"《黑客与画家》中曾经提到这样一个观点, 我深有体会:",{"type":398,"tag":1234,"props":1235,"children":1236},"blockquote",{},[1237],{"type":398,"tag":406,"props":1238,"children":1239},{},[1240],{"type":404,"value":1241},"如果你觉得你的代码奇怪, 那么往往它是错的",{"type":398,"tag":406,"props":1243,"children":1244},{},[1245],{"type":404,"value":1246},"上面的那一串代码仅仅是能跑通的水平, 我们需要加入更多的细节和思考, 有时候只需要坐下来稍微看一下代码, 就会有各种想法蹦出来:",{"type":398,"tag":1234,"props":1248,"children":1249},{},[1250],{"type":398,"tag":406,"props":1251,"children":1252},{},[1253],{"type":404,"value":1254},"构思这种东西有一个特点，那就是它会导致更多的构思。你有没有注意过，坐下来写东西的时候，一半的构思是写作时产生的？",{"type":398,"tag":672,"props":1256,"children":1258},{"id":1257},"隐藏-dep",[1259],{"type":404,"value":1260},"隐藏 Dep",{"type":398,"tag":406,"props":1262,"children":1263},{},[1264],{"type":404,"value":1265},"这些内容应和外部是解耦的. 首先一点, 我们创建一个侦听器类, 用于封装我们侦听所用到的所有方法, 它包含了我们想要的全局对象以及操作它的方法(如 watch,set):",{"type":398,"tag":426,"props":1267,"children":1269},{"className":428,"code":1268,"language":430,"meta":391,"style":391},"class VX {\n  constructor () {\n    this.store = Object.create(null)\n  }\n  watch (key, fn, obj = this.store) {}\n  set (key, val, options = {}, obj = this.store) {}\n}\nconst vx = new VX()\n",[1270],{"type":398,"tag":412,"props":1271,"children":1272},{"__ignoreMap":391},[1273,1281,1288,1296,1303,1311,1319,1326],{"type":398,"tag":436,"props":1274,"children":1275},{"class":438,"line":439},[1276],{"type":398,"tag":436,"props":1277,"children":1278},{},[1279],{"type":404,"value":1280},"class VX {\n",{"type":398,"tag":436,"props":1282,"children":1283},{"class":438,"line":448},[1284],{"type":398,"tag":436,"props":1285,"children":1286},{},[1287],{"type":404,"value":568},{"type":398,"tag":436,"props":1289,"children":1290},{"class":438,"line":457},[1291],{"type":398,"tag":436,"props":1292,"children":1293},{},[1294],{"type":404,"value":1295},"    this.store = Object.create(null)\n",{"type":398,"tag":436,"props":1297,"children":1298},{"class":438,"line":466},[1299],{"type":398,"tag":436,"props":1300,"children":1301},{},[1302],{"type":404,"value":584},{"type":398,"tag":436,"props":1304,"children":1305},{"class":438,"line":475},[1306],{"type":398,"tag":436,"props":1307,"children":1308},{},[1309],{"type":404,"value":1310},"  watch (key, fn, obj = this.store) {}\n",{"type":398,"tag":436,"props":1312,"children":1313},{"class":438,"line":484},[1314],{"type":398,"tag":436,"props":1315,"children":1316},{},[1317],{"type":404,"value":1318},"  set (key, val, options = {}, obj = this.store) {}\n",{"type":398,"tag":436,"props":1320,"children":1321},{"class":438,"line":493},[1322],{"type":398,"tag":436,"props":1323,"children":1324},{},[1325],{"type":404,"value":652},{"type":398,"tag":436,"props":1327,"children":1328},{"class":438,"line":611},[1329],{"type":398,"tag":436,"props":1330,"children":1331},{},[1332],{"type":404,"value":1333},"const vx = new VX()\n",{"type":398,"tag":406,"props":1335,"children":1336},{},[1337],{"type":404,"value":1338},"我们可以在 watch 中给对象某个属性添加回调, 就不用去直接操作 Dep 依赖数组了. 只是, 我们在业务代码中调用 watch, 要怎么去获取 obj.key 对应的 dep 呢?",{"type":398,"tag":406,"props":1340,"children":1341},{},[1342],{"type":404,"value":1343},"我们设置一个全局的 depHandler, 在 obj.key 的 getter 中主动将 depHandler 设置为当前 obj.key 的 dep 实例, 那么我们在 watch 函数里, 只要用任意操作触发 obj.key 的 getter, 就能通过 depHandler 得到它的 dep 实例了, 代码形如:",{"type":398,"tag":426,"props":1345,"children":1347},{"className":1000,"code":1346,"language":1002,"meta":391,"style":391},"  // 一开始没有持有dep实例\n  let handleDep = null\n  class VX {\n    watch (key, fn, obj = this.store) {\n      console.log(obj.key) // 使用任意操作触发obj.key的getter, 那么handleDep将自动引用obj.key的dep实例\n      handleDep.addSub(fn)\n    }\n    set (key, val, options = {}, obj = this.store) {\n      const dep = new Dep()\n      Object.defineProperty(obj, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => {\n          handleDep = dep\n          return val\n        },\n        set: newVal => {}\n      })\n    }\n  }\n",[1348],{"type":398,"tag":412,"props":1349,"children":1350},{"__ignoreMap":391},[1351,1360,1383,1402,1466,1509,1539,1546,1615,1643,1683,1707,1727,1753,1769,1782,1790,1816,1829,1837],{"type":398,"tag":436,"props":1352,"children":1353},{"class":438,"line":439},[1354],{"type":398,"tag":436,"props":1355,"children":1357},{"style":1356},"--shiki-light:#90A4AE;--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[1358],{"type":404,"value":1359},"  // 一开始没有持有dep实例\n",{"type":398,"tag":436,"props":1361,"children":1362},{"class":438,"line":448},[1363,1368,1373,1377],{"type":398,"tag":436,"props":1364,"children":1365},{"style":1088},[1366],{"type":404,"value":1367},"  let",{"type":398,"tag":436,"props":1369,"children":1370},{"style":1018},[1371],{"type":404,"value":1372}," handleDep ",{"type":398,"tag":436,"props":1374,"children":1375},{"style":1044},[1376],{"type":404,"value":1047},{"type":398,"tag":436,"props":1378,"children":1380},{"style":1379},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1381],{"type":404,"value":1382}," null\n",{"type":398,"tag":436,"props":1384,"children":1385},{"class":438,"line":457},[1386,1391,1397],{"type":398,"tag":436,"props":1387,"children":1388},{"style":1088},[1389],{"type":404,"value":1390},"  class",{"type":398,"tag":436,"props":1392,"children":1394},{"style":1393},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E;--shiki-light-text-decoration:inherit;--shiki-default-text-decoration:inherit;--shiki-dark-text-decoration:inherit;--shiki-sepia-text-decoration:underline",[1395],{"type":404,"value":1396}," VX",{"type":398,"tag":436,"props":1398,"children":1399},{"style":1024},[1400],{"type":404,"value":1401}," {\n",{"type":398,"tag":436,"props":1403,"children":1404},{"class":438,"line":466},[1405,1411,1416,1422,1426,1431,1435,1440,1444,1448,1452,1457,1462],{"type":398,"tag":436,"props":1406,"children":1408},{"style":1407},"--shiki-light:#E53935;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1409],{"type":404,"value":1410},"    watch",{"type":398,"tag":436,"props":1412,"children":1413},{"style":1024},[1414],{"type":404,"value":1415}," (",{"type":398,"tag":436,"props":1417,"children":1419},{"style":1418},"--shiki-light:#90A4AE;--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#FD971F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[1420],{"type":404,"value":1421},"key",{"type":398,"tag":436,"props":1423,"children":1424},{"style":1024},[1425],{"type":404,"value":1027},{"type":398,"tag":436,"props":1427,"children":1428},{"style":1418},[1429],{"type":404,"value":1430}," fn",{"type":398,"tag":436,"props":1432,"children":1433},{"style":1024},[1434],{"type":404,"value":1027},{"type":398,"tag":436,"props":1436,"children":1437},{"style":1418},[1438],{"type":404,"value":1439}," obj",{"type":398,"tag":436,"props":1441,"children":1442},{"style":1044},[1443],{"type":404,"value":1102},{"type":398,"tag":436,"props":1445,"children":1446},{"style":1064},[1447],{"type":404,"value":1067},{"type":398,"tag":436,"props":1449,"children":1450},{"style":1024},[1451],{"type":404,"value":1072},{"type":398,"tag":436,"props":1453,"children":1454},{"style":1018},[1455],{"type":404,"value":1456},"store",{"type":398,"tag":436,"props":1458,"children":1459},{"style":1024},[1460],{"type":404,"value":1461},")",{"type":398,"tag":436,"props":1463,"children":1464},{"style":1024},[1465],{"type":404,"value":1401},{"type":398,"tag":436,"props":1467,"children":1468},{"class":438,"line":475},[1469,1474,1478,1483,1487,1491,1495,1499,1504],{"type":398,"tag":436,"props":1470,"children":1471},{"style":1018},[1472],{"type":404,"value":1473},"      console",{"type":398,"tag":436,"props":1475,"children":1476},{"style":1024},[1477],{"type":404,"value":1072},{"type":398,"tag":436,"props":1479,"children":1480},{"style":1012},[1481],{"type":404,"value":1482},"log",{"type":398,"tag":436,"props":1484,"children":1485},{"style":1115},[1486],{"type":404,"value":1139},{"type":398,"tag":436,"props":1488,"children":1489},{"style":1018},[1490],{"type":404,"value":1144},{"type":398,"tag":436,"props":1492,"children":1493},{"style":1024},[1494],{"type":404,"value":1072},{"type":398,"tag":436,"props":1496,"children":1497},{"style":1018},[1498],{"type":404,"value":1421},{"type":398,"tag":436,"props":1500,"children":1501},{"style":1115},[1502],{"type":404,"value":1503},") ",{"type":398,"tag":436,"props":1505,"children":1506},{"style":1356},[1507],{"type":404,"value":1508},"// 使用任意操作触发obj.key的getter, 那么handleDep将自动引用obj.key的dep实例\n",{"type":398,"tag":436,"props":1510,"children":1511},{"class":438,"line":484},[1512,1517,1521,1526,1530,1535],{"type":398,"tag":436,"props":1513,"children":1514},{"style":1018},[1515],{"type":404,"value":1516},"      handleDep",{"type":398,"tag":436,"props":1518,"children":1519},{"style":1024},[1520],{"type":404,"value":1072},{"type":398,"tag":436,"props":1522,"children":1523},{"style":1012},[1524],{"type":404,"value":1525},"addSub",{"type":398,"tag":436,"props":1527,"children":1528},{"style":1115},[1529],{"type":404,"value":1139},{"type":398,"tag":436,"props":1531,"children":1532},{"style":1018},[1533],{"type":404,"value":1534},"fn",{"type":398,"tag":436,"props":1536,"children":1537},{"style":1115},[1538],{"type":404,"value":1167},{"type":398,"tag":436,"props":1540,"children":1541},{"class":438,"line":493},[1542],{"type":398,"tag":436,"props":1543,"children":1544},{"style":1024},[1545],{"type":404,"value":967},{"type":398,"tag":436,"props":1547,"children":1548},{"class":438,"line":611},[1549,1554,1558,1562,1566,1570,1574,1579,1583,1587,1591,1595,1599,1603,1607,1611],{"type":398,"tag":436,"props":1550,"children":1551},{"style":1407},[1552],{"type":404,"value":1553},"    set",{"type":398,"tag":436,"props":1555,"children":1556},{"style":1024},[1557],{"type":404,"value":1415},{"type":398,"tag":436,"props":1559,"children":1560},{"style":1418},[1561],{"type":404,"value":1421},{"type":398,"tag":436,"props":1563,"children":1564},{"style":1024},[1565],{"type":404,"value":1027},{"type":398,"tag":436,"props":1567,"children":1568},{"style":1418},[1569],{"type":404,"value":1032},{"type":398,"tag":436,"props":1571,"children":1572},{"style":1024},[1573],{"type":404,"value":1027},{"type":398,"tag":436,"props":1575,"children":1576},{"style":1418},[1577],{"type":404,"value":1578}," options",{"type":398,"tag":436,"props":1580,"children":1581},{"style":1044},[1582],{"type":404,"value":1102},{"type":398,"tag":436,"props":1584,"children":1585},{"style":1024},[1586],{"type":404,"value":1052},{"type":398,"tag":436,"props":1588,"children":1589},{"style":1418},[1590],{"type":404,"value":1439},{"type":398,"tag":436,"props":1592,"children":1593},{"style":1044},[1594],{"type":404,"value":1102},{"type":398,"tag":436,"props":1596,"children":1597},{"style":1064},[1598],{"type":404,"value":1067},{"type":398,"tag":436,"props":1600,"children":1601},{"style":1024},[1602],{"type":404,"value":1072},{"type":398,"tag":436,"props":1604,"children":1605},{"style":1018},[1606],{"type":404,"value":1456},{"type":398,"tag":436,"props":1608,"children":1609},{"style":1024},[1610],{"type":404,"value":1461},{"type":398,"tag":436,"props":1612,"children":1613},{"style":1024},[1614],{"type":404,"value":1401},{"type":398,"tag":436,"props":1616,"children":1617},{"class":438,"line":620},[1618,1623,1627,1631,1635,1639],{"type":398,"tag":436,"props":1619,"children":1620},{"style":1088},[1621],{"type":404,"value":1622},"      const",{"type":398,"tag":436,"props":1624,"children":1625},{"style":1094},[1626],{"type":404,"value":1097},{"type":398,"tag":436,"props":1628,"children":1629},{"style":1044},[1630],{"type":404,"value":1102},{"type":398,"tag":436,"props":1632,"children":1633},{"style":1044},[1634],{"type":404,"value":1107},{"type":398,"tag":436,"props":1636,"children":1637},{"style":1012},[1638],{"type":404,"value":1112},{"type":398,"tag":436,"props":1640,"children":1641},{"style":1115},[1642],{"type":404,"value":1118},{"type":398,"tag":436,"props":1644,"children":1645},{"class":438,"line":629},[1646,1651,1655,1659,1663,1667,1671,1675,1679],{"type":398,"tag":436,"props":1647,"children":1648},{"style":1018},[1649],{"type":404,"value":1650},"      Object",{"type":398,"tag":436,"props":1652,"children":1653},{"style":1024},[1654],{"type":404,"value":1072},{"type":398,"tag":436,"props":1656,"children":1657},{"style":1012},[1658],{"type":404,"value":677},{"type":398,"tag":436,"props":1660,"children":1661},{"style":1115},[1662],{"type":404,"value":1139},{"type":398,"tag":436,"props":1664,"children":1665},{"style":1018},[1666],{"type":404,"value":1144},{"type":398,"tag":436,"props":1668,"children":1669},{"style":1024},[1670],{"type":404,"value":1027},{"type":398,"tag":436,"props":1672,"children":1673},{"style":1018},[1674],{"type":404,"value":1153},{"type":398,"tag":436,"props":1676,"children":1677},{"style":1024},[1678],{"type":404,"value":1027},{"type":398,"tag":436,"props":1680,"children":1681},{"style":1024},[1682],{"type":404,"value":1401},{"type":398,"tag":436,"props":1684,"children":1685},{"class":438,"line":638},[1686,1691,1696,1702],{"type":398,"tag":436,"props":1687,"children":1688},{"style":1115},[1689],{"type":404,"value":1690},"        enumerable",{"type":398,"tag":436,"props":1692,"children":1693},{"style":1024},[1694],{"type":404,"value":1695},":",{"type":398,"tag":436,"props":1697,"children":1699},{"style":1698},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1700],{"type":404,"value":1701}," true",{"type":398,"tag":436,"props":1703,"children":1704},{"style":1024},[1705],{"type":404,"value":1706},",\n",{"type":398,"tag":436,"props":1708,"children":1709},{"class":438,"line":646},[1710,1715,1719,1723],{"type":398,"tag":436,"props":1711,"children":1712},{"style":1115},[1713],{"type":404,"value":1714},"        configurable",{"type":398,"tag":436,"props":1716,"children":1717},{"style":1024},[1718],{"type":404,"value":1695},{"type":398,"tag":436,"props":1720,"children":1721},{"style":1698},[1722],{"type":404,"value":1701},{"type":398,"tag":436,"props":1724,"children":1725},{"style":1024},[1726],{"type":404,"value":1706},{"type":398,"tag":436,"props":1728,"children":1729},{"class":438,"line":795},[1730,1735,1739,1744,1749],{"type":398,"tag":436,"props":1731,"children":1732},{"style":1012},[1733],{"type":404,"value":1734},"        get",{"type":398,"tag":436,"props":1736,"children":1737},{"style":1024},[1738],{"type":404,"value":1695},{"type":398,"tag":436,"props":1740,"children":1741},{"style":1024},[1742],{"type":404,"value":1743}," ()",{"type":398,"tag":436,"props":1745,"children":1746},{"style":1088},[1747],{"type":404,"value":1748}," =>",{"type":398,"tag":436,"props":1750,"children":1751},{"style":1024},[1752],{"type":404,"value":1401},{"type":398,"tag":436,"props":1754,"children":1755},{"class":438,"line":804},[1756,1761,1765],{"type":398,"tag":436,"props":1757,"children":1758},{"style":1018},[1759],{"type":404,"value":1760},"          handleDep",{"type":398,"tag":436,"props":1762,"children":1763},{"style":1044},[1764],{"type":404,"value":1102},{"type":398,"tag":436,"props":1766,"children":1767},{"style":1018},[1768],{"type":404,"value":1181},{"type":398,"tag":436,"props":1770,"children":1771},{"class":438,"line":813},[1772,1777],{"type":398,"tag":436,"props":1773,"children":1774},{"style":1173},[1775],{"type":404,"value":1776},"          return",{"type":398,"tag":436,"props":1778,"children":1779},{"style":1018},[1780],{"type":404,"value":1781}," val\n",{"type":398,"tag":436,"props":1783,"children":1784},{"class":438,"line":821},[1785],{"type":398,"tag":436,"props":1786,"children":1787},{"style":1024},[1788],{"type":404,"value":1789},"        },\n",{"type":398,"tag":436,"props":1791,"children":1792},{"class":438,"line":830},[1793,1798,1802,1807,1811],{"type":398,"tag":436,"props":1794,"children":1795},{"style":1012},[1796],{"type":404,"value":1797},"        set",{"type":398,"tag":436,"props":1799,"children":1800},{"style":1024},[1801],{"type":404,"value":1695},{"type":398,"tag":436,"props":1803,"children":1804},{"style":1418},[1805],{"type":404,"value":1806}," newVal",{"type":398,"tag":436,"props":1808,"children":1809},{"style":1088},[1810],{"type":404,"value":1748},{"type":398,"tag":436,"props":1812,"children":1813},{"style":1024},[1814],{"type":404,"value":1815}," {}\n",{"type":398,"tag":436,"props":1817,"children":1819},{"class":438,"line":1818},18,[1820,1825],{"type":398,"tag":436,"props":1821,"children":1822},{"style":1024},[1823],{"type":404,"value":1824},"      }",{"type":398,"tag":436,"props":1826,"children":1827},{"style":1115},[1828],{"type":404,"value":1167},{"type":398,"tag":436,"props":1830,"children":1832},{"class":438,"line":1831},19,[1833],{"type":398,"tag":436,"props":1834,"children":1835},{"style":1024},[1836],{"type":404,"value":967},{"type":398,"tag":436,"props":1838,"children":1840},{"class":438,"line":1839},20,[1841],{"type":398,"tag":436,"props":1842,"children":1843},{"style":1024},[1844],{"type":404,"value":584},{"type":398,"tag":672,"props":1846,"children":1848},{"id":1847},"主动收集依赖",[1849],{"type":404,"value":1847},{"type":398,"tag":406,"props":1851,"children":1852},{},[1853,1855,1861,1863,1869,1871,1877],{"type":404,"value":1854},"我们增加",{"type":398,"tag":412,"props":1856,"children":1858},{"className":1857},[],[1859],{"type":404,"value":1860},"handleDep.addSub(fn)",{"type":404,"value":1862},"添加回调函数的逻辑, 其实可以直接放到 getter 中, 首先在 Dep 类中封装一个'主动'收集依赖的",{"type":398,"tag":412,"props":1864,"children":1866},{"className":1865},[],[1867],{"type":404,"value":1868},"collect",{"type":404,"value":1870},"方法, 他会将全局",{"type":398,"tag":412,"props":1872,"children":1874},{"className":1873},[],[1875],{"type":404,"value":1876},"handleFn",{"type":404,"value":1878},"存放到订阅数组中, 这样一来, 在 watch 函数中, 我们只要触发 obj.key 的 getter, 就可以主动收集依赖了:",{"type":398,"tag":426,"props":1880,"children":1882},{"className":428,"code":1881,"language":430,"meta":391,"style":391},"let handleFn = null\nclass Dep {\n  addSub (fn) {}\n  delSub (fn) {}\n  clear () {}\n  collect (fn = handleFn) {\n    if (fn && !this.subs.find(x => x === fn)) {\n      this.addSub(fn)\n    }\n  }\n  notify (newVal, oldVal) {}\n}\n\nlet handleDep = null\nclass VX {\n  watch (key, fn, obj = this.store) {\n    handleFn = fn\n    console.log(obj.key)\n  }\n  set (key, val, options = {}, obj = this.store) {\n    const dep = new Dep()\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get: () => {\n        handleDep = dep\n        handleDep.collect()\n        return val\n      },\n      set: newVal => {}\n    })\n  }\n}\n",[1883],{"type":398,"tag":412,"props":1884,"children":1885},{"__ignoreMap":391},[1886,1894,1901,1909,1917,1925,1933,1941,1949,1956,1963,1971,1978,1986,1994,2001,2009,2017,2025,2032,2040,2049,2058,2067,2076,2085,2094,2103,2112,2121,2130,2139,2147],{"type":398,"tag":436,"props":1887,"children":1888},{"class":438,"line":439},[1889],{"type":398,"tag":436,"props":1890,"children":1891},{},[1892],{"type":404,"value":1893},"let handleFn = null\n",{"type":398,"tag":436,"props":1895,"children":1896},{"class":438,"line":448},[1897],{"type":398,"tag":436,"props":1898,"children":1899},{},[1900],{"type":404,"value":560},{"type":398,"tag":436,"props":1902,"children":1903},{"class":438,"line":457},[1904],{"type":398,"tag":436,"props":1905,"children":1906},{},[1907],{"type":404,"value":1908},"  addSub (fn) {}\n",{"type":398,"tag":436,"props":1910,"children":1911},{"class":438,"line":466},[1912],{"type":398,"tag":436,"props":1913,"children":1914},{},[1915],{"type":404,"value":1916},"  delSub (fn) {}\n",{"type":398,"tag":436,"props":1918,"children":1919},{"class":438,"line":475},[1920],{"type":398,"tag":436,"props":1921,"children":1922},{},[1923],{"type":404,"value":1924},"  clear () {}\n",{"type":398,"tag":436,"props":1926,"children":1927},{"class":438,"line":484},[1928],{"type":398,"tag":436,"props":1929,"children":1930},{},[1931],{"type":404,"value":1932},"  collect (fn = handleFn) {\n",{"type":398,"tag":436,"props":1934,"children":1935},{"class":438,"line":493},[1936],{"type":398,"tag":436,"props":1937,"children":1938},{},[1939],{"type":404,"value":1940},"    if (fn && !this.subs.find(x => x === fn)) {\n",{"type":398,"tag":436,"props":1942,"children":1943},{"class":438,"line":611},[1944],{"type":398,"tag":436,"props":1945,"children":1946},{},[1947],{"type":404,"value":1948},"      this.addSub(fn)\n",{"type":398,"tag":436,"props":1950,"children":1951},{"class":438,"line":620},[1952],{"type":398,"tag":436,"props":1953,"children":1954},{},[1955],{"type":404,"value":967},{"type":398,"tag":436,"props":1957,"children":1958},{"class":438,"line":629},[1959],{"type":398,"tag":436,"props":1960,"children":1961},{},[1962],{"type":404,"value":584},{"type":398,"tag":436,"props":1964,"children":1965},{"class":438,"line":638},[1966],{"type":398,"tag":436,"props":1967,"children":1968},{},[1969],{"type":404,"value":1970},"  notify (newVal, oldVal) {}\n",{"type":398,"tag":436,"props":1972,"children":1973},{"class":438,"line":646},[1974],{"type":398,"tag":436,"props":1975,"children":1976},{},[1977],{"type":404,"value":652},{"type":398,"tag":436,"props":1979,"children":1980},{"class":438,"line":795},[1981],{"type":398,"tag":436,"props":1982,"children":1983},{"emptyLinePlaceholder":390},[1984],{"type":404,"value":1985},"\n",{"type":398,"tag":436,"props":1987,"children":1988},{"class":438,"line":804},[1989],{"type":398,"tag":436,"props":1990,"children":1991},{},[1992],{"type":404,"value":1993},"let handleDep = null\n",{"type":398,"tag":436,"props":1995,"children":1996},{"class":438,"line":813},[1997],{"type":398,"tag":436,"props":1998,"children":1999},{},[2000],{"type":404,"value":1280},{"type":398,"tag":436,"props":2002,"children":2003},{"class":438,"line":821},[2004],{"type":398,"tag":436,"props":2005,"children":2006},{},[2007],{"type":404,"value":2008},"  watch (key, fn, obj = this.store) {\n",{"type":398,"tag":436,"props":2010,"children":2011},{"class":438,"line":830},[2012],{"type":398,"tag":436,"props":2013,"children":2014},{},[2015],{"type":404,"value":2016},"    handleFn = fn\n",{"type":398,"tag":436,"props":2018,"children":2019},{"class":438,"line":1818},[2020],{"type":398,"tag":436,"props":2021,"children":2022},{},[2023],{"type":404,"value":2024},"    console.log(obj.key)\n",{"type":398,"tag":436,"props":2026,"children":2027},{"class":438,"line":1831},[2028],{"type":398,"tag":436,"props":2029,"children":2030},{},[2031],{"type":404,"value":584},{"type":398,"tag":436,"props":2033,"children":2034},{"class":438,"line":1839},[2035],{"type":398,"tag":436,"props":2036,"children":2037},{},[2038],{"type":404,"value":2039},"  set (key, val, options = {}, obj = this.store) {\n",{"type":398,"tag":436,"props":2041,"children":2043},{"class":438,"line":2042},21,[2044],{"type":398,"tag":436,"props":2045,"children":2046},{},[2047],{"type":404,"value":2048},"    const dep = new Dep()\n",{"type":398,"tag":436,"props":2050,"children":2052},{"class":438,"line":2051},22,[2053],{"type":398,"tag":436,"props":2054,"children":2055},{},[2056],{"type":404,"value":2057},"    Object.defineProperty(obj, key, {\n",{"type":398,"tag":436,"props":2059,"children":2061},{"class":438,"line":2060},23,[2062],{"type":398,"tag":436,"props":2063,"children":2064},{},[2065],{"type":404,"value":2066},"      enumerable: true,\n",{"type":398,"tag":436,"props":2068,"children":2070},{"class":438,"line":2069},24,[2071],{"type":398,"tag":436,"props":2072,"children":2073},{},[2074],{"type":404,"value":2075},"      configurable: true,\n",{"type":398,"tag":436,"props":2077,"children":2079},{"class":438,"line":2078},25,[2080],{"type":398,"tag":436,"props":2081,"children":2082},{},[2083],{"type":404,"value":2084},"      get: () => {\n",{"type":398,"tag":436,"props":2086,"children":2088},{"class":438,"line":2087},26,[2089],{"type":398,"tag":436,"props":2090,"children":2091},{},[2092],{"type":404,"value":2093},"        handleDep = dep\n",{"type":398,"tag":436,"props":2095,"children":2097},{"class":438,"line":2096},27,[2098],{"type":398,"tag":436,"props":2099,"children":2100},{},[2101],{"type":404,"value":2102},"        handleDep.collect()\n",{"type":398,"tag":436,"props":2104,"children":2106},{"class":438,"line":2105},28,[2107],{"type":398,"tag":436,"props":2108,"children":2109},{},[2110],{"type":404,"value":2111},"        return val\n",{"type":398,"tag":436,"props":2113,"children":2115},{"class":438,"line":2114},29,[2116],{"type":398,"tag":436,"props":2117,"children":2118},{},[2119],{"type":404,"value":2120},"      },\n",{"type":398,"tag":436,"props":2122,"children":2124},{"class":438,"line":2123},30,[2125],{"type":398,"tag":436,"props":2126,"children":2127},{},[2128],{"type":404,"value":2129},"      set: newVal => {}\n",{"type":398,"tag":436,"props":2131,"children":2133},{"class":438,"line":2132},31,[2134],{"type":398,"tag":436,"props":2135,"children":2136},{},[2137],{"type":404,"value":2138},"    })\n",{"type":398,"tag":436,"props":2140,"children":2142},{"class":438,"line":2141},32,[2143],{"type":398,"tag":436,"props":2144,"children":2145},{},[2146],{"type":404,"value":584},{"type":398,"tag":436,"props":2148,"children":2150},{"class":438,"line":2149},33,[2151],{"type":398,"tag":436,"props":2152,"children":2153},{},[2154],{"type":404,"value":652},{"type":398,"tag":399,"props":2156,"children":2158},{"id":2157},"处理-key-值为对象链的情况",[2159],{"type":404,"value":2160},"处理 key 值为对象链的情况",{"type":398,"tag":406,"props":2162,"children":2163},{},[2164,2166,2172],{"type":404,"value":2165},"在先前的 watch 函数中, 我们使用 console.log(obj.key)去触发对应属性的 getter, 如果我们调用方式是",{"type":398,"tag":412,"props":2167,"children":2169},{"className":2168},[],[2170],{"type":404,"value":2171},"watch('a.b.c')",{"type":404,"value":2173},"就无能为力了. 这里我们封装一个通用方法, 用于处理对象链字符串的形式:",{"type":398,"tag":426,"props":2175,"children":2177},{"className":428,"code":2176,"language":430,"meta":391,"style":391},"// 通过将字符串'a.b'分割为['a', 'b'], 再使用一个while循环就可以走完这个对象链\nfunction walkChains (key, obj) {\n  const segments = key.split('.')\n  let deepObj = obj\n  while (segments.length) {\n    deepObj = deepObj[segments.shift()]\n  }\n}\nclass VX {\n  watch (key, fn, obj = this.store) {\n    handleFn = fn\n    walkChains(key, obj)\n  }\n}\n",[2178],{"type":398,"tag":412,"props":2179,"children":2180},{"__ignoreMap":391},[2181,2189,2197,2205,2213,2221,2229,2236,2243,2250,2257,2264,2272,2279],{"type":398,"tag":436,"props":2182,"children":2183},{"class":438,"line":439},[2184],{"type":398,"tag":436,"props":2185,"children":2186},{},[2187],{"type":404,"value":2188},"// 通过将字符串'a.b'分割为['a', 'b'], 再使用一个while循环就可以走完这个对象链\n",{"type":398,"tag":436,"props":2190,"children":2191},{"class":438,"line":448},[2192],{"type":398,"tag":436,"props":2193,"children":2194},{},[2195],{"type":404,"value":2196},"function walkChains (key, obj) {\n",{"type":398,"tag":436,"props":2198,"children":2199},{"class":438,"line":457},[2200],{"type":398,"tag":436,"props":2201,"children":2202},{},[2203],{"type":404,"value":2204},"  const segments = key.split('.')\n",{"type":398,"tag":436,"props":2206,"children":2207},{"class":438,"line":466},[2208],{"type":398,"tag":436,"props":2209,"children":2210},{},[2211],{"type":404,"value":2212},"  let deepObj = obj\n",{"type":398,"tag":436,"props":2214,"children":2215},{"class":438,"line":475},[2216],{"type":398,"tag":436,"props":2217,"children":2218},{},[2219],{"type":404,"value":2220},"  while (segments.length) {\n",{"type":398,"tag":436,"props":2222,"children":2223},{"class":438,"line":484},[2224],{"type":398,"tag":436,"props":2225,"children":2226},{},[2227],{"type":404,"value":2228},"    deepObj = deepObj[segments.shift()]\n",{"type":398,"tag":436,"props":2230,"children":2231},{"class":438,"line":493},[2232],{"type":398,"tag":436,"props":2233,"children":2234},{},[2235],{"type":404,"value":584},{"type":398,"tag":436,"props":2237,"children":2238},{"class":438,"line":611},[2239],{"type":398,"tag":436,"props":2240,"children":2241},{},[2242],{"type":404,"value":652},{"type":398,"tag":436,"props":2244,"children":2245},{"class":438,"line":620},[2246],{"type":398,"tag":436,"props":2247,"children":2248},{},[2249],{"type":404,"value":1280},{"type":398,"tag":436,"props":2251,"children":2252},{"class":438,"line":629},[2253],{"type":398,"tag":436,"props":2254,"children":2255},{},[2256],{"type":404,"value":2008},{"type":398,"tag":436,"props":2258,"children":2259},{"class":438,"line":638},[2260],{"type":398,"tag":436,"props":2261,"children":2262},{},[2263],{"type":404,"value":2016},{"type":398,"tag":436,"props":2265,"children":2266},{"class":438,"line":646},[2267],{"type":398,"tag":436,"props":2268,"children":2269},{},[2270],{"type":404,"value":2271},"    walkChains(key, obj)\n",{"type":398,"tag":436,"props":2273,"children":2274},{"class":438,"line":795},[2275],{"type":398,"tag":436,"props":2276,"children":2277},{},[2278],{"type":404,"value":584},{"type":398,"tag":436,"props":2280,"children":2281},{"class":438,"line":804},[2282],{"type":398,"tag":436,"props":2283,"children":2284},{},[2285],{"type":404,"value":652},{"type":398,"tag":406,"props":2287,"children":2288},{},[2289,2291,2297],{"type":404,"value":2290},"在 set 方法中处理对象链字符串稍微有些不同, 因为如果",{"type":398,"tag":412,"props":2292,"children":2294},{"className":2293},[],[2295],{"type":404,"value":2296},"set('a.b')",{"type":404,"value":2298},"时, 没有在我们全局对象中找到 a 属性, 这里应该抛错.",{"type":398,"tag":406,"props":2300,"children":2301},{},[2302,2304,2310],{"type":404,"value":2303},"实际的处理中, 需要推断'obj.a'以及'obj.a.b'是否存在. 假设没有'obj.a', 那么我们应该创建一个新的对象, 并且给新的对象添加属性'b', 所以代码类似",{"type":398,"tag":412,"props":2305,"children":2307},{"className":2306},[],[2308],{"type":404,"value":2309},"walkChains",{"type":404,"value":2311},"函数, 只是稍作一层判断:",{"type":398,"tag":426,"props":2313,"children":2315},{"className":428,"code":2314,"language":430,"meta":391,"style":391},"set (key, val, obj) {\n  const segments = key.split('.')\n  // 这里需要注意, 我们只处理到倒数第二个属性\n  while (segments.length > 1) {\n    const handleKey = segments.shift()\n    const handleVal = obj[handleKey]\n    // 存在'obj.a'的情况\n    if (typeof handleVal === 'object') {\n      obj = handleVal\n    // 不存在'obj.a'则给a属性赋一个非响应式的对象\n    } else if (!handleVal) {\n      obj = (\n        key = handleKey,\n        obj[handleKey] = {},\n        obj[handleKey]\n      )\n    } else {\n      console.trace('already has val')\n    }\n  }\n  // 最后一个属性要手动赋值\n  key = segments[0]\n}\n",[2316],{"type":398,"tag":412,"props":2317,"children":2318},{"__ignoreMap":391},[2319,2327,2334,2342,2350,2358,2366,2374,2382,2390,2398,2406,2414,2422,2430,2438,2446,2454,2462,2469,2476,2484,2492],{"type":398,"tag":436,"props":2320,"children":2321},{"class":438,"line":439},[2322],{"type":398,"tag":436,"props":2323,"children":2324},{},[2325],{"type":404,"value":2326},"set (key, val, obj) {\n",{"type":398,"tag":436,"props":2328,"children":2329},{"class":438,"line":448},[2330],{"type":398,"tag":436,"props":2331,"children":2332},{},[2333],{"type":404,"value":2204},{"type":398,"tag":436,"props":2335,"children":2336},{"class":438,"line":457},[2337],{"type":398,"tag":436,"props":2338,"children":2339},{},[2340],{"type":404,"value":2341},"  // 这里需要注意, 我们只处理到倒数第二个属性\n",{"type":398,"tag":436,"props":2343,"children":2344},{"class":438,"line":466},[2345],{"type":398,"tag":436,"props":2346,"children":2347},{},[2348],{"type":404,"value":2349},"  while (segments.length > 1) {\n",{"type":398,"tag":436,"props":2351,"children":2352},{"class":438,"line":475},[2353],{"type":398,"tag":436,"props":2354,"children":2355},{},[2356],{"type":404,"value":2357},"    const handleKey = segments.shift()\n",{"type":398,"tag":436,"props":2359,"children":2360},{"class":438,"line":484},[2361],{"type":398,"tag":436,"props":2362,"children":2363},{},[2364],{"type":404,"value":2365},"    const handleVal = obj[handleKey]\n",{"type":398,"tag":436,"props":2367,"children":2368},{"class":438,"line":493},[2369],{"type":398,"tag":436,"props":2370,"children":2371},{},[2372],{"type":404,"value":2373},"    // 存在'obj.a'的情况\n",{"type":398,"tag":436,"props":2375,"children":2376},{"class":438,"line":611},[2377],{"type":398,"tag":436,"props":2378,"children":2379},{},[2380],{"type":404,"value":2381},"    if (typeof handleVal === 'object') {\n",{"type":398,"tag":436,"props":2383,"children":2384},{"class":438,"line":620},[2385],{"type":398,"tag":436,"props":2386,"children":2387},{},[2388],{"type":404,"value":2389},"      obj = handleVal\n",{"type":398,"tag":436,"props":2391,"children":2392},{"class":438,"line":629},[2393],{"type":398,"tag":436,"props":2394,"children":2395},{},[2396],{"type":404,"value":2397},"    // 不存在'obj.a'则给a属性赋一个非响应式的对象\n",{"type":398,"tag":436,"props":2399,"children":2400},{"class":438,"line":638},[2401],{"type":398,"tag":436,"props":2402,"children":2403},{},[2404],{"type":404,"value":2405},"    } else if (!handleVal) {\n",{"type":398,"tag":436,"props":2407,"children":2408},{"class":438,"line":646},[2409],{"type":398,"tag":436,"props":2410,"children":2411},{},[2412],{"type":404,"value":2413},"      obj = (\n",{"type":398,"tag":436,"props":2415,"children":2416},{"class":438,"line":795},[2417],{"type":398,"tag":436,"props":2418,"children":2419},{},[2420],{"type":404,"value":2421},"        key = handleKey,\n",{"type":398,"tag":436,"props":2423,"children":2424},{"class":438,"line":804},[2425],{"type":398,"tag":436,"props":2426,"children":2427},{},[2428],{"type":404,"value":2429},"        obj[handleKey] = {},\n",{"type":398,"tag":436,"props":2431,"children":2432},{"class":438,"line":813},[2433],{"type":398,"tag":436,"props":2434,"children":2435},{},[2436],{"type":404,"value":2437},"        obj[handleKey]\n",{"type":398,"tag":436,"props":2439,"children":2440},{"class":438,"line":821},[2441],{"type":398,"tag":436,"props":2442,"children":2443},{},[2444],{"type":404,"value":2445},"      )\n",{"type":398,"tag":436,"props":2447,"children":2448},{"class":438,"line":830},[2449],{"type":398,"tag":436,"props":2450,"children":2451},{},[2452],{"type":404,"value":2453},"    } else {\n",{"type":398,"tag":436,"props":2455,"children":2456},{"class":438,"line":1818},[2457],{"type":398,"tag":436,"props":2458,"children":2459},{},[2460],{"type":404,"value":2461},"      console.trace('already has val')\n",{"type":398,"tag":436,"props":2463,"children":2464},{"class":438,"line":1831},[2465],{"type":398,"tag":436,"props":2466,"children":2467},{},[2468],{"type":404,"value":967},{"type":398,"tag":436,"props":2470,"children":2471},{"class":438,"line":1839},[2472],{"type":398,"tag":436,"props":2473,"children":2474},{},[2475],{"type":404,"value":584},{"type":398,"tag":436,"props":2477,"children":2478},{"class":438,"line":2042},[2479],{"type":398,"tag":436,"props":2480,"children":2481},{},[2482],{"type":404,"value":2483},"  // 最后一个属性要手动赋值\n",{"type":398,"tag":436,"props":2485,"children":2486},{"class":438,"line":2051},[2487],{"type":398,"tag":436,"props":2488,"children":2489},{},[2490],{"type":404,"value":2491},"  key = segments[0]\n",{"type":398,"tag":436,"props":2493,"children":2494},{"class":438,"line":2060},[2495],{"type":398,"tag":436,"props":2496,"children":2497},{},[2498],{"type":404,"value":652},{"type":398,"tag":399,"props":2500,"children":2502},{"id":2501},"业务场景应用",[2503],{"type":404,"value":2501},{"type":398,"tag":672,"props":2505,"children":2507},{"id":2506},"小程序跨页面刷新数据",[2508],{"type":404,"value":2506},{"type":398,"tag":406,"props":2510,"children":2511},{},[2512],{"type":404,"value":2513},"我们经常碰到在小程序中由 A 页面跳转到 B 页面, 如果 B 页面进行了一些操作, 希望 A 页面自动刷新数据的情况. 但是由于 A 页面跳转到 B 页面不同(也许是 redirect,也许是 navigate), 处理方法也不尽相同.",{"type":398,"tag":406,"props":2515,"children":2516},{},[2517],{"type":404,"value":2518},"使用 navigate 方式跳转后, A 页面不会被注销, 所以我们一般会通过全局对象去贮存 A 页面实例(也就是 A 页面的 this 对象), 然后在 B 页面直接调用相应的方法(如 A.refreshList())进行刷新操作.",{"type":398,"tag":406,"props":2520,"children":2521},{},[2522,2524,2530],{"type":404,"value":2523},"引入 VX 后, 我们可以在",{"type":398,"tag":412,"props":2525,"children":2527},{"className":2526},[],[2528],{"type":404,"value":2529},"onload",{"type":404,"value":2531},"生命周期直接调用 watch 方法添加订阅:",{"type":398,"tag":426,"props":2533,"children":2535},{"className":428,"code":2534,"language":430,"meta":391,"style":391},"// app.js\nimport VX from '@/utils/suites/vx'\nconst vx = new VX()\napp.vx = vx\napp.store = vx.store\napp.vx.set('userType', '商户')\n\n// page a\nonLoad () {\n  app.vx.watch('userType', userType => {\n    if (userType === '商户') {\n      // ...\n    } else if (userType === '管理员') {\n      // ...\n    }\n  }, {\n    immediate: true\n  })\n}\n\n// page b\nswitchUserType () {\n  app.store.userType = '管理员'\n}\n",[2536],{"type":398,"tag":412,"props":2537,"children":2538},{"__ignoreMap":391},[2539,2547,2555,2562,2570,2578,2586,2593,2601,2609,2617,2625,2633,2641,2648,2655,2663,2671,2678,2685,2692,2700,2708,2716],{"type":398,"tag":436,"props":2540,"children":2541},{"class":438,"line":439},[2542],{"type":398,"tag":436,"props":2543,"children":2544},{},[2545],{"type":404,"value":2546},"// app.js\n",{"type":398,"tag":436,"props":2548,"children":2549},{"class":438,"line":448},[2550],{"type":398,"tag":436,"props":2551,"children":2552},{},[2553],{"type":404,"value":2554},"import VX from '@/utils/suites/vx'\n",{"type":398,"tag":436,"props":2556,"children":2557},{"class":438,"line":457},[2558],{"type":398,"tag":436,"props":2559,"children":2560},{},[2561],{"type":404,"value":1333},{"type":398,"tag":436,"props":2563,"children":2564},{"class":438,"line":466},[2565],{"type":398,"tag":436,"props":2566,"children":2567},{},[2568],{"type":404,"value":2569},"app.vx = vx\n",{"type":398,"tag":436,"props":2571,"children":2572},{"class":438,"line":475},[2573],{"type":398,"tag":436,"props":2574,"children":2575},{},[2576],{"type":404,"value":2577},"app.store = vx.store\n",{"type":398,"tag":436,"props":2579,"children":2580},{"class":438,"line":484},[2581],{"type":398,"tag":436,"props":2582,"children":2583},{},[2584],{"type":404,"value":2585},"app.vx.set('userType', '商户')\n",{"type":398,"tag":436,"props":2587,"children":2588},{"class":438,"line":493},[2589],{"type":398,"tag":436,"props":2590,"children":2591},{"emptyLinePlaceholder":390},[2592],{"type":404,"value":1985},{"type":398,"tag":436,"props":2594,"children":2595},{"class":438,"line":611},[2596],{"type":398,"tag":436,"props":2597,"children":2598},{},[2599],{"type":404,"value":2600},"// page a\n",{"type":398,"tag":436,"props":2602,"children":2603},{"class":438,"line":620},[2604],{"type":398,"tag":436,"props":2605,"children":2606},{},[2607],{"type":404,"value":2608},"onLoad () {\n",{"type":398,"tag":436,"props":2610,"children":2611},{"class":438,"line":629},[2612],{"type":398,"tag":436,"props":2613,"children":2614},{},[2615],{"type":404,"value":2616},"  app.vx.watch('userType', userType => {\n",{"type":398,"tag":436,"props":2618,"children":2619},{"class":438,"line":638},[2620],{"type":398,"tag":436,"props":2621,"children":2622},{},[2623],{"type":404,"value":2624},"    if (userType === '商户') {\n",{"type":398,"tag":436,"props":2626,"children":2627},{"class":438,"line":646},[2628],{"type":398,"tag":436,"props":2629,"children":2630},{},[2631],{"type":404,"value":2632},"      // ...\n",{"type":398,"tag":436,"props":2634,"children":2635},{"class":438,"line":795},[2636],{"type":398,"tag":436,"props":2637,"children":2638},{},[2639],{"type":404,"value":2640},"    } else if (userType === '管理员') {\n",{"type":398,"tag":436,"props":2642,"children":2643},{"class":438,"line":804},[2644],{"type":398,"tag":436,"props":2645,"children":2646},{},[2647],{"type":404,"value":2632},{"type":398,"tag":436,"props":2649,"children":2650},{"class":438,"line":813},[2651],{"type":398,"tag":436,"props":2652,"children":2653},{},[2654],{"type":404,"value":967},{"type":398,"tag":436,"props":2656,"children":2657},{"class":438,"line":821},[2658],{"type":398,"tag":436,"props":2659,"children":2660},{},[2661],{"type":404,"value":2662},"  }, {\n",{"type":398,"tag":436,"props":2664,"children":2665},{"class":438,"line":830},[2666],{"type":398,"tag":436,"props":2667,"children":2668},{},[2669],{"type":404,"value":2670},"    immediate: true\n",{"type":398,"tag":436,"props":2672,"children":2673},{"class":438,"line":1818},[2674],{"type":398,"tag":436,"props":2675,"children":2676},{},[2677],{"type":404,"value":975},{"type":398,"tag":436,"props":2679,"children":2680},{"class":438,"line":1831},[2681],{"type":398,"tag":436,"props":2682,"children":2683},{},[2684],{"type":404,"value":652},{"type":398,"tag":436,"props":2686,"children":2687},{"class":438,"line":1839},[2688],{"type":398,"tag":436,"props":2689,"children":2690},{"emptyLinePlaceholder":390},[2691],{"type":404,"value":1985},{"type":398,"tag":436,"props":2693,"children":2694},{"class":438,"line":2042},[2695],{"type":398,"tag":436,"props":2696,"children":2697},{},[2698],{"type":404,"value":2699},"// page b\n",{"type":398,"tag":436,"props":2701,"children":2702},{"class":438,"line":2051},[2703],{"type":398,"tag":436,"props":2704,"children":2705},{},[2706],{"type":404,"value":2707},"switchUserType () {\n",{"type":398,"tag":436,"props":2709,"children":2710},{"class":438,"line":2060},[2711],{"type":398,"tag":436,"props":2712,"children":2713},{},[2714],{"type":404,"value":2715},"  app.store.userType = '管理员'\n",{"type":398,"tag":436,"props":2717,"children":2718},{"class":438,"line":2069},[2719],{"type":398,"tag":436,"props":2720,"children":2721},{},[2722],{"type":404,"value":652},{"type":398,"tag":399,"props":2724,"children":2726},{"id":2725},"可能遇到的问题",[2727],{"type":404,"value":2725},{"type":398,"tag":672,"props":2729,"children":2731},{"id":2730},"给-watch-方法添加的函数设置立即执行",[2732],{"type":404,"value":2733},"给 watch 方法添加的函数设置立即执行",{"type":398,"tag":406,"props":2735,"children":2736},{},[2737],{"type":404,"value":2738},"有的时候我们希望通过 watch 添加函数的同时还立即执行该函数一次, 这个时候我们需要再定义额外的参数传递到 watch 中. 问题是这个函数不一定是同步函数.",{"type":398,"tag":406,"props":2740,"children":2741},{},[2742],{"type":404,"value":2743},"简单处理如下:",{"type":398,"tag":426,"props":2745,"children":2747},{"className":428,"code":2746,"language":430,"meta":391,"style":391},"class VX {\n  async watch (key, fn, options = { immediately: false }, obj = this.store) {\n    handleDep = fn\n    walkChains(key, obj)\n    options.immediately && await fn(options.defaultParams)\n  }\n}\n",[2748],{"type":398,"tag":412,"props":2749,"children":2750},{"__ignoreMap":391},[2751,2758,2766,2774,2781,2789,2796],{"type":398,"tag":436,"props":2752,"children":2753},{"class":438,"line":439},[2754],{"type":398,"tag":436,"props":2755,"children":2756},{},[2757],{"type":404,"value":1280},{"type":398,"tag":436,"props":2759,"children":2760},{"class":438,"line":448},[2761],{"type":398,"tag":436,"props":2762,"children":2763},{},[2764],{"type":404,"value":2765},"  async watch (key, fn, options = { immediately: false }, obj = this.store) {\n",{"type":398,"tag":436,"props":2767,"children":2768},{"class":438,"line":457},[2769],{"type":398,"tag":436,"props":2770,"children":2771},{},[2772],{"type":404,"value":2773},"    handleDep = fn\n",{"type":398,"tag":436,"props":2775,"children":2776},{"class":438,"line":466},[2777],{"type":398,"tag":436,"props":2778,"children":2779},{},[2780],{"type":404,"value":2271},{"type":398,"tag":436,"props":2782,"children":2783},{"class":438,"line":475},[2784],{"type":398,"tag":436,"props":2785,"children":2786},{},[2787],{"type":404,"value":2788},"    options.immediately && await fn(options.defaultParams)\n",{"type":398,"tag":436,"props":2790,"children":2791},{"class":438,"line":484},[2792],{"type":398,"tag":436,"props":2793,"children":2794},{},[2795],{"type":404,"value":584},{"type":398,"tag":436,"props":2797,"children":2798},{"class":438,"line":493},[2799],{"type":398,"tag":436,"props":2800,"children":2801},{},[2802],{"type":404,"value":652},{"type":398,"tag":672,"props":2804,"children":2806},{"id":2805},"this-绑定丢失问题",[2807],{"type":404,"value":2808},"this 绑定丢失问题",{"type":398,"tag":406,"props":2810,"children":2811},{},[2812],{"type":404,"value":2813},"在我在对 VX 进行删除属性方法的扩展时, 我往 walkChain 函数中添加了一个执行回调函数的机制, 并且在删除属性这个方法直接调用了 walkChain:",{"type":398,"tag":426,"props":2815,"children":2817},{"className":1000,"code":2816,"language":1002,"meta":391,"style":391},"  function walkChains (key, obj, fn) {\n    const segments = key.split('.')\n    let deepObj = obj\n    while (segments.length) {\n      deepObj = deepObj[segments.shift()]\n      fn && fn()\n    }\n  }\n",[2818],{"type":398,"tag":412,"props":2819,"children":2820},{"__ignoreMap":391},[2821,2866,2919,2941,2975,3014,3035,3042],{"type":398,"tag":436,"props":2822,"children":2823},{"class":438,"line":439},[2824,2829,2834,2838,2842,2846,2850,2854,2858,2862],{"type":398,"tag":436,"props":2825,"children":2826},{"style":1088},[2827],{"type":404,"value":2828},"  function",{"type":398,"tag":436,"props":2830,"children":2831},{"style":1012},[2832],{"type":404,"value":2833}," walkChains",{"type":398,"tag":436,"props":2835,"children":2836},{"style":1024},[2837],{"type":404,"value":1415},{"type":398,"tag":436,"props":2839,"children":2840},{"style":1418},[2841],{"type":404,"value":1421},{"type":398,"tag":436,"props":2843,"children":2844},{"style":1024},[2845],{"type":404,"value":1027},{"type":398,"tag":436,"props":2847,"children":2848},{"style":1418},[2849],{"type":404,"value":1439},{"type":398,"tag":436,"props":2851,"children":2852},{"style":1024},[2853],{"type":404,"value":1027},{"type":398,"tag":436,"props":2855,"children":2856},{"style":1418},[2857],{"type":404,"value":1430},{"type":398,"tag":436,"props":2859,"children":2860},{"style":1024},[2861],{"type":404,"value":1461},{"type":398,"tag":436,"props":2863,"children":2864},{"style":1024},[2865],{"type":404,"value":1401},{"type":398,"tag":436,"props":2867,"children":2868},{"class":438,"line":448},[2869,2874,2879,2883,2887,2891,2896,2900,2906,2911,2915],{"type":398,"tag":436,"props":2870,"children":2871},{"style":1088},[2872],{"type":404,"value":2873},"    const",{"type":398,"tag":436,"props":2875,"children":2876},{"style":1094},[2877],{"type":404,"value":2878}," segments",{"type":398,"tag":436,"props":2880,"children":2881},{"style":1044},[2882],{"type":404,"value":1102},{"type":398,"tag":436,"props":2884,"children":2885},{"style":1018},[2886],{"type":404,"value":1153},{"type":398,"tag":436,"props":2888,"children":2889},{"style":1024},[2890],{"type":404,"value":1072},{"type":398,"tag":436,"props":2892,"children":2893},{"style":1012},[2894],{"type":404,"value":2895},"split",{"type":398,"tag":436,"props":2897,"children":2898},{"style":1115},[2899],{"type":404,"value":1139},{"type":398,"tag":436,"props":2901,"children":2903},{"style":2902},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[2904],{"type":404,"value":2905},"'",{"type":398,"tag":436,"props":2907,"children":2909},{"style":2908},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[2910],{"type":404,"value":1072},{"type":398,"tag":436,"props":2912,"children":2913},{"style":2902},[2914],{"type":404,"value":2905},{"type":398,"tag":436,"props":2916,"children":2917},{"style":1115},[2918],{"type":404,"value":1167},{"type":398,"tag":436,"props":2920,"children":2921},{"class":438,"line":457},[2922,2927,2932,2936],{"type":398,"tag":436,"props":2923,"children":2924},{"style":1088},[2925],{"type":404,"value":2926},"    let",{"type":398,"tag":436,"props":2928,"children":2929},{"style":1018},[2930],{"type":404,"value":2931}," deepObj",{"type":398,"tag":436,"props":2933,"children":2934},{"style":1044},[2935],{"type":404,"value":1102},{"type":398,"tag":436,"props":2937,"children":2938},{"style":1018},[2939],{"type":404,"value":2940}," obj\n",{"type":398,"tag":436,"props":2942,"children":2943},{"class":438,"line":466},[2944,2949,2953,2958,2962,2967,2971],{"type":398,"tag":436,"props":2945,"children":2946},{"style":1173},[2947],{"type":404,"value":2948},"    while",{"type":398,"tag":436,"props":2950,"children":2951},{"style":1115},[2952],{"type":404,"value":1415},{"type":398,"tag":436,"props":2954,"children":2955},{"style":1018},[2956],{"type":404,"value":2957},"segments",{"type":398,"tag":436,"props":2959,"children":2960},{"style":1024},[2961],{"type":404,"value":1072},{"type":398,"tag":436,"props":2963,"children":2964},{"style":1094},[2965],{"type":404,"value":2966},"length",{"type":398,"tag":436,"props":2968,"children":2969},{"style":1115},[2970],{"type":404,"value":1503},{"type":398,"tag":436,"props":2972,"children":2973},{"style":1024},[2974],{"type":404,"value":1082},{"type":398,"tag":436,"props":2976,"children":2977},{"class":438,"line":475},[2978,2983,2987,2991,2996,3000,3004,3009],{"type":398,"tag":436,"props":2979,"children":2980},{"style":1018},[2981],{"type":404,"value":2982},"      deepObj",{"type":398,"tag":436,"props":2984,"children":2985},{"style":1044},[2986],{"type":404,"value":1102},{"type":398,"tag":436,"props":2988,"children":2989},{"style":1018},[2990],{"type":404,"value":2931},{"type":398,"tag":436,"props":2992,"children":2993},{"style":1115},[2994],{"type":404,"value":2995},"[",{"type":398,"tag":436,"props":2997,"children":2998},{"style":1018},[2999],{"type":404,"value":2957},{"type":398,"tag":436,"props":3001,"children":3002},{"style":1024},[3003],{"type":404,"value":1072},{"type":398,"tag":436,"props":3005,"children":3006},{"style":1012},[3007],{"type":404,"value":3008},"shift",{"type":398,"tag":436,"props":3010,"children":3011},{"style":1115},[3012],{"type":404,"value":3013},"()]\n",{"type":398,"tag":436,"props":3015,"children":3016},{"class":438,"line":484},[3017,3022,3027,3031],{"type":398,"tag":436,"props":3018,"children":3019},{"style":1018},[3020],{"type":404,"value":3021},"      fn",{"type":398,"tag":436,"props":3023,"children":3024},{"style":1044},[3025],{"type":404,"value":3026}," &&",{"type":398,"tag":436,"props":3028,"children":3029},{"style":1012},[3030],{"type":404,"value":1430},{"type":398,"tag":436,"props":3032,"children":3033},{"style":1115},[3034],{"type":404,"value":1118},{"type":398,"tag":436,"props":3036,"children":3037},{"class":438,"line":493},[3038],{"type":398,"tag":436,"props":3039,"children":3040},{"style":1024},[3041],{"type":404,"value":967},{"type":398,"tag":436,"props":3043,"children":3044},{"class":438,"line":611},[3045],{"type":398,"tag":436,"props":3046,"children":3047},{"style":1024},[3048],{"type":404,"value":584},{"type":398,"tag":426,"props":3050,"children":3052},{"className":428,"code":3051,"language":430,"meta":391,"style":391},"del (key, obj = this.store) {\n  walkChains(key, obj, handleDep.clear)\n  delete obj[key]\n}\n",[3053],{"type":398,"tag":412,"props":3054,"children":3055},{"__ignoreMap":391},[3056,3064,3072,3080],{"type":398,"tag":436,"props":3057,"children":3058},{"class":438,"line":439},[3059],{"type":398,"tag":436,"props":3060,"children":3061},{},[3062],{"type":404,"value":3063},"del (key, obj = this.store) {\n",{"type":398,"tag":436,"props":3065,"children":3066},{"class":438,"line":448},[3067],{"type":398,"tag":436,"props":3068,"children":3069},{},[3070],{"type":404,"value":3071},"  walkChains(key, obj, handleDep.clear)\n",{"type":398,"tag":436,"props":3073,"children":3074},{"class":438,"line":457},[3075],{"type":398,"tag":436,"props":3076,"children":3077},{},[3078],{"type":404,"value":3079},"  delete obj[key]\n",{"type":398,"tag":436,"props":3081,"children":3082},{"class":438,"line":466},[3083],{"type":398,"tag":436,"props":3084,"children":3085},{},[3086],{"type":404,"value":652},{"type":398,"tag":406,"props":3088,"children":3089},{},[3090,3092,3097],{"type":404,"value":3091},"因为 handleDep.clear 当成参数传递进 walkChains 中会",{"type":398,"tag":539,"props":3093,"children":3094},{},[3095],{"type":404,"value":3096},"丢失 this 绑定",{"type":404,"value":3098},", 所以上面那段代码其实是有问题的, 不过稍作修改就好了:",{"type":398,"tag":426,"props":3100,"children":3102},{"className":1000,"code":3101,"language":1002,"meta":391,"style":391},"  del (key, obj = this.store) {\n    walkChains(key, obj, () => handleDep.clear())\n    delete obj[key]\n  }\n",[3103],{"type":398,"tag":412,"props":3104,"children":3105},{"__ignoreMap":391},[3106,3146,3201,3226],{"type":398,"tag":436,"props":3107,"children":3108},{"class":438,"line":439},[3109,3114,3118,3122,3126,3130,3134,3138,3142],{"type":398,"tag":436,"props":3110,"children":3111},{"style":1012},[3112],{"type":404,"value":3113},"  del",{"type":398,"tag":436,"props":3115,"children":3116},{"style":1018},[3117],{"type":404,"value":1021},{"type":398,"tag":436,"props":3119,"children":3120},{"style":1024},[3121],{"type":404,"value":1027},{"type":398,"tag":436,"props":3123,"children":3124},{"style":1018},[3125],{"type":404,"value":1057},{"type":398,"tag":436,"props":3127,"children":3128},{"style":1044},[3129],{"type":404,"value":1047},{"type":398,"tag":436,"props":3131,"children":3132},{"style":1064},[3133],{"type":404,"value":1067},{"type":398,"tag":436,"props":3135,"children":3136},{"style":1024},[3137],{"type":404,"value":1072},{"type":398,"tag":436,"props":3139,"children":3140},{"style":1018},[3141],{"type":404,"value":1077},{"type":398,"tag":436,"props":3143,"children":3144},{"style":1024},[3145],{"type":404,"value":1082},{"type":398,"tag":436,"props":3147,"children":3148},{"class":438,"line":448},[3149,3154,3158,3162,3166,3170,3174,3178,3182,3187,3191,3196],{"type":398,"tag":436,"props":3150,"children":3151},{"style":1012},[3152],{"type":404,"value":3153},"    walkChains",{"type":398,"tag":436,"props":3155,"children":3156},{"style":1115},[3157],{"type":404,"value":1139},{"type":398,"tag":436,"props":3159,"children":3160},{"style":1018},[3161],{"type":404,"value":1421},{"type":398,"tag":436,"props":3163,"children":3164},{"style":1024},[3165],{"type":404,"value":1027},{"type":398,"tag":436,"props":3167,"children":3168},{"style":1018},[3169],{"type":404,"value":1439},{"type":398,"tag":436,"props":3171,"children":3172},{"style":1024},[3173],{"type":404,"value":1027},{"type":398,"tag":436,"props":3175,"children":3176},{"style":1024},[3177],{"type":404,"value":1743},{"type":398,"tag":436,"props":3179,"children":3180},{"style":1088},[3181],{"type":404,"value":1748},{"type":398,"tag":436,"props":3183,"children":3184},{"style":1018},[3185],{"type":404,"value":3186}," handleDep",{"type":398,"tag":436,"props":3188,"children":3189},{"style":1024},[3190],{"type":404,"value":1072},{"type":398,"tag":436,"props":3192,"children":3193},{"style":1012},[3194],{"type":404,"value":3195},"clear",{"type":398,"tag":436,"props":3197,"children":3198},{"style":1115},[3199],{"type":404,"value":3200},"())\n",{"type":398,"tag":436,"props":3202,"children":3203},{"class":438,"line":457},[3204,3209,3213,3217,3221],{"type":398,"tag":436,"props":3205,"children":3206},{"style":1044},[3207],{"type":404,"value":3208},"    delete",{"type":398,"tag":436,"props":3210,"children":3211},{"style":1018},[3212],{"type":404,"value":1439},{"type":398,"tag":436,"props":3214,"children":3215},{"style":1115},[3216],{"type":404,"value":2995},{"type":398,"tag":436,"props":3218,"children":3219},{"style":1018},[3220],{"type":404,"value":1421},{"type":398,"tag":436,"props":3222,"children":3223},{"style":1115},[3224],{"type":404,"value":3225},"]\n",{"type":398,"tag":436,"props":3227,"children":3228},{"class":438,"line":466},[3229],{"type":398,"tag":436,"props":3230,"children":3231},{"style":1024},[3232],{"type":404,"value":584},{"type":398,"tag":399,"props":3234,"children":3236},{"id":3235},"后语",[3237],{"type":404,"value":3235},{"type":398,"tag":406,"props":3239,"children":3240},{},[3241],{"type":404,"value":3242},"在这篇文章中, 我们通过对 defineProperty 进行封装, 实现了一个简单的对象属性侦听器的功能, 以弥补小程序所没有的$watch 能力. 在此基础上, 各位可以再对 VX 进行扩展, 更方便地去书写业务代码.",{"type":398,"tag":406,"props":3244,"children":3245},{},[3246,3248],{"type":404,"value":3247},"完整代码 ",{"type":398,"tag":3249,"props":3250,"children":3254},"a",{"href":3251,"rel":3252},"https://github.com/Lionad-Morotar/media-gear/blob/master/src/renderer/utils/suites/vx/index.js",[3253],"nofollow",[3255],{"type":404,"value":3256},"GitHub 直达",{"type":398,"tag":3258,"props":3259,"children":3260},"style",{},[3261],{"type":404,"value":3262},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":391,"searchDepth":448,"depth":448,"links":3264},[3265,3266,3267,3268,3271,3276,3277,3280,3284],{"id":401,"depth":448,"text":401},{"id":520,"depth":448,"text":520},{"id":530,"depth":448,"text":530},{"id":668,"depth":448,"text":668,"children":3269},[3270],{"id":674,"depth":457,"text":677},{"id":1219,"depth":448,"text":1222,"children":3272},[3273,3274,3275],{"id":1225,"depth":457,"text":1225},{"id":1257,"depth":457,"text":1260},{"id":1847,"depth":457,"text":1847},{"id":2157,"depth":448,"text":2160},{"id":2501,"depth":448,"text":2501,"children":3278},[3279],{"id":2506,"depth":457,"text":2506},{"id":2725,"depth":448,"text":2725,"children":3281},[3282,3283],{"id":2730,"depth":457,"text":2733},{"id":2805,"depth":457,"text":2808},{"id":3235,"depth":448,"text":3235},"markdown","content:_archieved:2019-05:reactive-in-150loc.md","content","_archieved/2019-05/reactive-in-150loc.md","md",[3291,3294],{"_path":3292,"title":3293,"description":391},"/_archieved/2018-10/noname","🌆 无题",{"_path":3295,"title":3296,"description":391},"/_archieved/2019-06/messy-in-two-years","💖 聊聊此次离职，毕业，及其它杂乱的事情",1710257720279]