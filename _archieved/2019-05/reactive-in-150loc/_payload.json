[{"data":1,"prerenderedAt":3294},["Reactive",2],{"navigation":3,"/_archieved/2019-05/reactive-in-150loc":383,"/_archieved/2019-05/reactive-in-150loc-surround":3287},[4,32,80,96,123,129,135,366,372,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"图片模糊","/gists/blur",{"title":148,"_path":149},"渲染相关笔记","/gists/c4d",{"title":151,"_path":152},"CDN 问题记录","/gists/cdn",{"title":154,"_path":155},"消毒剂","/gists/cleaner",{"title":157,"_path":158},"Windows Command","/gists/cmd",{"title":160,"_path":161},"Command","/gists/command",{"title":163,"_path":164},"复杂科学","/gists/complexity-science",{"title":166,"_path":167},"宇宙","/gists/cosmos",{"title":169,"_path":170},"C++","/gists/cpp",{"title":172,"_path":173},"Data Structure","/gists/data-structure",{"title":175,"_path":176},"DEPRESSION","/gists/depression",{"title":178,"_path":179},"设计模式","/gists/design-patterns",{"title":181,"_path":182},"Developer Experience","/gists/developer-experience",{"title":184,"_path":185},"Device Metrics","/gists/device-metrix",{"title":187,"_path":188},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":190,"_path":191},"正则表达式","/gists/eegex",{"title":193,"_path":194},"Emoji","/gists/emoji",{"title":196,"_path":197},"工程","/gists/engineering",{"title":199,"_path":200},"熵","/gists/entropy",{"title":202,"_path":203},"Environment","/gists/environment",{"title":205,"_path":206},"Erlang","/gists/erlang",{"title":208,"_path":209},"逃离塔克夫","/gists/escape-from-tarkov",{"title":211,"_path":212},"ESNext (ES6-ES11)","/gists/esnext",{"title":214,"_path":215},"Eval！","/gists/eval",{"title":217,"_path":218},"Flutter","/gists/flutter",{"title":220,"_path":221},"字体","/gists/font",{"title":223,"_path":224},"JS 函数式编程","/gists/functional",{"title":226,"_path":227},"Google C++ Standard","/gists/google-cpp-standard",{"title":229,"_path":230},"双向链接完全体","/gists/graph",{"title":232,"_path":233},"Hardwares","/gists/hardwares",{"title":235,"_path":236},"哈希冲突","/gists/hash-collision",{"title":238,"_path":239},"信息设计","/gists/information-design",{"title":241,"_path":242},"InstantPage","/gists/instant.page",{"title":244,"_path":245},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":247,"_path":248},"KVStore","/gists/key-value-db",{"title":250,"_path":251},"Kubernetes","/gists/kubernetes",{"title":253,"_path":254},"Makefile","/gists/makefile",{"title":256,"_path":257},"Markdown Inline Style","/gists/markdown-nice",{"title":259,"_path":260},"小程序","/gists/miniapp",{"title":262,"_path":263},"减小页面快照体积","/gists/minify-html",{"title":265,"_path":266},"mklink","/gists/mklink",{"title":268,"_path":269},"Mock","/gists/mock",{"title":271,"_path":272},"多端应用","/gists/multy-end-app",{"title":274,"_path":275},"神经科学","/gists/neuroscience",{"title":277,"_path":278},"OO","/gists/oo",{"title":280,"_path":281},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":283,"_path":284},"人物","/gists/person",{"title":286,"_path":287},"PInvoke","/gists/pinvoke",{"title":289,"_path":290},"像素","/gists/pixel",{"title":292,"_path":293},"PowerShell","/gists/powershell",{"title":295,"_path":296},"量子","/gists/quantum",{"title":298,"_path":299},"保持好奇心","/gists/questions",{"title":301,"_path":302},"React Native","/gists/react-native",{"title":304,"_path":305},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":307,"_path":308},"SEO","/gists/seo",{"title":310,"_path":311},"Shader","/gists/shader",{"title":313,"_path":314},"Shape Up","/gists/shape-up",{"title":316,"_path":317},"睡觉","/gists/sleep",{"title":319,"_path":320},"States","/gists/states",{"title":322,"_path":323},"Storage","/gists/storage",{"title":325,"_path":326},"音视频流处理","/gists/stream-cli",{"title":328,"_path":329},"Symbol","/gists/symbol",{"title":331,"_path":332},"系统论","/gists/systems-theory",{"title":334,"_path":335},"Taro","/gists/taro",{"title":337,"_path":338},"任务切片","/gists/task-slice",{"title":340,"_path":341},"技术偏好","/gists/tech-dudge",{"title":343,"_path":344},"Untitled","/gists/untitled",{"title":346,"_path":347},"可变字体","/gists/variable-font",{"title":349,"_path":350},"视觉错觉","/gists/visual-illusion",{"title":352,"_path":353},"SS(SSR)","/gists/vpn",{"title":355,"_path":356},"VS Code 插件开发","/gists/vscode-plugin",{"title":358,"_path":359},"Web Components","/gists/web-components",{"title":361,"_path":362},"Windows","/gists/windows",{"title":364,"_path":365},"查缺补漏","/gists/wrong",{"title":367,"_path":368,"children":369},"代码笔记 / Gists","/source-code",[370],{"title":371,"_path":368},"🚄 代码笔记",{"title":373,"_path":374,"children":375},"我 / Abount","/hire",[376],{"title":377,"_path":374},"📬 技术简历",{"title":379,"_path":380,"children":381},"todo","/todo",[382],{"title":379,"_path":380},{"_path":384,"_dir":385,"_draft":386,"_partial":387,"_locale":388,"title":389,"description":390,"body":391,"_type":3282,"_id":3283,"_source":3284,"_file":3285,"_extension":3286},"/_archieved/2019-05/reactive-in-150loc","2019-05",false,true,"","🚀 150 行代码带你实现小程序中的数据侦听","本文介绍了在 150 行代码内使用 defineProperty 实现一个简单的拥有事件发布订阅能力的状态管理库的思路。",{"type":392,"children":393,"toc":3260},"root",[394,402,417,422,497,510,515,520,525,530,543,650,663,668,675,687,833,838,980,985,990,995,1186,1209,1214,1220,1225,1230,1239,1244,1252,1258,1263,1331,1336,1341,1842,1847,1876,2152,2158,2171,2283,2296,2309,2496,2501,2506,2511,2516,2529,2720,2725,2731,2736,2741,2800,2806,2811,3046,3084,3096,3230,3235,3240,3254],{"type":395,"tag":396,"props":397,"children":399},"element","h2",{"id":398},"前言",[400],{"type":401,"value":398},"text",{"type":395,"tag":403,"props":404,"children":405},"p",{},[406,408,415],{"type":401,"value":407},"在小程序项目中, 我们的通常会使用到使用到一个全局对象作为各个页面通用的数据存储容器, 将它绑定到 app 对象后, 就能在每一个页面都自由的操纵这个对象. 然而在实践中, 由于这个对象及其属性不具备响应式条件, 它不能直接参与业务逻辑的编写, 能力仅仅局限于数据储存. 若是在 VueJS 项目中, 我们可能经常使用到",{"type":395,"tag":409,"props":410,"children":412},"code",{"className":411},[],[413],{"type":401,"value":414},"Vue.$watch",{"type":401,"value":416},"去侦听某个数据是否发生变化, 小程序却缺乏这种能力.",{"type":395,"tag":403,"props":418,"children":419},{},[420],{"type":401,"value":421},"在这篇文章中, 我将用 150 行代码, 手把手带你打造一个小程序也可以使用的侦听器(下简称 VX):",{"type":395,"tag":423,"props":424,"children":428},"pre",{"className":425,"code":426,"language":427,"meta":388,"style":388},"language-JS shiki shiki-themes material-theme-lighter github-light github-dark monokai","// 一个快速赋值的语法糖函数, 可以创建结构为 { value: a { b: { val: ''} } } 的对象\nvx.set('value.a.d', { val: '' })\n// 对某个属性进行侦听, 如果发生改变, 则执行相应函数(可多次watch以执行多个函数)\nvx.watch('value.a.d.val', newVal => {\n  console.log(`val改变为 : `, newVal)\n})\nvalue.a.d.val = 3 // val改编为 : 3\n","JS",[429],{"type":395,"tag":409,"props":430,"children":431},{"__ignoreMap":388},[432,443,452,461,470,479,488],{"type":395,"tag":433,"props":434,"children":437},"span",{"class":435,"line":436},"line",1,[438],{"type":395,"tag":433,"props":439,"children":440},{},[441],{"type":401,"value":442},"// 一个快速赋值的语法糖函数, 可以创建结构为 { value: a { b: { val: ''} } } 的对象\n",{"type":395,"tag":433,"props":444,"children":446},{"class":435,"line":445},2,[447],{"type":395,"tag":433,"props":448,"children":449},{},[450],{"type":401,"value":451},"vx.set('value.a.d', { val: '' })\n",{"type":395,"tag":433,"props":453,"children":455},{"class":435,"line":454},3,[456],{"type":395,"tag":433,"props":457,"children":458},{},[459],{"type":401,"value":460},"// 对某个属性进行侦听, 如果发生改变, 则执行相应函数(可多次watch以执行多个函数)\n",{"type":395,"tag":433,"props":462,"children":464},{"class":435,"line":463},4,[465],{"type":395,"tag":433,"props":466,"children":467},{},[468],{"type":401,"value":469},"vx.watch('value.a.d.val', newVal => {\n",{"type":395,"tag":433,"props":471,"children":473},{"class":435,"line":472},5,[474],{"type":395,"tag":433,"props":475,"children":476},{},[477],{"type":401,"value":478},"  console.log(`val改变为 : `, newVal)\n",{"type":395,"tag":433,"props":480,"children":482},{"class":435,"line":481},6,[483],{"type":395,"tag":433,"props":484,"children":485},{},[486],{"type":401,"value":487},"})\n",{"type":395,"tag":433,"props":489,"children":491},{"class":435,"line":490},7,[492],{"type":395,"tag":433,"props":493,"children":494},{},[495],{"type":401,"value":496},"value.a.d.val = 3 // val改编为 : 3\n",{"type":395,"tag":403,"props":498,"children":499},{},[500,502,508],{"type":401,"value":501},"使用 VX 侦听器, 我们可以更加方便的管理各个页面的状态. 同时, 我们凭借",{"type":395,"tag":409,"props":503,"children":505},{"className":504},[],[506],{"type":401,"value":507},"watch",{"type":401,"value":509},"语法, 可以更优雅地编写业务逻辑.",{"type":395,"tag":403,"props":511,"children":512},{},[513],{"type":401,"value":514},"坐稳了, 三轮车准备启动了~ 各位评论见~ 😋",{"type":395,"tag":396,"props":516,"children":518},{"id":517},"稍微理一理思路",[519],{"type":401,"value":517},{"type":395,"tag":403,"props":521,"children":522},{},[523],{"type":401,"value":524},"在全局对象中, 我们不一定要对每一个属性都进行侦听, 所以 VX 主要的功能就是通过 set 去设置某个具体属性的 setter/getter, 同时通过 watch 向添加该属性添加需要订阅的回调函数.",{"type":395,"tag":396,"props":526,"children":528},{"id":527},"依赖对象的实现",[529],{"type":401,"value":527},{"type":395,"tag":403,"props":531,"children":532},{},[533,535,541],{"type":401,"value":534},"首先我们需要造一个通用的",{"type":395,"tag":536,"props":537,"children":538},"strong",{},[539],{"type":401,"value":540},"依赖对象",{"type":401,"value":542},", 依赖对象携带一个订阅数组用于存放一组回调函数, 同时它还应该包括一些操作订阅数组能力(如添加订阅, 清空订阅)的函数",{"type":395,"tag":423,"props":544,"children":546},{"className":425,"code":545,"language":427,"meta":388,"style":388},"class Dep {\n  constructor () {\n    this.subs = []\n  }\n  // 将回调添加到数组中\n  addSub (fn) { /*...*/ }\n  delSub (fn) { /*...*/ }\n  // 执行数组中每一项函数\n  notify (newVal, oldVal) {\n    this.subs.forEach(func => func(newVal, oldVal))\n  }\n}\n",[547],{"type":395,"tag":409,"props":548,"children":549},{"__ignoreMap":388},[550,558,566,574,582,590,598,606,615,624,633,641],{"type":395,"tag":433,"props":551,"children":552},{"class":435,"line":436},[553],{"type":395,"tag":433,"props":554,"children":555},{},[556],{"type":401,"value":557},"class Dep {\n",{"type":395,"tag":433,"props":559,"children":560},{"class":435,"line":445},[561],{"type":395,"tag":433,"props":562,"children":563},{},[564],{"type":401,"value":565},"  constructor () {\n",{"type":395,"tag":433,"props":567,"children":568},{"class":435,"line":454},[569],{"type":395,"tag":433,"props":570,"children":571},{},[572],{"type":401,"value":573},"    this.subs = []\n",{"type":395,"tag":433,"props":575,"children":576},{"class":435,"line":463},[577],{"type":395,"tag":433,"props":578,"children":579},{},[580],{"type":401,"value":581},"  }\n",{"type":395,"tag":433,"props":583,"children":584},{"class":435,"line":472},[585],{"type":395,"tag":433,"props":586,"children":587},{},[588],{"type":401,"value":589},"  // 将回调添加到数组中\n",{"type":395,"tag":433,"props":591,"children":592},{"class":435,"line":481},[593],{"type":395,"tag":433,"props":594,"children":595},{},[596],{"type":401,"value":597},"  addSub (fn) { /*...*/ }\n",{"type":395,"tag":433,"props":599,"children":600},{"class":435,"line":490},[601],{"type":395,"tag":433,"props":602,"children":603},{},[604],{"type":401,"value":605},"  delSub (fn) { /*...*/ }\n",{"type":395,"tag":433,"props":607,"children":609},{"class":435,"line":608},8,[610],{"type":395,"tag":433,"props":611,"children":612},{},[613],{"type":401,"value":614},"  // 执行数组中每一项函数\n",{"type":395,"tag":433,"props":616,"children":618},{"class":435,"line":617},9,[619],{"type":395,"tag":433,"props":620,"children":621},{},[622],{"type":401,"value":623},"  notify (newVal, oldVal) {\n",{"type":395,"tag":433,"props":625,"children":627},{"class":435,"line":626},10,[628],{"type":395,"tag":433,"props":629,"children":630},{},[631],{"type":401,"value":632},"    this.subs.forEach(func => func(newVal, oldVal))\n",{"type":395,"tag":433,"props":634,"children":636},{"class":435,"line":635},11,[637],{"type":395,"tag":433,"props":638,"children":639},{},[640],{"type":401,"value":581},{"type":395,"tag":433,"props":642,"children":644},{"class":435,"line":643},12,[645],{"type":395,"tag":433,"props":646,"children":647},{},[648],{"type":401,"value":649},"}\n",{"type":395,"tag":403,"props":651,"children":652},{},[653,655,661],{"type":401,"value":654},"全局对象中每一个响应式属性(及其每一个子属性), 都应该和一个新的 Dep 实例保持一一对应的关系, 这样我们进行侦听变化, 执行订阅的回调函数时, 只需要找到对应的实例执行",{"type":395,"tag":409,"props":656,"children":658},{"className":657},[],[659],{"type":401,"value":660},"notify",{"type":401,"value":662},"通知更新即可.",{"type":395,"tag":396,"props":664,"children":666},{"id":665},"设置响应式属性",[667],{"type":401,"value":665},{"type":395,"tag":669,"props":670,"children":672},"h3",{"id":671},"defineproperty",[673],{"type":401,"value":674},"defineProperty",{"type":395,"tag":403,"props":676,"children":677},{},[678,680,685],{"type":401,"value":679},"可能是因为接触 DefineProperty 要比接触 Proxy 早一些的缘故, 代码使用了前者进行响应式的实现, Object.defineProperty 方法会直接在一个对象上定义一个新属性, 这里快速过一遍",{"type":395,"tag":409,"props":681,"children":683},{"className":682},[],[684],{"type":401,"value":674},{"type":401,"value":686},"具体配置:",{"type":395,"tag":423,"props":688,"children":690},{"className":425,"code":689,"language":427,"meta":388,"style":388},"// @param obj 要在其上定义属性的对象\n// @param key 要定义或修改的属性的名称\nObject.defineProperty(obj, key, {\n  // 该属性是否能被枚举\n  enumerable: true,\n  // 该属性能否被删除\n  configurable: true,\n  // 访问该属性则会执行此方法\n  get: () => {\n    return val\n  },\n  // 修改该属性时会执行此方法\n  set: newVal => {\n    val = newVal\n  },\n  // value & writeble 不能和 getter/setter 同时出现\n})\n",[691],{"type":395,"tag":409,"props":692,"children":693},{"__ignoreMap":388},[694,702,710,718,726,734,742,750,758,766,774,782,790,799,808,816,825],{"type":395,"tag":433,"props":695,"children":696},{"class":435,"line":436},[697],{"type":395,"tag":433,"props":698,"children":699},{},[700],{"type":401,"value":701},"// @param obj 要在其上定义属性的对象\n",{"type":395,"tag":433,"props":703,"children":704},{"class":435,"line":445},[705],{"type":395,"tag":433,"props":706,"children":707},{},[708],{"type":401,"value":709},"// @param key 要定义或修改的属性的名称\n",{"type":395,"tag":433,"props":711,"children":712},{"class":435,"line":454},[713],{"type":395,"tag":433,"props":714,"children":715},{},[716],{"type":401,"value":717},"Object.defineProperty(obj, key, {\n",{"type":395,"tag":433,"props":719,"children":720},{"class":435,"line":463},[721],{"type":395,"tag":433,"props":722,"children":723},{},[724],{"type":401,"value":725},"  // 该属性是否能被枚举\n",{"type":395,"tag":433,"props":727,"children":728},{"class":435,"line":472},[729],{"type":395,"tag":433,"props":730,"children":731},{},[732],{"type":401,"value":733},"  enumerable: true,\n",{"type":395,"tag":433,"props":735,"children":736},{"class":435,"line":481},[737],{"type":395,"tag":433,"props":738,"children":739},{},[740],{"type":401,"value":741},"  // 该属性能否被删除\n",{"type":395,"tag":433,"props":743,"children":744},{"class":435,"line":490},[745],{"type":395,"tag":433,"props":746,"children":747},{},[748],{"type":401,"value":749},"  configurable: true,\n",{"type":395,"tag":433,"props":751,"children":752},{"class":435,"line":608},[753],{"type":395,"tag":433,"props":754,"children":755},{},[756],{"type":401,"value":757},"  // 访问该属性则会执行此方法\n",{"type":395,"tag":433,"props":759,"children":760},{"class":435,"line":617},[761],{"type":395,"tag":433,"props":762,"children":763},{},[764],{"type":401,"value":765},"  get: () => {\n",{"type":395,"tag":433,"props":767,"children":768},{"class":435,"line":626},[769],{"type":395,"tag":433,"props":770,"children":771},{},[772],{"type":401,"value":773},"    return val\n",{"type":395,"tag":433,"props":775,"children":776},{"class":435,"line":635},[777],{"type":395,"tag":433,"props":778,"children":779},{},[780],{"type":401,"value":781},"  },\n",{"type":395,"tag":433,"props":783,"children":784},{"class":435,"line":643},[785],{"type":395,"tag":433,"props":786,"children":787},{},[788],{"type":401,"value":789},"  // 修改该属性时会执行此方法\n",{"type":395,"tag":433,"props":791,"children":793},{"class":435,"line":792},13,[794],{"type":395,"tag":433,"props":795,"children":796},{},[797],{"type":401,"value":798},"  set: newVal => {\n",{"type":395,"tag":433,"props":800,"children":802},{"class":435,"line":801},14,[803],{"type":395,"tag":433,"props":804,"children":805},{},[806],{"type":401,"value":807},"    val = newVal\n",{"type":395,"tag":433,"props":809,"children":811},{"class":435,"line":810},15,[812],{"type":395,"tag":433,"props":813,"children":814},{},[815],{"type":401,"value":781},{"type":395,"tag":433,"props":817,"children":819},{"class":435,"line":818},16,[820],{"type":395,"tag":433,"props":821,"children":822},{},[823],{"type":401,"value":824},"  // value & writeble 不能和 getter/setter 同时出现\n",{"type":395,"tag":433,"props":826,"children":828},{"class":435,"line":827},17,[829],{"type":395,"tag":433,"props":830,"children":831},{},[832],{"type":401,"value":487},{"type":395,"tag":403,"props":834,"children":835},{},[836],{"type":401,"value":837},"通过对 defineProperty 进行上层封装, 我们可以轻松的实现在全局对象上设置响应式属性功能, 在此, 我们结合刚才定义的 Dep 对象, 将一个新的 dep 实例绑定到新增属性的 setter 中:",{"type":395,"tag":423,"props":839,"children":841},{"className":425,"code":840,"language":427,"meta":388,"style":388},"set (key, val, options = {}, obj = this.store) {\n  const dep = new Dep()\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: () => {\n      return val\n    },\n    set: newVal => {\n      if (newVal === val) {\n        return\n      }\n      dep.notify(newVal, val)\n      val = newVal\n    }\n  })\n}\n",[842],{"type":395,"tag":409,"props":843,"children":844},{"__ignoreMap":388},[845,853,861,869,877,885,893,901,909,917,925,933,941,949,957,965,973],{"type":395,"tag":433,"props":846,"children":847},{"class":435,"line":436},[848],{"type":395,"tag":433,"props":849,"children":850},{},[851],{"type":401,"value":852},"set (key, val, options = {}, obj = this.store) {\n",{"type":395,"tag":433,"props":854,"children":855},{"class":435,"line":445},[856],{"type":395,"tag":433,"props":857,"children":858},{},[859],{"type":401,"value":860},"  const dep = new Dep()\n",{"type":395,"tag":433,"props":862,"children":863},{"class":435,"line":454},[864],{"type":395,"tag":433,"props":865,"children":866},{},[867],{"type":401,"value":868},"  Object.defineProperty(obj, key, {\n",{"type":395,"tag":433,"props":870,"children":871},{"class":435,"line":463},[872],{"type":395,"tag":433,"props":873,"children":874},{},[875],{"type":401,"value":876},"    enumerable: true,\n",{"type":395,"tag":433,"props":878,"children":879},{"class":435,"line":472},[880],{"type":395,"tag":433,"props":881,"children":882},{},[883],{"type":401,"value":884},"    configurable: true,\n",{"type":395,"tag":433,"props":886,"children":887},{"class":435,"line":481},[888],{"type":395,"tag":433,"props":889,"children":890},{},[891],{"type":401,"value":892},"    get: () => {\n",{"type":395,"tag":433,"props":894,"children":895},{"class":435,"line":490},[896],{"type":395,"tag":433,"props":897,"children":898},{},[899],{"type":401,"value":900},"      return val\n",{"type":395,"tag":433,"props":902,"children":903},{"class":435,"line":608},[904],{"type":395,"tag":433,"props":905,"children":906},{},[907],{"type":401,"value":908},"    },\n",{"type":395,"tag":433,"props":910,"children":911},{"class":435,"line":617},[912],{"type":395,"tag":433,"props":913,"children":914},{},[915],{"type":401,"value":916},"    set: newVal => {\n",{"type":395,"tag":433,"props":918,"children":919},{"class":435,"line":626},[920],{"type":395,"tag":433,"props":921,"children":922},{},[923],{"type":401,"value":924},"      if (newVal === val) {\n",{"type":395,"tag":433,"props":926,"children":927},{"class":435,"line":635},[928],{"type":395,"tag":433,"props":929,"children":930},{},[931],{"type":401,"value":932},"        return\n",{"type":395,"tag":433,"props":934,"children":935},{"class":435,"line":643},[936],{"type":395,"tag":433,"props":937,"children":938},{},[939],{"type":401,"value":940},"      }\n",{"type":395,"tag":433,"props":942,"children":943},{"class":435,"line":792},[944],{"type":395,"tag":433,"props":945,"children":946},{},[947],{"type":401,"value":948},"      dep.notify(newVal, val)\n",{"type":395,"tag":433,"props":950,"children":951},{"class":435,"line":801},[952],{"type":395,"tag":433,"props":953,"children":954},{},[955],{"type":401,"value":956},"      val = newVal\n",{"type":395,"tag":433,"props":958,"children":959},{"class":435,"line":810},[960],{"type":395,"tag":433,"props":961,"children":962},{},[963],{"type":401,"value":964},"    }\n",{"type":395,"tag":433,"props":966,"children":967},{"class":435,"line":818},[968],{"type":395,"tag":433,"props":969,"children":970},{},[971],{"type":401,"value":972},"  })\n",{"type":395,"tag":433,"props":974,"children":975},{"class":435,"line":827},[976],{"type":395,"tag":433,"props":977,"children":978},{},[979],{"type":401,"value":649},{"type":395,"tag":403,"props":981,"children":982},{},[983],{"type":401,"value":984},"每当对应属性被赋值, 就会执行依赖数组中的回调函数.",{"type":395,"tag":403,"props":986,"children":987},{},[988],{"type":401,"value":989},"不过这样还不够, 我们还得想办法获取到这个 dep 实例, 才能给它的依赖数组填充函数.",{"type":395,"tag":403,"props":991,"children":992},{},[993],{"type":401,"value":994},"这边提供一个很简单的思路, 并不推荐实践中这么做:",{"type":395,"tag":423,"props":996,"children":1000},{"className":997,"code":998,"language":999,"meta":388,"style":388},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","set (key, val, options = {}, obj = this.store) {\n  const dep = new Dep()\n  Object.defineProperty(obj, key, {})\n  return dep\n}\n","js",[1001],{"type":395,"tag":409,"props":1002,"children":1003},{"__ignoreMap":388},[1004,1080,1116,1165,1179],{"type":395,"tag":433,"props":1005,"children":1006},{"class":435,"line":436},[1007,1013,1019,1025,1030,1034,1039,1045,1050,1055,1059,1065,1070,1075],{"type":395,"tag":433,"props":1008,"children":1010},{"style":1009},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1011],{"type":401,"value":1012},"set",{"type":395,"tag":433,"props":1014,"children":1016},{"style":1015},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1017],{"type":401,"value":1018}," (key",{"type":395,"tag":433,"props":1020,"children":1022},{"style":1021},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1023],{"type":401,"value":1024},",",{"type":395,"tag":433,"props":1026,"children":1027},{"style":1015},[1028],{"type":401,"value":1029}," val",{"type":395,"tag":433,"props":1031,"children":1032},{"style":1021},[1033],{"type":401,"value":1024},{"type":395,"tag":433,"props":1035,"children":1036},{"style":1015},[1037],{"type":401,"value":1038}," options ",{"type":395,"tag":433,"props":1040,"children":1042},{"style":1041},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[1043],{"type":401,"value":1044},"=",{"type":395,"tag":433,"props":1046,"children":1047},{"style":1021},[1048],{"type":401,"value":1049}," {},",{"type":395,"tag":433,"props":1051,"children":1052},{"style":1015},[1053],{"type":401,"value":1054}," obj ",{"type":395,"tag":433,"props":1056,"children":1057},{"style":1041},[1058],{"type":401,"value":1044},{"type":395,"tag":433,"props":1060,"children":1062},{"style":1061},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[1063],{"type":401,"value":1064}," this",{"type":395,"tag":433,"props":1066,"children":1067},{"style":1021},[1068],{"type":401,"value":1069},".",{"type":395,"tag":433,"props":1071,"children":1072},{"style":1015},[1073],{"type":401,"value":1074},"store) ",{"type":395,"tag":433,"props":1076,"children":1077},{"style":1021},[1078],{"type":401,"value":1079},"{\n",{"type":395,"tag":433,"props":1081,"children":1082},{"class":435,"line":445},[1083,1089,1095,1100,1105,1110],{"type":395,"tag":433,"props":1084,"children":1086},{"style":1085},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#66D9EF;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[1087],{"type":401,"value":1088},"  const",{"type":395,"tag":433,"props":1090,"children":1092},{"style":1091},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[1093],{"type":401,"value":1094}," dep",{"type":395,"tag":433,"props":1096,"children":1097},{"style":1041},[1098],{"type":401,"value":1099}," =",{"type":395,"tag":433,"props":1101,"children":1102},{"style":1041},[1103],{"type":401,"value":1104}," new",{"type":395,"tag":433,"props":1106,"children":1107},{"style":1009},[1108],{"type":401,"value":1109}," Dep",{"type":395,"tag":433,"props":1111,"children":1113},{"style":1112},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1114],{"type":401,"value":1115},"()\n",{"type":395,"tag":433,"props":1117,"children":1118},{"class":435,"line":454},[1119,1124,1128,1132,1137,1142,1146,1151,1155,1160],{"type":395,"tag":433,"props":1120,"children":1121},{"style":1015},[1122],{"type":401,"value":1123},"  Object",{"type":395,"tag":433,"props":1125,"children":1126},{"style":1021},[1127],{"type":401,"value":1069},{"type":395,"tag":433,"props":1129,"children":1130},{"style":1009},[1131],{"type":401,"value":674},{"type":395,"tag":433,"props":1133,"children":1134},{"style":1112},[1135],{"type":401,"value":1136},"(",{"type":395,"tag":433,"props":1138,"children":1139},{"style":1015},[1140],{"type":401,"value":1141},"obj",{"type":395,"tag":433,"props":1143,"children":1144},{"style":1021},[1145],{"type":401,"value":1024},{"type":395,"tag":433,"props":1147,"children":1148},{"style":1015},[1149],{"type":401,"value":1150}," key",{"type":395,"tag":433,"props":1152,"children":1153},{"style":1021},[1154],{"type":401,"value":1024},{"type":395,"tag":433,"props":1156,"children":1157},{"style":1021},[1158],{"type":401,"value":1159}," {}",{"type":395,"tag":433,"props":1161,"children":1162},{"style":1112},[1163],{"type":401,"value":1164},")\n",{"type":395,"tag":433,"props":1166,"children":1167},{"class":435,"line":463},[1168,1174],{"type":395,"tag":433,"props":1169,"children":1171},{"style":1170},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[1172],{"type":401,"value":1173},"  return",{"type":395,"tag":433,"props":1175,"children":1176},{"style":1015},[1177],{"type":401,"value":1178}," dep\n",{"type":395,"tag":433,"props":1180,"children":1181},{"class":435,"line":472},[1182],{"type":395,"tag":433,"props":1183,"children":1184},{"style":1021},[1185],{"type":401,"value":649},{"type":395,"tag":423,"props":1187,"children":1189},{"className":425,"code":1188,"language":427,"meta":388,"style":388},"const valueDep = set('value', b, {})\nvalueDep.addSub(() => { console.log('value changed!') })\n",[1190],{"type":395,"tag":409,"props":1191,"children":1192},{"__ignoreMap":388},[1193,1201],{"type":395,"tag":433,"props":1194,"children":1195},{"class":435,"line":436},[1196],{"type":395,"tag":433,"props":1197,"children":1198},{},[1199],{"type":401,"value":1200},"const valueDep = set('value', b, {})\n",{"type":395,"tag":433,"props":1202,"children":1203},{"class":435,"line":445},[1204],{"type":395,"tag":433,"props":1205,"children":1206},{},[1207],{"type":401,"value":1208},"valueDep.addSub(() => { console.log('value changed!') })\n",{"type":395,"tag":403,"props":1210,"children":1211},{},[1212],{"type":401,"value":1213},"虽然代码能使用了, 就是是看起来怪怪的~ 😋 我们的三轮车开进了岔路~",{"type":395,"tag":396,"props":1215,"children":1217},{"id":1216},"通过-watch-添加订阅",[1218],{"type":401,"value":1219},"通过 watch 添加订阅",{"type":395,"tag":669,"props":1221,"children":1223},{"id":1222},"喝口水我们继续",[1224],{"type":401,"value":1222},{"type":395,"tag":403,"props":1226,"children":1227},{},[1228],{"type":401,"value":1229},"《黑客与画家》中曾经提到这样一个观点, 我深有体会:",{"type":395,"tag":1231,"props":1232,"children":1233},"blockquote",{},[1234],{"type":395,"tag":403,"props":1235,"children":1236},{},[1237],{"type":401,"value":1238},"如果你觉得你的代码奇怪, 那么往往它是错的",{"type":395,"tag":403,"props":1240,"children":1241},{},[1242],{"type":401,"value":1243},"上面的那一串代码仅仅是能跑通的水平, 我们需要加入更多的细节和思考, 有时候只需要坐下来稍微看一下代码, 就会有各种想法蹦出来:",{"type":395,"tag":1231,"props":1245,"children":1246},{},[1247],{"type":395,"tag":403,"props":1248,"children":1249},{},[1250],{"type":401,"value":1251},"构思这种东西有一个特点，那就是它会导致更多的构思。你有没有注意过，坐下来写东西的时候，一半的构思是写作时产生的？",{"type":395,"tag":669,"props":1253,"children":1255},{"id":1254},"隐藏-dep",[1256],{"type":401,"value":1257},"隐藏 Dep",{"type":395,"tag":403,"props":1259,"children":1260},{},[1261],{"type":401,"value":1262},"这些内容应和外部是解耦的. 首先一点, 我们创建一个侦听器类, 用于封装我们侦听所用到的所有方法, 它包含了我们想要的全局对象以及操作它的方法(如 watch,set):",{"type":395,"tag":423,"props":1264,"children":1266},{"className":425,"code":1265,"language":427,"meta":388,"style":388},"class VX {\n  constructor () {\n    this.store = Object.create(null)\n  }\n  watch (key, fn, obj = this.store) {}\n  set (key, val, options = {}, obj = this.store) {}\n}\nconst vx = new VX()\n",[1267],{"type":395,"tag":409,"props":1268,"children":1269},{"__ignoreMap":388},[1270,1278,1285,1293,1300,1308,1316,1323],{"type":395,"tag":433,"props":1271,"children":1272},{"class":435,"line":436},[1273],{"type":395,"tag":433,"props":1274,"children":1275},{},[1276],{"type":401,"value":1277},"class VX {\n",{"type":395,"tag":433,"props":1279,"children":1280},{"class":435,"line":445},[1281],{"type":395,"tag":433,"props":1282,"children":1283},{},[1284],{"type":401,"value":565},{"type":395,"tag":433,"props":1286,"children":1287},{"class":435,"line":454},[1288],{"type":395,"tag":433,"props":1289,"children":1290},{},[1291],{"type":401,"value":1292},"    this.store = Object.create(null)\n",{"type":395,"tag":433,"props":1294,"children":1295},{"class":435,"line":463},[1296],{"type":395,"tag":433,"props":1297,"children":1298},{},[1299],{"type":401,"value":581},{"type":395,"tag":433,"props":1301,"children":1302},{"class":435,"line":472},[1303],{"type":395,"tag":433,"props":1304,"children":1305},{},[1306],{"type":401,"value":1307},"  watch (key, fn, obj = this.store) {}\n",{"type":395,"tag":433,"props":1309,"children":1310},{"class":435,"line":481},[1311],{"type":395,"tag":433,"props":1312,"children":1313},{},[1314],{"type":401,"value":1315},"  set (key, val, options = {}, obj = this.store) {}\n",{"type":395,"tag":433,"props":1317,"children":1318},{"class":435,"line":490},[1319],{"type":395,"tag":433,"props":1320,"children":1321},{},[1322],{"type":401,"value":649},{"type":395,"tag":433,"props":1324,"children":1325},{"class":435,"line":608},[1326],{"type":395,"tag":433,"props":1327,"children":1328},{},[1329],{"type":401,"value":1330},"const vx = new VX()\n",{"type":395,"tag":403,"props":1332,"children":1333},{},[1334],{"type":401,"value":1335},"我们可以在 watch 中给对象某个属性添加回调, 就不用去直接操作 Dep 依赖数组了. 只是, 我们在业务代码中调用 watch, 要怎么去获取 obj.key 对应的 dep 呢?",{"type":395,"tag":403,"props":1337,"children":1338},{},[1339],{"type":401,"value":1340},"我们设置一个全局的 depHandler, 在 obj.key 的 getter 中主动将 depHandler 设置为当前 obj.key 的 dep 实例, 那么我们在 watch 函数里, 只要用任意操作触发 obj.key 的 getter, 就能通过 depHandler 得到它的 dep 实例了, 代码形如:",{"type":395,"tag":423,"props":1342,"children":1344},{"className":997,"code":1343,"language":999,"meta":388,"style":388},"  // 一开始没有持有dep实例\n  let handleDep = null\n  class VX {\n    watch (key, fn, obj = this.store) {\n      console.log(obj.key) // 使用任意操作触发obj.key的getter, 那么handleDep将自动引用obj.key的dep实例\n      handleDep.addSub(fn)\n    }\n    set (key, val, options = {}, obj = this.store) {\n      const dep = new Dep()\n      Object.defineProperty(obj, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => {\n          handleDep = dep\n          return val\n        },\n        set: newVal => {}\n      })\n    }\n  }\n",[1345],{"type":395,"tag":409,"props":1346,"children":1347},{"__ignoreMap":388},[1348,1357,1380,1399,1463,1506,1536,1543,1612,1640,1680,1704,1724,1750,1766,1779,1787,1813,1826,1834],{"type":395,"tag":433,"props":1349,"children":1350},{"class":435,"line":436},[1351],{"type":395,"tag":433,"props":1352,"children":1354},{"style":1353},"--shiki-light:#90A4AE;--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[1355],{"type":401,"value":1356},"  // 一开始没有持有dep实例\n",{"type":395,"tag":433,"props":1358,"children":1359},{"class":435,"line":445},[1360,1365,1370,1374],{"type":395,"tag":433,"props":1361,"children":1362},{"style":1085},[1363],{"type":401,"value":1364},"  let",{"type":395,"tag":433,"props":1366,"children":1367},{"style":1015},[1368],{"type":401,"value":1369}," handleDep ",{"type":395,"tag":433,"props":1371,"children":1372},{"style":1041},[1373],{"type":401,"value":1044},{"type":395,"tag":433,"props":1375,"children":1377},{"style":1376},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1378],{"type":401,"value":1379}," null\n",{"type":395,"tag":433,"props":1381,"children":1382},{"class":435,"line":454},[1383,1388,1394],{"type":395,"tag":433,"props":1384,"children":1385},{"style":1085},[1386],{"type":401,"value":1387},"  class",{"type":395,"tag":433,"props":1389,"children":1391},{"style":1390},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E;--shiki-light-text-decoration:inherit;--shiki-default-text-decoration:inherit;--shiki-dark-text-decoration:inherit;--shiki-sepia-text-decoration:underline",[1392],{"type":401,"value":1393}," VX",{"type":395,"tag":433,"props":1395,"children":1396},{"style":1021},[1397],{"type":401,"value":1398}," {\n",{"type":395,"tag":433,"props":1400,"children":1401},{"class":435,"line":463},[1402,1408,1413,1419,1423,1428,1432,1437,1441,1445,1449,1454,1459],{"type":395,"tag":433,"props":1403,"children":1405},{"style":1404},"--shiki-light:#E53935;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1406],{"type":401,"value":1407},"    watch",{"type":395,"tag":433,"props":1409,"children":1410},{"style":1021},[1411],{"type":401,"value":1412}," (",{"type":395,"tag":433,"props":1414,"children":1416},{"style":1415},"--shiki-light:#90A4AE;--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#FD971F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[1417],{"type":401,"value":1418},"key",{"type":395,"tag":433,"props":1420,"children":1421},{"style":1021},[1422],{"type":401,"value":1024},{"type":395,"tag":433,"props":1424,"children":1425},{"style":1415},[1426],{"type":401,"value":1427}," fn",{"type":395,"tag":433,"props":1429,"children":1430},{"style":1021},[1431],{"type":401,"value":1024},{"type":395,"tag":433,"props":1433,"children":1434},{"style":1415},[1435],{"type":401,"value":1436}," obj",{"type":395,"tag":433,"props":1438,"children":1439},{"style":1041},[1440],{"type":401,"value":1099},{"type":395,"tag":433,"props":1442,"children":1443},{"style":1061},[1444],{"type":401,"value":1064},{"type":395,"tag":433,"props":1446,"children":1447},{"style":1021},[1448],{"type":401,"value":1069},{"type":395,"tag":433,"props":1450,"children":1451},{"style":1015},[1452],{"type":401,"value":1453},"store",{"type":395,"tag":433,"props":1455,"children":1456},{"style":1021},[1457],{"type":401,"value":1458},")",{"type":395,"tag":433,"props":1460,"children":1461},{"style":1021},[1462],{"type":401,"value":1398},{"type":395,"tag":433,"props":1464,"children":1465},{"class":435,"line":472},[1466,1471,1475,1480,1484,1488,1492,1496,1501],{"type":395,"tag":433,"props":1467,"children":1468},{"style":1015},[1469],{"type":401,"value":1470},"      console",{"type":395,"tag":433,"props":1472,"children":1473},{"style":1021},[1474],{"type":401,"value":1069},{"type":395,"tag":433,"props":1476,"children":1477},{"style":1009},[1478],{"type":401,"value":1479},"log",{"type":395,"tag":433,"props":1481,"children":1482},{"style":1112},[1483],{"type":401,"value":1136},{"type":395,"tag":433,"props":1485,"children":1486},{"style":1015},[1487],{"type":401,"value":1141},{"type":395,"tag":433,"props":1489,"children":1490},{"style":1021},[1491],{"type":401,"value":1069},{"type":395,"tag":433,"props":1493,"children":1494},{"style":1015},[1495],{"type":401,"value":1418},{"type":395,"tag":433,"props":1497,"children":1498},{"style":1112},[1499],{"type":401,"value":1500},") ",{"type":395,"tag":433,"props":1502,"children":1503},{"style":1353},[1504],{"type":401,"value":1505},"// 使用任意操作触发obj.key的getter, 那么handleDep将自动引用obj.key的dep实例\n",{"type":395,"tag":433,"props":1507,"children":1508},{"class":435,"line":481},[1509,1514,1518,1523,1527,1532],{"type":395,"tag":433,"props":1510,"children":1511},{"style":1015},[1512],{"type":401,"value":1513},"      handleDep",{"type":395,"tag":433,"props":1515,"children":1516},{"style":1021},[1517],{"type":401,"value":1069},{"type":395,"tag":433,"props":1519,"children":1520},{"style":1009},[1521],{"type":401,"value":1522},"addSub",{"type":395,"tag":433,"props":1524,"children":1525},{"style":1112},[1526],{"type":401,"value":1136},{"type":395,"tag":433,"props":1528,"children":1529},{"style":1015},[1530],{"type":401,"value":1531},"fn",{"type":395,"tag":433,"props":1533,"children":1534},{"style":1112},[1535],{"type":401,"value":1164},{"type":395,"tag":433,"props":1537,"children":1538},{"class":435,"line":490},[1539],{"type":395,"tag":433,"props":1540,"children":1541},{"style":1021},[1542],{"type":401,"value":964},{"type":395,"tag":433,"props":1544,"children":1545},{"class":435,"line":608},[1546,1551,1555,1559,1563,1567,1571,1576,1580,1584,1588,1592,1596,1600,1604,1608],{"type":395,"tag":433,"props":1547,"children":1548},{"style":1404},[1549],{"type":401,"value":1550},"    set",{"type":395,"tag":433,"props":1552,"children":1553},{"style":1021},[1554],{"type":401,"value":1412},{"type":395,"tag":433,"props":1556,"children":1557},{"style":1415},[1558],{"type":401,"value":1418},{"type":395,"tag":433,"props":1560,"children":1561},{"style":1021},[1562],{"type":401,"value":1024},{"type":395,"tag":433,"props":1564,"children":1565},{"style":1415},[1566],{"type":401,"value":1029},{"type":395,"tag":433,"props":1568,"children":1569},{"style":1021},[1570],{"type":401,"value":1024},{"type":395,"tag":433,"props":1572,"children":1573},{"style":1415},[1574],{"type":401,"value":1575}," options",{"type":395,"tag":433,"props":1577,"children":1578},{"style":1041},[1579],{"type":401,"value":1099},{"type":395,"tag":433,"props":1581,"children":1582},{"style":1021},[1583],{"type":401,"value":1049},{"type":395,"tag":433,"props":1585,"children":1586},{"style":1415},[1587],{"type":401,"value":1436},{"type":395,"tag":433,"props":1589,"children":1590},{"style":1041},[1591],{"type":401,"value":1099},{"type":395,"tag":433,"props":1593,"children":1594},{"style":1061},[1595],{"type":401,"value":1064},{"type":395,"tag":433,"props":1597,"children":1598},{"style":1021},[1599],{"type":401,"value":1069},{"type":395,"tag":433,"props":1601,"children":1602},{"style":1015},[1603],{"type":401,"value":1453},{"type":395,"tag":433,"props":1605,"children":1606},{"style":1021},[1607],{"type":401,"value":1458},{"type":395,"tag":433,"props":1609,"children":1610},{"style":1021},[1611],{"type":401,"value":1398},{"type":395,"tag":433,"props":1613,"children":1614},{"class":435,"line":617},[1615,1620,1624,1628,1632,1636],{"type":395,"tag":433,"props":1616,"children":1617},{"style":1085},[1618],{"type":401,"value":1619},"      const",{"type":395,"tag":433,"props":1621,"children":1622},{"style":1091},[1623],{"type":401,"value":1094},{"type":395,"tag":433,"props":1625,"children":1626},{"style":1041},[1627],{"type":401,"value":1099},{"type":395,"tag":433,"props":1629,"children":1630},{"style":1041},[1631],{"type":401,"value":1104},{"type":395,"tag":433,"props":1633,"children":1634},{"style":1009},[1635],{"type":401,"value":1109},{"type":395,"tag":433,"props":1637,"children":1638},{"style":1112},[1639],{"type":401,"value":1115},{"type":395,"tag":433,"props":1641,"children":1642},{"class":435,"line":626},[1643,1648,1652,1656,1660,1664,1668,1672,1676],{"type":395,"tag":433,"props":1644,"children":1645},{"style":1015},[1646],{"type":401,"value":1647},"      Object",{"type":395,"tag":433,"props":1649,"children":1650},{"style":1021},[1651],{"type":401,"value":1069},{"type":395,"tag":433,"props":1653,"children":1654},{"style":1009},[1655],{"type":401,"value":674},{"type":395,"tag":433,"props":1657,"children":1658},{"style":1112},[1659],{"type":401,"value":1136},{"type":395,"tag":433,"props":1661,"children":1662},{"style":1015},[1663],{"type":401,"value":1141},{"type":395,"tag":433,"props":1665,"children":1666},{"style":1021},[1667],{"type":401,"value":1024},{"type":395,"tag":433,"props":1669,"children":1670},{"style":1015},[1671],{"type":401,"value":1150},{"type":395,"tag":433,"props":1673,"children":1674},{"style":1021},[1675],{"type":401,"value":1024},{"type":395,"tag":433,"props":1677,"children":1678},{"style":1021},[1679],{"type":401,"value":1398},{"type":395,"tag":433,"props":1681,"children":1682},{"class":435,"line":635},[1683,1688,1693,1699],{"type":395,"tag":433,"props":1684,"children":1685},{"style":1112},[1686],{"type":401,"value":1687},"        enumerable",{"type":395,"tag":433,"props":1689,"children":1690},{"style":1021},[1691],{"type":401,"value":1692},":",{"type":395,"tag":433,"props":1694,"children":1696},{"style":1695},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1697],{"type":401,"value":1698}," true",{"type":395,"tag":433,"props":1700,"children":1701},{"style":1021},[1702],{"type":401,"value":1703},",\n",{"type":395,"tag":433,"props":1705,"children":1706},{"class":435,"line":643},[1707,1712,1716,1720],{"type":395,"tag":433,"props":1708,"children":1709},{"style":1112},[1710],{"type":401,"value":1711},"        configurable",{"type":395,"tag":433,"props":1713,"children":1714},{"style":1021},[1715],{"type":401,"value":1692},{"type":395,"tag":433,"props":1717,"children":1718},{"style":1695},[1719],{"type":401,"value":1698},{"type":395,"tag":433,"props":1721,"children":1722},{"style":1021},[1723],{"type":401,"value":1703},{"type":395,"tag":433,"props":1725,"children":1726},{"class":435,"line":792},[1727,1732,1736,1741,1746],{"type":395,"tag":433,"props":1728,"children":1729},{"style":1009},[1730],{"type":401,"value":1731},"        get",{"type":395,"tag":433,"props":1733,"children":1734},{"style":1021},[1735],{"type":401,"value":1692},{"type":395,"tag":433,"props":1737,"children":1738},{"style":1021},[1739],{"type":401,"value":1740}," ()",{"type":395,"tag":433,"props":1742,"children":1743},{"style":1085},[1744],{"type":401,"value":1745}," =>",{"type":395,"tag":433,"props":1747,"children":1748},{"style":1021},[1749],{"type":401,"value":1398},{"type":395,"tag":433,"props":1751,"children":1752},{"class":435,"line":801},[1753,1758,1762],{"type":395,"tag":433,"props":1754,"children":1755},{"style":1015},[1756],{"type":401,"value":1757},"          handleDep",{"type":395,"tag":433,"props":1759,"children":1760},{"style":1041},[1761],{"type":401,"value":1099},{"type":395,"tag":433,"props":1763,"children":1764},{"style":1015},[1765],{"type":401,"value":1178},{"type":395,"tag":433,"props":1767,"children":1768},{"class":435,"line":810},[1769,1774],{"type":395,"tag":433,"props":1770,"children":1771},{"style":1170},[1772],{"type":401,"value":1773},"          return",{"type":395,"tag":433,"props":1775,"children":1776},{"style":1015},[1777],{"type":401,"value":1778}," val\n",{"type":395,"tag":433,"props":1780,"children":1781},{"class":435,"line":818},[1782],{"type":395,"tag":433,"props":1783,"children":1784},{"style":1021},[1785],{"type":401,"value":1786},"        },\n",{"type":395,"tag":433,"props":1788,"children":1789},{"class":435,"line":827},[1790,1795,1799,1804,1808],{"type":395,"tag":433,"props":1791,"children":1792},{"style":1009},[1793],{"type":401,"value":1794},"        set",{"type":395,"tag":433,"props":1796,"children":1797},{"style":1021},[1798],{"type":401,"value":1692},{"type":395,"tag":433,"props":1800,"children":1801},{"style":1415},[1802],{"type":401,"value":1803}," newVal",{"type":395,"tag":433,"props":1805,"children":1806},{"style":1085},[1807],{"type":401,"value":1745},{"type":395,"tag":433,"props":1809,"children":1810},{"style":1021},[1811],{"type":401,"value":1812}," {}\n",{"type":395,"tag":433,"props":1814,"children":1816},{"class":435,"line":1815},18,[1817,1822],{"type":395,"tag":433,"props":1818,"children":1819},{"style":1021},[1820],{"type":401,"value":1821},"      }",{"type":395,"tag":433,"props":1823,"children":1824},{"style":1112},[1825],{"type":401,"value":1164},{"type":395,"tag":433,"props":1827,"children":1829},{"class":435,"line":1828},19,[1830],{"type":395,"tag":433,"props":1831,"children":1832},{"style":1021},[1833],{"type":401,"value":964},{"type":395,"tag":433,"props":1835,"children":1837},{"class":435,"line":1836},20,[1838],{"type":395,"tag":433,"props":1839,"children":1840},{"style":1021},[1841],{"type":401,"value":581},{"type":395,"tag":669,"props":1843,"children":1845},{"id":1844},"主动收集依赖",[1846],{"type":401,"value":1844},{"type":395,"tag":403,"props":1848,"children":1849},{},[1850,1852,1858,1860,1866,1868,1874],{"type":401,"value":1851},"我们增加",{"type":395,"tag":409,"props":1853,"children":1855},{"className":1854},[],[1856],{"type":401,"value":1857},"handleDep.addSub(fn)",{"type":401,"value":1859},"添加回调函数的逻辑, 其实可以直接放到 getter 中, 首先在 Dep 类中封装一个'主动'收集依赖的",{"type":395,"tag":409,"props":1861,"children":1863},{"className":1862},[],[1864],{"type":401,"value":1865},"collect",{"type":401,"value":1867},"方法, 他会将全局",{"type":395,"tag":409,"props":1869,"children":1871},{"className":1870},[],[1872],{"type":401,"value":1873},"handleFn",{"type":401,"value":1875},"存放到订阅数组中, 这样一来, 在 watch 函数中, 我们只要触发 obj.key 的 getter, 就可以主动收集依赖了:",{"type":395,"tag":423,"props":1877,"children":1879},{"className":425,"code":1878,"language":427,"meta":388,"style":388},"let handleFn = null\nclass Dep {\n  addSub (fn) {}\n  delSub (fn) {}\n  clear () {}\n  collect (fn = handleFn) {\n    if (fn && !this.subs.find(x => x === fn)) {\n      this.addSub(fn)\n    }\n  }\n  notify (newVal, oldVal) {}\n}\n\nlet handleDep = null\nclass VX {\n  watch (key, fn, obj = this.store) {\n    handleFn = fn\n    console.log(obj.key)\n  }\n  set (key, val, options = {}, obj = this.store) {\n    const dep = new Dep()\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get: () => {\n        handleDep = dep\n        handleDep.collect()\n        return val\n      },\n      set: newVal => {}\n    })\n  }\n}\n",[1880],{"type":395,"tag":409,"props":1881,"children":1882},{"__ignoreMap":388},[1883,1891,1898,1906,1914,1922,1930,1938,1946,1953,1960,1968,1975,1983,1991,1998,2006,2014,2022,2029,2037,2046,2055,2064,2073,2082,2091,2100,2109,2118,2127,2136,2144],{"type":395,"tag":433,"props":1884,"children":1885},{"class":435,"line":436},[1886],{"type":395,"tag":433,"props":1887,"children":1888},{},[1889],{"type":401,"value":1890},"let handleFn = null\n",{"type":395,"tag":433,"props":1892,"children":1893},{"class":435,"line":445},[1894],{"type":395,"tag":433,"props":1895,"children":1896},{},[1897],{"type":401,"value":557},{"type":395,"tag":433,"props":1899,"children":1900},{"class":435,"line":454},[1901],{"type":395,"tag":433,"props":1902,"children":1903},{},[1904],{"type":401,"value":1905},"  addSub (fn) {}\n",{"type":395,"tag":433,"props":1907,"children":1908},{"class":435,"line":463},[1909],{"type":395,"tag":433,"props":1910,"children":1911},{},[1912],{"type":401,"value":1913},"  delSub (fn) {}\n",{"type":395,"tag":433,"props":1915,"children":1916},{"class":435,"line":472},[1917],{"type":395,"tag":433,"props":1918,"children":1919},{},[1920],{"type":401,"value":1921},"  clear () {}\n",{"type":395,"tag":433,"props":1923,"children":1924},{"class":435,"line":481},[1925],{"type":395,"tag":433,"props":1926,"children":1927},{},[1928],{"type":401,"value":1929},"  collect (fn = handleFn) {\n",{"type":395,"tag":433,"props":1931,"children":1932},{"class":435,"line":490},[1933],{"type":395,"tag":433,"props":1934,"children":1935},{},[1936],{"type":401,"value":1937},"    if (fn && !this.subs.find(x => x === fn)) {\n",{"type":395,"tag":433,"props":1939,"children":1940},{"class":435,"line":608},[1941],{"type":395,"tag":433,"props":1942,"children":1943},{},[1944],{"type":401,"value":1945},"      this.addSub(fn)\n",{"type":395,"tag":433,"props":1947,"children":1948},{"class":435,"line":617},[1949],{"type":395,"tag":433,"props":1950,"children":1951},{},[1952],{"type":401,"value":964},{"type":395,"tag":433,"props":1954,"children":1955},{"class":435,"line":626},[1956],{"type":395,"tag":433,"props":1957,"children":1958},{},[1959],{"type":401,"value":581},{"type":395,"tag":433,"props":1961,"children":1962},{"class":435,"line":635},[1963],{"type":395,"tag":433,"props":1964,"children":1965},{},[1966],{"type":401,"value":1967},"  notify (newVal, oldVal) {}\n",{"type":395,"tag":433,"props":1969,"children":1970},{"class":435,"line":643},[1971],{"type":395,"tag":433,"props":1972,"children":1973},{},[1974],{"type":401,"value":649},{"type":395,"tag":433,"props":1976,"children":1977},{"class":435,"line":792},[1978],{"type":395,"tag":433,"props":1979,"children":1980},{"emptyLinePlaceholder":387},[1981],{"type":401,"value":1982},"\n",{"type":395,"tag":433,"props":1984,"children":1985},{"class":435,"line":801},[1986],{"type":395,"tag":433,"props":1987,"children":1988},{},[1989],{"type":401,"value":1990},"let handleDep = null\n",{"type":395,"tag":433,"props":1992,"children":1993},{"class":435,"line":810},[1994],{"type":395,"tag":433,"props":1995,"children":1996},{},[1997],{"type":401,"value":1277},{"type":395,"tag":433,"props":1999,"children":2000},{"class":435,"line":818},[2001],{"type":395,"tag":433,"props":2002,"children":2003},{},[2004],{"type":401,"value":2005},"  watch (key, fn, obj = this.store) {\n",{"type":395,"tag":433,"props":2007,"children":2008},{"class":435,"line":827},[2009],{"type":395,"tag":433,"props":2010,"children":2011},{},[2012],{"type":401,"value":2013},"    handleFn = fn\n",{"type":395,"tag":433,"props":2015,"children":2016},{"class":435,"line":1815},[2017],{"type":395,"tag":433,"props":2018,"children":2019},{},[2020],{"type":401,"value":2021},"    console.log(obj.key)\n",{"type":395,"tag":433,"props":2023,"children":2024},{"class":435,"line":1828},[2025],{"type":395,"tag":433,"props":2026,"children":2027},{},[2028],{"type":401,"value":581},{"type":395,"tag":433,"props":2030,"children":2031},{"class":435,"line":1836},[2032],{"type":395,"tag":433,"props":2033,"children":2034},{},[2035],{"type":401,"value":2036},"  set (key, val, options = {}, obj = this.store) {\n",{"type":395,"tag":433,"props":2038,"children":2040},{"class":435,"line":2039},21,[2041],{"type":395,"tag":433,"props":2042,"children":2043},{},[2044],{"type":401,"value":2045},"    const dep = new Dep()\n",{"type":395,"tag":433,"props":2047,"children":2049},{"class":435,"line":2048},22,[2050],{"type":395,"tag":433,"props":2051,"children":2052},{},[2053],{"type":401,"value":2054},"    Object.defineProperty(obj, key, {\n",{"type":395,"tag":433,"props":2056,"children":2058},{"class":435,"line":2057},23,[2059],{"type":395,"tag":433,"props":2060,"children":2061},{},[2062],{"type":401,"value":2063},"      enumerable: true,\n",{"type":395,"tag":433,"props":2065,"children":2067},{"class":435,"line":2066},24,[2068],{"type":395,"tag":433,"props":2069,"children":2070},{},[2071],{"type":401,"value":2072},"      configurable: true,\n",{"type":395,"tag":433,"props":2074,"children":2076},{"class":435,"line":2075},25,[2077],{"type":395,"tag":433,"props":2078,"children":2079},{},[2080],{"type":401,"value":2081},"      get: () => {\n",{"type":395,"tag":433,"props":2083,"children":2085},{"class":435,"line":2084},26,[2086],{"type":395,"tag":433,"props":2087,"children":2088},{},[2089],{"type":401,"value":2090},"        handleDep = dep\n",{"type":395,"tag":433,"props":2092,"children":2094},{"class":435,"line":2093},27,[2095],{"type":395,"tag":433,"props":2096,"children":2097},{},[2098],{"type":401,"value":2099},"        handleDep.collect()\n",{"type":395,"tag":433,"props":2101,"children":2103},{"class":435,"line":2102},28,[2104],{"type":395,"tag":433,"props":2105,"children":2106},{},[2107],{"type":401,"value":2108},"        return val\n",{"type":395,"tag":433,"props":2110,"children":2112},{"class":435,"line":2111},29,[2113],{"type":395,"tag":433,"props":2114,"children":2115},{},[2116],{"type":401,"value":2117},"      },\n",{"type":395,"tag":433,"props":2119,"children":2121},{"class":435,"line":2120},30,[2122],{"type":395,"tag":433,"props":2123,"children":2124},{},[2125],{"type":401,"value":2126},"      set: newVal => {}\n",{"type":395,"tag":433,"props":2128,"children":2130},{"class":435,"line":2129},31,[2131],{"type":395,"tag":433,"props":2132,"children":2133},{},[2134],{"type":401,"value":2135},"    })\n",{"type":395,"tag":433,"props":2137,"children":2139},{"class":435,"line":2138},32,[2140],{"type":395,"tag":433,"props":2141,"children":2142},{},[2143],{"type":401,"value":581},{"type":395,"tag":433,"props":2145,"children":2147},{"class":435,"line":2146},33,[2148],{"type":395,"tag":433,"props":2149,"children":2150},{},[2151],{"type":401,"value":649},{"type":395,"tag":396,"props":2153,"children":2155},{"id":2154},"处理-key-值为对象链的情况",[2156],{"type":401,"value":2157},"处理 key 值为对象链的情况",{"type":395,"tag":403,"props":2159,"children":2160},{},[2161,2163,2169],{"type":401,"value":2162},"在先前的 watch 函数中, 我们使用 console.log(obj.key)去触发对应属性的 getter, 如果我们调用方式是",{"type":395,"tag":409,"props":2164,"children":2166},{"className":2165},[],[2167],{"type":401,"value":2168},"watch('a.b.c')",{"type":401,"value":2170},"就无能为力了. 这里我们封装一个通用方法, 用于处理对象链字符串的形式:",{"type":395,"tag":423,"props":2172,"children":2174},{"className":425,"code":2173,"language":427,"meta":388,"style":388},"// 通过将字符串'a.b'分割为['a', 'b'], 再使用一个while循环就可以走完这个对象链\nfunction walkChains (key, obj) {\n  const segments = key.split('.')\n  let deepObj = obj\n  while (segments.length) {\n    deepObj = deepObj[segments.shift()]\n  }\n}\nclass VX {\n  watch (key, fn, obj = this.store) {\n    handleFn = fn\n    walkChains(key, obj)\n  }\n}\n",[2175],{"type":395,"tag":409,"props":2176,"children":2177},{"__ignoreMap":388},[2178,2186,2194,2202,2210,2218,2226,2233,2240,2247,2254,2261,2269,2276],{"type":395,"tag":433,"props":2179,"children":2180},{"class":435,"line":436},[2181],{"type":395,"tag":433,"props":2182,"children":2183},{},[2184],{"type":401,"value":2185},"// 通过将字符串'a.b'分割为['a', 'b'], 再使用一个while循环就可以走完这个对象链\n",{"type":395,"tag":433,"props":2187,"children":2188},{"class":435,"line":445},[2189],{"type":395,"tag":433,"props":2190,"children":2191},{},[2192],{"type":401,"value":2193},"function walkChains (key, obj) {\n",{"type":395,"tag":433,"props":2195,"children":2196},{"class":435,"line":454},[2197],{"type":395,"tag":433,"props":2198,"children":2199},{},[2200],{"type":401,"value":2201},"  const segments = key.split('.')\n",{"type":395,"tag":433,"props":2203,"children":2204},{"class":435,"line":463},[2205],{"type":395,"tag":433,"props":2206,"children":2207},{},[2208],{"type":401,"value":2209},"  let deepObj = obj\n",{"type":395,"tag":433,"props":2211,"children":2212},{"class":435,"line":472},[2213],{"type":395,"tag":433,"props":2214,"children":2215},{},[2216],{"type":401,"value":2217},"  while (segments.length) {\n",{"type":395,"tag":433,"props":2219,"children":2220},{"class":435,"line":481},[2221],{"type":395,"tag":433,"props":2222,"children":2223},{},[2224],{"type":401,"value":2225},"    deepObj = deepObj[segments.shift()]\n",{"type":395,"tag":433,"props":2227,"children":2228},{"class":435,"line":490},[2229],{"type":395,"tag":433,"props":2230,"children":2231},{},[2232],{"type":401,"value":581},{"type":395,"tag":433,"props":2234,"children":2235},{"class":435,"line":608},[2236],{"type":395,"tag":433,"props":2237,"children":2238},{},[2239],{"type":401,"value":649},{"type":395,"tag":433,"props":2241,"children":2242},{"class":435,"line":617},[2243],{"type":395,"tag":433,"props":2244,"children":2245},{},[2246],{"type":401,"value":1277},{"type":395,"tag":433,"props":2248,"children":2249},{"class":435,"line":626},[2250],{"type":395,"tag":433,"props":2251,"children":2252},{},[2253],{"type":401,"value":2005},{"type":395,"tag":433,"props":2255,"children":2256},{"class":435,"line":635},[2257],{"type":395,"tag":433,"props":2258,"children":2259},{},[2260],{"type":401,"value":2013},{"type":395,"tag":433,"props":2262,"children":2263},{"class":435,"line":643},[2264],{"type":395,"tag":433,"props":2265,"children":2266},{},[2267],{"type":401,"value":2268},"    walkChains(key, obj)\n",{"type":395,"tag":433,"props":2270,"children":2271},{"class":435,"line":792},[2272],{"type":395,"tag":433,"props":2273,"children":2274},{},[2275],{"type":401,"value":581},{"type":395,"tag":433,"props":2277,"children":2278},{"class":435,"line":801},[2279],{"type":395,"tag":433,"props":2280,"children":2281},{},[2282],{"type":401,"value":649},{"type":395,"tag":403,"props":2284,"children":2285},{},[2286,2288,2294],{"type":401,"value":2287},"在 set 方法中处理对象链字符串稍微有些不同, 因为如果",{"type":395,"tag":409,"props":2289,"children":2291},{"className":2290},[],[2292],{"type":401,"value":2293},"set('a.b')",{"type":401,"value":2295},"时, 没有在我们全局对象中找到 a 属性, 这里应该抛错.",{"type":395,"tag":403,"props":2297,"children":2298},{},[2299,2301,2307],{"type":401,"value":2300},"实际的处理中, 需要推断'obj.a'以及'obj.a.b'是否存在. 假设没有'obj.a', 那么我们应该创建一个新的对象, 并且给新的对象添加属性'b', 所以代码类似",{"type":395,"tag":409,"props":2302,"children":2304},{"className":2303},[],[2305],{"type":401,"value":2306},"walkChains",{"type":401,"value":2308},"函数, 只是稍作一层判断:",{"type":395,"tag":423,"props":2310,"children":2312},{"className":425,"code":2311,"language":427,"meta":388,"style":388},"set (key, val, obj) {\n  const segments = key.split('.')\n  // 这里需要注意, 我们只处理到倒数第二个属性\n  while (segments.length > 1) {\n    const handleKey = segments.shift()\n    const handleVal = obj[handleKey]\n    // 存在'obj.a'的情况\n    if (typeof handleVal === 'object') {\n      obj = handleVal\n    // 不存在'obj.a'则给a属性赋一个非响应式的对象\n    } else if (!handleVal) {\n      obj = (\n        key = handleKey,\n        obj[handleKey] = {},\n        obj[handleKey]\n      )\n    } else {\n      console.trace('already has val')\n    }\n  }\n  // 最后一个属性要手动赋值\n  key = segments[0]\n}\n",[2313],{"type":395,"tag":409,"props":2314,"children":2315},{"__ignoreMap":388},[2316,2324,2331,2339,2347,2355,2363,2371,2379,2387,2395,2403,2411,2419,2427,2435,2443,2451,2459,2466,2473,2481,2489],{"type":395,"tag":433,"props":2317,"children":2318},{"class":435,"line":436},[2319],{"type":395,"tag":433,"props":2320,"children":2321},{},[2322],{"type":401,"value":2323},"set (key, val, obj) {\n",{"type":395,"tag":433,"props":2325,"children":2326},{"class":435,"line":445},[2327],{"type":395,"tag":433,"props":2328,"children":2329},{},[2330],{"type":401,"value":2201},{"type":395,"tag":433,"props":2332,"children":2333},{"class":435,"line":454},[2334],{"type":395,"tag":433,"props":2335,"children":2336},{},[2337],{"type":401,"value":2338},"  // 这里需要注意, 我们只处理到倒数第二个属性\n",{"type":395,"tag":433,"props":2340,"children":2341},{"class":435,"line":463},[2342],{"type":395,"tag":433,"props":2343,"children":2344},{},[2345],{"type":401,"value":2346},"  while (segments.length > 1) {\n",{"type":395,"tag":433,"props":2348,"children":2349},{"class":435,"line":472},[2350],{"type":395,"tag":433,"props":2351,"children":2352},{},[2353],{"type":401,"value":2354},"    const handleKey = segments.shift()\n",{"type":395,"tag":433,"props":2356,"children":2357},{"class":435,"line":481},[2358],{"type":395,"tag":433,"props":2359,"children":2360},{},[2361],{"type":401,"value":2362},"    const handleVal = obj[handleKey]\n",{"type":395,"tag":433,"props":2364,"children":2365},{"class":435,"line":490},[2366],{"type":395,"tag":433,"props":2367,"children":2368},{},[2369],{"type":401,"value":2370},"    // 存在'obj.a'的情况\n",{"type":395,"tag":433,"props":2372,"children":2373},{"class":435,"line":608},[2374],{"type":395,"tag":433,"props":2375,"children":2376},{},[2377],{"type":401,"value":2378},"    if (typeof handleVal === 'object') {\n",{"type":395,"tag":433,"props":2380,"children":2381},{"class":435,"line":617},[2382],{"type":395,"tag":433,"props":2383,"children":2384},{},[2385],{"type":401,"value":2386},"      obj = handleVal\n",{"type":395,"tag":433,"props":2388,"children":2389},{"class":435,"line":626},[2390],{"type":395,"tag":433,"props":2391,"children":2392},{},[2393],{"type":401,"value":2394},"    // 不存在'obj.a'则给a属性赋一个非响应式的对象\n",{"type":395,"tag":433,"props":2396,"children":2397},{"class":435,"line":635},[2398],{"type":395,"tag":433,"props":2399,"children":2400},{},[2401],{"type":401,"value":2402},"    } else if (!handleVal) {\n",{"type":395,"tag":433,"props":2404,"children":2405},{"class":435,"line":643},[2406],{"type":395,"tag":433,"props":2407,"children":2408},{},[2409],{"type":401,"value":2410},"      obj = (\n",{"type":395,"tag":433,"props":2412,"children":2413},{"class":435,"line":792},[2414],{"type":395,"tag":433,"props":2415,"children":2416},{},[2417],{"type":401,"value":2418},"        key = handleKey,\n",{"type":395,"tag":433,"props":2420,"children":2421},{"class":435,"line":801},[2422],{"type":395,"tag":433,"props":2423,"children":2424},{},[2425],{"type":401,"value":2426},"        obj[handleKey] = {},\n",{"type":395,"tag":433,"props":2428,"children":2429},{"class":435,"line":810},[2430],{"type":395,"tag":433,"props":2431,"children":2432},{},[2433],{"type":401,"value":2434},"        obj[handleKey]\n",{"type":395,"tag":433,"props":2436,"children":2437},{"class":435,"line":818},[2438],{"type":395,"tag":433,"props":2439,"children":2440},{},[2441],{"type":401,"value":2442},"      )\n",{"type":395,"tag":433,"props":2444,"children":2445},{"class":435,"line":827},[2446],{"type":395,"tag":433,"props":2447,"children":2448},{},[2449],{"type":401,"value":2450},"    } else {\n",{"type":395,"tag":433,"props":2452,"children":2453},{"class":435,"line":1815},[2454],{"type":395,"tag":433,"props":2455,"children":2456},{},[2457],{"type":401,"value":2458},"      console.trace('already has val')\n",{"type":395,"tag":433,"props":2460,"children":2461},{"class":435,"line":1828},[2462],{"type":395,"tag":433,"props":2463,"children":2464},{},[2465],{"type":401,"value":964},{"type":395,"tag":433,"props":2467,"children":2468},{"class":435,"line":1836},[2469],{"type":395,"tag":433,"props":2470,"children":2471},{},[2472],{"type":401,"value":581},{"type":395,"tag":433,"props":2474,"children":2475},{"class":435,"line":2039},[2476],{"type":395,"tag":433,"props":2477,"children":2478},{},[2479],{"type":401,"value":2480},"  // 最后一个属性要手动赋值\n",{"type":395,"tag":433,"props":2482,"children":2483},{"class":435,"line":2048},[2484],{"type":395,"tag":433,"props":2485,"children":2486},{},[2487],{"type":401,"value":2488},"  key = segments[0]\n",{"type":395,"tag":433,"props":2490,"children":2491},{"class":435,"line":2057},[2492],{"type":395,"tag":433,"props":2493,"children":2494},{},[2495],{"type":401,"value":649},{"type":395,"tag":396,"props":2497,"children":2499},{"id":2498},"业务场景应用",[2500],{"type":401,"value":2498},{"type":395,"tag":669,"props":2502,"children":2504},{"id":2503},"小程序跨页面刷新数据",[2505],{"type":401,"value":2503},{"type":395,"tag":403,"props":2507,"children":2508},{},[2509],{"type":401,"value":2510},"我们经常碰到在小程序中由 A 页面跳转到 B 页面, 如果 B 页面进行了一些操作, 希望 A 页面自动刷新数据的情况. 但是由于 A 页面跳转到 B 页面不同(也许是 redirect,也许是 navigate), 处理方法也不尽相同.",{"type":395,"tag":403,"props":2512,"children":2513},{},[2514],{"type":401,"value":2515},"使用 navigate 方式跳转后, A 页面不会被注销, 所以我们一般会通过全局对象去贮存 A 页面实例(也就是 A 页面的 this 对象), 然后在 B 页面直接调用相应的方法(如 A.refreshList())进行刷新操作.",{"type":395,"tag":403,"props":2517,"children":2518},{},[2519,2521,2527],{"type":401,"value":2520},"引入 VX 后, 我们可以在",{"type":395,"tag":409,"props":2522,"children":2524},{"className":2523},[],[2525],{"type":401,"value":2526},"onload",{"type":401,"value":2528},"生命周期直接调用 watch 方法添加订阅:",{"type":395,"tag":423,"props":2530,"children":2532},{"className":425,"code":2531,"language":427,"meta":388,"style":388},"// app.js\nimport VX from '@/utils/suites/vx'\nconst vx = new VX()\napp.vx = vx\napp.store = vx.store\napp.vx.set('userType', '商户')\n\n// page a\nonLoad () {\n  app.vx.watch('userType', userType => {\n    if (userType === '商户') {\n      // ...\n    } else if (userType === '管理员') {\n      // ...\n    }\n  }, {\n    immediate: true\n  })\n}\n\n// page b\nswitchUserType () {\n  app.store.userType = '管理员'\n}\n",[2533],{"type":395,"tag":409,"props":2534,"children":2535},{"__ignoreMap":388},[2536,2544,2552,2559,2567,2575,2583,2590,2598,2606,2614,2622,2630,2638,2645,2652,2660,2668,2675,2682,2689,2697,2705,2713],{"type":395,"tag":433,"props":2537,"children":2538},{"class":435,"line":436},[2539],{"type":395,"tag":433,"props":2540,"children":2541},{},[2542],{"type":401,"value":2543},"// app.js\n",{"type":395,"tag":433,"props":2545,"children":2546},{"class":435,"line":445},[2547],{"type":395,"tag":433,"props":2548,"children":2549},{},[2550],{"type":401,"value":2551},"import VX from '@/utils/suites/vx'\n",{"type":395,"tag":433,"props":2553,"children":2554},{"class":435,"line":454},[2555],{"type":395,"tag":433,"props":2556,"children":2557},{},[2558],{"type":401,"value":1330},{"type":395,"tag":433,"props":2560,"children":2561},{"class":435,"line":463},[2562],{"type":395,"tag":433,"props":2563,"children":2564},{},[2565],{"type":401,"value":2566},"app.vx = vx\n",{"type":395,"tag":433,"props":2568,"children":2569},{"class":435,"line":472},[2570],{"type":395,"tag":433,"props":2571,"children":2572},{},[2573],{"type":401,"value":2574},"app.store = vx.store\n",{"type":395,"tag":433,"props":2576,"children":2577},{"class":435,"line":481},[2578],{"type":395,"tag":433,"props":2579,"children":2580},{},[2581],{"type":401,"value":2582},"app.vx.set('userType', '商户')\n",{"type":395,"tag":433,"props":2584,"children":2585},{"class":435,"line":490},[2586],{"type":395,"tag":433,"props":2587,"children":2588},{"emptyLinePlaceholder":387},[2589],{"type":401,"value":1982},{"type":395,"tag":433,"props":2591,"children":2592},{"class":435,"line":608},[2593],{"type":395,"tag":433,"props":2594,"children":2595},{},[2596],{"type":401,"value":2597},"// page a\n",{"type":395,"tag":433,"props":2599,"children":2600},{"class":435,"line":617},[2601],{"type":395,"tag":433,"props":2602,"children":2603},{},[2604],{"type":401,"value":2605},"onLoad () {\n",{"type":395,"tag":433,"props":2607,"children":2608},{"class":435,"line":626},[2609],{"type":395,"tag":433,"props":2610,"children":2611},{},[2612],{"type":401,"value":2613},"  app.vx.watch('userType', userType => {\n",{"type":395,"tag":433,"props":2615,"children":2616},{"class":435,"line":635},[2617],{"type":395,"tag":433,"props":2618,"children":2619},{},[2620],{"type":401,"value":2621},"    if (userType === '商户') {\n",{"type":395,"tag":433,"props":2623,"children":2624},{"class":435,"line":643},[2625],{"type":395,"tag":433,"props":2626,"children":2627},{},[2628],{"type":401,"value":2629},"      // ...\n",{"type":395,"tag":433,"props":2631,"children":2632},{"class":435,"line":792},[2633],{"type":395,"tag":433,"props":2634,"children":2635},{},[2636],{"type":401,"value":2637},"    } else if (userType === '管理员') {\n",{"type":395,"tag":433,"props":2639,"children":2640},{"class":435,"line":801},[2641],{"type":395,"tag":433,"props":2642,"children":2643},{},[2644],{"type":401,"value":2629},{"type":395,"tag":433,"props":2646,"children":2647},{"class":435,"line":810},[2648],{"type":395,"tag":433,"props":2649,"children":2650},{},[2651],{"type":401,"value":964},{"type":395,"tag":433,"props":2653,"children":2654},{"class":435,"line":818},[2655],{"type":395,"tag":433,"props":2656,"children":2657},{},[2658],{"type":401,"value":2659},"  }, {\n",{"type":395,"tag":433,"props":2661,"children":2662},{"class":435,"line":827},[2663],{"type":395,"tag":433,"props":2664,"children":2665},{},[2666],{"type":401,"value":2667},"    immediate: true\n",{"type":395,"tag":433,"props":2669,"children":2670},{"class":435,"line":1815},[2671],{"type":395,"tag":433,"props":2672,"children":2673},{},[2674],{"type":401,"value":972},{"type":395,"tag":433,"props":2676,"children":2677},{"class":435,"line":1828},[2678],{"type":395,"tag":433,"props":2679,"children":2680},{},[2681],{"type":401,"value":649},{"type":395,"tag":433,"props":2683,"children":2684},{"class":435,"line":1836},[2685],{"type":395,"tag":433,"props":2686,"children":2687},{"emptyLinePlaceholder":387},[2688],{"type":401,"value":1982},{"type":395,"tag":433,"props":2690,"children":2691},{"class":435,"line":2039},[2692],{"type":395,"tag":433,"props":2693,"children":2694},{},[2695],{"type":401,"value":2696},"// page b\n",{"type":395,"tag":433,"props":2698,"children":2699},{"class":435,"line":2048},[2700],{"type":395,"tag":433,"props":2701,"children":2702},{},[2703],{"type":401,"value":2704},"switchUserType () {\n",{"type":395,"tag":433,"props":2706,"children":2707},{"class":435,"line":2057},[2708],{"type":395,"tag":433,"props":2709,"children":2710},{},[2711],{"type":401,"value":2712},"  app.store.userType = '管理员'\n",{"type":395,"tag":433,"props":2714,"children":2715},{"class":435,"line":2066},[2716],{"type":395,"tag":433,"props":2717,"children":2718},{},[2719],{"type":401,"value":649},{"type":395,"tag":396,"props":2721,"children":2723},{"id":2722},"可能遇到的问题",[2724],{"type":401,"value":2722},{"type":395,"tag":669,"props":2726,"children":2728},{"id":2727},"给-watch-方法添加的函数设置立即执行",[2729],{"type":401,"value":2730},"给 watch 方法添加的函数设置立即执行",{"type":395,"tag":403,"props":2732,"children":2733},{},[2734],{"type":401,"value":2735},"有的时候我们希望通过 watch 添加函数的同时还立即执行该函数一次, 这个时候我们需要再定义额外的参数传递到 watch 中. 问题是这个函数不一定是同步函数.",{"type":395,"tag":403,"props":2737,"children":2738},{},[2739],{"type":401,"value":2740},"简单处理如下:",{"type":395,"tag":423,"props":2742,"children":2744},{"className":425,"code":2743,"language":427,"meta":388,"style":388},"class VX {\n  async watch (key, fn, options = { immediately: false }, obj = this.store) {\n    handleDep = fn\n    walkChains(key, obj)\n    options.immediately && await fn(options.defaultParams)\n  }\n}\n",[2745],{"type":395,"tag":409,"props":2746,"children":2747},{"__ignoreMap":388},[2748,2755,2763,2771,2778,2786,2793],{"type":395,"tag":433,"props":2749,"children":2750},{"class":435,"line":436},[2751],{"type":395,"tag":433,"props":2752,"children":2753},{},[2754],{"type":401,"value":1277},{"type":395,"tag":433,"props":2756,"children":2757},{"class":435,"line":445},[2758],{"type":395,"tag":433,"props":2759,"children":2760},{},[2761],{"type":401,"value":2762},"  async watch (key, fn, options = { immediately: false }, obj = this.store) {\n",{"type":395,"tag":433,"props":2764,"children":2765},{"class":435,"line":454},[2766],{"type":395,"tag":433,"props":2767,"children":2768},{},[2769],{"type":401,"value":2770},"    handleDep = fn\n",{"type":395,"tag":433,"props":2772,"children":2773},{"class":435,"line":463},[2774],{"type":395,"tag":433,"props":2775,"children":2776},{},[2777],{"type":401,"value":2268},{"type":395,"tag":433,"props":2779,"children":2780},{"class":435,"line":472},[2781],{"type":395,"tag":433,"props":2782,"children":2783},{},[2784],{"type":401,"value":2785},"    options.immediately && await fn(options.defaultParams)\n",{"type":395,"tag":433,"props":2787,"children":2788},{"class":435,"line":481},[2789],{"type":395,"tag":433,"props":2790,"children":2791},{},[2792],{"type":401,"value":581},{"type":395,"tag":433,"props":2794,"children":2795},{"class":435,"line":490},[2796],{"type":395,"tag":433,"props":2797,"children":2798},{},[2799],{"type":401,"value":649},{"type":395,"tag":669,"props":2801,"children":2803},{"id":2802},"this-绑定丢失问题",[2804],{"type":401,"value":2805},"this 绑定丢失问题",{"type":395,"tag":403,"props":2807,"children":2808},{},[2809],{"type":401,"value":2810},"在我在对 VX 进行删除属性方法的扩展时, 我往 walkChain 函数中添加了一个执行回调函数的机制, 并且在删除属性这个方法直接调用了 walkChain:",{"type":395,"tag":423,"props":2812,"children":2814},{"className":997,"code":2813,"language":999,"meta":388,"style":388},"  function walkChains (key, obj, fn) {\n    const segments = key.split('.')\n    let deepObj = obj\n    while (segments.length) {\n      deepObj = deepObj[segments.shift()]\n      fn && fn()\n    }\n  }\n",[2815],{"type":395,"tag":409,"props":2816,"children":2817},{"__ignoreMap":388},[2818,2863,2916,2938,2972,3011,3032,3039],{"type":395,"tag":433,"props":2819,"children":2820},{"class":435,"line":436},[2821,2826,2831,2835,2839,2843,2847,2851,2855,2859],{"type":395,"tag":433,"props":2822,"children":2823},{"style":1085},[2824],{"type":401,"value":2825},"  function",{"type":395,"tag":433,"props":2827,"children":2828},{"style":1009},[2829],{"type":401,"value":2830}," walkChains",{"type":395,"tag":433,"props":2832,"children":2833},{"style":1021},[2834],{"type":401,"value":1412},{"type":395,"tag":433,"props":2836,"children":2837},{"style":1415},[2838],{"type":401,"value":1418},{"type":395,"tag":433,"props":2840,"children":2841},{"style":1021},[2842],{"type":401,"value":1024},{"type":395,"tag":433,"props":2844,"children":2845},{"style":1415},[2846],{"type":401,"value":1436},{"type":395,"tag":433,"props":2848,"children":2849},{"style":1021},[2850],{"type":401,"value":1024},{"type":395,"tag":433,"props":2852,"children":2853},{"style":1415},[2854],{"type":401,"value":1427},{"type":395,"tag":433,"props":2856,"children":2857},{"style":1021},[2858],{"type":401,"value":1458},{"type":395,"tag":433,"props":2860,"children":2861},{"style":1021},[2862],{"type":401,"value":1398},{"type":395,"tag":433,"props":2864,"children":2865},{"class":435,"line":445},[2866,2871,2876,2880,2884,2888,2893,2897,2903,2908,2912],{"type":395,"tag":433,"props":2867,"children":2868},{"style":1085},[2869],{"type":401,"value":2870},"    const",{"type":395,"tag":433,"props":2872,"children":2873},{"style":1091},[2874],{"type":401,"value":2875}," segments",{"type":395,"tag":433,"props":2877,"children":2878},{"style":1041},[2879],{"type":401,"value":1099},{"type":395,"tag":433,"props":2881,"children":2882},{"style":1015},[2883],{"type":401,"value":1150},{"type":395,"tag":433,"props":2885,"children":2886},{"style":1021},[2887],{"type":401,"value":1069},{"type":395,"tag":433,"props":2889,"children":2890},{"style":1009},[2891],{"type":401,"value":2892},"split",{"type":395,"tag":433,"props":2894,"children":2895},{"style":1112},[2896],{"type":401,"value":1136},{"type":395,"tag":433,"props":2898,"children":2900},{"style":2899},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[2901],{"type":401,"value":2902},"'",{"type":395,"tag":433,"props":2904,"children":2906},{"style":2905},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[2907],{"type":401,"value":1069},{"type":395,"tag":433,"props":2909,"children":2910},{"style":2899},[2911],{"type":401,"value":2902},{"type":395,"tag":433,"props":2913,"children":2914},{"style":1112},[2915],{"type":401,"value":1164},{"type":395,"tag":433,"props":2917,"children":2918},{"class":435,"line":454},[2919,2924,2929,2933],{"type":395,"tag":433,"props":2920,"children":2921},{"style":1085},[2922],{"type":401,"value":2923},"    let",{"type":395,"tag":433,"props":2925,"children":2926},{"style":1015},[2927],{"type":401,"value":2928}," deepObj",{"type":395,"tag":433,"props":2930,"children":2931},{"style":1041},[2932],{"type":401,"value":1099},{"type":395,"tag":433,"props":2934,"children":2935},{"style":1015},[2936],{"type":401,"value":2937}," obj\n",{"type":395,"tag":433,"props":2939,"children":2940},{"class":435,"line":463},[2941,2946,2950,2955,2959,2964,2968],{"type":395,"tag":433,"props":2942,"children":2943},{"style":1170},[2944],{"type":401,"value":2945},"    while",{"type":395,"tag":433,"props":2947,"children":2948},{"style":1112},[2949],{"type":401,"value":1412},{"type":395,"tag":433,"props":2951,"children":2952},{"style":1015},[2953],{"type":401,"value":2954},"segments",{"type":395,"tag":433,"props":2956,"children":2957},{"style":1021},[2958],{"type":401,"value":1069},{"type":395,"tag":433,"props":2960,"children":2961},{"style":1091},[2962],{"type":401,"value":2963},"length",{"type":395,"tag":433,"props":2965,"children":2966},{"style":1112},[2967],{"type":401,"value":1500},{"type":395,"tag":433,"props":2969,"children":2970},{"style":1021},[2971],{"type":401,"value":1079},{"type":395,"tag":433,"props":2973,"children":2974},{"class":435,"line":472},[2975,2980,2984,2988,2993,2997,3001,3006],{"type":395,"tag":433,"props":2976,"children":2977},{"style":1015},[2978],{"type":401,"value":2979},"      deepObj",{"type":395,"tag":433,"props":2981,"children":2982},{"style":1041},[2983],{"type":401,"value":1099},{"type":395,"tag":433,"props":2985,"children":2986},{"style":1015},[2987],{"type":401,"value":2928},{"type":395,"tag":433,"props":2989,"children":2990},{"style":1112},[2991],{"type":401,"value":2992},"[",{"type":395,"tag":433,"props":2994,"children":2995},{"style":1015},[2996],{"type":401,"value":2954},{"type":395,"tag":433,"props":2998,"children":2999},{"style":1021},[3000],{"type":401,"value":1069},{"type":395,"tag":433,"props":3002,"children":3003},{"style":1009},[3004],{"type":401,"value":3005},"shift",{"type":395,"tag":433,"props":3007,"children":3008},{"style":1112},[3009],{"type":401,"value":3010},"()]\n",{"type":395,"tag":433,"props":3012,"children":3013},{"class":435,"line":481},[3014,3019,3024,3028],{"type":395,"tag":433,"props":3015,"children":3016},{"style":1015},[3017],{"type":401,"value":3018},"      fn",{"type":395,"tag":433,"props":3020,"children":3021},{"style":1041},[3022],{"type":401,"value":3023}," &&",{"type":395,"tag":433,"props":3025,"children":3026},{"style":1009},[3027],{"type":401,"value":1427},{"type":395,"tag":433,"props":3029,"children":3030},{"style":1112},[3031],{"type":401,"value":1115},{"type":395,"tag":433,"props":3033,"children":3034},{"class":435,"line":490},[3035],{"type":395,"tag":433,"props":3036,"children":3037},{"style":1021},[3038],{"type":401,"value":964},{"type":395,"tag":433,"props":3040,"children":3041},{"class":435,"line":608},[3042],{"type":395,"tag":433,"props":3043,"children":3044},{"style":1021},[3045],{"type":401,"value":581},{"type":395,"tag":423,"props":3047,"children":3049},{"className":425,"code":3048,"language":427,"meta":388,"style":388},"del (key, obj = this.store) {\n  walkChains(key, obj, handleDep.clear)\n  delete obj[key]\n}\n",[3050],{"type":395,"tag":409,"props":3051,"children":3052},{"__ignoreMap":388},[3053,3061,3069,3077],{"type":395,"tag":433,"props":3054,"children":3055},{"class":435,"line":436},[3056],{"type":395,"tag":433,"props":3057,"children":3058},{},[3059],{"type":401,"value":3060},"del (key, obj = this.store) {\n",{"type":395,"tag":433,"props":3062,"children":3063},{"class":435,"line":445},[3064],{"type":395,"tag":433,"props":3065,"children":3066},{},[3067],{"type":401,"value":3068},"  walkChains(key, obj, handleDep.clear)\n",{"type":395,"tag":433,"props":3070,"children":3071},{"class":435,"line":454},[3072],{"type":395,"tag":433,"props":3073,"children":3074},{},[3075],{"type":401,"value":3076},"  delete obj[key]\n",{"type":395,"tag":433,"props":3078,"children":3079},{"class":435,"line":463},[3080],{"type":395,"tag":433,"props":3081,"children":3082},{},[3083],{"type":401,"value":649},{"type":395,"tag":403,"props":3085,"children":3086},{},[3087,3089,3094],{"type":401,"value":3088},"因为 handleDep.clear 当成参数传递进 walkChains 中会",{"type":395,"tag":536,"props":3090,"children":3091},{},[3092],{"type":401,"value":3093},"丢失 this 绑定",{"type":401,"value":3095},", 所以上面那段代码其实是有问题的, 不过稍作修改就好了:",{"type":395,"tag":423,"props":3097,"children":3099},{"className":997,"code":3098,"language":999,"meta":388,"style":388},"  del (key, obj = this.store) {\n    walkChains(key, obj, () => handleDep.clear())\n    delete obj[key]\n  }\n",[3100],{"type":395,"tag":409,"props":3101,"children":3102},{"__ignoreMap":388},[3103,3143,3198,3223],{"type":395,"tag":433,"props":3104,"children":3105},{"class":435,"line":436},[3106,3111,3115,3119,3123,3127,3131,3135,3139],{"type":395,"tag":433,"props":3107,"children":3108},{"style":1009},[3109],{"type":401,"value":3110},"  del",{"type":395,"tag":433,"props":3112,"children":3113},{"style":1015},[3114],{"type":401,"value":1018},{"type":395,"tag":433,"props":3116,"children":3117},{"style":1021},[3118],{"type":401,"value":1024},{"type":395,"tag":433,"props":3120,"children":3121},{"style":1015},[3122],{"type":401,"value":1054},{"type":395,"tag":433,"props":3124,"children":3125},{"style":1041},[3126],{"type":401,"value":1044},{"type":395,"tag":433,"props":3128,"children":3129},{"style":1061},[3130],{"type":401,"value":1064},{"type":395,"tag":433,"props":3132,"children":3133},{"style":1021},[3134],{"type":401,"value":1069},{"type":395,"tag":433,"props":3136,"children":3137},{"style":1015},[3138],{"type":401,"value":1074},{"type":395,"tag":433,"props":3140,"children":3141},{"style":1021},[3142],{"type":401,"value":1079},{"type":395,"tag":433,"props":3144,"children":3145},{"class":435,"line":445},[3146,3151,3155,3159,3163,3167,3171,3175,3179,3184,3188,3193],{"type":395,"tag":433,"props":3147,"children":3148},{"style":1009},[3149],{"type":401,"value":3150},"    walkChains",{"type":395,"tag":433,"props":3152,"children":3153},{"style":1112},[3154],{"type":401,"value":1136},{"type":395,"tag":433,"props":3156,"children":3157},{"style":1015},[3158],{"type":401,"value":1418},{"type":395,"tag":433,"props":3160,"children":3161},{"style":1021},[3162],{"type":401,"value":1024},{"type":395,"tag":433,"props":3164,"children":3165},{"style":1015},[3166],{"type":401,"value":1436},{"type":395,"tag":433,"props":3168,"children":3169},{"style":1021},[3170],{"type":401,"value":1024},{"type":395,"tag":433,"props":3172,"children":3173},{"style":1021},[3174],{"type":401,"value":1740},{"type":395,"tag":433,"props":3176,"children":3177},{"style":1085},[3178],{"type":401,"value":1745},{"type":395,"tag":433,"props":3180,"children":3181},{"style":1015},[3182],{"type":401,"value":3183}," handleDep",{"type":395,"tag":433,"props":3185,"children":3186},{"style":1021},[3187],{"type":401,"value":1069},{"type":395,"tag":433,"props":3189,"children":3190},{"style":1009},[3191],{"type":401,"value":3192},"clear",{"type":395,"tag":433,"props":3194,"children":3195},{"style":1112},[3196],{"type":401,"value":3197},"())\n",{"type":395,"tag":433,"props":3199,"children":3200},{"class":435,"line":454},[3201,3206,3210,3214,3218],{"type":395,"tag":433,"props":3202,"children":3203},{"style":1041},[3204],{"type":401,"value":3205},"    delete",{"type":395,"tag":433,"props":3207,"children":3208},{"style":1015},[3209],{"type":401,"value":1436},{"type":395,"tag":433,"props":3211,"children":3212},{"style":1112},[3213],{"type":401,"value":2992},{"type":395,"tag":433,"props":3215,"children":3216},{"style":1015},[3217],{"type":401,"value":1418},{"type":395,"tag":433,"props":3219,"children":3220},{"style":1112},[3221],{"type":401,"value":3222},"]\n",{"type":395,"tag":433,"props":3224,"children":3225},{"class":435,"line":463},[3226],{"type":395,"tag":433,"props":3227,"children":3228},{"style":1021},[3229],{"type":401,"value":581},{"type":395,"tag":396,"props":3231,"children":3233},{"id":3232},"后语",[3234],{"type":401,"value":3232},{"type":395,"tag":403,"props":3236,"children":3237},{},[3238],{"type":401,"value":3239},"在这篇文章中, 我们通过对 defineProperty 进行封装, 实现了一个简单的对象属性侦听器的功能, 以弥补小程序所没有的$watch 能力. 在此基础上, 各位可以再对 VX 进行扩展, 更方便地去书写业务代码.",{"type":395,"tag":403,"props":3241,"children":3242},{},[3243,3245],{"type":401,"value":3244},"完整代码 ",{"type":395,"tag":3246,"props":3247,"children":3251},"a",{"href":3248,"rel":3249},"https://github.com/Lionad-Morotar/media-gear/blob/master/src/renderer/utils/suites/vx/index.js",[3250],"nofollow",[3252],{"type":401,"value":3253},"GitHub 直达",{"type":395,"tag":3255,"props":3256,"children":3257},"style",{},[3258],{"type":401,"value":3259},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":388,"searchDepth":445,"depth":445,"links":3261},[3262,3263,3264,3265,3268,3273,3274,3277,3281],{"id":398,"depth":445,"text":398},{"id":517,"depth":445,"text":517},{"id":527,"depth":445,"text":527},{"id":665,"depth":445,"text":665,"children":3266},[3267],{"id":671,"depth":454,"text":674},{"id":1216,"depth":445,"text":1219,"children":3269},[3270,3271,3272],{"id":1222,"depth":454,"text":1222},{"id":1254,"depth":454,"text":1257},{"id":1844,"depth":454,"text":1844},{"id":2154,"depth":445,"text":2157},{"id":2498,"depth":445,"text":2498,"children":3275},[3276],{"id":2503,"depth":454,"text":2503},{"id":2722,"depth":445,"text":2722,"children":3278},[3279,3280],{"id":2727,"depth":454,"text":2730},{"id":2802,"depth":454,"text":2805},{"id":3232,"depth":445,"text":3232},"markdown","content:_archieved:2019-05:reactive-in-150loc.md","content","_archieved/2019-05/reactive-in-150loc.md","md",[3288,3291],{"_path":3289,"title":3290,"description":388},"/_archieved/2018-10/noname","🌆 无题",{"_path":3292,"title":3293,"description":388},"/_archieved/2019-06/messy-in-two-years","💖 聊聊此次离职，毕业，及其它杂乱的事情",1708107573027]