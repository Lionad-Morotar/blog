[{"data":1,"prerenderedAt":3021},["Reactive",2],{"navigation":3,"/_archieved/2020-05/type-check":383,"/_archieved/2020-05/type-check-surround":3014},[4,32,80,96,123,129,135,366,372,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"图片模糊","/gists/blur",{"title":148,"_path":149},"渲染相关笔记","/gists/c4d",{"title":151,"_path":152},"CDN 问题记录","/gists/cdn",{"title":154,"_path":155},"消毒剂","/gists/cleaner",{"title":157,"_path":158},"Windows Command","/gists/cmd",{"title":160,"_path":161},"Command","/gists/command",{"title":163,"_path":164},"复杂科学","/gists/complexity-science",{"title":166,"_path":167},"宇宙","/gists/cosmos",{"title":169,"_path":170},"C++","/gists/cpp",{"title":172,"_path":173},"Data Structure","/gists/data-structure",{"title":175,"_path":176},"DEPRESSION","/gists/depression",{"title":178,"_path":179},"设计模式","/gists/design-patterns",{"title":181,"_path":182},"Developer Experience","/gists/developer-experience",{"title":184,"_path":185},"Device Metrics","/gists/device-metrix",{"title":187,"_path":188},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":190,"_path":191},"正则表达式","/gists/eegex",{"title":193,"_path":194},"Emoji","/gists/emoji",{"title":196,"_path":197},"工程","/gists/engineering",{"title":199,"_path":200},"熵","/gists/entropy",{"title":202,"_path":203},"Environment","/gists/environment",{"title":205,"_path":206},"Erlang","/gists/erlang",{"title":208,"_path":209},"逃离塔克夫","/gists/escape-from-tarkov",{"title":211,"_path":212},"ESNext (ES6-ES11)","/gists/esnext",{"title":214,"_path":215},"Eval！","/gists/eval",{"title":217,"_path":218},"Flutter","/gists/flutter",{"title":220,"_path":221},"字体","/gists/font",{"title":223,"_path":224},"JS 函数式编程","/gists/functional",{"title":226,"_path":227},"Google C++ Standard","/gists/google-cpp-standard",{"title":229,"_path":230},"双向链接完全体","/gists/graph",{"title":232,"_path":233},"Hardwares","/gists/hardwares",{"title":235,"_path":236},"哈希冲突","/gists/hash-collision",{"title":238,"_path":239},"信息设计","/gists/information-design",{"title":241,"_path":242},"InstantPage","/gists/instant.page",{"title":244,"_path":245},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":247,"_path":248},"KVStore","/gists/key-value-db",{"title":250,"_path":251},"Kubernetes","/gists/kubernetes",{"title":253,"_path":254},"Makefile","/gists/makefile",{"title":256,"_path":257},"Markdown Inline Style","/gists/markdown-nice",{"title":259,"_path":260},"小程序","/gists/miniapp",{"title":262,"_path":263},"减小页面快照体积","/gists/minify-html",{"title":265,"_path":266},"mklink","/gists/mklink",{"title":268,"_path":269},"Mock","/gists/mock",{"title":271,"_path":272},"多端应用","/gists/multy-end-app",{"title":274,"_path":275},"神经科学","/gists/neuroscience",{"title":277,"_path":278},"OO","/gists/oo",{"title":280,"_path":281},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":283,"_path":284},"人物","/gists/person",{"title":286,"_path":287},"PInvoke","/gists/pinvoke",{"title":289,"_path":290},"像素","/gists/pixel",{"title":292,"_path":293},"PowerShell","/gists/powershell",{"title":295,"_path":296},"量子","/gists/quantum",{"title":298,"_path":299},"保持好奇心","/gists/questions",{"title":301,"_path":302},"React Native","/gists/react-native",{"title":304,"_path":305},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":307,"_path":308},"SEO","/gists/seo",{"title":310,"_path":311},"Shader","/gists/shader",{"title":313,"_path":314},"Shape Up","/gists/shape-up",{"title":316,"_path":317},"睡觉","/gists/sleep",{"title":319,"_path":320},"States","/gists/states",{"title":322,"_path":323},"Storage","/gists/storage",{"title":325,"_path":326},"音视频流处理","/gists/stream-cli",{"title":328,"_path":329},"Symbol","/gists/symbol",{"title":331,"_path":332},"系统论","/gists/systems-theory",{"title":334,"_path":335},"Taro","/gists/taro",{"title":337,"_path":338},"任务切片","/gists/task-slice",{"title":340,"_path":341},"技术偏好","/gists/tech-dudge",{"title":343,"_path":344},"Untitled","/gists/untitled",{"title":346,"_path":347},"可变字体","/gists/variable-font",{"title":349,"_path":350},"视觉错觉","/gists/visual-illusion",{"title":352,"_path":353},"SS(SSR)","/gists/vpn",{"title":355,"_path":356},"VS Code 插件开发","/gists/vscode-plugin",{"title":358,"_path":359},"Web Components","/gists/web-components",{"title":361,"_path":362},"Windows","/gists/windows",{"title":364,"_path":365},"查缺补漏","/gists/wrong",{"title":367,"_path":368,"children":369},"代码笔记 / Gists","/source-code",[370],{"title":371,"_path":368},"🚄 代码笔记",{"title":373,"_path":374,"children":375},"我 / Abount","/hire",[376],{"title":377,"_path":374},"📬 技术简历",{"title":379,"_path":380,"children":381},"todo","/todo",[382],{"title":379,"_path":380},{"_path":384,"_dir":385,"_draft":386,"_partial":387,"_locale":388,"title":389,"description":388,"body":390,"_type":3009,"_id":3010,"_source":3011,"_file":3012,"_extension":3013},"/_archieved/2020-05/type-check","2020-05",false,true,"","🎫 常用类型判断方法的优势及缺陷",{"type":391,"children":392,"toc":2992},"root",[393,401,407,427,432,436,441,446,451,520,525,527,670,675,688,693,707,720,725,731,736,764,769,792,797,801,806,1145,1150,1158,1264,1269,1298,1303,1308,1530,1535,1562,1567,1572,1577,1590,1595,1600,1810,1815,1836,1840,1845,2138,2143,2148,2153,2281,2286,2532,2537,2682,2687,2692,2800,2805,2810,2870,2878,2883,2888,2893,2898,2916,2921,2926,2931,2986],{"type":394,"tag":395,"props":396,"children":398},"element","h2",{"id":397},"常用判断方法",[399],{"type":400,"value":397},"text",{"type":394,"tag":402,"props":403,"children":404},"p",{},[405],{"type":400,"value":406},"类型判断，在 JavaScript 中是一个很经典的问题了。围绕类型判断，有几种常见的解决方法，下是最常用的三种：",{"type":394,"tag":408,"props":409,"children":410},"ul",{},[411,417,422],{"type":394,"tag":412,"props":413,"children":414},"li",{},[415],{"type":400,"value":416},"typeof",{"type":394,"tag":412,"props":418,"children":419},{},[420],{"type":400,"value":421},"instanceof",{"type":394,"tag":412,"props":423,"children":424},{},[425],{"type":400,"value":426},"Object.prototype.toString.call",{"type":394,"tag":402,"props":428,"children":429},{},[430],{"type":400,"value":431},"我将在此文中根据这几种方法在 ECMAScript 规范下的描述及我们开发时的实际情况，聊聊这几种方法的优劣势所在。",{"type":394,"tag":395,"props":433,"children":434},{"id":416},[435],{"type":400,"value":416},{"type":394,"tag":402,"props":437,"children":438},{},[439],{"type":400,"value":440},"当我还是一个 JS 萌新的时候，我就爱上了 typeof 运算符，因为它的作用正如其名，非常好理解。\n利用 typeof 我们可以轻松判断常见的基础类型，如 Number、String、Boolean 等。",{"type":394,"tag":402,"props":442,"children":443},{},[444],{"type":400,"value":445},"ECMAScript 文档中有对 typeof 这样描述：",{"type":394,"tag":402,"props":447,"children":448},{},[449],{"type":400,"value":450},"$\\it{UnaryExpression} \\quad: \\quad \\bf{typeof} \\quad \\it{UnaryExpression}$",{"type":394,"tag":452,"props":453,"children":454},"ol",{},[455,460,495,506,515],{"type":394,"tag":412,"props":456,"children":457},{},[458],{"type":400,"value":459},"Let val be the result of evaluating UnaryExpression.",{"type":394,"tag":412,"props":461,"children":462},{},[463,465,471,473],{"type":400,"value":464},"If ",{"type":394,"tag":466,"props":467,"children":468},"em",{},[469],{"type":400,"value":470},"Type(val)",{"type":400,"value":472}," is Reference, then\n",{"type":394,"tag":408,"props":474,"children":475},{},[476],{"type":394,"tag":412,"props":477,"children":478},{},[479,480,485,487,493],{"type":400,"value":464},{"type":394,"tag":466,"props":481,"children":482},{},[483],{"type":400,"value":484},"IsUnresolvableReference(val)",{"type":400,"value":486}," is true, return ",{"type":394,"tag":488,"props":489,"children":490},"strong",{},[491],{"type":400,"value":492},"\"undefined\"",{"type":400,"value":494},".",{"type":394,"tag":412,"props":496,"children":497},{},[498,500,505],{"type":400,"value":499},"Let val be ",{"type":394,"tag":466,"props":501,"children":502},{},[503],{"type":400,"value":504},"GetValue(val)",{"type":400,"value":494},{"type":394,"tag":412,"props":507,"children":508},{},[509,514],{"type":394,"tag":466,"props":510,"children":511},{},[512],{"type":400,"value":513},"ReturnIfAbrupt(val)",{"type":400,"value":494},{"type":394,"tag":412,"props":516,"children":517},{},[518],{"type":400,"value":519},"Return a String according to Table Below.",{"type":394,"tag":402,"props":521,"children":522},{},[523],{"type":400,"value":524},"简单来说，就是先判断是不是引用未知，是则返回 'undefined'，不然就根据下表找值。",{"type":400,"value":526},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":394,"tag":528,"props":529,"children":530},"table",{},[531,551],{"type":394,"tag":532,"props":533,"children":534},"thead",{},[535],{"type":394,"tag":536,"props":537,"children":538},"tr",{},[539,546],{"type":394,"tag":540,"props":541,"children":543},"th",{"align":542},"center",[544],{"type":400,"value":545},"类型",{"type":394,"tag":540,"props":547,"children":548},{"align":542},[549],{"type":400,"value":550},"返回",{"type":394,"tag":552,"props":553,"children":554},"tbody",{},[555,568,581,594,607,620,632,644,657],{"type":394,"tag":536,"props":556,"children":557},{},[558,564],{"type":394,"tag":559,"props":560,"children":561},"td",{"align":542},[562],{"type":400,"value":563},"Undefined",{"type":394,"tag":559,"props":565,"children":566},{"align":542},[567],{"type":400,"value":492},{"type":394,"tag":536,"props":569,"children":570},{},[571,576],{"type":394,"tag":559,"props":572,"children":573},{"align":542},[574],{"type":400,"value":575},"Null",{"type":394,"tag":559,"props":577,"children":578},{"align":542},[579],{"type":400,"value":580},"\"object\"",{"type":394,"tag":536,"props":582,"children":583},{},[584,589],{"type":394,"tag":559,"props":585,"children":586},{"align":542},[587],{"type":400,"value":588},"Boolean",{"type":394,"tag":559,"props":590,"children":591},{"align":542},[592],{"type":400,"value":593},"\"boolean\"",{"type":394,"tag":536,"props":595,"children":596},{},[597,602],{"type":394,"tag":559,"props":598,"children":599},{"align":542},[600],{"type":400,"value":601},"Number",{"type":394,"tag":559,"props":603,"children":604},{"align":542},[605],{"type":400,"value":606},"\"number\"",{"type":394,"tag":536,"props":608,"children":609},{},[610,615],{"type":394,"tag":559,"props":611,"children":612},{"align":542},[613],{"type":400,"value":614},"String",{"type":394,"tag":559,"props":616,"children":617},{"align":542},[618],{"type":400,"value":619},"\"string\"",{"type":394,"tag":536,"props":621,"children":622},{},[623,628],{"type":394,"tag":559,"props":624,"children":625},{"align":542},[626],{"type":400,"value":627},"Object (ordinary and does not implement [[Call]])",{"type":394,"tag":559,"props":629,"children":630},{"align":542},[631],{"type":400,"value":580},{"type":394,"tag":536,"props":633,"children":634},{},[635,640],{"type":394,"tag":559,"props":636,"children":637},{"align":542},[638],{"type":400,"value":639},"Object (standard exotic and does not implement [[Call]])",{"type":394,"tag":559,"props":641,"children":642},{"align":542},[643],{"type":400,"value":580},{"type":394,"tag":536,"props":645,"children":646},{},[647,652],{"type":394,"tag":559,"props":648,"children":649},{"align":542},[650],{"type":400,"value":651},"Object (implements [[Call]])",{"type":394,"tag":559,"props":653,"children":654},{"align":542},[655],{"type":400,"value":656},"\"function\"",{"type":394,"tag":536,"props":658,"children":659},{},[660,665],{"type":394,"tag":559,"props":661,"children":662},{"align":542},[663],{"type":400,"value":664},"Object (non-standard exotic and does not implement [[Call]])",{"type":394,"tag":559,"props":666,"children":667},{"align":542},[668],{"type":400,"value":669},"Implementation-defined. Must not be \"undefined\", \"boolean\", \"function\", \"number\", \"symbol\", or \"string\".",{"type":394,"tag":402,"props":671,"children":672},{},[673],{"type":400,"value":674},"这里我们详细说说两点：",{"type":394,"tag":452,"props":676,"children":677},{},[678,683],{"type":394,"tag":412,"props":679,"children":680},{},[681],{"type":400,"value":682},"判断内置对象",{"type":394,"tag":412,"props":684,"children":685},{},[686],{"type":400,"value":687},"typeof null === 'object'",{"type":394,"tag":689,"props":690,"children":691},"h3",{"id":682},[692],{"type":400,"value":682},{"type":394,"tag":402,"props":694,"children":695},{},[696,698,705],{"type":400,"value":697},"Function 作为内置对象，为什么 ",{"type":394,"tag":699,"props":700,"children":702},"code",{"className":701},[],[703],{"type":400,"value":704},"typeof (function a(){})",{"type":400,"value":706}," 的值不为“object”呢？",{"type":394,"tag":402,"props":708,"children":709},{},[710,712,718],{"type":400,"value":711},"其实上面那张表有相应线索，倒数第二条，这是一个特殊判定，“如果对象实现了内部方法[[Call]]” 或 “是 ",{"type":394,"tag":699,"props":713,"children":715},{"className":714},[],[716],{"type":400,"value":717},"Callable",{"type":400,"value":719}," 对象”，那么返回值为“function”。",{"type":394,"tag":402,"props":721,"children":722},{},[723],{"type":400,"value":724},"用 typeof 判断对象太麻烦了，一点儿也不实在。一般情况下，我们会用等下介绍的 Object.prototype.toString 去判断内置对象。",{"type":394,"tag":689,"props":726,"children":728},{"id":727},"typeof-null",[729],{"type":400,"value":730},"typeof null",{"type":394,"tag":402,"props":732,"children":733},{},[734],{"type":400,"value":735},"null 是用来标记“期待指向”的，不是 Object 类型，所以 typeof null === 'object' 是一个程序错误。\n这要追溯到第一版 JavaScript。这版 JS 的实现中，值是存储在 32 位单位中，其中端序最小的 3 位，用来表示值的类型，如下：",{"type":394,"tag":408,"props":737,"children":738},{},[739,744,749,754,759],{"type":394,"tag":412,"props":740,"children":741},{},[742],{"type":400,"value":743},"000：Object",{"type":394,"tag":412,"props":745,"children":746},{},[747],{"type":400,"value":748},"001：Int",{"type":394,"tag":412,"props":750,"children":751},{},[752],{"type":400,"value":753},"010：Double",{"type":394,"tag":412,"props":755,"children":756},{},[757],{"type":400,"value":758},"100：String",{"type":394,"tag":412,"props":760,"children":761},{},[762],{"type":400,"value":763},"110：Boolean",{"type":394,"tag":402,"props":765,"children":766},{},[767],{"type":400,"value":768},"此外，还有两种特殊值：",{"type":394,"tag":408,"props":770,"children":771},{},[772,782],{"type":394,"tag":412,"props":773,"children":774},{},[775,780],{"type":394,"tag":488,"props":776,"children":777},{},[778],{"type":400,"value":779},"undefined",{"type":400,"value":781}," (JSVAL_VOID): $-2^{32}$",{"type":394,"tag":412,"props":783,"children":784},{},[785,790],{"type":394,"tag":488,"props":786,"children":787},{},[788],{"type":400,"value":789},"null",{"type":400,"value":791}," (JSVAL_NULL): 用全为 0 的机器码表示的 NULL 指针（或，一个指向 0 的 Object 类型的值）",{"type":394,"tag":402,"props":793,"children":794},{},[795],{"type":400,"value":796},"也就是说，对程序而言，typeof null 判断类型是根据前三位 0 取得的“object”。这是一个历史遗留问题，有人提出过修复方案，但是怕影响历史遗留代码，修复便被否决了。",{"type":394,"tag":395,"props":798,"children":799},{"id":421},[800],{"type":400,"value":421},{"type":394,"tag":402,"props":802,"children":803},{},[804],{"type":400,"value":805},"内置 instanceof 运算符是用来检测构造函数的 prototype 属性是否存在于某个实例对象的原型链。\n用代码解释要更直观一些：",{"type":394,"tag":807,"props":808,"children":812},"pre",{"className":809,"code":810,"language":811,"meta":388,"style":388},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","function Car(make, model, year) {\n  this.make = make\n  this.model = model\n  this.year = year\n}\nconst auto = new Car('Honda', 'Accord', 1998)\n\n// true\nconsole.log((auto.__proto__ === Car.prototype) === auto instanceof Car)\n","js",[813],{"type":394,"tag":699,"props":814,"children":815},{"__ignoreMap":388},[816,875,905,931,957,966,1047,1056,1066],{"type":394,"tag":817,"props":818,"children":821},"span",{"class":819,"line":820},"line",1,[822,828,834,840,846,851,856,860,865,870],{"type":394,"tag":817,"props":823,"children":825},{"style":824},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#66D9EF;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[826],{"type":400,"value":827},"function",{"type":394,"tag":817,"props":829,"children":831},{"style":830},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[832],{"type":400,"value":833}," Car",{"type":394,"tag":817,"props":835,"children":837},{"style":836},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[838],{"type":400,"value":839},"(",{"type":394,"tag":817,"props":841,"children":843},{"style":842},"--shiki-light:#90A4AE;--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#FD971F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[844],{"type":400,"value":845},"make",{"type":394,"tag":817,"props":847,"children":848},{"style":836},[849],{"type":400,"value":850},",",{"type":394,"tag":817,"props":852,"children":853},{"style":842},[854],{"type":400,"value":855}," model",{"type":394,"tag":817,"props":857,"children":858},{"style":836},[859],{"type":400,"value":850},{"type":394,"tag":817,"props":861,"children":862},{"style":842},[863],{"type":400,"value":864}," year",{"type":394,"tag":817,"props":866,"children":867},{"style":836},[868],{"type":400,"value":869},")",{"type":394,"tag":817,"props":871,"children":872},{"style":836},[873],{"type":400,"value":874}," {\n",{"type":394,"tag":817,"props":876,"children":878},{"class":819,"line":877},2,[879,885,889,894,900],{"type":394,"tag":817,"props":880,"children":882},{"style":881},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[883],{"type":400,"value":884},"  this",{"type":394,"tag":817,"props":886,"children":887},{"style":836},[888],{"type":400,"value":494},{"type":394,"tag":817,"props":890,"children":892},{"style":891},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[893],{"type":400,"value":845},{"type":394,"tag":817,"props":895,"children":897},{"style":896},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[898],{"type":400,"value":899}," =",{"type":394,"tag":817,"props":901,"children":902},{"style":891},[903],{"type":400,"value":904}," make\n",{"type":394,"tag":817,"props":906,"children":908},{"class":819,"line":907},3,[909,913,917,922,926],{"type":394,"tag":817,"props":910,"children":911},{"style":881},[912],{"type":400,"value":884},{"type":394,"tag":817,"props":914,"children":915},{"style":836},[916],{"type":400,"value":494},{"type":394,"tag":817,"props":918,"children":919},{"style":891},[920],{"type":400,"value":921},"model",{"type":394,"tag":817,"props":923,"children":924},{"style":896},[925],{"type":400,"value":899},{"type":394,"tag":817,"props":927,"children":928},{"style":891},[929],{"type":400,"value":930}," model\n",{"type":394,"tag":817,"props":932,"children":934},{"class":819,"line":933},4,[935,939,943,948,952],{"type":394,"tag":817,"props":936,"children":937},{"style":881},[938],{"type":400,"value":884},{"type":394,"tag":817,"props":940,"children":941},{"style":836},[942],{"type":400,"value":494},{"type":394,"tag":817,"props":944,"children":945},{"style":891},[946],{"type":400,"value":947},"year",{"type":394,"tag":817,"props":949,"children":950},{"style":896},[951],{"type":400,"value":899},{"type":394,"tag":817,"props":953,"children":954},{"style":891},[955],{"type":400,"value":956}," year\n",{"type":394,"tag":817,"props":958,"children":960},{"class":819,"line":959},5,[961],{"type":394,"tag":817,"props":962,"children":963},{"style":836},[964],{"type":400,"value":965},"}\n",{"type":394,"tag":817,"props":967,"children":969},{"class":819,"line":968},6,[970,975,981,985,990,994,998,1004,1010,1014,1018,1023,1028,1032,1036,1042],{"type":394,"tag":817,"props":971,"children":972},{"style":824},[973],{"type":400,"value":974},"const",{"type":394,"tag":817,"props":976,"children":978},{"style":977},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[979],{"type":400,"value":980}," auto",{"type":394,"tag":817,"props":982,"children":983},{"style":896},[984],{"type":400,"value":899},{"type":394,"tag":817,"props":986,"children":987},{"style":896},[988],{"type":400,"value":989}," new",{"type":394,"tag":817,"props":991,"children":992},{"style":830},[993],{"type":400,"value":833},{"type":394,"tag":817,"props":995,"children":996},{"style":891},[997],{"type":400,"value":839},{"type":394,"tag":817,"props":999,"children":1001},{"style":1000},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[1002],{"type":400,"value":1003},"'",{"type":394,"tag":817,"props":1005,"children":1007},{"style":1006},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[1008],{"type":400,"value":1009},"Honda",{"type":394,"tag":817,"props":1011,"children":1012},{"style":1000},[1013],{"type":400,"value":1003},{"type":394,"tag":817,"props":1015,"children":1016},{"style":836},[1017],{"type":400,"value":850},{"type":394,"tag":817,"props":1019,"children":1020},{"style":1000},[1021],{"type":400,"value":1022}," '",{"type":394,"tag":817,"props":1024,"children":1025},{"style":1006},[1026],{"type":400,"value":1027},"Accord",{"type":394,"tag":817,"props":1029,"children":1030},{"style":1000},[1031],{"type":400,"value":1003},{"type":394,"tag":817,"props":1033,"children":1034},{"style":836},[1035],{"type":400,"value":850},{"type":394,"tag":817,"props":1037,"children":1039},{"style":1038},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1040],{"type":400,"value":1041}," 1998",{"type":394,"tag":817,"props":1043,"children":1044},{"style":891},[1045],{"type":400,"value":1046},")\n",{"type":394,"tag":817,"props":1048,"children":1050},{"class":819,"line":1049},7,[1051],{"type":394,"tag":817,"props":1052,"children":1053},{"emptyLinePlaceholder":387},[1054],{"type":400,"value":1055},"\n",{"type":394,"tag":817,"props":1057,"children":1059},{"class":819,"line":1058},8,[1060],{"type":394,"tag":817,"props":1061,"children":1063},{"style":1062},"--shiki-light:#90A4AE;--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[1064],{"type":400,"value":1065},"// true\n",{"type":394,"tag":817,"props":1067,"children":1069},{"class":819,"line":1068},9,[1070,1075,1079,1084,1089,1093,1098,1103,1108,1112,1117,1122,1127,1132,1136,1141],{"type":394,"tag":817,"props":1071,"children":1072},{"style":891},[1073],{"type":400,"value":1074},"console",{"type":394,"tag":817,"props":1076,"children":1077},{"style":836},[1078],{"type":400,"value":494},{"type":394,"tag":817,"props":1080,"children":1081},{"style":830},[1082],{"type":400,"value":1083},"log",{"type":394,"tag":817,"props":1085,"children":1086},{"style":891},[1087],{"type":400,"value":1088},"((auto",{"type":394,"tag":817,"props":1090,"children":1091},{"style":836},[1092],{"type":400,"value":494},{"type":394,"tag":817,"props":1094,"children":1095},{"style":977},[1096],{"type":400,"value":1097},"__proto__",{"type":394,"tag":817,"props":1099,"children":1100},{"style":896},[1101],{"type":400,"value":1102}," ===",{"type":394,"tag":817,"props":1104,"children":1106},{"style":1105},"--shiki-light:#E2931D;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[1107],{"type":400,"value":833},{"type":394,"tag":817,"props":1109,"children":1110},{"style":836},[1111],{"type":400,"value":494},{"type":394,"tag":817,"props":1113,"children":1114},{"style":977},[1115],{"type":400,"value":1116},"prototype",{"type":394,"tag":817,"props":1118,"children":1119},{"style":891},[1120],{"type":400,"value":1121},") ",{"type":394,"tag":817,"props":1123,"children":1124},{"style":896},[1125],{"type":400,"value":1126},"===",{"type":394,"tag":817,"props":1128,"children":1129},{"style":891},[1130],{"type":400,"value":1131}," auto ",{"type":394,"tag":817,"props":1133,"children":1134},{"style":896},[1135],{"type":400,"value":421},{"type":394,"tag":817,"props":1137,"children":1139},{"style":1138},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E;--shiki-light-text-decoration:inherit;--shiki-default-text-decoration:inherit;--shiki-dark-text-decoration:inherit;--shiki-sepia-text-decoration:underline",[1140],{"type":400,"value":833},{"type":394,"tag":817,"props":1142,"children":1143},{"style":891},[1144],{"type":400,"value":1046},{"type":394,"tag":402,"props":1146,"children":1147},{},[1148],{"type":400,"value":1149},"我们直接看看规范是怎么定义 instanceof 运算符的：",{"type":394,"tag":402,"props":1151,"children":1152},{},[1153],{"type":394,"tag":488,"props":1154,"children":1155},{},[1156],{"type":400,"value":1157},"InstanceofOperator(O, C)",{"type":394,"tag":452,"props":1159,"children":1160},{},[1161,1179,1197,1206,1231,1254],{"type":394,"tag":412,"props":1162,"children":1163},{},[1164,1165,1170,1172,1177],{"type":400,"value":464},{"type":394,"tag":466,"props":1166,"children":1167},{},[1168],{"type":400,"value":1169},"Type(C)",{"type":400,"value":1171}," is not Object, throw a ",{"type":394,"tag":488,"props":1173,"children":1174},{},[1175],{"type":400,"value":1176},"TypeError",{"type":400,"value":1178}," exception.",{"type":394,"tag":412,"props":1180,"children":1181},{},[1182,1184,1189,1191,1196],{"type":400,"value":1183},"Let ",{"type":394,"tag":466,"props":1185,"children":1186},{},[1187],{"type":400,"value":1188},"instOfHandler",{"type":400,"value":1190}," be ",{"type":394,"tag":466,"props":1192,"children":1193},{},[1194],{"type":400,"value":1195},"GetMethod(C,@@hasInstance)",{"type":400,"value":494},{"type":394,"tag":412,"props":1198,"children":1199},{},[1200,1205],{"type":394,"tag":466,"props":1201,"children":1202},{},[1203],{"type":400,"value":1204},"ReturnIfAbrupt(instOfHandler)",{"type":400,"value":494},{"type":394,"tag":412,"props":1207,"children":1208},{},[1209,1211,1215,1217],{"type":400,"value":1210},"If instOfHandler is not ",{"type":394,"tag":488,"props":1212,"children":1213},{},[1214],{"type":400,"value":779},{"type":400,"value":1216},", then\n",{"type":394,"tag":408,"props":1218,"children":1219},{},[1220],{"type":394,"tag":412,"props":1221,"children":1222},{},[1223,1225,1230],{"type":400,"value":1224},"Return ",{"type":394,"tag":466,"props":1226,"children":1227},{},[1228],{"type":400,"value":1229},"ToBoolean(Call(instOfHandler, C, «O»))",{"type":400,"value":494},{"type":394,"tag":412,"props":1232,"children":1233},{},[1234,1235,1240,1242,1247,1249,1253],{"type":400,"value":464},{"type":394,"tag":466,"props":1236,"children":1237},{},[1238],{"type":400,"value":1239},"IsCallable(C)",{"type":400,"value":1241}," is ",{"type":394,"tag":488,"props":1243,"children":1244},{},[1245],{"type":400,"value":1246},"false",{"type":400,"value":1248},", throw a ",{"type":394,"tag":488,"props":1250,"children":1251},{},[1252],{"type":400,"value":1176},{"type":400,"value":1178},{"type":394,"tag":412,"props":1255,"children":1256},{},[1257,1258,1263],{"type":400,"value":1224},{"type":394,"tag":466,"props":1259,"children":1260},{},[1261],{"type":400,"value":1262},"OrdinaryHasInstance(C, O)",{"type":400,"value":494},{"type":394,"tag":402,"props":1265,"children":1266},{},[1267],{"type":400,"value":1268},"第一条，如果 C 的类型不是对象，那么会抛出类型错误，重现如下：",{"type":394,"tag":807,"props":1270,"children":1272},{"className":809,"code":1271,"language":811,"meta":388,"style":388},";[] instanceof 1\n",[1273],{"type":394,"tag":699,"props":1274,"children":1275},{"__ignoreMap":388},[1276],{"type":394,"tag":817,"props":1277,"children":1278},{"class":819,"line":820},[1279,1284,1289,1293],{"type":394,"tag":817,"props":1280,"children":1281},{"style":836},[1282],{"type":400,"value":1283},";",{"type":394,"tag":817,"props":1285,"children":1286},{"style":891},[1287],{"type":400,"value":1288},"[] ",{"type":394,"tag":817,"props":1290,"children":1291},{"style":896},[1292],{"type":400,"value":421},{"type":394,"tag":817,"props":1294,"children":1295},{"style":1038},[1296],{"type":400,"value":1297}," 1\n",{"type":394,"tag":402,"props":1299,"children":1300},{},[1301],{"type":400,"value":1302},"::: danger\nVM1008:1 Uncaught TypeError: Right-hand side of 'instanceof' is not an object\n:::",{"type":394,"tag":402,"props":1304,"children":1305},{},[1306],{"type":400,"value":1307},"第二至第四条，判断 C 是否有内置的 hasInstance 实现，即 Symbol.hasInstance，如果有，则调用此方法。\n也就是说，对复杂类型，我们可以通过 Symbol，自定义 instanceof 运算符的实现，用下列代码举例：",{"type":394,"tag":807,"props":1309,"children":1311},{"className":809,"code":1310,"language":811,"meta":388,"style":388},"class Lionad {\n  static [Symbol.hasInstance](obj) {\n    return obj && obj.isCute\n  }\n}\n\nconsole.log({} instanceof Lionad) // false\nconsole.log({ isCute: true } instanceof Lionad) // true\n",[1312],{"type":394,"tag":699,"props":1313,"children":1314},{"__ignoreMap":388},[1315,1332,1372,1404,1412,1419,1426,1468],{"type":394,"tag":817,"props":1316,"children":1317},{"class":819,"line":820},[1318,1323,1328],{"type":394,"tag":817,"props":1319,"children":1320},{"style":824},[1321],{"type":400,"value":1322},"class",{"type":394,"tag":817,"props":1324,"children":1325},{"style":1138},[1326],{"type":400,"value":1327}," Lionad",{"type":394,"tag":817,"props":1329,"children":1330},{"style":836},[1331],{"type":400,"value":874},{"type":394,"tag":817,"props":1333,"children":1334},{"class":819,"line":877},[1335,1341,1346,1350,1355,1359,1364,1368],{"type":394,"tag":817,"props":1336,"children":1338},{"style":1337},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[1339],{"type":400,"value":1340},"  static",{"type":394,"tag":817,"props":1342,"children":1343},{"style":891},[1344],{"type":400,"value":1345}," [Symbol",{"type":394,"tag":817,"props":1347,"children":1348},{"style":836},[1349],{"type":400,"value":494},{"type":394,"tag":817,"props":1351,"children":1352},{"style":891},[1353],{"type":400,"value":1354},"hasInstance]",{"type":394,"tag":817,"props":1356,"children":1357},{"style":836},[1358],{"type":400,"value":839},{"type":394,"tag":817,"props":1360,"children":1361},{"style":842},[1362],{"type":400,"value":1363},"obj",{"type":394,"tag":817,"props":1365,"children":1366},{"style":836},[1367],{"type":400,"value":869},{"type":394,"tag":817,"props":1369,"children":1370},{"style":836},[1371],{"type":400,"value":874},{"type":394,"tag":817,"props":1373,"children":1374},{"class":819,"line":907},[1375,1381,1386,1391,1395,1399],{"type":394,"tag":817,"props":1376,"children":1378},{"style":1377},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[1379],{"type":400,"value":1380},"    return",{"type":394,"tag":817,"props":1382,"children":1383},{"style":891},[1384],{"type":400,"value":1385}," obj",{"type":394,"tag":817,"props":1387,"children":1388},{"style":896},[1389],{"type":400,"value":1390}," &&",{"type":394,"tag":817,"props":1392,"children":1393},{"style":891},[1394],{"type":400,"value":1385},{"type":394,"tag":817,"props":1396,"children":1397},{"style":836},[1398],{"type":400,"value":494},{"type":394,"tag":817,"props":1400,"children":1401},{"style":891},[1402],{"type":400,"value":1403},"isCute\n",{"type":394,"tag":817,"props":1405,"children":1406},{"class":819,"line":933},[1407],{"type":394,"tag":817,"props":1408,"children":1409},{"style":836},[1410],{"type":400,"value":1411},"  }\n",{"type":394,"tag":817,"props":1413,"children":1414},{"class":819,"line":959},[1415],{"type":394,"tag":817,"props":1416,"children":1417},{"style":836},[1418],{"type":400,"value":965},{"type":394,"tag":817,"props":1420,"children":1421},{"class":819,"line":968},[1422],{"type":394,"tag":817,"props":1423,"children":1424},{"emptyLinePlaceholder":387},[1425],{"type":400,"value":1055},{"type":394,"tag":817,"props":1427,"children":1428},{"class":819,"line":1049},[1429,1433,1437,1441,1445,1450,1455,1459,1463],{"type":394,"tag":817,"props":1430,"children":1431},{"style":891},[1432],{"type":400,"value":1074},{"type":394,"tag":817,"props":1434,"children":1435},{"style":836},[1436],{"type":400,"value":494},{"type":394,"tag":817,"props":1438,"children":1439},{"style":830},[1440],{"type":400,"value":1083},{"type":394,"tag":817,"props":1442,"children":1443},{"style":891},[1444],{"type":400,"value":839},{"type":394,"tag":817,"props":1446,"children":1447},{"style":836},[1448],{"type":400,"value":1449},"{}",{"type":394,"tag":817,"props":1451,"children":1452},{"style":896},[1453],{"type":400,"value":1454}," instanceof",{"type":394,"tag":817,"props":1456,"children":1457},{"style":1138},[1458],{"type":400,"value":1327},{"type":394,"tag":817,"props":1460,"children":1461},{"style":891},[1462],{"type":400,"value":1121},{"type":394,"tag":817,"props":1464,"children":1465},{"style":1062},[1466],{"type":400,"value":1467},"// false\n",{"type":394,"tag":817,"props":1469,"children":1470},{"class":819,"line":1058},[1471,1475,1479,1483,1487,1492,1498,1503,1509,1514,1518,1522,1526],{"type":394,"tag":817,"props":1472,"children":1473},{"style":891},[1474],{"type":400,"value":1074},{"type":394,"tag":817,"props":1476,"children":1477},{"style":836},[1478],{"type":400,"value":494},{"type":394,"tag":817,"props":1480,"children":1481},{"style":830},[1482],{"type":400,"value":1083},{"type":394,"tag":817,"props":1484,"children":1485},{"style":891},[1486],{"type":400,"value":839},{"type":394,"tag":817,"props":1488,"children":1489},{"style":836},[1490],{"type":400,"value":1491},"{",{"type":394,"tag":817,"props":1493,"children":1495},{"style":1494},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1496],{"type":400,"value":1497}," isCute",{"type":394,"tag":817,"props":1499,"children":1500},{"style":836},[1501],{"type":400,"value":1502},":",{"type":394,"tag":817,"props":1504,"children":1506},{"style":1505},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1507],{"type":400,"value":1508}," true",{"type":394,"tag":817,"props":1510,"children":1511},{"style":836},[1512],{"type":400,"value":1513}," }",{"type":394,"tag":817,"props":1515,"children":1516},{"style":896},[1517],{"type":400,"value":1454},{"type":394,"tag":817,"props":1519,"children":1520},{"style":1138},[1521],{"type":400,"value":1327},{"type":394,"tag":817,"props":1523,"children":1524},{"style":891},[1525],{"type":400,"value":1121},{"type":394,"tag":817,"props":1527,"children":1528},{"style":1062},[1529],{"type":400,"value":1065},{"type":394,"tag":402,"props":1531,"children":1532},{},[1533],{"type":400,"value":1534},"这之后，第五条，如果 C 非 Callable 对象（还记得我们在 typeof 提到的内部方法[[call]]吗，Callable 对象即实现了[[call]]内部方法的对象，比如说某个函数），抛出类型错误，重现如下：",{"type":394,"tag":807,"props":1536,"children":1538},{"className":809,"code":1537,"language":811,"meta":388,"style":388},";[] instanceof []\n",[1539],{"type":394,"tag":699,"props":1540,"children":1541},{"__ignoreMap":388},[1542],{"type":394,"tag":817,"props":1543,"children":1544},{"class":819,"line":820},[1545,1549,1553,1557],{"type":394,"tag":817,"props":1546,"children":1547},{"style":836},[1548],{"type":400,"value":1283},{"type":394,"tag":817,"props":1550,"children":1551},{"style":891},[1552],{"type":400,"value":1288},{"type":394,"tag":817,"props":1554,"children":1555},{"style":896},[1556],{"type":400,"value":421},{"type":394,"tag":817,"props":1558,"children":1559},{"style":891},[1560],{"type":400,"value":1561}," []\n",{"type":394,"tag":402,"props":1563,"children":1564},{},[1565],{"type":400,"value":1566},"::: danger\nVM684:1 Uncaught TypeError: Right-hand side of 'instanceof' is not callable\n:::",{"type":394,"tag":402,"props":1568,"children":1569},{},[1570],{"type":400,"value":1571},"最后，返回调用内置 instanceof 实现的结果。",{"type":394,"tag":402,"props":1573,"children":1574},{},[1575],{"type":400,"value":1576},"不过，需要强调的是，instanceof 也有缺陷存在，主要体现在两个方面：",{"type":394,"tag":452,"props":1578,"children":1579},{},[1580,1585],{"type":394,"tag":412,"props":1581,"children":1582},{},[1583],{"type":400,"value":1584},"判断的依据是原型链",{"type":394,"tag":412,"props":1586,"children":1587},{},[1588],{"type":400,"value":1589},"跨宿主运算",{"type":394,"tag":689,"props":1591,"children":1593},{"id":1592},"依据原型链",[1594],{"type":400,"value":1592},{"type":394,"tag":402,"props":1596,"children":1597},{},[1598],{"type":400,"value":1599},"使用 instanceof 运算符判断对象字面量，会出现另人诧异的结果，见下代码：",{"type":394,"tag":807,"props":1601,"children":1603},{"className":809,"code":1602,"language":811,"meta":388,"style":388},"console.log(\n  'hello world' instanceof String, // false\n  new String('asdf') instanceof String, // true\n  {} instanceof Object, // true\n  [] instanceof Object, // true\n  Object.create(null) instanceof Object // false\n)\n",[1604],{"type":394,"tag":699,"props":1605,"children":1606},{"__ignoreMap":388},[1607,1627,1662,1712,1737,1761,1803],{"type":394,"tag":817,"props":1608,"children":1609},{"class":819,"line":820},[1610,1614,1618,1622],{"type":394,"tag":817,"props":1611,"children":1612},{"style":891},[1613],{"type":400,"value":1074},{"type":394,"tag":817,"props":1615,"children":1616},{"style":836},[1617],{"type":400,"value":494},{"type":394,"tag":817,"props":1619,"children":1620},{"style":830},[1621],{"type":400,"value":1083},{"type":394,"tag":817,"props":1623,"children":1624},{"style":891},[1625],{"type":400,"value":1626},"(\n",{"type":394,"tag":817,"props":1628,"children":1629},{"class":819,"line":877},[1630,1635,1640,1644,1648,1653,1657],{"type":394,"tag":817,"props":1631,"children":1632},{"style":1000},[1633],{"type":400,"value":1634},"  '",{"type":394,"tag":817,"props":1636,"children":1637},{"style":1006},[1638],{"type":400,"value":1639},"hello world",{"type":394,"tag":817,"props":1641,"children":1642},{"style":1000},[1643],{"type":400,"value":1003},{"type":394,"tag":817,"props":1645,"children":1646},{"style":896},[1647],{"type":400,"value":1454},{"type":394,"tag":817,"props":1649,"children":1650},{"style":1138},[1651],{"type":400,"value":1652}," String",{"type":394,"tag":817,"props":1654,"children":1655},{"style":836},[1656],{"type":400,"value":850},{"type":394,"tag":817,"props":1658,"children":1659},{"style":1062},[1660],{"type":400,"value":1661}," // false\n",{"type":394,"tag":817,"props":1663,"children":1664},{"class":819,"line":907},[1665,1670,1674,1678,1682,1687,1691,1695,1699,1703,1707],{"type":394,"tag":817,"props":1666,"children":1667},{"style":896},[1668],{"type":400,"value":1669},"  new",{"type":394,"tag":817,"props":1671,"children":1672},{"style":830},[1673],{"type":400,"value":1652},{"type":394,"tag":817,"props":1675,"children":1676},{"style":891},[1677],{"type":400,"value":839},{"type":394,"tag":817,"props":1679,"children":1680},{"style":1000},[1681],{"type":400,"value":1003},{"type":394,"tag":817,"props":1683,"children":1684},{"style":1006},[1685],{"type":400,"value":1686},"asdf",{"type":394,"tag":817,"props":1688,"children":1689},{"style":1000},[1690],{"type":400,"value":1003},{"type":394,"tag":817,"props":1692,"children":1693},{"style":891},[1694],{"type":400,"value":1121},{"type":394,"tag":817,"props":1696,"children":1697},{"style":896},[1698],{"type":400,"value":421},{"type":394,"tag":817,"props":1700,"children":1701},{"style":1138},[1702],{"type":400,"value":1652},{"type":394,"tag":817,"props":1704,"children":1705},{"style":836},[1706],{"type":400,"value":850},{"type":394,"tag":817,"props":1708,"children":1709},{"style":1062},[1710],{"type":400,"value":1711}," // true\n",{"type":394,"tag":817,"props":1713,"children":1714},{"class":819,"line":933},[1715,1720,1724,1729,1733],{"type":394,"tag":817,"props":1716,"children":1717},{"style":836},[1718],{"type":400,"value":1719},"  {}",{"type":394,"tag":817,"props":1721,"children":1722},{"style":896},[1723],{"type":400,"value":1454},{"type":394,"tag":817,"props":1725,"children":1726},{"style":1138},[1727],{"type":400,"value":1728}," Object",{"type":394,"tag":817,"props":1730,"children":1731},{"style":836},[1732],{"type":400,"value":850},{"type":394,"tag":817,"props":1734,"children":1735},{"style":1062},[1736],{"type":400,"value":1711},{"type":394,"tag":817,"props":1738,"children":1739},{"class":819,"line":959},[1740,1745,1749,1753,1757],{"type":394,"tag":817,"props":1741,"children":1742},{"style":891},[1743],{"type":400,"value":1744},"  [] ",{"type":394,"tag":817,"props":1746,"children":1747},{"style":896},[1748],{"type":400,"value":421},{"type":394,"tag":817,"props":1750,"children":1751},{"style":1138},[1752],{"type":400,"value":1728},{"type":394,"tag":817,"props":1754,"children":1755},{"style":836},[1756],{"type":400,"value":850},{"type":394,"tag":817,"props":1758,"children":1759},{"style":1062},[1760],{"type":400,"value":1711},{"type":394,"tag":817,"props":1762,"children":1763},{"class":819,"line":968},[1764,1769,1773,1778,1782,1787,1791,1795,1799],{"type":394,"tag":817,"props":1765,"children":1766},{"style":891},[1767],{"type":400,"value":1768},"  Object",{"type":394,"tag":817,"props":1770,"children":1771},{"style":836},[1772],{"type":400,"value":494},{"type":394,"tag":817,"props":1774,"children":1775},{"style":830},[1776],{"type":400,"value":1777},"create",{"type":394,"tag":817,"props":1779,"children":1780},{"style":891},[1781],{"type":400,"value":839},{"type":394,"tag":817,"props":1783,"children":1785},{"style":1784},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1786],{"type":400,"value":789},{"type":394,"tag":817,"props":1788,"children":1789},{"style":891},[1790],{"type":400,"value":1121},{"type":394,"tag":817,"props":1792,"children":1793},{"style":896},[1794],{"type":400,"value":421},{"type":394,"tag":817,"props":1796,"children":1797},{"style":1138},[1798],{"type":400,"value":1728},{"type":394,"tag":817,"props":1800,"children":1801},{"style":1062},[1802],{"type":400,"value":1661},{"type":394,"tag":817,"props":1804,"children":1805},{"class":819,"line":1049},[1806],{"type":394,"tag":817,"props":1807,"children":1808},{"style":891},[1809],{"type":400,"value":1046},{"type":394,"tag":402,"props":1811,"children":1812},{},[1813],{"type":400,"value":1814},"题外话，上面几行代码还隐式说明了这些问题：",{"type":394,"tag":408,"props":1816,"children":1817},{},[1818],{"type":394,"tag":412,"props":1819,"children":1820},{},[1821,1823,1828,1830],{"type":400,"value":1822},"对于对象字面量 ",{"type":394,"tag":699,"props":1824,"children":1826},{"className":1825},[],[1827],{"type":400,"value":1449},{"type":400,"value":1829}," 有 ",{"type":394,"tag":699,"props":1831,"children":1833},{"className":1832},[],[1834],{"type":400,"value":1835},"({}).__proto__ === Object.prototype",{"type":394,"tag":689,"props":1837,"children":1838},{"id":1589},[1839],{"type":400,"value":1589},{"type":394,"tag":402,"props":1841,"children":1842},{},[1843],{"type":400,"value":1844},"关于跨宿主运算，可以尝试以下代码重现:",{"type":394,"tag":807,"props":1846,"children":1848},{"className":809,"code":1847,"language":811,"meta":388,"style":388},"const iframe = document.createElement('iframe')\ndocument.body.appendChild(iframe)\nxArray = window.frames[window.frames.length - 1].Array\nconst xArr = new xArray(1, 2, 3)\n\nconsole.log(xArr instanceof xArray) // true\nconsole.log(xArr instanceof Array) // false\n",[1849],{"type":394,"tag":699,"props":1850,"children":1851},{"__ignoreMap":388},[1852,1903,1934,2003,2059,2066,2102],{"type":394,"tag":817,"props":1853,"children":1854},{"class":819,"line":820},[1855,1859,1864,1868,1873,1877,1882,1886,1890,1895,1899],{"type":394,"tag":817,"props":1856,"children":1857},{"style":824},[1858],{"type":400,"value":974},{"type":394,"tag":817,"props":1860,"children":1861},{"style":977},[1862],{"type":400,"value":1863}," iframe",{"type":394,"tag":817,"props":1865,"children":1866},{"style":896},[1867],{"type":400,"value":899},{"type":394,"tag":817,"props":1869,"children":1870},{"style":891},[1871],{"type":400,"value":1872}," document",{"type":394,"tag":817,"props":1874,"children":1875},{"style":836},[1876],{"type":400,"value":494},{"type":394,"tag":817,"props":1878,"children":1879},{"style":830},[1880],{"type":400,"value":1881},"createElement",{"type":394,"tag":817,"props":1883,"children":1884},{"style":891},[1885],{"type":400,"value":839},{"type":394,"tag":817,"props":1887,"children":1888},{"style":1000},[1889],{"type":400,"value":1003},{"type":394,"tag":817,"props":1891,"children":1892},{"style":1006},[1893],{"type":400,"value":1894},"iframe",{"type":394,"tag":817,"props":1896,"children":1897},{"style":1000},[1898],{"type":400,"value":1003},{"type":394,"tag":817,"props":1900,"children":1901},{"style":891},[1902],{"type":400,"value":1046},{"type":394,"tag":817,"props":1904,"children":1905},{"class":819,"line":877},[1906,1911,1915,1920,1924,1929],{"type":394,"tag":817,"props":1907,"children":1908},{"style":891},[1909],{"type":400,"value":1910},"document",{"type":394,"tag":817,"props":1912,"children":1913},{"style":836},[1914],{"type":400,"value":494},{"type":394,"tag":817,"props":1916,"children":1917},{"style":891},[1918],{"type":400,"value":1919},"body",{"type":394,"tag":817,"props":1921,"children":1922},{"style":836},[1923],{"type":400,"value":494},{"type":394,"tag":817,"props":1925,"children":1926},{"style":830},[1927],{"type":400,"value":1928},"appendChild",{"type":394,"tag":817,"props":1930,"children":1931},{"style":891},[1932],{"type":400,"value":1933},"(iframe)\n",{"type":394,"tag":817,"props":1935,"children":1936},{"class":819,"line":907},[1937,1942,1947,1952,1956,1961,1965,1970,1974,1979,1984,1989,1994,1998],{"type":394,"tag":817,"props":1938,"children":1939},{"style":891},[1940],{"type":400,"value":1941},"xArray ",{"type":394,"tag":817,"props":1943,"children":1944},{"style":896},[1945],{"type":400,"value":1946},"=",{"type":394,"tag":817,"props":1948,"children":1949},{"style":891},[1950],{"type":400,"value":1951}," window",{"type":394,"tag":817,"props":1953,"children":1954},{"style":836},[1955],{"type":400,"value":494},{"type":394,"tag":817,"props":1957,"children":1958},{"style":891},[1959],{"type":400,"value":1960},"frames[window",{"type":394,"tag":817,"props":1962,"children":1963},{"style":836},[1964],{"type":400,"value":494},{"type":394,"tag":817,"props":1966,"children":1967},{"style":891},[1968],{"type":400,"value":1969},"frames",{"type":394,"tag":817,"props":1971,"children":1972},{"style":836},[1973],{"type":400,"value":494},{"type":394,"tag":817,"props":1975,"children":1976},{"style":977},[1977],{"type":400,"value":1978},"length",{"type":394,"tag":817,"props":1980,"children":1981},{"style":896},[1982],{"type":400,"value":1983}," -",{"type":394,"tag":817,"props":1985,"children":1986},{"style":1038},[1987],{"type":400,"value":1988}," 1",{"type":394,"tag":817,"props":1990,"children":1991},{"style":891},[1992],{"type":400,"value":1993},"]",{"type":394,"tag":817,"props":1995,"children":1996},{"style":836},[1997],{"type":400,"value":494},{"type":394,"tag":817,"props":1999,"children":2000},{"style":891},[2001],{"type":400,"value":2002},"Array\n",{"type":394,"tag":817,"props":2004,"children":2005},{"class":819,"line":933},[2006,2010,2015,2019,2023,2028,2032,2037,2041,2046,2050,2055],{"type":394,"tag":817,"props":2007,"children":2008},{"style":824},[2009],{"type":400,"value":974},{"type":394,"tag":817,"props":2011,"children":2012},{"style":977},[2013],{"type":400,"value":2014}," xArr",{"type":394,"tag":817,"props":2016,"children":2017},{"style":896},[2018],{"type":400,"value":899},{"type":394,"tag":817,"props":2020,"children":2021},{"style":896},[2022],{"type":400,"value":989},{"type":394,"tag":817,"props":2024,"children":2025},{"style":830},[2026],{"type":400,"value":2027}," xArray",{"type":394,"tag":817,"props":2029,"children":2030},{"style":891},[2031],{"type":400,"value":839},{"type":394,"tag":817,"props":2033,"children":2034},{"style":1038},[2035],{"type":400,"value":2036},"1",{"type":394,"tag":817,"props":2038,"children":2039},{"style":836},[2040],{"type":400,"value":850},{"type":394,"tag":817,"props":2042,"children":2043},{"style":1038},[2044],{"type":400,"value":2045}," 2",{"type":394,"tag":817,"props":2047,"children":2048},{"style":836},[2049],{"type":400,"value":850},{"type":394,"tag":817,"props":2051,"children":2052},{"style":1038},[2053],{"type":400,"value":2054}," 3",{"type":394,"tag":817,"props":2056,"children":2057},{"style":891},[2058],{"type":400,"value":1046},{"type":394,"tag":817,"props":2060,"children":2061},{"class":819,"line":959},[2062],{"type":394,"tag":817,"props":2063,"children":2064},{"emptyLinePlaceholder":387},[2065],{"type":400,"value":1055},{"type":394,"tag":817,"props":2067,"children":2068},{"class":819,"line":968},[2069,2073,2077,2081,2086,2090,2094,2098],{"type":394,"tag":817,"props":2070,"children":2071},{"style":891},[2072],{"type":400,"value":1074},{"type":394,"tag":817,"props":2074,"children":2075},{"style":836},[2076],{"type":400,"value":494},{"type":394,"tag":817,"props":2078,"children":2079},{"style":830},[2080],{"type":400,"value":1083},{"type":394,"tag":817,"props":2082,"children":2083},{"style":891},[2084],{"type":400,"value":2085},"(xArr ",{"type":394,"tag":817,"props":2087,"children":2088},{"style":896},[2089],{"type":400,"value":421},{"type":394,"tag":817,"props":2091,"children":2092},{"style":1138},[2093],{"type":400,"value":2027},{"type":394,"tag":817,"props":2095,"children":2096},{"style":891},[2097],{"type":400,"value":1121},{"type":394,"tag":817,"props":2099,"children":2100},{"style":1062},[2101],{"type":400,"value":1065},{"type":394,"tag":817,"props":2103,"children":2104},{"class":819,"line":1049},[2105,2109,2113,2117,2121,2125,2130,2134],{"type":394,"tag":817,"props":2106,"children":2107},{"style":891},[2108],{"type":400,"value":1074},{"type":394,"tag":817,"props":2110,"children":2111},{"style":836},[2112],{"type":400,"value":494},{"type":394,"tag":817,"props":2114,"children":2115},{"style":830},[2116],{"type":400,"value":1083},{"type":394,"tag":817,"props":2118,"children":2119},{"style":891},[2120],{"type":400,"value":2085},{"type":394,"tag":817,"props":2122,"children":2123},{"style":896},[2124],{"type":400,"value":421},{"type":394,"tag":817,"props":2126,"children":2127},{"style":1138},[2128],{"type":400,"value":2129}," Array",{"type":394,"tag":817,"props":2131,"children":2132},{"style":891},[2133],{"type":400,"value":1121},{"type":394,"tag":817,"props":2135,"children":2136},{"style":1062},[2137],{"type":400,"value":1467},{"type":394,"tag":402,"props":2139,"children":2140},{},[2141],{"type":400,"value":2142},"因为 iframe 中的数组实例不是父窗口的 Array 的实例，所以在 xArr 的原型链上是找不到 Array 的，所以结果为 false。",{"type":394,"tag":395,"props":2144,"children":2146},{"id":2145},"objectprototypetostringcall",[2147],{"type":400,"value":426},{"type":394,"tag":402,"props":2149,"children":2150},{},[2151],{"type":400,"value":2152},"一般来说，在业务代码中，我们使用 typeof 和 instanceof 运算符判断变量的类型就足够了。虽然这两种方法都有缺陷，但是我们记住这些常见的容易混淆的地方，避免使用就可以。\n下面要介绍的是一种更精确的方法，一般会用在工具函数或者类库中，如：",{"type":394,"tag":807,"props":2154,"children":2156},{"className":809,"code":2155,"language":811,"meta":388,"style":388},"function isArray(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\nisArray([]) // true\n",[2157],{"type":394,"tag":699,"props":2158,"children":2159},{"__ignoreMap":388},[2160,2189,2257,2264],{"type":394,"tag":817,"props":2161,"children":2162},{"class":819,"line":820},[2163,2167,2172,2176,2181,2185],{"type":394,"tag":817,"props":2164,"children":2165},{"style":824},[2166],{"type":400,"value":827},{"type":394,"tag":817,"props":2168,"children":2169},{"style":830},[2170],{"type":400,"value":2171}," isArray",{"type":394,"tag":817,"props":2173,"children":2174},{"style":836},[2175],{"type":400,"value":839},{"type":394,"tag":817,"props":2177,"children":2178},{"style":842},[2179],{"type":400,"value":2180},"arr",{"type":394,"tag":817,"props":2182,"children":2183},{"style":836},[2184],{"type":400,"value":869},{"type":394,"tag":817,"props":2186,"children":2187},{"style":836},[2188],{"type":400,"value":874},{"type":394,"tag":817,"props":2190,"children":2191},{"class":819,"line":877},[2192,2197,2201,2205,2209,2213,2218,2222,2227,2231,2235,2239,2243,2247,2252],{"type":394,"tag":817,"props":2193,"children":2194},{"style":1377},[2195],{"type":400,"value":2196},"  return",{"type":394,"tag":817,"props":2198,"children":2199},{"style":1105},[2200],{"type":400,"value":1728},{"type":394,"tag":817,"props":2202,"children":2203},{"style":836},[2204],{"type":400,"value":494},{"type":394,"tag":817,"props":2206,"children":2207},{"style":977},[2208],{"type":400,"value":1116},{"type":394,"tag":817,"props":2210,"children":2211},{"style":836},[2212],{"type":400,"value":494},{"type":394,"tag":817,"props":2214,"children":2215},{"style":891},[2216],{"type":400,"value":2217},"toString",{"type":394,"tag":817,"props":2219,"children":2220},{"style":836},[2221],{"type":400,"value":494},{"type":394,"tag":817,"props":2223,"children":2224},{"style":830},[2225],{"type":400,"value":2226},"call",{"type":394,"tag":817,"props":2228,"children":2229},{"style":1494},[2230],{"type":400,"value":839},{"type":394,"tag":817,"props":2232,"children":2233},{"style":891},[2234],{"type":400,"value":2180},{"type":394,"tag":817,"props":2236,"children":2237},{"style":1494},[2238],{"type":400,"value":1121},{"type":394,"tag":817,"props":2240,"children":2241},{"style":896},[2242],{"type":400,"value":1126},{"type":394,"tag":817,"props":2244,"children":2245},{"style":1000},[2246],{"type":400,"value":1022},{"type":394,"tag":817,"props":2248,"children":2249},{"style":1006},[2250],{"type":400,"value":2251},"[object Array]",{"type":394,"tag":817,"props":2253,"children":2254},{"style":1000},[2255],{"type":400,"value":2256},"'\n",{"type":394,"tag":817,"props":2258,"children":2259},{"class":819,"line":907},[2260],{"type":394,"tag":817,"props":2261,"children":2262},{"style":836},[2263],{"type":400,"value":965},{"type":394,"tag":817,"props":2265,"children":2266},{"class":819,"line":933},[2267,2272,2277],{"type":394,"tag":817,"props":2268,"children":2269},{"style":830},[2270],{"type":400,"value":2271},"isArray",{"type":394,"tag":817,"props":2273,"children":2274},{"style":891},[2275],{"type":400,"value":2276},"([]) ",{"type":394,"tag":817,"props":2278,"children":2279},{"style":1062},[2280],{"type":400,"value":1065},{"type":394,"tag":402,"props":2282,"children":2283},{},[2284],{"type":400,"value":2285},"那么 Object.prototype.toString 到底能分辨几种类型呢？查阅 ES6 规范文档，可以得到其实现，如下：",{"type":394,"tag":452,"props":2287,"children":2288},{},[2289,2319,2344,2355,2366,2375,2386,2397,2408,2419,2430,2441,2452,2463,2474,2485,2496,2505,2516],{"type":394,"tag":412,"props":2290,"children":2291},{},[2292,2294,2299,2301,2305,2307,2318],{"type":400,"value":2293},"If the ",{"type":394,"tag":488,"props":2295,"children":2296},{},[2297],{"type":400,"value":2298},"this",{"type":400,"value":2300}," value is ",{"type":394,"tag":488,"props":2302,"children":2303},{},[2304],{"type":400,"value":779},{"type":400,"value":2306},", return ",{"type":394,"tag":488,"props":2308,"children":2309},{},[2310,2312,2317],{"type":400,"value":2311},"\"",{"type":394,"tag":817,"props":2313,"children":2314},{},[2315],{"type":400,"value":2316},"object Undefined",{"type":400,"value":2311},{"type":400,"value":494},{"type":394,"tag":412,"props":2320,"children":2321},{},[2322,2323,2327,2328,2332,2333,2343],{"type":400,"value":2293},{"type":394,"tag":488,"props":2324,"children":2325},{},[2326],{"type":400,"value":2298},{"type":400,"value":2300},{"type":394,"tag":488,"props":2329,"children":2330},{},[2331],{"type":400,"value":789},{"type":400,"value":2306},{"type":394,"tag":488,"props":2334,"children":2335},{},[2336,2337,2342],{"type":400,"value":2311},{"type":394,"tag":817,"props":2338,"children":2339},{},[2340],{"type":400,"value":2341},"object Null",{"type":400,"value":2311},{"type":400,"value":494},{"type":394,"tag":412,"props":2345,"children":2346},{},[2347,2349,2354],{"type":400,"value":2348},"Let O be ",{"type":394,"tag":466,"props":2350,"children":2351},{},[2352],{"type":400,"value":2353},"ToObject(this value)",{"type":400,"value":494},{"type":394,"tag":412,"props":2356,"children":2357},{},[2358,2360,2365],{"type":400,"value":2359},"Let isArray be ",{"type":394,"tag":466,"props":2361,"children":2362},{},[2363],{"type":400,"value":2364},"IsArray(O)",{"type":400,"value":494},{"type":394,"tag":412,"props":2367,"children":2368},{},[2369,2374],{"type":394,"tag":466,"props":2370,"children":2371},{},[2372],{"type":400,"value":2373},"ReturnIfAbrupt(isArray)",{"type":400,"value":494},{"type":394,"tag":412,"props":2376,"children":2377},{},[2378,2380,2385],{"type":400,"value":2379},"If isArray is true, let builtinTag be ",{"type":394,"tag":488,"props":2381,"children":2382},{},[2383],{"type":400,"value":2384},"\"Array\"",{"type":400,"value":494},{"type":394,"tag":412,"props":2387,"children":2388},{},[2389,2391,2396],{"type":400,"value":2390},"Else, if O is an exotic String object, let builtinTag be ",{"type":394,"tag":488,"props":2392,"children":2393},{},[2394],{"type":400,"value":2395},"\"String\"",{"type":400,"value":494},{"type":394,"tag":412,"props":2398,"children":2399},{},[2400,2402,2407],{"type":400,"value":2401},"Else, if O has an [[ParameterMap]] internal slot, let builtinTag be ",{"type":394,"tag":488,"props":2403,"children":2404},{},[2405],{"type":400,"value":2406},"\"Arguments\"",{"type":400,"value":494},{"type":394,"tag":412,"props":2409,"children":2410},{},[2411,2413,2418],{"type":400,"value":2412},"Else, if O has a [[Call]] internal method, let builtinTag be ",{"type":394,"tag":488,"props":2414,"children":2415},{},[2416],{"type":400,"value":2417},"\"Function\"",{"type":400,"value":494},{"type":394,"tag":412,"props":2420,"children":2421},{},[2422,2424,2429],{"type":400,"value":2423},"Else, if O has an [[ErrorData]] internal slot, let builtinTag be ",{"type":394,"tag":488,"props":2425,"children":2426},{},[2427],{"type":400,"value":2428},"\"Error\"",{"type":400,"value":494},{"type":394,"tag":412,"props":2431,"children":2432},{},[2433,2435,2440],{"type":400,"value":2434},"Else, if O has a [[BooleanData]] internal slot, let builtinTag be ",{"type":394,"tag":488,"props":2436,"children":2437},{},[2438],{"type":400,"value":2439},"\"Boolean\"",{"type":400,"value":494},{"type":394,"tag":412,"props":2442,"children":2443},{},[2444,2446,2451],{"type":400,"value":2445},"Else, if O has a [[NumberData]] internal slot, let builtinTag be ",{"type":394,"tag":488,"props":2447,"children":2448},{},[2449],{"type":400,"value":2450},"\"Number\"",{"type":400,"value":494},{"type":394,"tag":412,"props":2453,"children":2454},{},[2455,2457,2462],{"type":400,"value":2456},"Else, if O has a [[DateValue]] internal slot, let builtinTag be ",{"type":394,"tag":488,"props":2458,"children":2459},{},[2460],{"type":400,"value":2461},"\"Date\"",{"type":400,"value":494},{"type":394,"tag":412,"props":2464,"children":2465},{},[2466,2468,2473],{"type":400,"value":2467},"Else, if O has a [[RegExpMatcher]] internal slot, let builtinTag be ",{"type":394,"tag":488,"props":2469,"children":2470},{},[2471],{"type":400,"value":2472},"\"RegExp\"",{"type":400,"value":494},{"type":394,"tag":412,"props":2475,"children":2476},{},[2477,2479,2484],{"type":400,"value":2478},"Else, let builtinTag be ",{"type":394,"tag":488,"props":2480,"children":2481},{},[2482],{"type":400,"value":2483},"\"Object\"",{"type":400,"value":494},{"type":394,"tag":412,"props":2486,"children":2487},{},[2488,2490,2495],{"type":400,"value":2489},"Let tag be ",{"type":394,"tag":466,"props":2491,"children":2492},{},[2493],{"type":400,"value":2494},"Get(O, @@toStringTag)",{"type":400,"value":494},{"type":394,"tag":412,"props":2497,"children":2498},{},[2499,2504],{"type":394,"tag":466,"props":2500,"children":2501},{},[2502],{"type":400,"value":2503},"ReturnIfAbrupt(tag)",{"type":400,"value":494},{"type":394,"tag":412,"props":2506,"children":2507},{},[2508,2509,2514],{"type":400,"value":464},{"type":394,"tag":466,"props":2510,"children":2511},{},[2512],{"type":400,"value":2513},"Type(tag)",{"type":400,"value":2515}," is not String, let tag be builtinTag.",{"type":394,"tag":412,"props":2517,"children":2518},{},[2519,2521,2531],{"type":400,"value":2520},"Return the String that is the result of concatenating ",{"type":394,"tag":488,"props":2522,"children":2523},{},[2524,2525,2530],{"type":400,"value":2311},{"type":394,"tag":817,"props":2526,"children":2527},{},[2528],{"type":400,"value":2529},"object \"**, tag, and **\"",{"type":400,"value":2311},{"type":400,"value":494},{"type":394,"tag":402,"props":2533,"children":2534},{},[2535],{"type":400,"value":2536},"细数下来，Object.prototype.toString 不仅可以区分 Object、Function、Date、RegExp 等常见对象，它还能区分 Error、Arguments 等，见下代码：",{"type":394,"tag":807,"props":2538,"children":2540},{"className":809,"code":2539,"language":811,"meta":388,"style":388},";(function() {\n  console.log(\n    typeof arguments, // 'object'\n    Object.prototype.toString.call(arguments) // '[object Arguments]'\n  )\n})()\n",[2541],{"type":394,"tag":699,"props":2542,"children":2543},{"__ignoreMap":388},[2544,2568,2588,2611,2661,2669],{"type":394,"tag":817,"props":2545,"children":2546},{"class":819,"line":820},[2547,2551,2555,2559,2564],{"type":394,"tag":817,"props":2548,"children":2549},{"style":836},[2550],{"type":400,"value":1283},{"type":394,"tag":817,"props":2552,"children":2553},{"style":891},[2554],{"type":400,"value":839},{"type":394,"tag":817,"props":2556,"children":2557},{"style":824},[2558],{"type":400,"value":827},{"type":394,"tag":817,"props":2560,"children":2561},{"style":836},[2562],{"type":400,"value":2563},"()",{"type":394,"tag":817,"props":2565,"children":2566},{"style":836},[2567],{"type":400,"value":874},{"type":394,"tag":817,"props":2569,"children":2570},{"class":819,"line":877},[2571,2576,2580,2584],{"type":394,"tag":817,"props":2572,"children":2573},{"style":891},[2574],{"type":400,"value":2575},"  console",{"type":394,"tag":817,"props":2577,"children":2578},{"style":836},[2579],{"type":400,"value":494},{"type":394,"tag":817,"props":2581,"children":2582},{"style":830},[2583],{"type":400,"value":1083},{"type":394,"tag":817,"props":2585,"children":2586},{"style":1494},[2587],{"type":400,"value":1626},{"type":394,"tag":817,"props":2589,"children":2590},{"class":819,"line":907},[2591,2596,2602,2606],{"type":394,"tag":817,"props":2592,"children":2593},{"style":896},[2594],{"type":400,"value":2595},"    typeof",{"type":394,"tag":817,"props":2597,"children":2599},{"style":2598},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[2600],{"type":400,"value":2601}," arguments",{"type":394,"tag":817,"props":2603,"children":2604},{"style":836},[2605],{"type":400,"value":850},{"type":394,"tag":817,"props":2607,"children":2608},{"style":1062},[2609],{"type":400,"value":2610}," // 'object'\n",{"type":394,"tag":817,"props":2612,"children":2613},{"class":819,"line":933},[2614,2619,2623,2627,2631,2635,2639,2643,2647,2652,2656],{"type":394,"tag":817,"props":2615,"children":2616},{"style":1105},[2617],{"type":400,"value":2618},"    Object",{"type":394,"tag":817,"props":2620,"children":2621},{"style":836},[2622],{"type":400,"value":494},{"type":394,"tag":817,"props":2624,"children":2625},{"style":977},[2626],{"type":400,"value":1116},{"type":394,"tag":817,"props":2628,"children":2629},{"style":836},[2630],{"type":400,"value":494},{"type":394,"tag":817,"props":2632,"children":2633},{"style":891},[2634],{"type":400,"value":2217},{"type":394,"tag":817,"props":2636,"children":2637},{"style":836},[2638],{"type":400,"value":494},{"type":394,"tag":817,"props":2640,"children":2641},{"style":830},[2642],{"type":400,"value":2226},{"type":394,"tag":817,"props":2644,"children":2645},{"style":1494},[2646],{"type":400,"value":839},{"type":394,"tag":817,"props":2648,"children":2649},{"style":2598},[2650],{"type":400,"value":2651},"arguments",{"type":394,"tag":817,"props":2653,"children":2654},{"style":1494},[2655],{"type":400,"value":1121},{"type":394,"tag":817,"props":2657,"children":2658},{"style":1062},[2659],{"type":400,"value":2660},"// '[object Arguments]'\n",{"type":394,"tag":817,"props":2662,"children":2663},{"class":819,"line":959},[2664],{"type":394,"tag":817,"props":2665,"children":2666},{"style":1494},[2667],{"type":400,"value":2668},"  )\n",{"type":394,"tag":817,"props":2670,"children":2671},{"class":819,"line":968},[2672,2677],{"type":394,"tag":817,"props":2673,"children":2674},{"style":836},[2675],{"type":400,"value":2676},"}",{"type":394,"tag":817,"props":2678,"children":2679},{"style":891},[2680],{"type":400,"value":2681},")()\n",{"type":394,"tag":689,"props":2683,"children":2685},{"id":2684},"如何扩展",[2686],{"type":400,"value":2684},{"type":394,"tag":402,"props":2688,"children":2689},{},[2690],{"type":400,"value":2691},"可以通过 Symbol.toStringTag 对已有对象的内置标签进行修改。这样就可以不需要通过构造函数的方法来分辨程序中不同种类的新对象。如下代码：",{"type":394,"tag":807,"props":2693,"children":2695},{"className":809,"code":2694,"language":811,"meta":388,"style":388},"var a = {}\na[Symbol.toStringTag] = '1234'\nObject.prototype.toString.call(a)\n// >>> \"[object 1234]\"\n",[2696],{"type":394,"tag":699,"props":2697,"children":2698},{"__ignoreMap":388},[2699,2721,2755,2792],{"type":394,"tag":817,"props":2700,"children":2701},{"class":819,"line":820},[2702,2707,2712,2716],{"type":394,"tag":817,"props":2703,"children":2704},{"style":824},[2705],{"type":400,"value":2706},"var",{"type":394,"tag":817,"props":2708,"children":2709},{"style":891},[2710],{"type":400,"value":2711}," a ",{"type":394,"tag":817,"props":2713,"children":2714},{"style":896},[2715],{"type":400,"value":1946},{"type":394,"tag":817,"props":2717,"children":2718},{"style":836},[2719],{"type":400,"value":2720}," {}\n",{"type":394,"tag":817,"props":2722,"children":2723},{"class":819,"line":877},[2724,2729,2733,2738,2742,2746,2751],{"type":394,"tag":817,"props":2725,"children":2726},{"style":891},[2727],{"type":400,"value":2728},"a[Symbol",{"type":394,"tag":817,"props":2730,"children":2731},{"style":836},[2732],{"type":400,"value":494},{"type":394,"tag":817,"props":2734,"children":2735},{"style":891},[2736],{"type":400,"value":2737},"toStringTag] ",{"type":394,"tag":817,"props":2739,"children":2740},{"style":896},[2741],{"type":400,"value":1946},{"type":394,"tag":817,"props":2743,"children":2744},{"style":1000},[2745],{"type":400,"value":1022},{"type":394,"tag":817,"props":2747,"children":2748},{"style":1006},[2749],{"type":400,"value":2750},"1234",{"type":394,"tag":817,"props":2752,"children":2753},{"style":1000},[2754],{"type":400,"value":2256},{"type":394,"tag":817,"props":2756,"children":2757},{"class":819,"line":907},[2758,2763,2767,2771,2775,2779,2783,2787],{"type":394,"tag":817,"props":2759,"children":2760},{"style":1105},[2761],{"type":400,"value":2762},"Object",{"type":394,"tag":817,"props":2764,"children":2765},{"style":836},[2766],{"type":400,"value":494},{"type":394,"tag":817,"props":2768,"children":2769},{"style":977},[2770],{"type":400,"value":1116},{"type":394,"tag":817,"props":2772,"children":2773},{"style":836},[2774],{"type":400,"value":494},{"type":394,"tag":817,"props":2776,"children":2777},{"style":891},[2778],{"type":400,"value":2217},{"type":394,"tag":817,"props":2780,"children":2781},{"style":836},[2782],{"type":400,"value":494},{"type":394,"tag":817,"props":2784,"children":2785},{"style":830},[2786],{"type":400,"value":2226},{"type":394,"tag":817,"props":2788,"children":2789},{"style":891},[2790],{"type":400,"value":2791},"(a)\n",{"type":394,"tag":817,"props":2793,"children":2794},{"class":819,"line":933},[2795],{"type":394,"tag":817,"props":2796,"children":2797},{"style":1062},[2798],{"type":400,"value":2799},"// >>> \"[object 1234]\"\n",{"type":394,"tag":689,"props":2801,"children":2803},{"id":2802},"缺陷所在",[2804],{"type":400,"value":2802},{"type":394,"tag":402,"props":2806,"children":2807},{},[2808],{"type":400,"value":2809},"JS 中的对象，按照执行环境来划分可以分为内置对象（Build-In Object）和宿主对象（Host Object），如 Window、History 就是执行环境（浏览器）提供的对象。\n缺陷呢，往往就存在于规范中没有被定义的行为。\n比如，Window 对象的 Symbol.toString 是浏览器定义的行为，而且往往不同浏览器，实现还不一样。",{"type":394,"tag":807,"props":2811,"children":2813},{"className":809,"code":2812,"language":811,"meta":388,"style":388},"Window.toString()\n// [object Window] ?\n// [object Object] ?\n// [object DOMWindow] ?\n// [object global] ? (这个尤其为叛徒，第一个字母居然是小写的)\n",[2814],{"type":394,"tag":699,"props":2815,"children":2816},{"__ignoreMap":388},[2817,2838,2846,2854,2862],{"type":394,"tag":817,"props":2818,"children":2819},{"class":819,"line":820},[2820,2825,2829,2833],{"type":394,"tag":817,"props":2821,"children":2822},{"style":891},[2823],{"type":400,"value":2824},"Window",{"type":394,"tag":817,"props":2826,"children":2827},{"style":836},[2828],{"type":400,"value":494},{"type":394,"tag":817,"props":2830,"children":2831},{"style":830},[2832],{"type":400,"value":2217},{"type":394,"tag":817,"props":2834,"children":2835},{"style":891},[2836],{"type":400,"value":2837},"()\n",{"type":394,"tag":817,"props":2839,"children":2840},{"class":819,"line":877},[2841],{"type":394,"tag":817,"props":2842,"children":2843},{"style":1062},[2844],{"type":400,"value":2845},"// [object Window] ?\n",{"type":394,"tag":817,"props":2847,"children":2848},{"class":819,"line":907},[2849],{"type":394,"tag":817,"props":2850,"children":2851},{"style":1062},[2852],{"type":400,"value":2853},"// [object Object] ?\n",{"type":394,"tag":817,"props":2855,"children":2856},{"class":819,"line":933},[2857],{"type":394,"tag":817,"props":2858,"children":2859},{"style":1062},[2860],{"type":400,"value":2861},"// [object DOMWindow] ?\n",{"type":394,"tag":817,"props":2863,"children":2864},{"class":819,"line":959},[2865],{"type":394,"tag":817,"props":2866,"children":2867},{"style":1062},[2868],{"type":400,"value":2869},"// [object global] ? (这个尤其为叛徒，第一个字母居然是小写的)\n",{"type":394,"tag":402,"props":2871,"children":2872},{},[2873],{"type":394,"tag":488,"props":2874,"children":2875},{},[2876],{"type":400,"value":2877},"(￣ ▽ ￣)\" 害。",{"type":394,"tag":395,"props":2879,"children":2881},{"id":2880},"最后",[2882],{"type":400,"value":2880},{"type":394,"tag":402,"props":2884,"children":2885},{},[2886],{"type":400,"value":2887},"想不到吧，JS 类型判断这个问题居然没有完美的解法，每种解法都有缺陷。",{"type":394,"tag":402,"props":2889,"children":2890},{},[2891],{"type":400,"value":2892},"那么我们平常写代码到底用哪种呢？",{"type":394,"tag":402,"props":2894,"children":2895},{},[2896],{"type":400,"value":2897},"虽然我刚才提到“业务代码可以使用 typeof 或 instanceof，库和工具函数等需要更精准的情况则用 Object.prototype.toString”，但是，这并不是绝对的。\n我们仔细思考一下这三种方法的本质：",{"type":394,"tag":408,"props":2899,"children":2900},{},[2901,2906,2911],{"type":394,"tag":412,"props":2902,"children":2903},{},[2904],{"type":400,"value":2905},"typeof 根据最小三位字节判断变量类型",{"type":394,"tag":412,"props":2907,"children":2908},{},[2909],{"type":400,"value":2910},"instanceof 根据原型链判断",{"type":394,"tag":412,"props":2912,"children":2913},{},[2914],{"type":400,"value":2915},"Object.prototype.toString 主要是根据对象的内置标签（Build-In Tag）判断",{"type":394,"tag":402,"props":2917,"children":2918},{},[2919],{"type":400,"value":2920},"那么熟记这三条规则，写代码时就能游刃有余了。",{"type":394,"tag":402,"props":2922,"children":2923},{},[2924],{"type":400,"value":2925},"感谢看到结尾，如有错误请务必指正，十分感谢。如果喜欢请点赞、投币、关注三连吧！我是 Lionad，爱你萌！",{"type":394,"tag":395,"props":2927,"children":2929},{"id":2928},"阅读更多",[2930],{"type":400,"value":2928},{"type":394,"tag":408,"props":2932,"children":2933},{},[2934,2946,2956,2966,2976],{"type":394,"tag":412,"props":2935,"children":2936},{},[2937],{"type":394,"tag":2938,"props":2939,"children":2943},"a",{"href":2940,"rel":2941},"https://book.douban.com/subject/27133542/",[2942],"nofollow",[2944],{"type":400,"value":2945},"《JavaScript 框架设计》",{"type":394,"tag":412,"props":2947,"children":2948},{},[2949],{"type":394,"tag":2938,"props":2950,"children":2953},{"href":2951,"rel":2952},"https://justjavac.com/javascript/2012/12/23/what-is-javascripts-typeof-operator-used-for.html",[2942],[2954],{"type":400,"value":2955},"JavaScript 的 typeof 的用途",{"type":394,"tag":412,"props":2957,"children":2958},{},[2959],{"type":394,"tag":2938,"props":2960,"children":2963},{"href":2961,"rel":2962},"https://2ality.com/2013/10/typeof-null.html",[2942],[2964],{"type":400,"value":2965},"The history of “typeof null”",{"type":394,"tag":412,"props":2967,"children":2968},{},[2969],{"type":394,"tag":2938,"props":2970,"children":2973},{"href":2971,"rel":2972},"http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator",[2942],[2974],{"type":400,"value":2975},"ECMAScript® 2015 Language Specification",{"type":394,"tag":412,"props":2977,"children":2978},{},[2979],{"type":394,"tag":2938,"props":2980,"children":2983},{"href":2981,"rel":2982},"https://juejin.im/post/5b0b9b9051882515773ae714",[2942],[2984],{"type":400,"value":2985},"instanceof 和 typeof 原理",{"type":394,"tag":2987,"props":2988,"children":2989},"style",{},[2990],{"type":400,"value":2991},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":388,"searchDepth":877,"depth":877,"links":2993},[2994,2995,2999,3003,3007,3008],{"id":397,"depth":877,"text":397},{"id":416,"depth":877,"text":416,"children":2996},[2997,2998],{"id":682,"depth":907,"text":682},{"id":727,"depth":907,"text":730},{"id":421,"depth":877,"text":421,"children":3000},[3001,3002],{"id":1592,"depth":907,"text":1592},{"id":1589,"depth":907,"text":1589},{"id":2145,"depth":877,"text":426,"children":3004},[3005,3006],{"id":2684,"depth":907,"text":2684},{"id":2802,"depth":907,"text":2802},{"id":2880,"depth":877,"text":2880},{"id":2928,"depth":877,"text":2928},"markdown","content:_archieved:2020-05:type-check.md","content","_archieved/2020-05/type-check.md","md",[3015,3018],{"_path":3016,"title":3017,"description":388},"/_archieved/2020-05/js-module-history","JS 模块化简史",{"_path":3019,"title":3020,"description":388},"/_archieved/2020-06/punctuations","✒️ 关于标点的那些事儿",1708107572794]