[{"data":1,"prerenderedAt":3027},["Reactive",2],{"navigation":3,"/_archieved/2020-05/type-check":389,"/_archieved/2020-05/type-check-surround":3020},[4,32,83,99,126,132,138,372,378,384],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":42,"_path":43},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":45,"_path":46},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":48,"_path":49},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":51,"_path":52},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":54,"_path":55},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":57,"_path":58},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":60,"_path":61},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":63,"_path":64},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":66,"_path":67},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":69,"_path":70},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":72,"_path":73},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":75,"_path":76},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":78,"_path":79},"🚝 四十二篇系列","/articles/fourty-two",{"title":81,"_path":82},"📝 技术博客归档","/articles/fold",{"title":84,"_path":85,"children":86},"造物 / Make","/tools",[87,90,93,96],{"title":88,"_path":89},"🌐 AnySort","/tools/anysort",{"title":91,"_path":92},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":94,"_path":95},"👓 Crapto","/tools/crypto-inline",{"title":97,"_path":98},"🖨️ any-to-base64","/tools/any-to-base64",{"title":100,"_path":101,"children":102},"吉他剧场 / Music","/music",[103,105,108,111,114,117,120,123],{"title":104,"_path":101},"🎸 FingerStyle！",{"title":106,"_path":107},"🌬️ 等待的风","/music/wind",{"title":109,"_path":110},"💕 约定的海洋","/music/ocean",{"title":112,"_path":113},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":115,"_path":116},"🌏 残酷天使的行动纲领","/music/eva",{"title":118,"_path":119},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":121,"_path":122},"🍷 Wu Wei","/music/wu-wei",{"title":124,"_path":125},"🌅 无题","/music/untitled",{"title":127,"_path":128,"children":129},"画点什么 / Paint","/paint",[130],{"title":131,"_path":128},"🚧 正在施工",{"title":133,"_path":134,"children":135},"知识地图 / Maps","/maps",[136],{"title":137,"_path":134},"🏁 知识地图",{"title":139,"_path":140,"children":141},"零散的笔记 / Gists","/gists",[142,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369],{"title":143,"_path":140},"🧊 Gists",{"title":145,"_path":146},"网站的可访问性","/gists/accessibility",{"title":148,"_path":149},"Bit","/gists/bit",{"title":151,"_path":152},"图片模糊","/gists/blur",{"title":154,"_path":155},"渲染相关笔记","/gists/c4d",{"title":157,"_path":158},"CDN 问题记录","/gists/cdn",{"title":160,"_path":161},"消毒剂","/gists/cleaner",{"title":163,"_path":164},"Windows Command","/gists/cmd",{"title":166,"_path":167},"Command","/gists/command",{"title":169,"_path":170},"复杂科学","/gists/complexity-science",{"title":172,"_path":173},"宇宙","/gists/cosmos",{"title":175,"_path":176},"C++","/gists/cpp",{"title":178,"_path":179},"Data Structure","/gists/data-structure",{"title":181,"_path":182},"DEPRESSION","/gists/depression",{"title":184,"_path":185},"设计模式","/gists/design-patterns",{"title":187,"_path":188},"Developer Experience","/gists/developer-experience",{"title":190,"_path":191},"Device Metrics","/gists/device-metrix",{"title":193,"_path":194},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":196,"_path":197},"正则表达式","/gists/eegex",{"title":199,"_path":200},"Emoji","/gists/emoji",{"title":202,"_path":203},"工程","/gists/engineering",{"title":205,"_path":206},"熵","/gists/entropy",{"title":208,"_path":209},"Environment","/gists/environment",{"title":211,"_path":212},"Erlang","/gists/erlang",{"title":214,"_path":215},"逃离塔克夫","/gists/escape-from-tarkov",{"title":217,"_path":218},"ESNext (ES6-ES11)","/gists/esnext",{"title":220,"_path":221},"Eval！","/gists/eval",{"title":223,"_path":224},"Flutter","/gists/flutter",{"title":226,"_path":227},"字体","/gists/font",{"title":229,"_path":230},"JS 函数式编程","/gists/functional",{"title":232,"_path":233},"Google C++ Standard","/gists/google-cpp-standard",{"title":235,"_path":236},"双向链接完全体","/gists/graph",{"title":238,"_path":239},"Hardwares","/gists/hardwares",{"title":241,"_path":242},"哈希冲突","/gists/hash-collision",{"title":244,"_path":245},"信息设计","/gists/information-design",{"title":247,"_path":248},"InstantPage","/gists/instant.page",{"title":250,"_path":251},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":253,"_path":254},"KVStore","/gists/key-value-db",{"title":256,"_path":257},"Kubernetes","/gists/kubernetes",{"title":259,"_path":260},"Makefile","/gists/makefile",{"title":262,"_path":263},"Markdown Inline Style","/gists/markdown-nice",{"title":265,"_path":266},"小程序","/gists/miniapp",{"title":268,"_path":269},"减小页面快照体积","/gists/minify-html",{"title":271,"_path":272},"mklink","/gists/mklink",{"title":274,"_path":275},"Mock","/gists/mock",{"title":277,"_path":278},"多端应用","/gists/multy-end-app",{"title":280,"_path":281},"神经科学","/gists/neuroscience",{"title":283,"_path":284},"OO","/gists/oo",{"title":286,"_path":287},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":289,"_path":290},"人物","/gists/person",{"title":292,"_path":293},"PInvoke","/gists/pinvoke",{"title":295,"_path":296},"像素","/gists/pixel",{"title":298,"_path":299},"PowerShell","/gists/powershell",{"title":301,"_path":302},"量子","/gists/quantum",{"title":304,"_path":305},"保持好奇心","/gists/questions",{"title":307,"_path":308},"React Native","/gists/react-native",{"title":310,"_path":311},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":313,"_path":314},"SEO","/gists/seo",{"title":316,"_path":317},"Shader","/gists/shader",{"title":319,"_path":320},"Shape Up","/gists/shape-up",{"title":322,"_path":323},"睡觉","/gists/sleep",{"title":325,"_path":326},"States","/gists/states",{"title":328,"_path":329},"Storage","/gists/storage",{"title":331,"_path":332},"音视频流处理","/gists/stream-cli",{"title":334,"_path":335},"Symbol","/gists/symbol",{"title":337,"_path":338},"系统论","/gists/systems-theory",{"title":340,"_path":341},"Taro","/gists/taro",{"title":343,"_path":344},"任务切片","/gists/task-slice",{"title":346,"_path":347},"技术偏好","/gists/tech-dudge",{"title":349,"_path":350},"Untitled","/gists/untitled",{"title":352,"_path":353},"可变字体","/gists/variable-font",{"title":355,"_path":356},"视觉错觉","/gists/visual-illusion",{"title":358,"_path":359},"SS(SSR)","/gists/vpn",{"title":361,"_path":362},"VS Code 插件开发","/gists/vscode-plugin",{"title":364,"_path":365},"Web Components","/gists/web-components",{"title":367,"_path":368},"Windows","/gists/windows",{"title":370,"_path":371},"查缺补漏","/gists/wrong",{"title":373,"_path":374,"children":375},"代码笔记 / Gists","/source-code",[376],{"title":377,"_path":374},"🚄 代码笔记",{"title":379,"_path":380,"children":381},"我 / Abount","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"title":385,"_path":386,"children":387},"todo","/todo",[388],{"title":385,"_path":386},{"_path":390,"_dir":391,"_draft":392,"_partial":393,"_locale":394,"title":395,"description":394,"body":396,"_type":3015,"_id":3016,"_source":3017,"_file":3018,"_extension":3019},"/_archieved/2020-05/type-check","2020-05",false,true,"","🎫 常用类型判断方法的优势及缺陷",{"type":397,"children":398,"toc":2998},"root",[399,407,413,433,438,442,447,452,457,526,531,533,676,681,694,699,713,726,731,737,742,770,775,798,803,807,812,1151,1156,1164,1270,1275,1304,1309,1314,1536,1541,1568,1573,1578,1583,1596,1601,1606,1816,1821,1842,1846,1851,2144,2149,2154,2159,2287,2292,2538,2543,2688,2693,2698,2806,2811,2816,2876,2884,2889,2894,2899,2904,2922,2927,2932,2937,2992],{"type":400,"tag":401,"props":402,"children":404},"element","h2",{"id":403},"常用判断方法",[405],{"type":406,"value":403},"text",{"type":400,"tag":408,"props":409,"children":410},"p",{},[411],{"type":406,"value":412},"类型判断，在 JavaScript 中是一个很经典的问题了。围绕类型判断，有几种常见的解决方法，下是最常用的三种：",{"type":400,"tag":414,"props":415,"children":416},"ul",{},[417,423,428],{"type":400,"tag":418,"props":419,"children":420},"li",{},[421],{"type":406,"value":422},"typeof",{"type":400,"tag":418,"props":424,"children":425},{},[426],{"type":406,"value":427},"instanceof",{"type":400,"tag":418,"props":429,"children":430},{},[431],{"type":406,"value":432},"Object.prototype.toString.call",{"type":400,"tag":408,"props":434,"children":435},{},[436],{"type":406,"value":437},"我将在此文中根据这几种方法在 ECMAScript 规范下的描述及我们开发时的实际情况，聊聊这几种方法的优劣势所在。",{"type":400,"tag":401,"props":439,"children":440},{"id":422},[441],{"type":406,"value":422},{"type":400,"tag":408,"props":443,"children":444},{},[445],{"type":406,"value":446},"当我还是一个 JS 萌新的时候，我就爱上了 typeof 运算符，因为它的作用正如其名，非常好理解。\n利用 typeof 我们可以轻松判断常见的基础类型，如 Number、String、Boolean 等。",{"type":400,"tag":408,"props":448,"children":449},{},[450],{"type":406,"value":451},"ECMAScript 文档中有对 typeof 这样描述：",{"type":400,"tag":408,"props":453,"children":454},{},[455],{"type":406,"value":456},"$\\it{UnaryExpression} \\quad: \\quad \\bf{typeof} \\quad \\it{UnaryExpression}$",{"type":400,"tag":458,"props":459,"children":460},"ol",{},[461,466,501,512,521],{"type":400,"tag":418,"props":462,"children":463},{},[464],{"type":406,"value":465},"Let val be the result of evaluating UnaryExpression.",{"type":400,"tag":418,"props":467,"children":468},{},[469,471,477,479],{"type":406,"value":470},"If ",{"type":400,"tag":472,"props":473,"children":474},"em",{},[475],{"type":406,"value":476},"Type(val)",{"type":406,"value":478}," is Reference, then\n",{"type":400,"tag":414,"props":480,"children":481},{},[482],{"type":400,"tag":418,"props":483,"children":484},{},[485,486,491,493,499],{"type":406,"value":470},{"type":400,"tag":472,"props":487,"children":488},{},[489],{"type":406,"value":490},"IsUnresolvableReference(val)",{"type":406,"value":492}," is true, return ",{"type":400,"tag":494,"props":495,"children":496},"strong",{},[497],{"type":406,"value":498},"\"undefined\"",{"type":406,"value":500},".",{"type":400,"tag":418,"props":502,"children":503},{},[504,506,511],{"type":406,"value":505},"Let val be ",{"type":400,"tag":472,"props":507,"children":508},{},[509],{"type":406,"value":510},"GetValue(val)",{"type":406,"value":500},{"type":400,"tag":418,"props":513,"children":514},{},[515,520],{"type":400,"tag":472,"props":516,"children":517},{},[518],{"type":406,"value":519},"ReturnIfAbrupt(val)",{"type":406,"value":500},{"type":400,"tag":418,"props":522,"children":523},{},[524],{"type":406,"value":525},"Return a String according to Table Below.",{"type":400,"tag":408,"props":527,"children":528},{},[529],{"type":406,"value":530},"简单来说，就是先判断是不是引用未知，是则返回 'undefined'，不然就根据下表找值。",{"type":406,"value":532},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":400,"tag":534,"props":535,"children":536},"table",{},[537,557],{"type":400,"tag":538,"props":539,"children":540},"thead",{},[541],{"type":400,"tag":542,"props":543,"children":544},"tr",{},[545,552],{"type":400,"tag":546,"props":547,"children":549},"th",{"align":548},"center",[550],{"type":406,"value":551},"类型",{"type":400,"tag":546,"props":553,"children":554},{"align":548},[555],{"type":406,"value":556},"返回",{"type":400,"tag":558,"props":559,"children":560},"tbody",{},[561,574,587,600,613,626,638,650,663],{"type":400,"tag":542,"props":562,"children":563},{},[564,570],{"type":400,"tag":565,"props":566,"children":567},"td",{"align":548},[568],{"type":406,"value":569},"Undefined",{"type":400,"tag":565,"props":571,"children":572},{"align":548},[573],{"type":406,"value":498},{"type":400,"tag":542,"props":575,"children":576},{},[577,582],{"type":400,"tag":565,"props":578,"children":579},{"align":548},[580],{"type":406,"value":581},"Null",{"type":400,"tag":565,"props":583,"children":584},{"align":548},[585],{"type":406,"value":586},"\"object\"",{"type":400,"tag":542,"props":588,"children":589},{},[590,595],{"type":400,"tag":565,"props":591,"children":592},{"align":548},[593],{"type":406,"value":594},"Boolean",{"type":400,"tag":565,"props":596,"children":597},{"align":548},[598],{"type":406,"value":599},"\"boolean\"",{"type":400,"tag":542,"props":601,"children":602},{},[603,608],{"type":400,"tag":565,"props":604,"children":605},{"align":548},[606],{"type":406,"value":607},"Number",{"type":400,"tag":565,"props":609,"children":610},{"align":548},[611],{"type":406,"value":612},"\"number\"",{"type":400,"tag":542,"props":614,"children":615},{},[616,621],{"type":400,"tag":565,"props":617,"children":618},{"align":548},[619],{"type":406,"value":620},"String",{"type":400,"tag":565,"props":622,"children":623},{"align":548},[624],{"type":406,"value":625},"\"string\"",{"type":400,"tag":542,"props":627,"children":628},{},[629,634],{"type":400,"tag":565,"props":630,"children":631},{"align":548},[632],{"type":406,"value":633},"Object (ordinary and does not implement [[Call]])",{"type":400,"tag":565,"props":635,"children":636},{"align":548},[637],{"type":406,"value":586},{"type":400,"tag":542,"props":639,"children":640},{},[641,646],{"type":400,"tag":565,"props":642,"children":643},{"align":548},[644],{"type":406,"value":645},"Object (standard exotic and does not implement [[Call]])",{"type":400,"tag":565,"props":647,"children":648},{"align":548},[649],{"type":406,"value":586},{"type":400,"tag":542,"props":651,"children":652},{},[653,658],{"type":400,"tag":565,"props":654,"children":655},{"align":548},[656],{"type":406,"value":657},"Object (implements [[Call]])",{"type":400,"tag":565,"props":659,"children":660},{"align":548},[661],{"type":406,"value":662},"\"function\"",{"type":400,"tag":542,"props":664,"children":665},{},[666,671],{"type":400,"tag":565,"props":667,"children":668},{"align":548},[669],{"type":406,"value":670},"Object (non-standard exotic and does not implement [[Call]])",{"type":400,"tag":565,"props":672,"children":673},{"align":548},[674],{"type":406,"value":675},"Implementation-defined. Must not be \"undefined\", \"boolean\", \"function\", \"number\", \"symbol\", or \"string\".",{"type":400,"tag":408,"props":677,"children":678},{},[679],{"type":406,"value":680},"这里我们详细说说两点：",{"type":400,"tag":458,"props":682,"children":683},{},[684,689],{"type":400,"tag":418,"props":685,"children":686},{},[687],{"type":406,"value":688},"判断内置对象",{"type":400,"tag":418,"props":690,"children":691},{},[692],{"type":406,"value":693},"typeof null === 'object'",{"type":400,"tag":695,"props":696,"children":697},"h3",{"id":688},[698],{"type":406,"value":688},{"type":400,"tag":408,"props":700,"children":701},{},[702,704,711],{"type":406,"value":703},"Function 作为内置对象，为什么 ",{"type":400,"tag":705,"props":706,"children":708},"code",{"className":707},[],[709],{"type":406,"value":710},"typeof (function a(){})",{"type":406,"value":712}," 的值不为“object”呢？",{"type":400,"tag":408,"props":714,"children":715},{},[716,718,724],{"type":406,"value":717},"其实上面那张表有相应线索，倒数第二条，这是一个特殊判定，“如果对象实现了内部方法[[Call]]” 或 “是 ",{"type":400,"tag":705,"props":719,"children":721},{"className":720},[],[722],{"type":406,"value":723},"Callable",{"type":406,"value":725}," 对象”，那么返回值为“function”。",{"type":400,"tag":408,"props":727,"children":728},{},[729],{"type":406,"value":730},"用 typeof 判断对象太麻烦了，一点儿也不实在。一般情况下，我们会用等下介绍的 Object.prototype.toString 去判断内置对象。",{"type":400,"tag":695,"props":732,"children":734},{"id":733},"typeof-null",[735],{"type":406,"value":736},"typeof null",{"type":400,"tag":408,"props":738,"children":739},{},[740],{"type":406,"value":741},"null 是用来标记“期待指向”的，不是 Object 类型，所以 typeof null === 'object' 是一个程序错误。\n这要追溯到第一版 JavaScript。这版 JS 的实现中，值是存储在 32 位单位中，其中端序最小的 3 位，用来表示值的类型，如下：",{"type":400,"tag":414,"props":743,"children":744},{},[745,750,755,760,765],{"type":400,"tag":418,"props":746,"children":747},{},[748],{"type":406,"value":749},"000：Object",{"type":400,"tag":418,"props":751,"children":752},{},[753],{"type":406,"value":754},"001：Int",{"type":400,"tag":418,"props":756,"children":757},{},[758],{"type":406,"value":759},"010：Double",{"type":400,"tag":418,"props":761,"children":762},{},[763],{"type":406,"value":764},"100：String",{"type":400,"tag":418,"props":766,"children":767},{},[768],{"type":406,"value":769},"110：Boolean",{"type":400,"tag":408,"props":771,"children":772},{},[773],{"type":406,"value":774},"此外，还有两种特殊值：",{"type":400,"tag":414,"props":776,"children":777},{},[778,788],{"type":400,"tag":418,"props":779,"children":780},{},[781,786],{"type":400,"tag":494,"props":782,"children":783},{},[784],{"type":406,"value":785},"undefined",{"type":406,"value":787}," (JSVAL_VOID): $-2^{32}$",{"type":400,"tag":418,"props":789,"children":790},{},[791,796],{"type":400,"tag":494,"props":792,"children":793},{},[794],{"type":406,"value":795},"null",{"type":406,"value":797}," (JSVAL_NULL): 用全为 0 的机器码表示的 NULL 指针（或，一个指向 0 的 Object 类型的值）",{"type":400,"tag":408,"props":799,"children":800},{},[801],{"type":406,"value":802},"也就是说，对程序而言，typeof null 判断类型是根据前三位 0 取得的“object”。这是一个历史遗留问题，有人提出过修复方案，但是怕影响历史遗留代码，修复便被否决了。",{"type":400,"tag":401,"props":804,"children":805},{"id":427},[806],{"type":406,"value":427},{"type":400,"tag":408,"props":808,"children":809},{},[810],{"type":406,"value":811},"内置 instanceof 运算符是用来检测构造函数的 prototype 属性是否存在于某个实例对象的原型链。\n用代码解释要更直观一些：",{"type":400,"tag":813,"props":814,"children":818},"pre",{"className":815,"code":816,"language":817,"meta":394,"style":394},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","function Car(make, model, year) {\n  this.make = make\n  this.model = model\n  this.year = year\n}\nconst auto = new Car('Honda', 'Accord', 1998)\n\n// true\nconsole.log((auto.__proto__ === Car.prototype) === auto instanceof Car)\n","js",[819],{"type":400,"tag":705,"props":820,"children":821},{"__ignoreMap":394},[822,881,911,937,963,972,1053,1062,1072],{"type":400,"tag":823,"props":824,"children":827},"span",{"class":825,"line":826},"line",1,[828,834,840,846,852,857,862,866,871,876],{"type":400,"tag":823,"props":829,"children":831},{"style":830},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#66D9EF;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[832],{"type":406,"value":833},"function",{"type":400,"tag":823,"props":835,"children":837},{"style":836},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[838],{"type":406,"value":839}," Car",{"type":400,"tag":823,"props":841,"children":843},{"style":842},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[844],{"type":406,"value":845},"(",{"type":400,"tag":823,"props":847,"children":849},{"style":848},"--shiki-light:#90A4AE;--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#FD971F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[850],{"type":406,"value":851},"make",{"type":400,"tag":823,"props":853,"children":854},{"style":842},[855],{"type":406,"value":856},",",{"type":400,"tag":823,"props":858,"children":859},{"style":848},[860],{"type":406,"value":861}," model",{"type":400,"tag":823,"props":863,"children":864},{"style":842},[865],{"type":406,"value":856},{"type":400,"tag":823,"props":867,"children":868},{"style":848},[869],{"type":406,"value":870}," year",{"type":400,"tag":823,"props":872,"children":873},{"style":842},[874],{"type":406,"value":875},")",{"type":400,"tag":823,"props":877,"children":878},{"style":842},[879],{"type":406,"value":880}," {\n",{"type":400,"tag":823,"props":882,"children":884},{"class":825,"line":883},2,[885,891,895,900,906],{"type":400,"tag":823,"props":886,"children":888},{"style":887},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[889],{"type":406,"value":890},"  this",{"type":400,"tag":823,"props":892,"children":893},{"style":842},[894],{"type":406,"value":500},{"type":400,"tag":823,"props":896,"children":898},{"style":897},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[899],{"type":406,"value":851},{"type":400,"tag":823,"props":901,"children":903},{"style":902},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[904],{"type":406,"value":905}," =",{"type":400,"tag":823,"props":907,"children":908},{"style":897},[909],{"type":406,"value":910}," make\n",{"type":400,"tag":823,"props":912,"children":914},{"class":825,"line":913},3,[915,919,923,928,932],{"type":400,"tag":823,"props":916,"children":917},{"style":887},[918],{"type":406,"value":890},{"type":400,"tag":823,"props":920,"children":921},{"style":842},[922],{"type":406,"value":500},{"type":400,"tag":823,"props":924,"children":925},{"style":897},[926],{"type":406,"value":927},"model",{"type":400,"tag":823,"props":929,"children":930},{"style":902},[931],{"type":406,"value":905},{"type":400,"tag":823,"props":933,"children":934},{"style":897},[935],{"type":406,"value":936}," model\n",{"type":400,"tag":823,"props":938,"children":940},{"class":825,"line":939},4,[941,945,949,954,958],{"type":400,"tag":823,"props":942,"children":943},{"style":887},[944],{"type":406,"value":890},{"type":400,"tag":823,"props":946,"children":947},{"style":842},[948],{"type":406,"value":500},{"type":400,"tag":823,"props":950,"children":951},{"style":897},[952],{"type":406,"value":953},"year",{"type":400,"tag":823,"props":955,"children":956},{"style":902},[957],{"type":406,"value":905},{"type":400,"tag":823,"props":959,"children":960},{"style":897},[961],{"type":406,"value":962}," year\n",{"type":400,"tag":823,"props":964,"children":966},{"class":825,"line":965},5,[967],{"type":400,"tag":823,"props":968,"children":969},{"style":842},[970],{"type":406,"value":971},"}\n",{"type":400,"tag":823,"props":973,"children":975},{"class":825,"line":974},6,[976,981,987,991,996,1000,1004,1010,1016,1020,1024,1029,1034,1038,1042,1048],{"type":400,"tag":823,"props":977,"children":978},{"style":830},[979],{"type":406,"value":980},"const",{"type":400,"tag":823,"props":982,"children":984},{"style":983},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[985],{"type":406,"value":986}," auto",{"type":400,"tag":823,"props":988,"children":989},{"style":902},[990],{"type":406,"value":905},{"type":400,"tag":823,"props":992,"children":993},{"style":902},[994],{"type":406,"value":995}," new",{"type":400,"tag":823,"props":997,"children":998},{"style":836},[999],{"type":406,"value":839},{"type":400,"tag":823,"props":1001,"children":1002},{"style":897},[1003],{"type":406,"value":845},{"type":400,"tag":823,"props":1005,"children":1007},{"style":1006},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[1008],{"type":406,"value":1009},"'",{"type":400,"tag":823,"props":1011,"children":1013},{"style":1012},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[1014],{"type":406,"value":1015},"Honda",{"type":400,"tag":823,"props":1017,"children":1018},{"style":1006},[1019],{"type":406,"value":1009},{"type":400,"tag":823,"props":1021,"children":1022},{"style":842},[1023],{"type":406,"value":856},{"type":400,"tag":823,"props":1025,"children":1026},{"style":1006},[1027],{"type":406,"value":1028}," '",{"type":400,"tag":823,"props":1030,"children":1031},{"style":1012},[1032],{"type":406,"value":1033},"Accord",{"type":400,"tag":823,"props":1035,"children":1036},{"style":1006},[1037],{"type":406,"value":1009},{"type":400,"tag":823,"props":1039,"children":1040},{"style":842},[1041],{"type":406,"value":856},{"type":400,"tag":823,"props":1043,"children":1045},{"style":1044},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1046],{"type":406,"value":1047}," 1998",{"type":400,"tag":823,"props":1049,"children":1050},{"style":897},[1051],{"type":406,"value":1052},")\n",{"type":400,"tag":823,"props":1054,"children":1056},{"class":825,"line":1055},7,[1057],{"type":400,"tag":823,"props":1058,"children":1059},{"emptyLinePlaceholder":393},[1060],{"type":406,"value":1061},"\n",{"type":400,"tag":823,"props":1063,"children":1065},{"class":825,"line":1064},8,[1066],{"type":400,"tag":823,"props":1067,"children":1069},{"style":1068},"--shiki-light:#90A4AE;--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[1070],{"type":406,"value":1071},"// true\n",{"type":400,"tag":823,"props":1073,"children":1075},{"class":825,"line":1074},9,[1076,1081,1085,1090,1095,1099,1104,1109,1114,1118,1123,1128,1133,1138,1142,1147],{"type":400,"tag":823,"props":1077,"children":1078},{"style":897},[1079],{"type":406,"value":1080},"console",{"type":400,"tag":823,"props":1082,"children":1083},{"style":842},[1084],{"type":406,"value":500},{"type":400,"tag":823,"props":1086,"children":1087},{"style":836},[1088],{"type":406,"value":1089},"log",{"type":400,"tag":823,"props":1091,"children":1092},{"style":897},[1093],{"type":406,"value":1094},"((auto",{"type":400,"tag":823,"props":1096,"children":1097},{"style":842},[1098],{"type":406,"value":500},{"type":400,"tag":823,"props":1100,"children":1101},{"style":983},[1102],{"type":406,"value":1103},"__proto__",{"type":400,"tag":823,"props":1105,"children":1106},{"style":902},[1107],{"type":406,"value":1108}," ===",{"type":400,"tag":823,"props":1110,"children":1112},{"style":1111},"--shiki-light:#E2931D;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[1113],{"type":406,"value":839},{"type":400,"tag":823,"props":1115,"children":1116},{"style":842},[1117],{"type":406,"value":500},{"type":400,"tag":823,"props":1119,"children":1120},{"style":983},[1121],{"type":406,"value":1122},"prototype",{"type":400,"tag":823,"props":1124,"children":1125},{"style":897},[1126],{"type":406,"value":1127},") ",{"type":400,"tag":823,"props":1129,"children":1130},{"style":902},[1131],{"type":406,"value":1132},"===",{"type":400,"tag":823,"props":1134,"children":1135},{"style":897},[1136],{"type":406,"value":1137}," auto ",{"type":400,"tag":823,"props":1139,"children":1140},{"style":902},[1141],{"type":406,"value":427},{"type":400,"tag":823,"props":1143,"children":1145},{"style":1144},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E;--shiki-light-text-decoration:inherit;--shiki-default-text-decoration:inherit;--shiki-dark-text-decoration:inherit;--shiki-sepia-text-decoration:underline",[1146],{"type":406,"value":839},{"type":400,"tag":823,"props":1148,"children":1149},{"style":897},[1150],{"type":406,"value":1052},{"type":400,"tag":408,"props":1152,"children":1153},{},[1154],{"type":406,"value":1155},"我们直接看看规范是怎么定义 instanceof 运算符的：",{"type":400,"tag":408,"props":1157,"children":1158},{},[1159],{"type":400,"tag":494,"props":1160,"children":1161},{},[1162],{"type":406,"value":1163},"InstanceofOperator(O, C)",{"type":400,"tag":458,"props":1165,"children":1166},{},[1167,1185,1203,1212,1237,1260],{"type":400,"tag":418,"props":1168,"children":1169},{},[1170,1171,1176,1178,1183],{"type":406,"value":470},{"type":400,"tag":472,"props":1172,"children":1173},{},[1174],{"type":406,"value":1175},"Type(C)",{"type":406,"value":1177}," is not Object, throw a ",{"type":400,"tag":494,"props":1179,"children":1180},{},[1181],{"type":406,"value":1182},"TypeError",{"type":406,"value":1184}," exception.",{"type":400,"tag":418,"props":1186,"children":1187},{},[1188,1190,1195,1197,1202],{"type":406,"value":1189},"Let ",{"type":400,"tag":472,"props":1191,"children":1192},{},[1193],{"type":406,"value":1194},"instOfHandler",{"type":406,"value":1196}," be ",{"type":400,"tag":472,"props":1198,"children":1199},{},[1200],{"type":406,"value":1201},"GetMethod(C,@@hasInstance)",{"type":406,"value":500},{"type":400,"tag":418,"props":1204,"children":1205},{},[1206,1211],{"type":400,"tag":472,"props":1207,"children":1208},{},[1209],{"type":406,"value":1210},"ReturnIfAbrupt(instOfHandler)",{"type":406,"value":500},{"type":400,"tag":418,"props":1213,"children":1214},{},[1215,1217,1221,1223],{"type":406,"value":1216},"If instOfHandler is not ",{"type":400,"tag":494,"props":1218,"children":1219},{},[1220],{"type":406,"value":785},{"type":406,"value":1222},", then\n",{"type":400,"tag":414,"props":1224,"children":1225},{},[1226],{"type":400,"tag":418,"props":1227,"children":1228},{},[1229,1231,1236],{"type":406,"value":1230},"Return ",{"type":400,"tag":472,"props":1232,"children":1233},{},[1234],{"type":406,"value":1235},"ToBoolean(Call(instOfHandler, C, «O»))",{"type":406,"value":500},{"type":400,"tag":418,"props":1238,"children":1239},{},[1240,1241,1246,1248,1253,1255,1259],{"type":406,"value":470},{"type":400,"tag":472,"props":1242,"children":1243},{},[1244],{"type":406,"value":1245},"IsCallable(C)",{"type":406,"value":1247}," is ",{"type":400,"tag":494,"props":1249,"children":1250},{},[1251],{"type":406,"value":1252},"false",{"type":406,"value":1254},", throw a ",{"type":400,"tag":494,"props":1256,"children":1257},{},[1258],{"type":406,"value":1182},{"type":406,"value":1184},{"type":400,"tag":418,"props":1261,"children":1262},{},[1263,1264,1269],{"type":406,"value":1230},{"type":400,"tag":472,"props":1265,"children":1266},{},[1267],{"type":406,"value":1268},"OrdinaryHasInstance(C, O)",{"type":406,"value":500},{"type":400,"tag":408,"props":1271,"children":1272},{},[1273],{"type":406,"value":1274},"第一条，如果 C 的类型不是对象，那么会抛出类型错误，重现如下：",{"type":400,"tag":813,"props":1276,"children":1278},{"className":815,"code":1277,"language":817,"meta":394,"style":394},";[] instanceof 1\n",[1279],{"type":400,"tag":705,"props":1280,"children":1281},{"__ignoreMap":394},[1282],{"type":400,"tag":823,"props":1283,"children":1284},{"class":825,"line":826},[1285,1290,1295,1299],{"type":400,"tag":823,"props":1286,"children":1287},{"style":842},[1288],{"type":406,"value":1289},";",{"type":400,"tag":823,"props":1291,"children":1292},{"style":897},[1293],{"type":406,"value":1294},"[] ",{"type":400,"tag":823,"props":1296,"children":1297},{"style":902},[1298],{"type":406,"value":427},{"type":400,"tag":823,"props":1300,"children":1301},{"style":1044},[1302],{"type":406,"value":1303}," 1\n",{"type":400,"tag":408,"props":1305,"children":1306},{},[1307],{"type":406,"value":1308},"::: danger\nVM1008:1 Uncaught TypeError: Right-hand side of 'instanceof' is not an object\n:::",{"type":400,"tag":408,"props":1310,"children":1311},{},[1312],{"type":406,"value":1313},"第二至第四条，判断 C 是否有内置的 hasInstance 实现，即 Symbol.hasInstance，如果有，则调用此方法。\n也就是说，对复杂类型，我们可以通过 Symbol，自定义 instanceof 运算符的实现，用下列代码举例：",{"type":400,"tag":813,"props":1315,"children":1317},{"className":815,"code":1316,"language":817,"meta":394,"style":394},"class Lionad {\n  static [Symbol.hasInstance](obj) {\n    return obj && obj.isCute\n  }\n}\n\nconsole.log({} instanceof Lionad) // false\nconsole.log({ isCute: true } instanceof Lionad) // true\n",[1318],{"type":400,"tag":705,"props":1319,"children":1320},{"__ignoreMap":394},[1321,1338,1378,1410,1418,1425,1432,1474],{"type":400,"tag":823,"props":1322,"children":1323},{"class":825,"line":826},[1324,1329,1334],{"type":400,"tag":823,"props":1325,"children":1326},{"style":830},[1327],{"type":406,"value":1328},"class",{"type":400,"tag":823,"props":1330,"children":1331},{"style":1144},[1332],{"type":406,"value":1333}," Lionad",{"type":400,"tag":823,"props":1335,"children":1336},{"style":842},[1337],{"type":406,"value":880},{"type":400,"tag":823,"props":1339,"children":1340},{"class":825,"line":883},[1341,1347,1352,1356,1361,1365,1370,1374],{"type":400,"tag":823,"props":1342,"children":1344},{"style":1343},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[1345],{"type":406,"value":1346},"  static",{"type":400,"tag":823,"props":1348,"children":1349},{"style":897},[1350],{"type":406,"value":1351}," [Symbol",{"type":400,"tag":823,"props":1353,"children":1354},{"style":842},[1355],{"type":406,"value":500},{"type":400,"tag":823,"props":1357,"children":1358},{"style":897},[1359],{"type":406,"value":1360},"hasInstance]",{"type":400,"tag":823,"props":1362,"children":1363},{"style":842},[1364],{"type":406,"value":845},{"type":400,"tag":823,"props":1366,"children":1367},{"style":848},[1368],{"type":406,"value":1369},"obj",{"type":400,"tag":823,"props":1371,"children":1372},{"style":842},[1373],{"type":406,"value":875},{"type":400,"tag":823,"props":1375,"children":1376},{"style":842},[1377],{"type":406,"value":880},{"type":400,"tag":823,"props":1379,"children":1380},{"class":825,"line":913},[1381,1387,1392,1397,1401,1405],{"type":400,"tag":823,"props":1382,"children":1384},{"style":1383},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[1385],{"type":406,"value":1386},"    return",{"type":400,"tag":823,"props":1388,"children":1389},{"style":897},[1390],{"type":406,"value":1391}," obj",{"type":400,"tag":823,"props":1393,"children":1394},{"style":902},[1395],{"type":406,"value":1396}," &&",{"type":400,"tag":823,"props":1398,"children":1399},{"style":897},[1400],{"type":406,"value":1391},{"type":400,"tag":823,"props":1402,"children":1403},{"style":842},[1404],{"type":406,"value":500},{"type":400,"tag":823,"props":1406,"children":1407},{"style":897},[1408],{"type":406,"value":1409},"isCute\n",{"type":400,"tag":823,"props":1411,"children":1412},{"class":825,"line":939},[1413],{"type":400,"tag":823,"props":1414,"children":1415},{"style":842},[1416],{"type":406,"value":1417},"  }\n",{"type":400,"tag":823,"props":1419,"children":1420},{"class":825,"line":965},[1421],{"type":400,"tag":823,"props":1422,"children":1423},{"style":842},[1424],{"type":406,"value":971},{"type":400,"tag":823,"props":1426,"children":1427},{"class":825,"line":974},[1428],{"type":400,"tag":823,"props":1429,"children":1430},{"emptyLinePlaceholder":393},[1431],{"type":406,"value":1061},{"type":400,"tag":823,"props":1433,"children":1434},{"class":825,"line":1055},[1435,1439,1443,1447,1451,1456,1461,1465,1469],{"type":400,"tag":823,"props":1436,"children":1437},{"style":897},[1438],{"type":406,"value":1080},{"type":400,"tag":823,"props":1440,"children":1441},{"style":842},[1442],{"type":406,"value":500},{"type":400,"tag":823,"props":1444,"children":1445},{"style":836},[1446],{"type":406,"value":1089},{"type":400,"tag":823,"props":1448,"children":1449},{"style":897},[1450],{"type":406,"value":845},{"type":400,"tag":823,"props":1452,"children":1453},{"style":842},[1454],{"type":406,"value":1455},"{}",{"type":400,"tag":823,"props":1457,"children":1458},{"style":902},[1459],{"type":406,"value":1460}," instanceof",{"type":400,"tag":823,"props":1462,"children":1463},{"style":1144},[1464],{"type":406,"value":1333},{"type":400,"tag":823,"props":1466,"children":1467},{"style":897},[1468],{"type":406,"value":1127},{"type":400,"tag":823,"props":1470,"children":1471},{"style":1068},[1472],{"type":406,"value":1473},"// false\n",{"type":400,"tag":823,"props":1475,"children":1476},{"class":825,"line":1064},[1477,1481,1485,1489,1493,1498,1504,1509,1515,1520,1524,1528,1532],{"type":400,"tag":823,"props":1478,"children":1479},{"style":897},[1480],{"type":406,"value":1080},{"type":400,"tag":823,"props":1482,"children":1483},{"style":842},[1484],{"type":406,"value":500},{"type":400,"tag":823,"props":1486,"children":1487},{"style":836},[1488],{"type":406,"value":1089},{"type":400,"tag":823,"props":1490,"children":1491},{"style":897},[1492],{"type":406,"value":845},{"type":400,"tag":823,"props":1494,"children":1495},{"style":842},[1496],{"type":406,"value":1497},"{",{"type":400,"tag":823,"props":1499,"children":1501},{"style":1500},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1502],{"type":406,"value":1503}," isCute",{"type":400,"tag":823,"props":1505,"children":1506},{"style":842},[1507],{"type":406,"value":1508},":",{"type":400,"tag":823,"props":1510,"children":1512},{"style":1511},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1513],{"type":406,"value":1514}," true",{"type":400,"tag":823,"props":1516,"children":1517},{"style":842},[1518],{"type":406,"value":1519}," }",{"type":400,"tag":823,"props":1521,"children":1522},{"style":902},[1523],{"type":406,"value":1460},{"type":400,"tag":823,"props":1525,"children":1526},{"style":1144},[1527],{"type":406,"value":1333},{"type":400,"tag":823,"props":1529,"children":1530},{"style":897},[1531],{"type":406,"value":1127},{"type":400,"tag":823,"props":1533,"children":1534},{"style":1068},[1535],{"type":406,"value":1071},{"type":400,"tag":408,"props":1537,"children":1538},{},[1539],{"type":406,"value":1540},"这之后，第五条，如果 C 非 Callable 对象（还记得我们在 typeof 提到的内部方法[[call]]吗，Callable 对象即实现了[[call]]内部方法的对象，比如说某个函数），抛出类型错误，重现如下：",{"type":400,"tag":813,"props":1542,"children":1544},{"className":815,"code":1543,"language":817,"meta":394,"style":394},";[] instanceof []\n",[1545],{"type":400,"tag":705,"props":1546,"children":1547},{"__ignoreMap":394},[1548],{"type":400,"tag":823,"props":1549,"children":1550},{"class":825,"line":826},[1551,1555,1559,1563],{"type":400,"tag":823,"props":1552,"children":1553},{"style":842},[1554],{"type":406,"value":1289},{"type":400,"tag":823,"props":1556,"children":1557},{"style":897},[1558],{"type":406,"value":1294},{"type":400,"tag":823,"props":1560,"children":1561},{"style":902},[1562],{"type":406,"value":427},{"type":400,"tag":823,"props":1564,"children":1565},{"style":897},[1566],{"type":406,"value":1567}," []\n",{"type":400,"tag":408,"props":1569,"children":1570},{},[1571],{"type":406,"value":1572},"::: danger\nVM684:1 Uncaught TypeError: Right-hand side of 'instanceof' is not callable\n:::",{"type":400,"tag":408,"props":1574,"children":1575},{},[1576],{"type":406,"value":1577},"最后，返回调用内置 instanceof 实现的结果。",{"type":400,"tag":408,"props":1579,"children":1580},{},[1581],{"type":406,"value":1582},"不过，需要强调的是，instanceof 也有缺陷存在，主要体现在两个方面：",{"type":400,"tag":458,"props":1584,"children":1585},{},[1586,1591],{"type":400,"tag":418,"props":1587,"children":1588},{},[1589],{"type":406,"value":1590},"判断的依据是原型链",{"type":400,"tag":418,"props":1592,"children":1593},{},[1594],{"type":406,"value":1595},"跨宿主运算",{"type":400,"tag":695,"props":1597,"children":1599},{"id":1598},"依据原型链",[1600],{"type":406,"value":1598},{"type":400,"tag":408,"props":1602,"children":1603},{},[1604],{"type":406,"value":1605},"使用 instanceof 运算符判断对象字面量，会出现另人诧异的结果，见下代码：",{"type":400,"tag":813,"props":1607,"children":1609},{"className":815,"code":1608,"language":817,"meta":394,"style":394},"console.log(\n  'hello world' instanceof String, // false\n  new String('asdf') instanceof String, // true\n  {} instanceof Object, // true\n  [] instanceof Object, // true\n  Object.create(null) instanceof Object // false\n)\n",[1610],{"type":400,"tag":705,"props":1611,"children":1612},{"__ignoreMap":394},[1613,1633,1668,1718,1743,1767,1809],{"type":400,"tag":823,"props":1614,"children":1615},{"class":825,"line":826},[1616,1620,1624,1628],{"type":400,"tag":823,"props":1617,"children":1618},{"style":897},[1619],{"type":406,"value":1080},{"type":400,"tag":823,"props":1621,"children":1622},{"style":842},[1623],{"type":406,"value":500},{"type":400,"tag":823,"props":1625,"children":1626},{"style":836},[1627],{"type":406,"value":1089},{"type":400,"tag":823,"props":1629,"children":1630},{"style":897},[1631],{"type":406,"value":1632},"(\n",{"type":400,"tag":823,"props":1634,"children":1635},{"class":825,"line":883},[1636,1641,1646,1650,1654,1659,1663],{"type":400,"tag":823,"props":1637,"children":1638},{"style":1006},[1639],{"type":406,"value":1640},"  '",{"type":400,"tag":823,"props":1642,"children":1643},{"style":1012},[1644],{"type":406,"value":1645},"hello world",{"type":400,"tag":823,"props":1647,"children":1648},{"style":1006},[1649],{"type":406,"value":1009},{"type":400,"tag":823,"props":1651,"children":1652},{"style":902},[1653],{"type":406,"value":1460},{"type":400,"tag":823,"props":1655,"children":1656},{"style":1144},[1657],{"type":406,"value":1658}," String",{"type":400,"tag":823,"props":1660,"children":1661},{"style":842},[1662],{"type":406,"value":856},{"type":400,"tag":823,"props":1664,"children":1665},{"style":1068},[1666],{"type":406,"value":1667}," // false\n",{"type":400,"tag":823,"props":1669,"children":1670},{"class":825,"line":913},[1671,1676,1680,1684,1688,1693,1697,1701,1705,1709,1713],{"type":400,"tag":823,"props":1672,"children":1673},{"style":902},[1674],{"type":406,"value":1675},"  new",{"type":400,"tag":823,"props":1677,"children":1678},{"style":836},[1679],{"type":406,"value":1658},{"type":400,"tag":823,"props":1681,"children":1682},{"style":897},[1683],{"type":406,"value":845},{"type":400,"tag":823,"props":1685,"children":1686},{"style":1006},[1687],{"type":406,"value":1009},{"type":400,"tag":823,"props":1689,"children":1690},{"style":1012},[1691],{"type":406,"value":1692},"asdf",{"type":400,"tag":823,"props":1694,"children":1695},{"style":1006},[1696],{"type":406,"value":1009},{"type":400,"tag":823,"props":1698,"children":1699},{"style":897},[1700],{"type":406,"value":1127},{"type":400,"tag":823,"props":1702,"children":1703},{"style":902},[1704],{"type":406,"value":427},{"type":400,"tag":823,"props":1706,"children":1707},{"style":1144},[1708],{"type":406,"value":1658},{"type":400,"tag":823,"props":1710,"children":1711},{"style":842},[1712],{"type":406,"value":856},{"type":400,"tag":823,"props":1714,"children":1715},{"style":1068},[1716],{"type":406,"value":1717}," // true\n",{"type":400,"tag":823,"props":1719,"children":1720},{"class":825,"line":939},[1721,1726,1730,1735,1739],{"type":400,"tag":823,"props":1722,"children":1723},{"style":842},[1724],{"type":406,"value":1725},"  {}",{"type":400,"tag":823,"props":1727,"children":1728},{"style":902},[1729],{"type":406,"value":1460},{"type":400,"tag":823,"props":1731,"children":1732},{"style":1144},[1733],{"type":406,"value":1734}," Object",{"type":400,"tag":823,"props":1736,"children":1737},{"style":842},[1738],{"type":406,"value":856},{"type":400,"tag":823,"props":1740,"children":1741},{"style":1068},[1742],{"type":406,"value":1717},{"type":400,"tag":823,"props":1744,"children":1745},{"class":825,"line":965},[1746,1751,1755,1759,1763],{"type":400,"tag":823,"props":1747,"children":1748},{"style":897},[1749],{"type":406,"value":1750},"  [] ",{"type":400,"tag":823,"props":1752,"children":1753},{"style":902},[1754],{"type":406,"value":427},{"type":400,"tag":823,"props":1756,"children":1757},{"style":1144},[1758],{"type":406,"value":1734},{"type":400,"tag":823,"props":1760,"children":1761},{"style":842},[1762],{"type":406,"value":856},{"type":400,"tag":823,"props":1764,"children":1765},{"style":1068},[1766],{"type":406,"value":1717},{"type":400,"tag":823,"props":1768,"children":1769},{"class":825,"line":974},[1770,1775,1779,1784,1788,1793,1797,1801,1805],{"type":400,"tag":823,"props":1771,"children":1772},{"style":897},[1773],{"type":406,"value":1774},"  Object",{"type":400,"tag":823,"props":1776,"children":1777},{"style":842},[1778],{"type":406,"value":500},{"type":400,"tag":823,"props":1780,"children":1781},{"style":836},[1782],{"type":406,"value":1783},"create",{"type":400,"tag":823,"props":1785,"children":1786},{"style":897},[1787],{"type":406,"value":845},{"type":400,"tag":823,"props":1789,"children":1791},{"style":1790},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1792],{"type":406,"value":795},{"type":400,"tag":823,"props":1794,"children":1795},{"style":897},[1796],{"type":406,"value":1127},{"type":400,"tag":823,"props":1798,"children":1799},{"style":902},[1800],{"type":406,"value":427},{"type":400,"tag":823,"props":1802,"children":1803},{"style":1144},[1804],{"type":406,"value":1734},{"type":400,"tag":823,"props":1806,"children":1807},{"style":1068},[1808],{"type":406,"value":1667},{"type":400,"tag":823,"props":1810,"children":1811},{"class":825,"line":1055},[1812],{"type":400,"tag":823,"props":1813,"children":1814},{"style":897},[1815],{"type":406,"value":1052},{"type":400,"tag":408,"props":1817,"children":1818},{},[1819],{"type":406,"value":1820},"题外话，上面几行代码还隐式说明了这些问题：",{"type":400,"tag":414,"props":1822,"children":1823},{},[1824],{"type":400,"tag":418,"props":1825,"children":1826},{},[1827,1829,1834,1836],{"type":406,"value":1828},"对于对象字面量 ",{"type":400,"tag":705,"props":1830,"children":1832},{"className":1831},[],[1833],{"type":406,"value":1455},{"type":406,"value":1835}," 有 ",{"type":400,"tag":705,"props":1837,"children":1839},{"className":1838},[],[1840],{"type":406,"value":1841},"({}).__proto__ === Object.prototype",{"type":400,"tag":695,"props":1843,"children":1844},{"id":1595},[1845],{"type":406,"value":1595},{"type":400,"tag":408,"props":1847,"children":1848},{},[1849],{"type":406,"value":1850},"关于跨宿主运算，可以尝试以下代码重现:",{"type":400,"tag":813,"props":1852,"children":1854},{"className":815,"code":1853,"language":817,"meta":394,"style":394},"const iframe = document.createElement('iframe')\ndocument.body.appendChild(iframe)\nxArray = window.frames[window.frames.length - 1].Array\nconst xArr = new xArray(1, 2, 3)\n\nconsole.log(xArr instanceof xArray) // true\nconsole.log(xArr instanceof Array) // false\n",[1855],{"type":400,"tag":705,"props":1856,"children":1857},{"__ignoreMap":394},[1858,1909,1940,2009,2065,2072,2108],{"type":400,"tag":823,"props":1859,"children":1860},{"class":825,"line":826},[1861,1865,1870,1874,1879,1883,1888,1892,1896,1901,1905],{"type":400,"tag":823,"props":1862,"children":1863},{"style":830},[1864],{"type":406,"value":980},{"type":400,"tag":823,"props":1866,"children":1867},{"style":983},[1868],{"type":406,"value":1869}," iframe",{"type":400,"tag":823,"props":1871,"children":1872},{"style":902},[1873],{"type":406,"value":905},{"type":400,"tag":823,"props":1875,"children":1876},{"style":897},[1877],{"type":406,"value":1878}," document",{"type":400,"tag":823,"props":1880,"children":1881},{"style":842},[1882],{"type":406,"value":500},{"type":400,"tag":823,"props":1884,"children":1885},{"style":836},[1886],{"type":406,"value":1887},"createElement",{"type":400,"tag":823,"props":1889,"children":1890},{"style":897},[1891],{"type":406,"value":845},{"type":400,"tag":823,"props":1893,"children":1894},{"style":1006},[1895],{"type":406,"value":1009},{"type":400,"tag":823,"props":1897,"children":1898},{"style":1012},[1899],{"type":406,"value":1900},"iframe",{"type":400,"tag":823,"props":1902,"children":1903},{"style":1006},[1904],{"type":406,"value":1009},{"type":400,"tag":823,"props":1906,"children":1907},{"style":897},[1908],{"type":406,"value":1052},{"type":400,"tag":823,"props":1910,"children":1911},{"class":825,"line":883},[1912,1917,1921,1926,1930,1935],{"type":400,"tag":823,"props":1913,"children":1914},{"style":897},[1915],{"type":406,"value":1916},"document",{"type":400,"tag":823,"props":1918,"children":1919},{"style":842},[1920],{"type":406,"value":500},{"type":400,"tag":823,"props":1922,"children":1923},{"style":897},[1924],{"type":406,"value":1925},"body",{"type":400,"tag":823,"props":1927,"children":1928},{"style":842},[1929],{"type":406,"value":500},{"type":400,"tag":823,"props":1931,"children":1932},{"style":836},[1933],{"type":406,"value":1934},"appendChild",{"type":400,"tag":823,"props":1936,"children":1937},{"style":897},[1938],{"type":406,"value":1939},"(iframe)\n",{"type":400,"tag":823,"props":1941,"children":1942},{"class":825,"line":913},[1943,1948,1953,1958,1962,1967,1971,1976,1980,1985,1990,1995,2000,2004],{"type":400,"tag":823,"props":1944,"children":1945},{"style":897},[1946],{"type":406,"value":1947},"xArray ",{"type":400,"tag":823,"props":1949,"children":1950},{"style":902},[1951],{"type":406,"value":1952},"=",{"type":400,"tag":823,"props":1954,"children":1955},{"style":897},[1956],{"type":406,"value":1957}," window",{"type":400,"tag":823,"props":1959,"children":1960},{"style":842},[1961],{"type":406,"value":500},{"type":400,"tag":823,"props":1963,"children":1964},{"style":897},[1965],{"type":406,"value":1966},"frames[window",{"type":400,"tag":823,"props":1968,"children":1969},{"style":842},[1970],{"type":406,"value":500},{"type":400,"tag":823,"props":1972,"children":1973},{"style":897},[1974],{"type":406,"value":1975},"frames",{"type":400,"tag":823,"props":1977,"children":1978},{"style":842},[1979],{"type":406,"value":500},{"type":400,"tag":823,"props":1981,"children":1982},{"style":983},[1983],{"type":406,"value":1984},"length",{"type":400,"tag":823,"props":1986,"children":1987},{"style":902},[1988],{"type":406,"value":1989}," -",{"type":400,"tag":823,"props":1991,"children":1992},{"style":1044},[1993],{"type":406,"value":1994}," 1",{"type":400,"tag":823,"props":1996,"children":1997},{"style":897},[1998],{"type":406,"value":1999},"]",{"type":400,"tag":823,"props":2001,"children":2002},{"style":842},[2003],{"type":406,"value":500},{"type":400,"tag":823,"props":2005,"children":2006},{"style":897},[2007],{"type":406,"value":2008},"Array\n",{"type":400,"tag":823,"props":2010,"children":2011},{"class":825,"line":939},[2012,2016,2021,2025,2029,2034,2038,2043,2047,2052,2056,2061],{"type":400,"tag":823,"props":2013,"children":2014},{"style":830},[2015],{"type":406,"value":980},{"type":400,"tag":823,"props":2017,"children":2018},{"style":983},[2019],{"type":406,"value":2020}," xArr",{"type":400,"tag":823,"props":2022,"children":2023},{"style":902},[2024],{"type":406,"value":905},{"type":400,"tag":823,"props":2026,"children":2027},{"style":902},[2028],{"type":406,"value":995},{"type":400,"tag":823,"props":2030,"children":2031},{"style":836},[2032],{"type":406,"value":2033}," xArray",{"type":400,"tag":823,"props":2035,"children":2036},{"style":897},[2037],{"type":406,"value":845},{"type":400,"tag":823,"props":2039,"children":2040},{"style":1044},[2041],{"type":406,"value":2042},"1",{"type":400,"tag":823,"props":2044,"children":2045},{"style":842},[2046],{"type":406,"value":856},{"type":400,"tag":823,"props":2048,"children":2049},{"style":1044},[2050],{"type":406,"value":2051}," 2",{"type":400,"tag":823,"props":2053,"children":2054},{"style":842},[2055],{"type":406,"value":856},{"type":400,"tag":823,"props":2057,"children":2058},{"style":1044},[2059],{"type":406,"value":2060}," 3",{"type":400,"tag":823,"props":2062,"children":2063},{"style":897},[2064],{"type":406,"value":1052},{"type":400,"tag":823,"props":2066,"children":2067},{"class":825,"line":965},[2068],{"type":400,"tag":823,"props":2069,"children":2070},{"emptyLinePlaceholder":393},[2071],{"type":406,"value":1061},{"type":400,"tag":823,"props":2073,"children":2074},{"class":825,"line":974},[2075,2079,2083,2087,2092,2096,2100,2104],{"type":400,"tag":823,"props":2076,"children":2077},{"style":897},[2078],{"type":406,"value":1080},{"type":400,"tag":823,"props":2080,"children":2081},{"style":842},[2082],{"type":406,"value":500},{"type":400,"tag":823,"props":2084,"children":2085},{"style":836},[2086],{"type":406,"value":1089},{"type":400,"tag":823,"props":2088,"children":2089},{"style":897},[2090],{"type":406,"value":2091},"(xArr ",{"type":400,"tag":823,"props":2093,"children":2094},{"style":902},[2095],{"type":406,"value":427},{"type":400,"tag":823,"props":2097,"children":2098},{"style":1144},[2099],{"type":406,"value":2033},{"type":400,"tag":823,"props":2101,"children":2102},{"style":897},[2103],{"type":406,"value":1127},{"type":400,"tag":823,"props":2105,"children":2106},{"style":1068},[2107],{"type":406,"value":1071},{"type":400,"tag":823,"props":2109,"children":2110},{"class":825,"line":1055},[2111,2115,2119,2123,2127,2131,2136,2140],{"type":400,"tag":823,"props":2112,"children":2113},{"style":897},[2114],{"type":406,"value":1080},{"type":400,"tag":823,"props":2116,"children":2117},{"style":842},[2118],{"type":406,"value":500},{"type":400,"tag":823,"props":2120,"children":2121},{"style":836},[2122],{"type":406,"value":1089},{"type":400,"tag":823,"props":2124,"children":2125},{"style":897},[2126],{"type":406,"value":2091},{"type":400,"tag":823,"props":2128,"children":2129},{"style":902},[2130],{"type":406,"value":427},{"type":400,"tag":823,"props":2132,"children":2133},{"style":1144},[2134],{"type":406,"value":2135}," Array",{"type":400,"tag":823,"props":2137,"children":2138},{"style":897},[2139],{"type":406,"value":1127},{"type":400,"tag":823,"props":2141,"children":2142},{"style":1068},[2143],{"type":406,"value":1473},{"type":400,"tag":408,"props":2145,"children":2146},{},[2147],{"type":406,"value":2148},"因为 iframe 中的数组实例不是父窗口的 Array 的实例，所以在 xArr 的原型链上是找不到 Array 的，所以结果为 false。",{"type":400,"tag":401,"props":2150,"children":2152},{"id":2151},"objectprototypetostringcall",[2153],{"type":406,"value":432},{"type":400,"tag":408,"props":2155,"children":2156},{},[2157],{"type":406,"value":2158},"一般来说，在业务代码中，我们使用 typeof 和 instanceof 运算符判断变量的类型就足够了。虽然这两种方法都有缺陷，但是我们记住这些常见的容易混淆的地方，避免使用就可以。\n下面要介绍的是一种更精确的方法，一般会用在工具函数或者类库中，如：",{"type":400,"tag":813,"props":2160,"children":2162},{"className":815,"code":2161,"language":817,"meta":394,"style":394},"function isArray(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\nisArray([]) // true\n",[2163],{"type":400,"tag":705,"props":2164,"children":2165},{"__ignoreMap":394},[2166,2195,2263,2270],{"type":400,"tag":823,"props":2167,"children":2168},{"class":825,"line":826},[2169,2173,2178,2182,2187,2191],{"type":400,"tag":823,"props":2170,"children":2171},{"style":830},[2172],{"type":406,"value":833},{"type":400,"tag":823,"props":2174,"children":2175},{"style":836},[2176],{"type":406,"value":2177}," isArray",{"type":400,"tag":823,"props":2179,"children":2180},{"style":842},[2181],{"type":406,"value":845},{"type":400,"tag":823,"props":2183,"children":2184},{"style":848},[2185],{"type":406,"value":2186},"arr",{"type":400,"tag":823,"props":2188,"children":2189},{"style":842},[2190],{"type":406,"value":875},{"type":400,"tag":823,"props":2192,"children":2193},{"style":842},[2194],{"type":406,"value":880},{"type":400,"tag":823,"props":2196,"children":2197},{"class":825,"line":883},[2198,2203,2207,2211,2215,2219,2224,2228,2233,2237,2241,2245,2249,2253,2258],{"type":400,"tag":823,"props":2199,"children":2200},{"style":1383},[2201],{"type":406,"value":2202},"  return",{"type":400,"tag":823,"props":2204,"children":2205},{"style":1111},[2206],{"type":406,"value":1734},{"type":400,"tag":823,"props":2208,"children":2209},{"style":842},[2210],{"type":406,"value":500},{"type":400,"tag":823,"props":2212,"children":2213},{"style":983},[2214],{"type":406,"value":1122},{"type":400,"tag":823,"props":2216,"children":2217},{"style":842},[2218],{"type":406,"value":500},{"type":400,"tag":823,"props":2220,"children":2221},{"style":897},[2222],{"type":406,"value":2223},"toString",{"type":400,"tag":823,"props":2225,"children":2226},{"style":842},[2227],{"type":406,"value":500},{"type":400,"tag":823,"props":2229,"children":2230},{"style":836},[2231],{"type":406,"value":2232},"call",{"type":400,"tag":823,"props":2234,"children":2235},{"style":1500},[2236],{"type":406,"value":845},{"type":400,"tag":823,"props":2238,"children":2239},{"style":897},[2240],{"type":406,"value":2186},{"type":400,"tag":823,"props":2242,"children":2243},{"style":1500},[2244],{"type":406,"value":1127},{"type":400,"tag":823,"props":2246,"children":2247},{"style":902},[2248],{"type":406,"value":1132},{"type":400,"tag":823,"props":2250,"children":2251},{"style":1006},[2252],{"type":406,"value":1028},{"type":400,"tag":823,"props":2254,"children":2255},{"style":1012},[2256],{"type":406,"value":2257},"[object Array]",{"type":400,"tag":823,"props":2259,"children":2260},{"style":1006},[2261],{"type":406,"value":2262},"'\n",{"type":400,"tag":823,"props":2264,"children":2265},{"class":825,"line":913},[2266],{"type":400,"tag":823,"props":2267,"children":2268},{"style":842},[2269],{"type":406,"value":971},{"type":400,"tag":823,"props":2271,"children":2272},{"class":825,"line":939},[2273,2278,2283],{"type":400,"tag":823,"props":2274,"children":2275},{"style":836},[2276],{"type":406,"value":2277},"isArray",{"type":400,"tag":823,"props":2279,"children":2280},{"style":897},[2281],{"type":406,"value":2282},"([]) ",{"type":400,"tag":823,"props":2284,"children":2285},{"style":1068},[2286],{"type":406,"value":1071},{"type":400,"tag":408,"props":2288,"children":2289},{},[2290],{"type":406,"value":2291},"那么 Object.prototype.toString 到底能分辨几种类型呢？查阅 ES6 规范文档，可以得到其实现，如下：",{"type":400,"tag":458,"props":2293,"children":2294},{},[2295,2325,2350,2361,2372,2381,2392,2403,2414,2425,2436,2447,2458,2469,2480,2491,2502,2511,2522],{"type":400,"tag":418,"props":2296,"children":2297},{},[2298,2300,2305,2307,2311,2313,2324],{"type":406,"value":2299},"If the ",{"type":400,"tag":494,"props":2301,"children":2302},{},[2303],{"type":406,"value":2304},"this",{"type":406,"value":2306}," value is ",{"type":400,"tag":494,"props":2308,"children":2309},{},[2310],{"type":406,"value":785},{"type":406,"value":2312},", return ",{"type":400,"tag":494,"props":2314,"children":2315},{},[2316,2318,2323],{"type":406,"value":2317},"\"",{"type":400,"tag":823,"props":2319,"children":2320},{},[2321],{"type":406,"value":2322},"object Undefined",{"type":406,"value":2317},{"type":406,"value":500},{"type":400,"tag":418,"props":2326,"children":2327},{},[2328,2329,2333,2334,2338,2339,2349],{"type":406,"value":2299},{"type":400,"tag":494,"props":2330,"children":2331},{},[2332],{"type":406,"value":2304},{"type":406,"value":2306},{"type":400,"tag":494,"props":2335,"children":2336},{},[2337],{"type":406,"value":795},{"type":406,"value":2312},{"type":400,"tag":494,"props":2340,"children":2341},{},[2342,2343,2348],{"type":406,"value":2317},{"type":400,"tag":823,"props":2344,"children":2345},{},[2346],{"type":406,"value":2347},"object Null",{"type":406,"value":2317},{"type":406,"value":500},{"type":400,"tag":418,"props":2351,"children":2352},{},[2353,2355,2360],{"type":406,"value":2354},"Let O be ",{"type":400,"tag":472,"props":2356,"children":2357},{},[2358],{"type":406,"value":2359},"ToObject(this value)",{"type":406,"value":500},{"type":400,"tag":418,"props":2362,"children":2363},{},[2364,2366,2371],{"type":406,"value":2365},"Let isArray be ",{"type":400,"tag":472,"props":2367,"children":2368},{},[2369],{"type":406,"value":2370},"IsArray(O)",{"type":406,"value":500},{"type":400,"tag":418,"props":2373,"children":2374},{},[2375,2380],{"type":400,"tag":472,"props":2376,"children":2377},{},[2378],{"type":406,"value":2379},"ReturnIfAbrupt(isArray)",{"type":406,"value":500},{"type":400,"tag":418,"props":2382,"children":2383},{},[2384,2386,2391],{"type":406,"value":2385},"If isArray is true, let builtinTag be ",{"type":400,"tag":494,"props":2387,"children":2388},{},[2389],{"type":406,"value":2390},"\"Array\"",{"type":406,"value":500},{"type":400,"tag":418,"props":2393,"children":2394},{},[2395,2397,2402],{"type":406,"value":2396},"Else, if O is an exotic String object, let builtinTag be ",{"type":400,"tag":494,"props":2398,"children":2399},{},[2400],{"type":406,"value":2401},"\"String\"",{"type":406,"value":500},{"type":400,"tag":418,"props":2404,"children":2405},{},[2406,2408,2413],{"type":406,"value":2407},"Else, if O has an [[ParameterMap]] internal slot, let builtinTag be ",{"type":400,"tag":494,"props":2409,"children":2410},{},[2411],{"type":406,"value":2412},"\"Arguments\"",{"type":406,"value":500},{"type":400,"tag":418,"props":2415,"children":2416},{},[2417,2419,2424],{"type":406,"value":2418},"Else, if O has a [[Call]] internal method, let builtinTag be ",{"type":400,"tag":494,"props":2420,"children":2421},{},[2422],{"type":406,"value":2423},"\"Function\"",{"type":406,"value":500},{"type":400,"tag":418,"props":2426,"children":2427},{},[2428,2430,2435],{"type":406,"value":2429},"Else, if O has an [[ErrorData]] internal slot, let builtinTag be ",{"type":400,"tag":494,"props":2431,"children":2432},{},[2433],{"type":406,"value":2434},"\"Error\"",{"type":406,"value":500},{"type":400,"tag":418,"props":2437,"children":2438},{},[2439,2441,2446],{"type":406,"value":2440},"Else, if O has a [[BooleanData]] internal slot, let builtinTag be ",{"type":400,"tag":494,"props":2442,"children":2443},{},[2444],{"type":406,"value":2445},"\"Boolean\"",{"type":406,"value":500},{"type":400,"tag":418,"props":2448,"children":2449},{},[2450,2452,2457],{"type":406,"value":2451},"Else, if O has a [[NumberData]] internal slot, let builtinTag be ",{"type":400,"tag":494,"props":2453,"children":2454},{},[2455],{"type":406,"value":2456},"\"Number\"",{"type":406,"value":500},{"type":400,"tag":418,"props":2459,"children":2460},{},[2461,2463,2468],{"type":406,"value":2462},"Else, if O has a [[DateValue]] internal slot, let builtinTag be ",{"type":400,"tag":494,"props":2464,"children":2465},{},[2466],{"type":406,"value":2467},"\"Date\"",{"type":406,"value":500},{"type":400,"tag":418,"props":2470,"children":2471},{},[2472,2474,2479],{"type":406,"value":2473},"Else, if O has a [[RegExpMatcher]] internal slot, let builtinTag be ",{"type":400,"tag":494,"props":2475,"children":2476},{},[2477],{"type":406,"value":2478},"\"RegExp\"",{"type":406,"value":500},{"type":400,"tag":418,"props":2481,"children":2482},{},[2483,2485,2490],{"type":406,"value":2484},"Else, let builtinTag be ",{"type":400,"tag":494,"props":2486,"children":2487},{},[2488],{"type":406,"value":2489},"\"Object\"",{"type":406,"value":500},{"type":400,"tag":418,"props":2492,"children":2493},{},[2494,2496,2501],{"type":406,"value":2495},"Let tag be ",{"type":400,"tag":472,"props":2497,"children":2498},{},[2499],{"type":406,"value":2500},"Get(O, @@toStringTag)",{"type":406,"value":500},{"type":400,"tag":418,"props":2503,"children":2504},{},[2505,2510],{"type":400,"tag":472,"props":2506,"children":2507},{},[2508],{"type":406,"value":2509},"ReturnIfAbrupt(tag)",{"type":406,"value":500},{"type":400,"tag":418,"props":2512,"children":2513},{},[2514,2515,2520],{"type":406,"value":470},{"type":400,"tag":472,"props":2516,"children":2517},{},[2518],{"type":406,"value":2519},"Type(tag)",{"type":406,"value":2521}," is not String, let tag be builtinTag.",{"type":400,"tag":418,"props":2523,"children":2524},{},[2525,2527,2537],{"type":406,"value":2526},"Return the String that is the result of concatenating ",{"type":400,"tag":494,"props":2528,"children":2529},{},[2530,2531,2536],{"type":406,"value":2317},{"type":400,"tag":823,"props":2532,"children":2533},{},[2534],{"type":406,"value":2535},"object \"**, tag, and **\"",{"type":406,"value":2317},{"type":406,"value":500},{"type":400,"tag":408,"props":2539,"children":2540},{},[2541],{"type":406,"value":2542},"细数下来，Object.prototype.toString 不仅可以区分 Object、Function、Date、RegExp 等常见对象，它还能区分 Error、Arguments 等，见下代码：",{"type":400,"tag":813,"props":2544,"children":2546},{"className":815,"code":2545,"language":817,"meta":394,"style":394},";(function() {\n  console.log(\n    typeof arguments, // 'object'\n    Object.prototype.toString.call(arguments) // '[object Arguments]'\n  )\n})()\n",[2547],{"type":400,"tag":705,"props":2548,"children":2549},{"__ignoreMap":394},[2550,2574,2594,2617,2667,2675],{"type":400,"tag":823,"props":2551,"children":2552},{"class":825,"line":826},[2553,2557,2561,2565,2570],{"type":400,"tag":823,"props":2554,"children":2555},{"style":842},[2556],{"type":406,"value":1289},{"type":400,"tag":823,"props":2558,"children":2559},{"style":897},[2560],{"type":406,"value":845},{"type":400,"tag":823,"props":2562,"children":2563},{"style":830},[2564],{"type":406,"value":833},{"type":400,"tag":823,"props":2566,"children":2567},{"style":842},[2568],{"type":406,"value":2569},"()",{"type":400,"tag":823,"props":2571,"children":2572},{"style":842},[2573],{"type":406,"value":880},{"type":400,"tag":823,"props":2575,"children":2576},{"class":825,"line":883},[2577,2582,2586,2590],{"type":400,"tag":823,"props":2578,"children":2579},{"style":897},[2580],{"type":406,"value":2581},"  console",{"type":400,"tag":823,"props":2583,"children":2584},{"style":842},[2585],{"type":406,"value":500},{"type":400,"tag":823,"props":2587,"children":2588},{"style":836},[2589],{"type":406,"value":1089},{"type":400,"tag":823,"props":2591,"children":2592},{"style":1500},[2593],{"type":406,"value":1632},{"type":400,"tag":823,"props":2595,"children":2596},{"class":825,"line":913},[2597,2602,2608,2612],{"type":400,"tag":823,"props":2598,"children":2599},{"style":902},[2600],{"type":406,"value":2601},"    typeof",{"type":400,"tag":823,"props":2603,"children":2605},{"style":2604},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[2606],{"type":406,"value":2607}," arguments",{"type":400,"tag":823,"props":2609,"children":2610},{"style":842},[2611],{"type":406,"value":856},{"type":400,"tag":823,"props":2613,"children":2614},{"style":1068},[2615],{"type":406,"value":2616}," // 'object'\n",{"type":400,"tag":823,"props":2618,"children":2619},{"class":825,"line":939},[2620,2625,2629,2633,2637,2641,2645,2649,2653,2658,2662],{"type":400,"tag":823,"props":2621,"children":2622},{"style":1111},[2623],{"type":406,"value":2624},"    Object",{"type":400,"tag":823,"props":2626,"children":2627},{"style":842},[2628],{"type":406,"value":500},{"type":400,"tag":823,"props":2630,"children":2631},{"style":983},[2632],{"type":406,"value":1122},{"type":400,"tag":823,"props":2634,"children":2635},{"style":842},[2636],{"type":406,"value":500},{"type":400,"tag":823,"props":2638,"children":2639},{"style":897},[2640],{"type":406,"value":2223},{"type":400,"tag":823,"props":2642,"children":2643},{"style":842},[2644],{"type":406,"value":500},{"type":400,"tag":823,"props":2646,"children":2647},{"style":836},[2648],{"type":406,"value":2232},{"type":400,"tag":823,"props":2650,"children":2651},{"style":1500},[2652],{"type":406,"value":845},{"type":400,"tag":823,"props":2654,"children":2655},{"style":2604},[2656],{"type":406,"value":2657},"arguments",{"type":400,"tag":823,"props":2659,"children":2660},{"style":1500},[2661],{"type":406,"value":1127},{"type":400,"tag":823,"props":2663,"children":2664},{"style":1068},[2665],{"type":406,"value":2666},"// '[object Arguments]'\n",{"type":400,"tag":823,"props":2668,"children":2669},{"class":825,"line":965},[2670],{"type":400,"tag":823,"props":2671,"children":2672},{"style":1500},[2673],{"type":406,"value":2674},"  )\n",{"type":400,"tag":823,"props":2676,"children":2677},{"class":825,"line":974},[2678,2683],{"type":400,"tag":823,"props":2679,"children":2680},{"style":842},[2681],{"type":406,"value":2682},"}",{"type":400,"tag":823,"props":2684,"children":2685},{"style":897},[2686],{"type":406,"value":2687},")()\n",{"type":400,"tag":695,"props":2689,"children":2691},{"id":2690},"如何扩展",[2692],{"type":406,"value":2690},{"type":400,"tag":408,"props":2694,"children":2695},{},[2696],{"type":406,"value":2697},"可以通过 Symbol.toStringTag 对已有对象的内置标签进行修改。这样就可以不需要通过构造函数的方法来分辨程序中不同种类的新对象。如下代码：",{"type":400,"tag":813,"props":2699,"children":2701},{"className":815,"code":2700,"language":817,"meta":394,"style":394},"var a = {}\na[Symbol.toStringTag] = '1234'\nObject.prototype.toString.call(a)\n// >>> \"[object 1234]\"\n",[2702],{"type":400,"tag":705,"props":2703,"children":2704},{"__ignoreMap":394},[2705,2727,2761,2798],{"type":400,"tag":823,"props":2706,"children":2707},{"class":825,"line":826},[2708,2713,2718,2722],{"type":400,"tag":823,"props":2709,"children":2710},{"style":830},[2711],{"type":406,"value":2712},"var",{"type":400,"tag":823,"props":2714,"children":2715},{"style":897},[2716],{"type":406,"value":2717}," a ",{"type":400,"tag":823,"props":2719,"children":2720},{"style":902},[2721],{"type":406,"value":1952},{"type":400,"tag":823,"props":2723,"children":2724},{"style":842},[2725],{"type":406,"value":2726}," {}\n",{"type":400,"tag":823,"props":2728,"children":2729},{"class":825,"line":883},[2730,2735,2739,2744,2748,2752,2757],{"type":400,"tag":823,"props":2731,"children":2732},{"style":897},[2733],{"type":406,"value":2734},"a[Symbol",{"type":400,"tag":823,"props":2736,"children":2737},{"style":842},[2738],{"type":406,"value":500},{"type":400,"tag":823,"props":2740,"children":2741},{"style":897},[2742],{"type":406,"value":2743},"toStringTag] ",{"type":400,"tag":823,"props":2745,"children":2746},{"style":902},[2747],{"type":406,"value":1952},{"type":400,"tag":823,"props":2749,"children":2750},{"style":1006},[2751],{"type":406,"value":1028},{"type":400,"tag":823,"props":2753,"children":2754},{"style":1012},[2755],{"type":406,"value":2756},"1234",{"type":400,"tag":823,"props":2758,"children":2759},{"style":1006},[2760],{"type":406,"value":2262},{"type":400,"tag":823,"props":2762,"children":2763},{"class":825,"line":913},[2764,2769,2773,2777,2781,2785,2789,2793],{"type":400,"tag":823,"props":2765,"children":2766},{"style":1111},[2767],{"type":406,"value":2768},"Object",{"type":400,"tag":823,"props":2770,"children":2771},{"style":842},[2772],{"type":406,"value":500},{"type":400,"tag":823,"props":2774,"children":2775},{"style":983},[2776],{"type":406,"value":1122},{"type":400,"tag":823,"props":2778,"children":2779},{"style":842},[2780],{"type":406,"value":500},{"type":400,"tag":823,"props":2782,"children":2783},{"style":897},[2784],{"type":406,"value":2223},{"type":400,"tag":823,"props":2786,"children":2787},{"style":842},[2788],{"type":406,"value":500},{"type":400,"tag":823,"props":2790,"children":2791},{"style":836},[2792],{"type":406,"value":2232},{"type":400,"tag":823,"props":2794,"children":2795},{"style":897},[2796],{"type":406,"value":2797},"(a)\n",{"type":400,"tag":823,"props":2799,"children":2800},{"class":825,"line":939},[2801],{"type":400,"tag":823,"props":2802,"children":2803},{"style":1068},[2804],{"type":406,"value":2805},"// >>> \"[object 1234]\"\n",{"type":400,"tag":695,"props":2807,"children":2809},{"id":2808},"缺陷所在",[2810],{"type":406,"value":2808},{"type":400,"tag":408,"props":2812,"children":2813},{},[2814],{"type":406,"value":2815},"JS 中的对象，按照执行环境来划分可以分为内置对象（Build-In Object）和宿主对象（Host Object），如 Window、History 就是执行环境（浏览器）提供的对象。\n缺陷呢，往往就存在于规范中没有被定义的行为。\n比如，Window 对象的 Symbol.toString 是浏览器定义的行为，而且往往不同浏览器，实现还不一样。",{"type":400,"tag":813,"props":2817,"children":2819},{"className":815,"code":2818,"language":817,"meta":394,"style":394},"Window.toString()\n// [object Window] ?\n// [object Object] ?\n// [object DOMWindow] ?\n// [object global] ? (这个尤其为叛徒，第一个字母居然是小写的)\n",[2820],{"type":400,"tag":705,"props":2821,"children":2822},{"__ignoreMap":394},[2823,2844,2852,2860,2868],{"type":400,"tag":823,"props":2824,"children":2825},{"class":825,"line":826},[2826,2831,2835,2839],{"type":400,"tag":823,"props":2827,"children":2828},{"style":897},[2829],{"type":406,"value":2830},"Window",{"type":400,"tag":823,"props":2832,"children":2833},{"style":842},[2834],{"type":406,"value":500},{"type":400,"tag":823,"props":2836,"children":2837},{"style":836},[2838],{"type":406,"value":2223},{"type":400,"tag":823,"props":2840,"children":2841},{"style":897},[2842],{"type":406,"value":2843},"()\n",{"type":400,"tag":823,"props":2845,"children":2846},{"class":825,"line":883},[2847],{"type":400,"tag":823,"props":2848,"children":2849},{"style":1068},[2850],{"type":406,"value":2851},"// [object Window] ?\n",{"type":400,"tag":823,"props":2853,"children":2854},{"class":825,"line":913},[2855],{"type":400,"tag":823,"props":2856,"children":2857},{"style":1068},[2858],{"type":406,"value":2859},"// [object Object] ?\n",{"type":400,"tag":823,"props":2861,"children":2862},{"class":825,"line":939},[2863],{"type":400,"tag":823,"props":2864,"children":2865},{"style":1068},[2866],{"type":406,"value":2867},"// [object DOMWindow] ?\n",{"type":400,"tag":823,"props":2869,"children":2870},{"class":825,"line":965},[2871],{"type":400,"tag":823,"props":2872,"children":2873},{"style":1068},[2874],{"type":406,"value":2875},"// [object global] ? (这个尤其为叛徒，第一个字母居然是小写的)\n",{"type":400,"tag":408,"props":2877,"children":2878},{},[2879],{"type":400,"tag":494,"props":2880,"children":2881},{},[2882],{"type":406,"value":2883},"(￣ ▽ ￣)\" 害。",{"type":400,"tag":401,"props":2885,"children":2887},{"id":2886},"最后",[2888],{"type":406,"value":2886},{"type":400,"tag":408,"props":2890,"children":2891},{},[2892],{"type":406,"value":2893},"想不到吧，JS 类型判断这个问题居然没有完美的解法，每种解法都有缺陷。",{"type":400,"tag":408,"props":2895,"children":2896},{},[2897],{"type":406,"value":2898},"那么我们平常写代码到底用哪种呢？",{"type":400,"tag":408,"props":2900,"children":2901},{},[2902],{"type":406,"value":2903},"虽然我刚才提到“业务代码可以使用 typeof 或 instanceof，库和工具函数等需要更精准的情况则用 Object.prototype.toString”，但是，这并不是绝对的。\n我们仔细思考一下这三种方法的本质：",{"type":400,"tag":414,"props":2905,"children":2906},{},[2907,2912,2917],{"type":400,"tag":418,"props":2908,"children":2909},{},[2910],{"type":406,"value":2911},"typeof 根据最小三位字节判断变量类型",{"type":400,"tag":418,"props":2913,"children":2914},{},[2915],{"type":406,"value":2916},"instanceof 根据原型链判断",{"type":400,"tag":418,"props":2918,"children":2919},{},[2920],{"type":406,"value":2921},"Object.prototype.toString 主要是根据对象的内置标签（Build-In Tag）判断",{"type":400,"tag":408,"props":2923,"children":2924},{},[2925],{"type":406,"value":2926},"那么熟记这三条规则，写代码时就能游刃有余了。",{"type":400,"tag":408,"props":2928,"children":2929},{},[2930],{"type":406,"value":2931},"感谢看到结尾，如有错误请务必指正，十分感谢。如果喜欢请点赞、投币、关注三连吧！我是 Lionad，爱你萌！",{"type":400,"tag":401,"props":2933,"children":2935},{"id":2934},"阅读更多",[2936],{"type":406,"value":2934},{"type":400,"tag":414,"props":2938,"children":2939},{},[2940,2952,2962,2972,2982],{"type":400,"tag":418,"props":2941,"children":2942},{},[2943],{"type":400,"tag":2944,"props":2945,"children":2949},"a",{"href":2946,"rel":2947},"https://book.douban.com/subject/27133542/",[2948],"nofollow",[2950],{"type":406,"value":2951},"《JavaScript 框架设计》",{"type":400,"tag":418,"props":2953,"children":2954},{},[2955],{"type":400,"tag":2944,"props":2956,"children":2959},{"href":2957,"rel":2958},"https://justjavac.com/javascript/2012/12/23/what-is-javascripts-typeof-operator-used-for.html",[2948],[2960],{"type":406,"value":2961},"JavaScript 的 typeof 的用途",{"type":400,"tag":418,"props":2963,"children":2964},{},[2965],{"type":400,"tag":2944,"props":2966,"children":2969},{"href":2967,"rel":2968},"https://2ality.com/2013/10/typeof-null.html",[2948],[2970],{"type":406,"value":2971},"The history of “typeof null”",{"type":400,"tag":418,"props":2973,"children":2974},{},[2975],{"type":400,"tag":2944,"props":2976,"children":2979},{"href":2977,"rel":2978},"http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator",[2948],[2980],{"type":406,"value":2981},"ECMAScript® 2015 Language Specification",{"type":400,"tag":418,"props":2983,"children":2984},{},[2985],{"type":400,"tag":2944,"props":2986,"children":2989},{"href":2987,"rel":2988},"https://juejin.im/post/5b0b9b9051882515773ae714",[2948],[2990],{"type":406,"value":2991},"instanceof 和 typeof 原理",{"type":400,"tag":2993,"props":2994,"children":2995},"style",{},[2996],{"type":406,"value":2997},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":394,"searchDepth":883,"depth":883,"links":2999},[3000,3001,3005,3009,3013,3014],{"id":403,"depth":883,"text":403},{"id":422,"depth":883,"text":422,"children":3002},[3003,3004],{"id":688,"depth":913,"text":688},{"id":733,"depth":913,"text":736},{"id":427,"depth":883,"text":427,"children":3006},[3007,3008],{"id":1598,"depth":913,"text":1598},{"id":1595,"depth":913,"text":1595},{"id":2151,"depth":883,"text":432,"children":3010},[3011,3012],{"id":2690,"depth":913,"text":2690},{"id":2808,"depth":913,"text":2808},{"id":2886,"depth":883,"text":2886},{"id":2934,"depth":883,"text":2934},"markdown","content:_archieved:2020-05:type-check.md","content","_archieved/2020-05/type-check.md","md",[3021,3024],{"_path":3022,"title":3023,"description":394},"/_archieved/2020-05/js-module-history","JS 模块化简史",{"_path":3025,"title":3026,"description":394},"/_archieved/2020-06/punctuations","✒️ 关于标点的那些事儿",1711806186331]