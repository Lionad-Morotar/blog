[{"data":1,"prerenderedAt":2234},["Reactive",2],{"navigation":3,"/articles/css-poaa":386,"/articles/css-poaa-surround":2229},[4,32,80,96,123,129,135,369,375,381],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"Bit","/gists/bit",{"title":148,"_path":149},"图片模糊","/gists/blur",{"title":151,"_path":152},"渲染相关笔记","/gists/c4d",{"title":154,"_path":155},"CDN 问题记录","/gists/cdn",{"title":157,"_path":158},"消毒剂","/gists/cleaner",{"title":160,"_path":161},"Windows Command","/gists/cmd",{"title":163,"_path":164},"Command","/gists/command",{"title":166,"_path":167},"复杂科学","/gists/complexity-science",{"title":169,"_path":170},"宇宙","/gists/cosmos",{"title":172,"_path":173},"C++","/gists/cpp",{"title":175,"_path":176},"Data Structure","/gists/data-structure",{"title":178,"_path":179},"DEPRESSION","/gists/depression",{"title":181,"_path":182},"设计模式","/gists/design-patterns",{"title":184,"_path":185},"Developer Experience","/gists/developer-experience",{"title":187,"_path":188},"Device Metrics","/gists/device-metrix",{"title":190,"_path":191},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":193,"_path":194},"正则表达式","/gists/eegex",{"title":196,"_path":197},"Emoji","/gists/emoji",{"title":199,"_path":200},"工程","/gists/engineering",{"title":202,"_path":203},"熵","/gists/entropy",{"title":205,"_path":206},"Environment","/gists/environment",{"title":208,"_path":209},"Erlang","/gists/erlang",{"title":211,"_path":212},"逃离塔克夫","/gists/escape-from-tarkov",{"title":214,"_path":215},"ESNext (ES6-ES11)","/gists/esnext",{"title":217,"_path":218},"Eval！","/gists/eval",{"title":220,"_path":221},"Flutter","/gists/flutter",{"title":223,"_path":224},"字体","/gists/font",{"title":226,"_path":227},"JS 函数式编程","/gists/functional",{"title":229,"_path":230},"Google C++ Standard","/gists/google-cpp-standard",{"title":232,"_path":233},"双向链接完全体","/gists/graph",{"title":235,"_path":236},"Hardwares","/gists/hardwares",{"title":238,"_path":239},"哈希冲突","/gists/hash-collision",{"title":241,"_path":242},"信息设计","/gists/information-design",{"title":244,"_path":245},"InstantPage","/gists/instant.page",{"title":247,"_path":248},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":250,"_path":251},"KVStore","/gists/key-value-db",{"title":253,"_path":254},"Kubernetes","/gists/kubernetes",{"title":256,"_path":257},"Makefile","/gists/makefile",{"title":259,"_path":260},"Markdown Inline Style","/gists/markdown-nice",{"title":262,"_path":263},"小程序","/gists/miniapp",{"title":265,"_path":266},"减小页面快照体积","/gists/minify-html",{"title":268,"_path":269},"mklink","/gists/mklink",{"title":271,"_path":272},"Mock","/gists/mock",{"title":274,"_path":275},"多端应用","/gists/multy-end-app",{"title":277,"_path":278},"神经科学","/gists/neuroscience",{"title":280,"_path":281},"OO","/gists/oo",{"title":283,"_path":284},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":286,"_path":287},"人物","/gists/person",{"title":289,"_path":290},"PInvoke","/gists/pinvoke",{"title":292,"_path":293},"像素","/gists/pixel",{"title":295,"_path":296},"PowerShell","/gists/powershell",{"title":298,"_path":299},"量子","/gists/quantum",{"title":301,"_path":302},"保持好奇心","/gists/questions",{"title":304,"_path":305},"React Native","/gists/react-native",{"title":307,"_path":308},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":310,"_path":311},"SEO","/gists/seo",{"title":313,"_path":314},"Shader","/gists/shader",{"title":316,"_path":317},"Shape Up","/gists/shape-up",{"title":319,"_path":320},"睡觉","/gists/sleep",{"title":322,"_path":323},"States","/gists/states",{"title":325,"_path":326},"Storage","/gists/storage",{"title":328,"_path":329},"音视频流处理","/gists/stream-cli",{"title":331,"_path":332},"Symbol","/gists/symbol",{"title":334,"_path":335},"系统论","/gists/systems-theory",{"title":337,"_path":338},"Taro","/gists/taro",{"title":340,"_path":341},"任务切片","/gists/task-slice",{"title":343,"_path":344},"技术偏好","/gists/tech-dudge",{"title":346,"_path":347},"Untitled","/gists/untitled",{"title":349,"_path":350},"可变字体","/gists/variable-font",{"title":352,"_path":353},"视觉错觉","/gists/visual-illusion",{"title":355,"_path":356},"SS(SSR)","/gists/vpn",{"title":358,"_path":359},"VS Code 插件开发","/gists/vscode-plugin",{"title":361,"_path":362},"Web Components","/gists/web-components",{"title":364,"_path":365},"Windows","/gists/windows",{"title":367,"_path":368},"查缺补漏","/gists/wrong",{"title":370,"_path":371,"children":372},"代码笔记 / Gists","/source-code",[373],{"title":374,"_path":371},"🚄 代码笔记",{"title":376,"_path":377,"children":378},"我 / Abount","/hire",[379],{"title":380,"_path":377},"📬 技术简历",{"title":382,"_path":383,"children":384},"todo","/todo",[385],{"title":382,"_path":383},{"_path":67,"_dir":387,"_draft":388,"_partial":388,"_locale":389,"title":66,"description":390,"body":391,"_type":2224,"_id":2225,"_source":2226,"_file":2227,"_extension":2228},"articles",false,"","传统网页的渲染是基于像素的，所以常出现锯齿。本文简单介绍了锯齿出现的成因，以及CSS中相关锯齿处理的字体平滑、图片渲染属性，并通过实践创造了一种类似FXAA原理的background背景图案抗锯齿技术poaa（pixel-offset-anti-aliasing）。",{"type":392,"children":393,"toc":2213},"root",[394,402,408,423,428,465,470,475,481,486,495,500,509,514,522,530,542,550,555,563,568,573,581,586,594,599,607,612,620,625,629,635,640,646,683,688,696,701,709,725,766,774,786,791,797,802,2207],{"type":395,"tag":396,"props":397,"children":399},"element","h2",{"id":398},"前言",[400],{"type":401,"value":398},"text",{"type":395,"tag":403,"props":404,"children":405},"p",{},[406],{"type":401,"value":407},"传统网页的呈现是基于像素单位的，所以图片不能和 SVG 一样进行任意尺寸缩放后还保持边缘平整。也就是说，放大像素逻辑的图片，必然导致可视质量下降（信息失真）。所以我们往往会使用技术手段去规避失真，如：",{"type":395,"tag":409,"props":410,"children":411},"ul",{},[412,418],{"type":395,"tag":413,"props":414,"children":415},"li",{},[416],{"type":401,"value":417},"使用 SVG 替换位图",{"type":395,"tag":413,"props":419,"children":420},{},[421],{"type":401,"value":422},"使用矢量字体（如 TrueType 字体）替换位图字体",{"type":395,"tag":403,"props":424,"children":425},{},[426],{"type":401,"value":427},"如果不得已，被迫进行像素操作，我们也有多种手段用来矫正失真：",{"type":395,"tag":409,"props":429,"children":430},{},[431,436,441,446,451,456],{"type":395,"tag":413,"props":432,"children":433},{},[434],{"type":401,"value":435},"使用 CSS Image-Rendering 属性调整图像缩放时的采样算法",{"type":395,"tag":413,"props":437,"children":438},{},[439],{"type":401,"value":440},"使用 CSS Font-Smoothing 属性平滑字体渲染",{"type":395,"tag":413,"props":442,"children":443},{},[444],{"type":401,"value":445},"绘图时使用 Canvas 的抗锯齿 API",{"type":395,"tag":413,"props":447,"children":448},{},[449],{"type":401,"value":450},"将元素尺寸放大，然后再使用 Transform 将布局尺寸还原",{"type":395,"tag":413,"props":452,"children":453},{},[454],{"type":401,"value":455},"某些特殊情况下，可以使用浏览器硬件加速来平滑锯齿",{"type":395,"tag":413,"props":457,"children":458},{},[459],{"type":395,"tag":460,"props":461,"children":462},"del",{},[463],{"type":401,"value":464},"将图片模糊处理迫使用户开启钛合金脑放",{"type":395,"tag":403,"props":466,"children":467},{},[468],{"type":401,"value":469},"这篇文章将会简单的提及以上几点，并介绍一种通过 CSS BackgroundImage 抗锯齿的全新思路（我称之为 Pixel-Offset Anti-Aliasing）。要提前说明的是，当下手机的屏幕分辨率已经相当高，同时处理器性能却十分薄弱，这直接导致我们没有在手机端浏览器讨论抗锯齿的必要。本文所述几乎都局限于桌面端的大显示器（我祈祷你不是在用 8K 分辨率的显示器看这篇博客）。",{"type":395,"tag":396,"props":471,"children":473},{"id":472},"抗锯齿及相关技术",[474],{"type":401,"value":472},{"type":395,"tag":476,"props":477,"children":479},"h3",{"id":478},"抗锯齿的形成",[480],{"type":401,"value":478},{"type":395,"tag":403,"props":482,"children":483},{},[484],{"type":401,"value":485},"信息失真（Aliasing）和图像锯齿不是一码事儿，但是对于游戏玩家来说，几乎可以把两者划上等号。要使用 CSS 抗锯齿，我们不得不先提及锯齿的形成。",{"type":395,"tag":403,"props":487,"children":488},{},[489],{"type":395,"tag":490,"props":491,"children":492},"strong",{},[493],{"type":401,"value":494},"为什么会有锯齿？",{"type":395,"tag":403,"props":496,"children":497},{},[498],{"type":401,"value":499},"我们的眼睛能对物体的形状进行感知，意识到到一条实际上并不存在的“线条”。见下图，我们能感受到线条，虽然看起来不太平整：",{"type":395,"tag":403,"props":501,"children":502},{},[503],{"type":395,"tag":504,"props":505,"children":508},"img",{"alt":506,"src":507},"Aliasing","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Aliasing.png",[],{"type":395,"tag":403,"props":510,"children":511},{},[512],{"type":401,"value":513},"下面这幅图中，带箭头的线代表我们感知的线段，其余线段相交的网格代表像素网格。从上图可以发现，只要是带箭头的线经过的地方，就会被黄颜色填充。不过理想中的线段是完美的，它完全平滑的。把不定方向的平滑线段，映射到像素排列的低 DPI 的屏幕上，就会出现信息丢失的情况。像素颗粒越大，信息丢失情况就越严重（以下就简称为锯齿）。",{"type":395,"tag":403,"props":515,"children":516},{},[517],{"type":395,"tag":504,"props":518,"children":521},{"alt":519,"src":520},"Aliasing-LineDirection","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Aliasing-LineDirection.png",[],{"type":395,"tag":403,"props":523,"children":524},{},[525],{"type":395,"tag":490,"props":526,"children":527},{},[528],{"type":401,"value":529},"怎么样看起来才没有锯齿？",{"type":395,"tag":403,"props":531,"children":532},{},[533,535,540],{"type":401,"value":534},"这里我画了一张图，可以先仔细观察，然后再站在离显示器稍微远一些的地方",{"type":395,"tag":490,"props":536,"children":537},{},[538],{"type":401,"value":539},"眯起眼睛",{"type":401,"value":541},"看：",{"type":395,"tag":403,"props":543,"children":544},{},[545],{"type":395,"tag":504,"props":546,"children":549},{"alt":547,"src":548},"AntiAliasingPaint","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/AntiAliasingPaint.png",[],{"type":395,"tag":403,"props":551,"children":552},{},[553],{"type":401,"value":554},"在像素周围，我用黄色涂鸦将丢失的信息稍加补充。图中黄色涂鸦的大小代表了像素透明度。这里有一张抗锯齿的成品图片，可以看处图形的边缘被填充了有透明度的像素：",{"type":395,"tag":403,"props":556,"children":557},{},[558],{"type":395,"tag":504,"props":559,"children":562},{"alt":560,"src":561},"AntiAliasingPic","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/AntiAliasingPic.png",[],{"type":395,"tag":476,"props":564,"children":566},{"id":565},"常见抗锯齿技术",[567],{"type":401,"value":565},{"type":395,"tag":403,"props":569,"children":570},{},[571],{"type":401,"value":572},"在音频领域，我们可以通过高质量的播放器和无损音频减少传入耳朵的信息失真。但在游戏领域，普通玩家不可能在家里准备了 8K 显示器。伴随显示器分辨率从 720p 到 1080p 发展的，是几种同样跟随游戏业界发展而成长起来的抗锯齿技术。",{"type":395,"tag":409,"props":574,"children":575},{},[576],{"type":395,"tag":413,"props":577,"children":578},{},[579],{"type":401,"value":580},"SSAA（Super Sampling Anti-Aliasing）",{"type":395,"tag":403,"props":582,"children":583},{},[584],{"type":401,"value":585},"超级采样抗锯齿，它会把当前画面渲染的分辨率成倍提高，比如 1024×768 的图形开启 2 倍 SSAA 后，显卡实际运算就变成了 2048×1536，这之后，再降采样，将多个像素融合，映射回显示器的单个像素。像素融合能使颜色过渡更自然，看起来没有明显的毛刺。不过，因为硬件的运算增加（指数级），可以想象它会消耗极高的性能。",{"type":395,"tag":409,"props":587,"children":588},{},[589],{"type":395,"tag":413,"props":590,"children":591},{},[592],{"type":401,"value":593},"MSAA（Multi Sampling Anti-Aliasing）",{"type":395,"tag":403,"props":595,"children":596},{},[597],{"type":401,"value":598},"多重采样抗锯齿，它针对特定缓存区域的数据进行多重采样——可以简单理解为对多边形的边缘进行多重采样。性能消耗较高，但效果也不错。",{"type":395,"tag":409,"props":600,"children":601},{},[602],{"type":395,"tag":413,"props":603,"children":604},{},[605],{"type":401,"value":606},"FXAA（Fast Approximate Anti-Aliasing）",{"type":395,"tag":403,"props":608,"children":609},{},[610],{"type":401,"value":611},"快速近似抗锯齿，它找到画面中所有图形的边缘并进行平滑处理。尽管很多图形边缘并不对应游戏实际建模的边缘（如材质和纹理），但 FXAA 性能消耗小，性价比高，不失为一种抗锯齿的常用选择。",{"type":395,"tag":409,"props":613,"children":614},{},[615],{"type":395,"tag":413,"props":616,"children":617},{},[618],{"type":401,"value":619},"DLSS（Deep Learning Super Sampling）",{"type":395,"tag":403,"props":621,"children":622},{},[623],{"type":401,"value":624},"深度学习超级采样，它通过硬件加速的深度学习算法，根据几何、着色、时域多个方面的数据（说人话就是根据过往帧、形状、像素动量等数据）对实时渲染的低分辨率图像重建多倍超级采样结果。相对于传统渲染，不仅能极大提高画质，还能极大提高帧率。",{"type":395,"tag":626,"props":627,"children":628},"hr",{},[],{"type":395,"tag":396,"props":630,"children":632},{"id":631},"css-抗锯齿技术",[633],{"type":401,"value":634},"CSS 抗锯齿技术",{"type":395,"tag":403,"props":636,"children":637},{},[638],{"type":401,"value":639},"以下，我们提及几种常见的抗锯齿技术。",{"type":395,"tag":476,"props":641,"children":643},{"id":642},"css-font-smoothing",[644],{"type":401,"value":645},"CSS Font-Smoothing",{"type":395,"tag":403,"props":647,"children":648},{},[649,651,658,660,666,668,674,675,681],{"type":401,"value":650},"字体平滑属性属于早期的 CSS 规范，后来因为种种原因又被移除了。不过现在仍可以通过前缀属性兼容（如 ",{"type":395,"tag":652,"props":653,"children":655},"code",{"className":654},[],[656],{"type":401,"value":657},"-webkit-font-smoothing",{"type":401,"value":659},"）。一般来说，字体平滑有三个值可选，",{"type":395,"tag":652,"props":661,"children":663},{"className":662},[],[664],{"type":401,"value":665},"none",{"type":401,"value":667},"、",{"type":395,"tag":652,"props":669,"children":671},{"className":670},[],[672],{"type":401,"value":673},"subpixel-antialiased",{"type":401,"value":667},{"type":395,"tag":652,"props":676,"children":678},{"className":677},[],[679],{"type":401,"value":680},"antialiased",{"type":401,"value":682},"。值的作用正如其名，分别是无抗锯齿，亚像素级抗锯齿和（全像素）抗锯齿。",{"type":395,"tag":403,"props":684,"children":685},{},[686],{"type":401,"value":687},"一般来说，屏幕上的每一个像素点，都是由三原色条纹（可能如红、绿、蓝三个发光点）组合而成。亚像素级抗锯齿，意味着字体渲染时，将以亚像素（如红光）为单位。不发光的像素显示黑色，其余像素在抗锯齿处理时则会显示暗色，见下图：",{"type":395,"tag":403,"props":689,"children":690},{},[691],{"type":395,"tag":504,"props":692,"children":695},{"alt":693,"src":694},"亚像素抗锯齿的小写字母“e”","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/subpixels.jpg",[],{"type":395,"tag":403,"props":697,"children":698},{},[699],{"type":401,"value":700},"全像素抗锯齿，则以整颗像素（包含红蓝绿三个条纹）为单位渲染字体。抗锯齿处理时，字体若超出了一个像素的单位，会以一颗与之相邻的透明暗色像素作平滑，见下图：",{"type":395,"tag":403,"props":702,"children":703},{},[704],{"type":395,"tag":504,"props":705,"children":708},{"alt":706,"src":707},"抗锯齿后的“后浪”中的“后”字","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/fullpixels.jpg",[],{"type":395,"tag":403,"props":710,"children":711},{},[712,714,723],{"type":401,"value":713},"“后浪”的“后”字，中间那一横，实际的宽度要小于一个像素，所以也用透明暗色渲染。除了单字，在 ",{"type":395,"tag":715,"props":716,"children":720},"a",{"href":717,"rel":718},"http://maxvoltar.com/archive/-WebKit-font-smoothing",[719],"nofollow",[721],{"type":401,"value":722},"@MAXVOLTAR",{"type":401,"value":724}," 这篇博客，有英文排版的示例图片，以下直接引用了：",{"type":395,"tag":409,"props":726,"children":727},{},[728,741,753],{"type":395,"tag":413,"props":729,"children":730},{},[731,732,736],{"type":401,"value":665},{"type":395,"tag":733,"props":734,"children":735},"br",{},[],{"type":395,"tag":504,"props":737,"children":740},{"alt":738,"src":739},"font-smooth-none","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/font-smooth-none.png",[],{"type":395,"tag":413,"props":742,"children":743},{},[744,745,748],{"type":401,"value":673},{"type":395,"tag":733,"props":746,"children":747},{},[],{"type":395,"tag":504,"props":749,"children":752},{"alt":750,"src":751},"font-smooth-subpixel","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/font-smooth-subpixel.png",[],{"type":395,"tag":413,"props":754,"children":755},{},[756,758,761],{"type":401,"value":757},"antiliasing",{"type":395,"tag":733,"props":759,"children":760},{},[],{"type":395,"tag":504,"props":762,"children":765},{"alt":763,"src":764},"font-smooth-antiliasing","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/font-smooth-antiliasing.png",[],{"type":395,"tag":403,"props":767,"children":768},{},[769],{"type":395,"tag":490,"props":770,"children":771},{},[772],{"type":401,"value":773},"那三种值应该如何选择呢？",{"type":395,"tag":403,"props":775,"children":776},{},[777,779,784],{"type":401,"value":778},"我的建议是，仅仅了解渲染机制和呈现方式就行。",{"type":395,"tag":490,"props":780,"children":781},{},[782],{"type":401,"value":783},"像素抗锯齿会使字体呈现稍细，而亚像素级抗锯齿则使字体呈现过粗。黑色背景下则反之",{"type":401,"value":785},"。倒不必因为知道它就必须使用上——这三种方式有各自的优点和缺陷。一般来说，扔掉这个属性，让浏览器自行判断字体渲染的方式就可以了。如果你引入了特殊字体（比如印刷字体）进行平滑处理。（我相信中文的网页版面下，能自由发挥的范围应该很有限。）",{"type":395,"tag":403,"props":787,"children":788},{},[789],{"type":401,"value":790},"附，感兴趣的话，文末我留了相关链接，可以再查阅。",{"type":395,"tag":476,"props":792,"children":794},{"id":793},"css-image-rendering",[795],{"type":401,"value":796},"CSS Image-Rendering",{"type":395,"tag":403,"props":798,"children":799},{},[800],{"type":401,"value":801},"Image-Rendering 属性用于设置图像缩放算法，这个属性有几种常见的值。见下组件：",{"type":395,"tag":803,"props":804,"children":805},"article-a200604-image-render-property",{},[806,811],{"type":395,"tag":403,"props":807,"children":808},{},[809],{"type":401,"value":810},"可以发现，Pixelated 值设置之后，浏览器不会对边缘进行平滑处理，而 Auto 则对整幅图像进行柔和处理。也就是说，使用 Transform Scale 放大图片，浏览器会应用默认的平滑缩放算法（可能是双线性插值之类的）。",{"type":395,"tag":812,"props":813,"children":818},"article-a200604-image-render",{"process":814,"property":815,"src":816,":value":817},"scale","image-rendering","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200319/2020-03-19-15-39-43.png","['auto', 'pixelated']",[819,824],{"type":395,"tag":403,"props":820,"children":821},{},[822],{"type":401,"value":823},"那可不可以对图片先放大数倍，再缩小还原为实际尺寸呢？以下是试验结果：",{"type":395,"tag":812,"props":825,"children":829},{"process":826,"property":815,"src":816,":compare":827,":value":828},"enlarge-and-shrink","true","[\n     { value: 'auto', title: 'Auto, Normal' }, \n     { value: 'auto', title: 'Auto, Scale(100) Scale(0.01)' }\n ]",[830,835,843,855,860,865],{"type":395,"tag":403,"props":831,"children":832},{},[833],{"type":401,"value":834},"如果你不能运行上面那个组件的话，这里有 GIF 效果：",{"type":395,"tag":403,"props":836,"children":837},{},[838],{"type":395,"tag":504,"props":839,"children":842},{"alt":840,"src":841},"Scale","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Scale.gif",[],{"type":395,"tag":403,"props":844,"children":845},{},[846,848,853],{"type":401,"value":847},"不知道是浏览器对多个 Scale 串联进行了优化，还是使用了某种不损失图像信息的采样算法，总之",{"type":395,"tag":490,"props":849,"children":850},{},[851],{"type":401,"value":852},"不改变图片尺寸又想使用平滑图片是行不通的",{"type":401,"value":854},"。",{"type":395,"tag":476,"props":856,"children":858},{"id":857},"硬件加速抗锯齿",[859],{"type":401,"value":857},{"type":395,"tag":403,"props":861,"children":862},{},[863],{"type":401,"value":864},"关于使用浏览器的硬件加速抗锯齿功能，是我在试验 PXAA 时的偶得（不过已经有博客介绍过了）。当元素通过 Transform:Rotate 旋转之后，如果此元素是被 GPU 渲染的，那么会应用浏览器对应 GPU 的抗锯齿属性——比方说你用 GTX 1060ti 运行浏览器，那么相关配置就能在英伟达控制面板中找到（不过这有相当程度是我的猜测，待验证）。听起来好像有点复杂，看下面例子就一目了然了：",{"type":395,"tag":866,"props":867,"children":868},"article-a200604-gpu",{},[869,874,882,894,899,905,910,916],{"type":395,"tag":403,"props":870,"children":871},{},[872],{"type":401,"value":873},"如果你不能运行上面那个组件的话，这里有图片效果：",{"type":395,"tag":403,"props":875,"children":876},{},[877],{"type":395,"tag":504,"props":878,"children":881},{"alt":879,"src":880},"Rotate&GPU","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Rotate&GPU.gif",[],{"type":395,"tag":403,"props":883,"children":884},{},[885,887,892],{"type":401,"value":886},"当元素旋转，并应用硬件加速（TranslateZ）之后，渲染出来的边缘会被平滑处理。但是如果",{"type":395,"tag":490,"props":888,"children":889},{},[890],{"type":401,"value":891},"仅仅启用硬件加速或是单使用旋转，不能达到效果",{"type":401,"value":893},"。经过我的测试，在 Windows 端 Chrome 内核的浏览器，这种抗锯齿方式能得到一些体验——你甚至可以通过仅旋转 0.1° 来柔和边缘（虽然不明显）。",{"type":395,"tag":403,"props":895,"children":896},{},[897],{"type":401,"value":898},"CSS 相关的抗锯齿技术就到此为止，下一节开始是新的思路。",{"type":395,"tag":396,"props":900,"children":902},{"id":901},"pixel-offset-anti-aliasing",[903],{"type":401,"value":904},"Pixel-Offset Anti-Aliasing",{"type":395,"tag":403,"props":906,"children":907},{},[908],{"type":401,"value":909},"像素偏移抗锯齿（下简称 POAA），这是一种很神奇的方法，貌似网上还没人分享过，不过效果确实挺惊艳的。我不知道具体原理是什么，但是它就是有效（It works!）。这里有两副使用 BackgroundImage 属性绘制的图像，我先展示一下应用 POAA 后的结果吧：",{"type":395,"tag":911,"props":912,"children":914},"h4",{"id":913},"效果展示",[915],{"type":401,"value":913},{"type":395,"tag":917,"props":918,"children":919},"article-a200604-offset",{},[920,925,933,938,943,957,965,973,978,986,1097,1102,1125,1130,1136,1141,1146,1159,1164,1275,1280,1288,1293,1301,1306,1314,1414,1419,1427,1519,1524,1529,1537,1542,1547,1555,1560,1578,1583,2058,2063,2069,2074,2079,2093,2103,2114,2119,2124,2137,2142],{"type":395,"tag":403,"props":921,"children":922},{},[923],{"type":401,"value":924},"如果上面那些组件不能运行的话，我准备了张 GIF 图片：",{"type":395,"tag":403,"props":926,"children":927},{},[928],{"type":395,"tag":504,"props":929,"children":932},{"alt":930,"src":931},"POAA-1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/POAA-1.gif",[],{"type":395,"tag":911,"props":934,"children":936},{"id":935},"原理",[937],{"type":401,"value":935},{"type":395,"tag":403,"props":939,"children":940},{},[941],{"type":401,"value":942},"常见的游戏抗锯齿技术是建立在游戏渲染前或后，从模型到光照多个步骤产生的数据的基础上的，所以我们可以根据帧历史的内容、像素动量、提高采样等方法中进行筛选信息并重建画面。但浏览器给用户展现的内容，可以说就是渲染后的东西。我们能够参与浏览器内部渲染的方式貌似几乎没有（以后可能会有 CSS Houdini）。比方说使用 BackgroundImage 绘图展现在你的屏幕上的这些像素，你无法参与渲染改变它们，你也没有办法用预渲染数据告诉浏览器“你应该这样做”。不过好消息是，程序员都是坚信任何问题都能被解决的人，这里我们换种思路。",{"type":395,"tag":403,"props":944,"children":945},{},[946,948,955],{"type":401,"value":947},"我想你应该记得开篇我们提及过 FXAA。FXAA 可以简单概括为边缘寻找->重建边缘这两个步骤（并不专业，也许还会有矫正之类的我不清楚）。在",{"type":395,"tag":715,"props":949,"children":952},{"href":950,"rel":951},"http://blog.simonrodriguez.fr/articles/30-07-2016_implementing_fxaa.html",[719],[953],{"type":401,"value":954},"Implementing FXAA",{"type":401,"value":956},"这篇博客中，解释了 FXAA 具体是如何运作的。对于一个已经被找到的图形边缘，经过 FXAA 处理后会变成这样，见下两幅图：",{"type":395,"tag":403,"props":958,"children":959},{},[960],{"type":395,"tag":504,"props":961,"children":964},{"alt":962,"src":963},"RawImage","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/exp1.png",[],{"type":395,"tag":403,"props":966,"children":967},{},[968],{"type":395,"tag":504,"props":969,"children":972},{"alt":970,"src":971},"After FXAA","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/exp2.png",[],{"type":395,"tag":403,"props":974,"children":975},{},[976],{"type":401,"value":977},"给 FXAA 输入源图像，就能通过颜色或对比度确认物体的边缘，并通过改变像素周围的点的透明度，让整体看起来得到平滑。仔细想想，使用 BackgroundImage 绘图时，其实我们已经知道边缘在哪儿了。边缘不藏在国王的帽子里，它就在我们写的代码中。比方，上一小节那个圆形渐变图形的源码是这样的：",{"type":395,"tag":403,"props":979,"children":980},{},[981],{"type":395,"tag":504,"props":982,"children":985},{"alt":983,"src":984},"Radial","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Radial.png",[],{"type":395,"tag":987,"props":988,"children":992},"pre",{"className":989,"code":990,"language":991,"meta":389,"style":389},"language-SCSS shiki shiki-themes material-theme-lighter github-light github-dark monokai",".circle-con {\n    $c1: #cd3f4f;\n    $c2: #e6a964;\n    position: relative;\n    height: 300px;\n    background-image: repeating-radial-gradient(\n        circle at 0% 50%,\n        $c1 0,\n        $c2 50px\n    );\n}\n","SCSS",[993],{"type":395,"tag":652,"props":994,"children":995},{"__ignoreMap":389},[996,1007,1016,1025,1034,1043,1052,1061,1070,1079,1088],{"type":395,"tag":997,"props":998,"children":1001},"span",{"class":999,"line":1000},"line",1,[1002],{"type":395,"tag":997,"props":1003,"children":1004},{},[1005],{"type":401,"value":1006},".circle-con {\n",{"type":395,"tag":997,"props":1008,"children":1010},{"class":999,"line":1009},2,[1011],{"type":395,"tag":997,"props":1012,"children":1013},{},[1014],{"type":401,"value":1015},"    $c1: #cd3f4f;\n",{"type":395,"tag":997,"props":1017,"children":1019},{"class":999,"line":1018},3,[1020],{"type":395,"tag":997,"props":1021,"children":1022},{},[1023],{"type":401,"value":1024},"    $c2: #e6a964;\n",{"type":395,"tag":997,"props":1026,"children":1028},{"class":999,"line":1027},4,[1029],{"type":395,"tag":997,"props":1030,"children":1031},{},[1032],{"type":401,"value":1033},"    position: relative;\n",{"type":395,"tag":997,"props":1035,"children":1037},{"class":999,"line":1036},5,[1038],{"type":395,"tag":997,"props":1039,"children":1040},{},[1041],{"type":401,"value":1042},"    height: 300px;\n",{"type":395,"tag":997,"props":1044,"children":1046},{"class":999,"line":1045},6,[1047],{"type":395,"tag":997,"props":1048,"children":1049},{},[1050],{"type":401,"value":1051},"    background-image: repeating-radial-gradient(\n",{"type":395,"tag":997,"props":1053,"children":1055},{"class":999,"line":1054},7,[1056],{"type":395,"tag":997,"props":1057,"children":1058},{},[1059],{"type":401,"value":1060},"        circle at 0% 50%,\n",{"type":395,"tag":997,"props":1062,"children":1064},{"class":999,"line":1063},8,[1065],{"type":395,"tag":997,"props":1066,"children":1067},{},[1068],{"type":401,"value":1069},"        $c1 0,\n",{"type":395,"tag":997,"props":1071,"children":1073},{"class":999,"line":1072},9,[1074],{"type":395,"tag":997,"props":1075,"children":1076},{},[1077],{"type":401,"value":1078},"        $c2 50px\n",{"type":395,"tag":997,"props":1080,"children":1082},{"class":999,"line":1081},10,[1083],{"type":395,"tag":997,"props":1084,"children":1085},{},[1086],{"type":401,"value":1087},"    );\n",{"type":395,"tag":997,"props":1089,"children":1091},{"class":999,"line":1090},11,[1092],{"type":395,"tag":997,"props":1093,"children":1094},{},[1095],{"type":401,"value":1096},"}\n",{"type":395,"tag":403,"props":1098,"children":1099},{},[1100],{"type":401,"value":1101},"我们可以轻易找到找到边缘——对，就是那些渐变的颜色改变的地方——0px(50px)。现在我们有了边缘信息，接着就要重建边缘。重建边缘也许可以再拆分，分为以下几个步骤：",{"type":395,"tag":409,"props":1103,"children":1104},{},[1105,1110,1115,1120],{"type":395,"tag":413,"props":1106,"children":1107},{},[1108],{"type":401,"value":1109},"需要通过某种方法得到透明度的点",{"type":395,"tag":413,"props":1111,"children":1112},{},[1113],{"type":401,"value":1114},"这些点需要能够组成线段",{"type":395,"tag":413,"props":1116,"children":1117},{},[1118],{"type":401,"value":1119},"线段完全吻合我们的 BackgroundImage",{"type":395,"tag":413,"props":1121,"children":1122},{},[1123],{"type":401,"value":1124},"使线段覆盖在 BackgroundImage 的上一层以应用我们的修改",{"type":395,"tag":403,"props":1126,"children":1127},{},[1128],{"type":401,"value":1129},"这就是大体思路，我们并没有参与浏览器的渲染，而是通过像 FXAA 一样的后处理的方法。在已渲染的图像上做文章。不过将上述步骤仔细考虑后，会发现问题的难点在于如何生成抗锯齿条纹。",{"type":395,"tag":403,"props":1131,"children":1132},{},[1133],{"type":395,"tag":504,"props":1134,"children":1135},{"alt":547,"src":548},[],{"type":395,"tag":403,"props":1137,"children":1138},{},[1139],{"type":401,"value":1140},"总之，我们需要继续改良思路。",{"type":395,"tag":403,"props":1142,"children":1143},{},[1144],{"type":401,"value":1145},"在 BackgroundImage 中，像素是基本单位不能再分，点的透明度显然不能通过点的大小来模拟。这里有两种解决方法：",{"type":395,"tag":409,"props":1147,"children":1148},{},[1149,1154],{"type":395,"tag":413,"props":1150,"children":1151},{},[1152],{"type":401,"value":1153},"Opacity，使用 CSS Opacity ，或者 CSS RGBA 函数、SCSS 函数。",{"type":395,"tag":413,"props":1155,"children":1156},{},[1157],{"type":401,"value":1158},"两种颜色相融合模拟像素透明度，如果不想扯上 JS，SCSS 也能解决。",{"type":395,"tag":403,"props":1160,"children":1161},{},[1162],{"type":401,"value":1163},"至于线段，也可以用 BackgroundImage 模拟，比如针对上面那段 CSS 代码，可以通过改写成以下方式：",{"type":395,"tag":987,"props":1165,"children":1167},{"className":989,"code":1166,"language":991,"meta":389,"style":389},".circle-con {\n    $c1: #cd3f4f;\n    $c2: #e6a964;\n    $line-width: 1px;\n    position: relative;\n    height: 300px;\n    background-image: repeating-radial-gradient(\n        circle at 0% 50%,\n        $c1 0,\n        transparent calc($line-width),\n        transparent calc(50px - $line-width),\n        $c2 50px\n    );\n}\n",[1168],{"type":395,"tag":652,"props":1169,"children":1170},{"__ignoreMap":389},[1171,1178,1185,1192,1200,1207,1214,1221,1228,1235,1243,1251,1259,1267],{"type":395,"tag":997,"props":1172,"children":1173},{"class":999,"line":1000},[1174],{"type":395,"tag":997,"props":1175,"children":1176},{},[1177],{"type":401,"value":1006},{"type":395,"tag":997,"props":1179,"children":1180},{"class":999,"line":1009},[1181],{"type":395,"tag":997,"props":1182,"children":1183},{},[1184],{"type":401,"value":1015},{"type":395,"tag":997,"props":1186,"children":1187},{"class":999,"line":1018},[1188],{"type":395,"tag":997,"props":1189,"children":1190},{},[1191],{"type":401,"value":1024},{"type":395,"tag":997,"props":1193,"children":1194},{"class":999,"line":1027},[1195],{"type":395,"tag":997,"props":1196,"children":1197},{},[1198],{"type":401,"value":1199},"    $line-width: 1px;\n",{"type":395,"tag":997,"props":1201,"children":1202},{"class":999,"line":1036},[1203],{"type":395,"tag":997,"props":1204,"children":1205},{},[1206],{"type":401,"value":1033},{"type":395,"tag":997,"props":1208,"children":1209},{"class":999,"line":1045},[1210],{"type":395,"tag":997,"props":1211,"children":1212},{},[1213],{"type":401,"value":1042},{"type":395,"tag":997,"props":1215,"children":1216},{"class":999,"line":1054},[1217],{"type":395,"tag":997,"props":1218,"children":1219},{},[1220],{"type":401,"value":1051},{"type":395,"tag":997,"props":1222,"children":1223},{"class":999,"line":1063},[1224],{"type":395,"tag":997,"props":1225,"children":1226},{},[1227],{"type":401,"value":1060},{"type":395,"tag":997,"props":1229,"children":1230},{"class":999,"line":1072},[1231],{"type":395,"tag":997,"props":1232,"children":1233},{},[1234],{"type":401,"value":1069},{"type":395,"tag":997,"props":1236,"children":1237},{"class":999,"line":1081},[1238],{"type":395,"tag":997,"props":1239,"children":1240},{},[1241],{"type":401,"value":1242},"        transparent calc($line-width),\n",{"type":395,"tag":997,"props":1244,"children":1245},{"class":999,"line":1090},[1246],{"type":395,"tag":997,"props":1247,"children":1248},{},[1249],{"type":401,"value":1250},"        transparent calc(50px - $line-width),\n",{"type":395,"tag":997,"props":1252,"children":1254},{"class":999,"line":1253},12,[1255],{"type":395,"tag":997,"props":1256,"children":1257},{},[1258],{"type":401,"value":1078},{"type":395,"tag":997,"props":1260,"children":1262},{"class":999,"line":1261},13,[1263],{"type":395,"tag":997,"props":1264,"children":1265},{},[1266],{"type":401,"value":1087},{"type":395,"tag":997,"props":1268,"children":1270},{"class":999,"line":1269},14,[1271],{"type":395,"tag":997,"props":1272,"children":1273},{},[1274],{"type":401,"value":1096},{"type":395,"tag":403,"props":1276,"children":1277},{},[1278],{"type":401,"value":1279},"取得线段之后，将容器偏移几个单位像素，放到浏览器测试结果：",{"type":395,"tag":403,"props":1281,"children":1282},{},[1283],{"type":395,"tag":504,"props":1284,"children":1287},{"alt":1285,"src":1286},"Line1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Line1.png",[],{"type":395,"tag":403,"props":1289,"children":1290},{},[1291],{"type":401,"value":1292},"可以发现，会自然而然得到颜色混合透明度组成的线段。只不过透明度的方向并不是我们想要的。我希望能够得到透明线条反过来的图样：",{"type":395,"tag":403,"props":1294,"children":1295},{},[1296],{"type":395,"tag":504,"props":1297,"children":1300},{"alt":1298,"src":1299},"Line2","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Line2.png",[],{"type":395,"tag":403,"props":1302,"children":1303},{},[1304],{"type":401,"value":1305},"经过试验，我发现只需简单调换颜色的顺序就行。比方说这是在容器 50% 的位置绘制的一条线段：",{"type":395,"tag":403,"props":1307,"children":1308},{},[1309],{"type":395,"tag":504,"props":1310,"children":1313},{"alt":1311,"src":1312},"yr1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/yr1.png",[],{"type":395,"tag":987,"props":1315,"children":1317},{"className":989,"code":1316,"language":991,"meta":389,"style":389},".old {\n    background: linear-gradient(\n        var(--deg),\n        transparent,\n        transparent\n        calc(50% - var(--line-width)),\n        yellow 50%,\n        red 50%,\n        transparent calc(50% + var(--line-width)),\n        transparent\n    );\n}\n",[1318],{"type":395,"tag":652,"props":1319,"children":1320},{"__ignoreMap":389},[1321,1329,1337,1345,1353,1361,1369,1377,1385,1393,1400,1407],{"type":395,"tag":997,"props":1322,"children":1323},{"class":999,"line":1000},[1324],{"type":395,"tag":997,"props":1325,"children":1326},{},[1327],{"type":401,"value":1328},".old {\n",{"type":395,"tag":997,"props":1330,"children":1331},{"class":999,"line":1009},[1332],{"type":395,"tag":997,"props":1333,"children":1334},{},[1335],{"type":401,"value":1336},"    background: linear-gradient(\n",{"type":395,"tag":997,"props":1338,"children":1339},{"class":999,"line":1018},[1340],{"type":395,"tag":997,"props":1341,"children":1342},{},[1343],{"type":401,"value":1344},"        var(--deg),\n",{"type":395,"tag":997,"props":1346,"children":1347},{"class":999,"line":1027},[1348],{"type":395,"tag":997,"props":1349,"children":1350},{},[1351],{"type":401,"value":1352},"        transparent,\n",{"type":395,"tag":997,"props":1354,"children":1355},{"class":999,"line":1036},[1356],{"type":395,"tag":997,"props":1357,"children":1358},{},[1359],{"type":401,"value":1360},"        transparent\n",{"type":395,"tag":997,"props":1362,"children":1363},{"class":999,"line":1045},[1364],{"type":395,"tag":997,"props":1365,"children":1366},{},[1367],{"type":401,"value":1368},"        calc(50% - var(--line-width)),\n",{"type":395,"tag":997,"props":1370,"children":1371},{"class":999,"line":1054},[1372],{"type":395,"tag":997,"props":1373,"children":1374},{},[1375],{"type":401,"value":1376},"        yellow 50%,\n",{"type":395,"tag":997,"props":1378,"children":1379},{"class":999,"line":1063},[1380],{"type":395,"tag":997,"props":1381,"children":1382},{},[1383],{"type":401,"value":1384},"        red 50%,\n",{"type":395,"tag":997,"props":1386,"children":1387},{"class":999,"line":1072},[1388],{"type":395,"tag":997,"props":1389,"children":1390},{},[1391],{"type":401,"value":1392},"        transparent calc(50% + var(--line-width)),\n",{"type":395,"tag":997,"props":1394,"children":1395},{"class":999,"line":1081},[1396],{"type":395,"tag":997,"props":1397,"children":1398},{},[1399],{"type":401,"value":1360},{"type":395,"tag":997,"props":1401,"children":1402},{"class":999,"line":1090},[1403],{"type":395,"tag":997,"props":1404,"children":1405},{},[1406],{"type":401,"value":1087},{"type":395,"tag":997,"props":1408,"children":1409},{"class":999,"line":1253},[1410],{"type":395,"tag":997,"props":1411,"children":1412},{},[1413],{"type":401,"value":1096},{"type":395,"tag":403,"props":1415,"children":1416},{},[1417],{"type":401,"value":1418},"如果将线段颜色调换，就会变成：",{"type":395,"tag":403,"props":1420,"children":1421},{},[1422],{"type":395,"tag":504,"props":1423,"children":1426},{"alt":1424,"src":1425},"ry1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/ry1.png",[],{"type":395,"tag":987,"props":1428,"children":1430},{"className":989,"code":1429,"language":991,"meta":389,"style":389},".new {\n    background: linear-gradient(\n        var(--deg),\n        transparent,\n        transparent\n        calc(50% - var(--line-width)),\n        red 50%,\n        yellow 50%,\n        transparent calc(50% + var(--line-width)),\n        transparent\n    );\n}\n",[1431],{"type":395,"tag":652,"props":1432,"children":1433},{"__ignoreMap":389},[1434,1442,1449,1456,1463,1470,1477,1484,1491,1498,1505,1512],{"type":395,"tag":997,"props":1435,"children":1436},{"class":999,"line":1000},[1437],{"type":395,"tag":997,"props":1438,"children":1439},{},[1440],{"type":401,"value":1441},".new {\n",{"type":395,"tag":997,"props":1443,"children":1444},{"class":999,"line":1009},[1445],{"type":395,"tag":997,"props":1446,"children":1447},{},[1448],{"type":401,"value":1336},{"type":395,"tag":997,"props":1450,"children":1451},{"class":999,"line":1018},[1452],{"type":395,"tag":997,"props":1453,"children":1454},{},[1455],{"type":401,"value":1344},{"type":395,"tag":997,"props":1457,"children":1458},{"class":999,"line":1027},[1459],{"type":395,"tag":997,"props":1460,"children":1461},{},[1462],{"type":401,"value":1352},{"type":395,"tag":997,"props":1464,"children":1465},{"class":999,"line":1036},[1466],{"type":395,"tag":997,"props":1467,"children":1468},{},[1469],{"type":401,"value":1360},{"type":395,"tag":997,"props":1471,"children":1472},{"class":999,"line":1045},[1473],{"type":395,"tag":997,"props":1474,"children":1475},{},[1476],{"type":401,"value":1368},{"type":395,"tag":997,"props":1478,"children":1479},{"class":999,"line":1054},[1480],{"type":395,"tag":997,"props":1481,"children":1482},{},[1483],{"type":401,"value":1384},{"type":395,"tag":997,"props":1485,"children":1486},{"class":999,"line":1063},[1487],{"type":395,"tag":997,"props":1488,"children":1489},{},[1490],{"type":401,"value":1376},{"type":395,"tag":997,"props":1492,"children":1493},{"class":999,"line":1072},[1494],{"type":395,"tag":997,"props":1495,"children":1496},{},[1497],{"type":401,"value":1392},{"type":395,"tag":997,"props":1499,"children":1500},{"class":999,"line":1081},[1501],{"type":395,"tag":997,"props":1502,"children":1503},{},[1504],{"type":401,"value":1360},{"type":395,"tag":997,"props":1506,"children":1507},{"class":999,"line":1090},[1508],{"type":395,"tag":997,"props":1509,"children":1510},{},[1511],{"type":401,"value":1087},{"type":395,"tag":997,"props":1513,"children":1514},{"class":999,"line":1253},[1515],{"type":395,"tag":997,"props":1516,"children":1517},{},[1518],{"type":401,"value":1096},{"type":395,"tag":403,"props":1520,"children":1521},{},[1522],{"type":401,"value":1523},"得到了我们想要的线段虚化的效果！这之后要做的事儿是吻合线条。",{"type":395,"tag":403,"props":1525,"children":1526},{},[1527],{"type":401,"value":1528},"接下来是见证奇迹的时刻：",{"type":395,"tag":403,"props":1530,"children":1531},{},[1532],{"type":395,"tag":504,"props":1533,"children":1536},{"alt":1534,"src":1535},"AntiAliasingLine","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/AntiAliasingLine.gif",[],{"type":395,"tag":403,"props":1538,"children":1539},{},[1540],{"type":401,"value":1541},"Well done!",{"type":395,"tag":403,"props":1543,"children":1544},{},[1545],{"type":401,"value":1546},"来一张成品 GIF，稍微离屏幕远一些看效果最好：",{"type":395,"tag":403,"props":1548,"children":1549},{},[1550],{"type":395,"tag":504,"props":1551,"children":1554},{"alt":1552,"src":1553},"POAA-2","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/POAA-2.gif",[],{"type":395,"tag":403,"props":1556,"children":1557},{},[1558],{"type":401,"value":1559},"成品在吻合线条的基础上还增加了一些内容及调整了相关参数：",{"type":395,"tag":409,"props":1561,"children":1562},{},[1563,1568,1573],{"type":395,"tag":413,"props":1564,"children":1565},{},[1566],{"type":401,"value":1567},"暗色和亮色混合的透明度的值不同",{"type":395,"tag":413,"props":1569,"children":1570},{},[1571],{"type":401,"value":1572},"X 轴和 Y 轴的偏移不同",{"type":395,"tag":413,"props":1574,"children":1575},{},[1576],{"type":401,"value":1577},"调整了拟合线段的粗细",{"type":395,"tag":403,"props":1579,"children":1580},{},[1581],{"type":401,"value":1582},"成品的代码如下：",{"type":395,"tag":987,"props":1584,"children":1586},{"className":989,"code":1585,"language":991,"meta":389,"style":389},".repeat-con {\n    --c1: #cd3f4f;\n    --c2: #e6a964;\n    --c3: #5996cc;\n    position: relative;\n    height: 300px;\n    background-image: repeating-linear-gradient(\n        var(--deg),\n        var(--c1),\n        var(--c1) 10px,\n        var(--c2) 10px,\n        var(--c2) 40px,\n        var(--c1) 40px,\n        var(--c1) 50px,\n        var(--c3) 50px,\n        var(--c3) 80px\n    );\n\n    &.antialiasing {\n        &::after {\n            --offsetX: 0.4px;\n            --offsetY: -0.1px;\n            --dark-alpha: 0.3;\n            --light-alpha: 0.6;\n            --line-width: 0.6px;\n            content: '';\n            position: absolute;\n            top: var(--offsetY);\n            left: var(--offsetX);\n            width: 100%;\n            height: 100%;\n            opacity: 0.5;\n            background-image: repeating-linear-gradient(\n                var(--deg),\n                var(--c3),\n                transparent calc(0px + var(--line-width)),\n                transparent calc(10px - var(--line-width)),\n                var(--c2) 10px,\n                var(--c1) 10px,\n                transparent calc(10px + var(--line-width)),\n                transparent calc(40px - var(--line-width)),\n                var(--c1) 40px,\n                var(--c2) 40px,\n                transparent calc(40px + var(--line-width)),\n                transparent calc(50px - var(--line-width)),\n                var(--c3) 50px,\n                var(--c1) 50px,\n                transparent calc(50px + var(--line-width)),\n                transparent calc(80px - var(--line-width)),\n                var(--c1) 80px\n            );\n        }\n    }\n}\n",[1587],{"type":395,"tag":652,"props":1588,"children":1589},{"__ignoreMap":389},[1590,1598,1606,1614,1622,1629,1636,1644,1651,1659,1667,1675,1683,1691,1699,1708,1717,1725,1735,1744,1753,1762,1771,1780,1789,1798,1807,1816,1825,1834,1843,1852,1861,1870,1879,1888,1897,1906,1915,1924,1933,1942,1951,1960,1969,1978,1987,1996,2005,2014,2023,2032,2041,2050],{"type":395,"tag":997,"props":1591,"children":1592},{"class":999,"line":1000},[1593],{"type":395,"tag":997,"props":1594,"children":1595},{},[1596],{"type":401,"value":1597},".repeat-con {\n",{"type":395,"tag":997,"props":1599,"children":1600},{"class":999,"line":1009},[1601],{"type":395,"tag":997,"props":1602,"children":1603},{},[1604],{"type":401,"value":1605},"    --c1: #cd3f4f;\n",{"type":395,"tag":997,"props":1607,"children":1608},{"class":999,"line":1018},[1609],{"type":395,"tag":997,"props":1610,"children":1611},{},[1612],{"type":401,"value":1613},"    --c2: #e6a964;\n",{"type":395,"tag":997,"props":1615,"children":1616},{"class":999,"line":1027},[1617],{"type":395,"tag":997,"props":1618,"children":1619},{},[1620],{"type":401,"value":1621},"    --c3: #5996cc;\n",{"type":395,"tag":997,"props":1623,"children":1624},{"class":999,"line":1036},[1625],{"type":395,"tag":997,"props":1626,"children":1627},{},[1628],{"type":401,"value":1033},{"type":395,"tag":997,"props":1630,"children":1631},{"class":999,"line":1045},[1632],{"type":395,"tag":997,"props":1633,"children":1634},{},[1635],{"type":401,"value":1042},{"type":395,"tag":997,"props":1637,"children":1638},{"class":999,"line":1054},[1639],{"type":395,"tag":997,"props":1640,"children":1641},{},[1642],{"type":401,"value":1643},"    background-image: repeating-linear-gradient(\n",{"type":395,"tag":997,"props":1645,"children":1646},{"class":999,"line":1063},[1647],{"type":395,"tag":997,"props":1648,"children":1649},{},[1650],{"type":401,"value":1344},{"type":395,"tag":997,"props":1652,"children":1653},{"class":999,"line":1072},[1654],{"type":395,"tag":997,"props":1655,"children":1656},{},[1657],{"type":401,"value":1658},"        var(--c1),\n",{"type":395,"tag":997,"props":1660,"children":1661},{"class":999,"line":1081},[1662],{"type":395,"tag":997,"props":1663,"children":1664},{},[1665],{"type":401,"value":1666},"        var(--c1) 10px,\n",{"type":395,"tag":997,"props":1668,"children":1669},{"class":999,"line":1090},[1670],{"type":395,"tag":997,"props":1671,"children":1672},{},[1673],{"type":401,"value":1674},"        var(--c2) 10px,\n",{"type":395,"tag":997,"props":1676,"children":1677},{"class":999,"line":1253},[1678],{"type":395,"tag":997,"props":1679,"children":1680},{},[1681],{"type":401,"value":1682},"        var(--c2) 40px,\n",{"type":395,"tag":997,"props":1684,"children":1685},{"class":999,"line":1261},[1686],{"type":395,"tag":997,"props":1687,"children":1688},{},[1689],{"type":401,"value":1690},"        var(--c1) 40px,\n",{"type":395,"tag":997,"props":1692,"children":1693},{"class":999,"line":1269},[1694],{"type":395,"tag":997,"props":1695,"children":1696},{},[1697],{"type":401,"value":1698},"        var(--c1) 50px,\n",{"type":395,"tag":997,"props":1700,"children":1702},{"class":999,"line":1701},15,[1703],{"type":395,"tag":997,"props":1704,"children":1705},{},[1706],{"type":401,"value":1707},"        var(--c3) 50px,\n",{"type":395,"tag":997,"props":1709,"children":1711},{"class":999,"line":1710},16,[1712],{"type":395,"tag":997,"props":1713,"children":1714},{},[1715],{"type":401,"value":1716},"        var(--c3) 80px\n",{"type":395,"tag":997,"props":1718,"children":1720},{"class":999,"line":1719},17,[1721],{"type":395,"tag":997,"props":1722,"children":1723},{},[1724],{"type":401,"value":1087},{"type":395,"tag":997,"props":1726,"children":1728},{"class":999,"line":1727},18,[1729],{"type":395,"tag":997,"props":1730,"children":1732},{"emptyLinePlaceholder":1731},true,[1733],{"type":401,"value":1734},"\n",{"type":395,"tag":997,"props":1736,"children":1738},{"class":999,"line":1737},19,[1739],{"type":395,"tag":997,"props":1740,"children":1741},{},[1742],{"type":401,"value":1743},"    &.antialiasing {\n",{"type":395,"tag":997,"props":1745,"children":1747},{"class":999,"line":1746},20,[1748],{"type":395,"tag":997,"props":1749,"children":1750},{},[1751],{"type":401,"value":1752},"        &::after {\n",{"type":395,"tag":997,"props":1754,"children":1756},{"class":999,"line":1755},21,[1757],{"type":395,"tag":997,"props":1758,"children":1759},{},[1760],{"type":401,"value":1761},"            --offsetX: 0.4px;\n",{"type":395,"tag":997,"props":1763,"children":1765},{"class":999,"line":1764},22,[1766],{"type":395,"tag":997,"props":1767,"children":1768},{},[1769],{"type":401,"value":1770},"            --offsetY: -0.1px;\n",{"type":395,"tag":997,"props":1772,"children":1774},{"class":999,"line":1773},23,[1775],{"type":395,"tag":997,"props":1776,"children":1777},{},[1778],{"type":401,"value":1779},"            --dark-alpha: 0.3;\n",{"type":395,"tag":997,"props":1781,"children":1783},{"class":999,"line":1782},24,[1784],{"type":395,"tag":997,"props":1785,"children":1786},{},[1787],{"type":401,"value":1788},"            --light-alpha: 0.6;\n",{"type":395,"tag":997,"props":1790,"children":1792},{"class":999,"line":1791},25,[1793],{"type":395,"tag":997,"props":1794,"children":1795},{},[1796],{"type":401,"value":1797},"            --line-width: 0.6px;\n",{"type":395,"tag":997,"props":1799,"children":1801},{"class":999,"line":1800},26,[1802],{"type":395,"tag":997,"props":1803,"children":1804},{},[1805],{"type":401,"value":1806},"            content: '';\n",{"type":395,"tag":997,"props":1808,"children":1810},{"class":999,"line":1809},27,[1811],{"type":395,"tag":997,"props":1812,"children":1813},{},[1814],{"type":401,"value":1815},"            position: absolute;\n",{"type":395,"tag":997,"props":1817,"children":1819},{"class":999,"line":1818},28,[1820],{"type":395,"tag":997,"props":1821,"children":1822},{},[1823],{"type":401,"value":1824},"            top: var(--offsetY);\n",{"type":395,"tag":997,"props":1826,"children":1828},{"class":999,"line":1827},29,[1829],{"type":395,"tag":997,"props":1830,"children":1831},{},[1832],{"type":401,"value":1833},"            left: var(--offsetX);\n",{"type":395,"tag":997,"props":1835,"children":1837},{"class":999,"line":1836},30,[1838],{"type":395,"tag":997,"props":1839,"children":1840},{},[1841],{"type":401,"value":1842},"            width: 100%;\n",{"type":395,"tag":997,"props":1844,"children":1846},{"class":999,"line":1845},31,[1847],{"type":395,"tag":997,"props":1848,"children":1849},{},[1850],{"type":401,"value":1851},"            height: 100%;\n",{"type":395,"tag":997,"props":1853,"children":1855},{"class":999,"line":1854},32,[1856],{"type":395,"tag":997,"props":1857,"children":1858},{},[1859],{"type":401,"value":1860},"            opacity: 0.5;\n",{"type":395,"tag":997,"props":1862,"children":1864},{"class":999,"line":1863},33,[1865],{"type":395,"tag":997,"props":1866,"children":1867},{},[1868],{"type":401,"value":1869},"            background-image: repeating-linear-gradient(\n",{"type":395,"tag":997,"props":1871,"children":1873},{"class":999,"line":1872},34,[1874],{"type":395,"tag":997,"props":1875,"children":1876},{},[1877],{"type":401,"value":1878},"                var(--deg),\n",{"type":395,"tag":997,"props":1880,"children":1882},{"class":999,"line":1881},35,[1883],{"type":395,"tag":997,"props":1884,"children":1885},{},[1886],{"type":401,"value":1887},"                var(--c3),\n",{"type":395,"tag":997,"props":1889,"children":1891},{"class":999,"line":1890},36,[1892],{"type":395,"tag":997,"props":1893,"children":1894},{},[1895],{"type":401,"value":1896},"                transparent calc(0px + var(--line-width)),\n",{"type":395,"tag":997,"props":1898,"children":1900},{"class":999,"line":1899},37,[1901],{"type":395,"tag":997,"props":1902,"children":1903},{},[1904],{"type":401,"value":1905},"                transparent calc(10px - var(--line-width)),\n",{"type":395,"tag":997,"props":1907,"children":1909},{"class":999,"line":1908},38,[1910],{"type":395,"tag":997,"props":1911,"children":1912},{},[1913],{"type":401,"value":1914},"                var(--c2) 10px,\n",{"type":395,"tag":997,"props":1916,"children":1918},{"class":999,"line":1917},39,[1919],{"type":395,"tag":997,"props":1920,"children":1921},{},[1922],{"type":401,"value":1923},"                var(--c1) 10px,\n",{"type":395,"tag":997,"props":1925,"children":1927},{"class":999,"line":1926},40,[1928],{"type":395,"tag":997,"props":1929,"children":1930},{},[1931],{"type":401,"value":1932},"                transparent calc(10px + var(--line-width)),\n",{"type":395,"tag":997,"props":1934,"children":1936},{"class":999,"line":1935},41,[1937],{"type":395,"tag":997,"props":1938,"children":1939},{},[1940],{"type":401,"value":1941},"                transparent calc(40px - var(--line-width)),\n",{"type":395,"tag":997,"props":1943,"children":1945},{"class":999,"line":1944},42,[1946],{"type":395,"tag":997,"props":1947,"children":1948},{},[1949],{"type":401,"value":1950},"                var(--c1) 40px,\n",{"type":395,"tag":997,"props":1952,"children":1954},{"class":999,"line":1953},43,[1955],{"type":395,"tag":997,"props":1956,"children":1957},{},[1958],{"type":401,"value":1959},"                var(--c2) 40px,\n",{"type":395,"tag":997,"props":1961,"children":1963},{"class":999,"line":1962},44,[1964],{"type":395,"tag":997,"props":1965,"children":1966},{},[1967],{"type":401,"value":1968},"                transparent calc(40px + var(--line-width)),\n",{"type":395,"tag":997,"props":1970,"children":1972},{"class":999,"line":1971},45,[1973],{"type":395,"tag":997,"props":1974,"children":1975},{},[1976],{"type":401,"value":1977},"                transparent calc(50px - var(--line-width)),\n",{"type":395,"tag":997,"props":1979,"children":1981},{"class":999,"line":1980},46,[1982],{"type":395,"tag":997,"props":1983,"children":1984},{},[1985],{"type":401,"value":1986},"                var(--c3) 50px,\n",{"type":395,"tag":997,"props":1988,"children":1990},{"class":999,"line":1989},47,[1991],{"type":395,"tag":997,"props":1992,"children":1993},{},[1994],{"type":401,"value":1995},"                var(--c1) 50px,\n",{"type":395,"tag":997,"props":1997,"children":1999},{"class":999,"line":1998},48,[2000],{"type":395,"tag":997,"props":2001,"children":2002},{},[2003],{"type":401,"value":2004},"                transparent calc(50px + var(--line-width)),\n",{"type":395,"tag":997,"props":2006,"children":2008},{"class":999,"line":2007},49,[2009],{"type":395,"tag":997,"props":2010,"children":2011},{},[2012],{"type":401,"value":2013},"                transparent calc(80px - var(--line-width)),\n",{"type":395,"tag":997,"props":2015,"children":2017},{"class":999,"line":2016},50,[2018],{"type":395,"tag":997,"props":2019,"children":2020},{},[2021],{"type":401,"value":2022},"                var(--c1) 80px\n",{"type":395,"tag":997,"props":2024,"children":2026},{"class":999,"line":2025},51,[2027],{"type":395,"tag":997,"props":2028,"children":2029},{},[2030],{"type":401,"value":2031},"            );\n",{"type":395,"tag":997,"props":2033,"children":2035},{"class":999,"line":2034},52,[2036],{"type":395,"tag":997,"props":2037,"children":2038},{},[2039],{"type":401,"value":2040},"        }\n",{"type":395,"tag":997,"props":2042,"children":2044},{"class":999,"line":2043},53,[2045],{"type":395,"tag":997,"props":2046,"children":2047},{},[2048],{"type":401,"value":2049},"    }\n",{"type":395,"tag":997,"props":2051,"children":2053},{"class":999,"line":2052},54,[2054],{"type":395,"tag":997,"props":2055,"children":2056},{},[2057],{"type":401,"value":1096},{"type":395,"tag":403,"props":2059,"children":2060},{},[2061],{"type":401,"value":2062},"理论上，通过 SCSS 函数，能自动判断代码中线段的位置并生成填充抗锯齿的像素。无论是 LinearGradient、ConicGradient 还是 RadialGradient，都可以抗锯齿。不过我只是当试验品来写，所以没有写相应的工具函数。欢迎各位补充到 GitHub。",{"type":395,"tag":396,"props":2064,"children":2066},{"id":2065},"实践后记",[2067],{"type":401,"value":2068},"实践&后记",{"type":395,"tag":403,"props":2070,"children":2071},{},[2072],{"type":401,"value":2073},"在家闲着无事上 CodePen 玩耍时，看大触们用 BackgroundImage 画画，虽然好看，但狗牙令人心塞。于是起了尝试做一个抗锯齿 Demo 的想法（果然好康才是源动力）。\n本来这玩意儿会变成一个代码片段（类似 Gists，反正就是不那么重要的东西），但是前天看到掘金推荐的文章中有网友用 BackgroundImage 画优惠券的小圆圈缺角，这给了我启发，直接催生了《CSS 幻术》这篇博客。",{"type":395,"tag":403,"props":2075,"children":2076},{},[2077],{"type":401,"value":2078},"关于具体应用场景我必须说明清楚，POAA 只适用于低分辨率的显示器（严格来说是看 DPI，也就是分辨率和尺寸之比。就像我用的 2K 显示器，但是因为尺寸较大，所以能通过 POAA 取得效果），自然就排除了苹果电脑或者手机这些设备。POAA 只能作为一种技术补充，由于并不方便作实践的选择，所以我称之“幻术”。如果你需要在生产环境用浏览器绘图，那么肯定会选择优先使用 SVG 和 Canvas。选择 BackgroundImage 绘图，在我的印象里，只在需要追求时间和简便的情况下才会发生（就比如画优惠券）。这使得 BackgroundImage 地位尴尬，像是成了开发人员不会 SVG 时选择的替代品。不过... SVG 不应该是设计人员掌握的东西么？所以图形到底应该由谁来画，我不懂。",{"type":395,"tag":403,"props":2080,"children":2081},{},[2082,2084,2091],{"type":401,"value":2083},"最后，推荐大家来我的博客逛逛，在",{"type":395,"tag":715,"props":2085,"children":2088},{"href":2086,"rel":2087},"http://www.lionad.art",[719],[2089],{"type":401,"value":2090},"我的博客",{"type":401,"value":2092},"里你可以通过操纵杆和控制台亲自体验 POAA 的神奇之处。",{"type":395,"tag":403,"props":2094,"children":2095},{},[2096,2098],{"type":401,"value":2097},"啊，写这篇文章我起码喝了 3 瓶肥宅快乐水。我肯定又变肥宅了哭。都看到这里了，不点赞三连安慰我一下再走么？",{"type":395,"tag":490,"props":2099,"children":2100},{},[2101],{"type":401,"value":2102},"/(ㄒ o ㄒ)/~~",{"type":395,"tag":396,"props":2104,"children":2106},{"id":2105},"彩蛋脑放",[2107,2109],{"type":401,"value":2108},"彩蛋：",{"type":395,"tag":460,"props":2110,"children":2111},{},[2112],{"type":401,"value":2113},"脑放",{"type":395,"tag":403,"props":2115,"children":2116},{},[2117],{"type":401,"value":2118},"好吧，这里想介绍的不是“纯脑放”，而是一种先将图片变模糊以平滑图形边缘，再锐化图片强化边缘的思路。日常生活中使用 Photoshop 等工具处理图片经常会用到这种方法；有时电脑游戏画面增强也是这样处理的。",{"type":395,"tag":403,"props":2120,"children":2121},{},[2122],{"type":401,"value":2123},"先模糊，再锐化，两个步骤不能反过来，同时参数的调节也很重要（很玄学）。我在自己的博客中进行实验时，以下是我的尝试的方法：",{"type":395,"tag":409,"props":2125,"children":2126},{},[2127,2132],{"type":395,"tag":413,"props":2128,"children":2129},{},[2130],{"type":401,"value":2131},"CSS Filter 串联 SVG 自定义滤镜",{"type":395,"tag":413,"props":2133,"children":2134},{},[2135],{"type":401,"value":2136},"CSS Filter 串联 Blur 和 Constract 滤镜",{"type":395,"tag":403,"props":2138,"children":2139},{},[2140],{"type":401,"value":2141},"不过很遗憾，水平有限，始终没能调出想要的效果，所以直接结案了，下一题。",{"type":395,"tag":2143,"props":2144,"children":2145},"article-a200604-blur",{},[2146,2151,2160,2165],{"type":395,"tag":396,"props":2147,"children":2149},{"id":2148},"阅读更多",[2150],{"type":401,"value":2148},{"type":395,"tag":403,"props":2152,"children":2153},{},[2154,2156],{"type":401,"value":2155},"希望本文能对你有所帮助，如果文中出现了不流畅或理解错误的地方也麻烦各位评论指出。",{"type":395,"tag":2157,"props":2158,"children":2159},"jj",{},[],{"type":395,"tag":403,"props":2161,"children":2162},{},[2163],{"type":401,"value":2164},"若有任何疑问，或想深入探讨，可以给我发邮件：dGFuZ25hZEBxcS5jb20=",{"type":395,"tag":409,"props":2166,"children":2167},{},[2168,2178,2188,2198],{"type":395,"tag":413,"props":2169,"children":2170},{},[2171],{"type":395,"tag":715,"props":2172,"children":2175},{"href":2173,"rel":2174},"https://zhuanlan.zhihu.com/p/123642175",[719],[2176],{"type":401,"value":2177},"DLSS 2.0-基于深度学习的实时渲染图像重建",{"type":395,"tag":413,"props":2179,"children":2180},{},[2181],{"type":395,"tag":715,"props":2182,"children":2185},{"href":2183,"rel":2184},"https://usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/",[719],[2186],{"type":401,"value":2187},"Please Stop “Fixing” Font Smoothing",{"type":395,"tag":413,"props":2189,"children":2190},{},[2191],{"type":395,"tag":715,"props":2192,"children":2195},{"href":2193,"rel":2194},"https://www.cnblogs.com/ranyonsue/p/8296983",[719],[2196],{"type":401,"value":2197},"用 CSS 开启硬件加速来提高网站性能",{"type":395,"tag":413,"props":2199,"children":2200},{},[2201],{"type":395,"tag":715,"props":2202,"children":2205},{"href":2203,"rel":2204},"http://blog.simonrodriguez.fr/articles/30-07-2016_implementing_fxaa",[719],[2206],{"type":401,"value":954},{"type":395,"tag":2208,"props":2209,"children":2210},"style",{},[2211],{"type":401,"value":2212},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":389,"searchDepth":1009,"depth":1009,"links":2214},[2215,2216,2220],{"id":398,"depth":1009,"text":398},{"id":472,"depth":1009,"text":472,"children":2217},[2218,2219],{"id":478,"depth":1018,"text":478},{"id":565,"depth":1018,"text":565},{"id":631,"depth":1009,"text":634,"children":2221},[2222,2223],{"id":642,"depth":1018,"text":645},{"id":793,"depth":1018,"text":796},"markdown","content:2.articles:9.css-poaa.md","content","2.articles/9.css-poaa.md","md",[2230,2232],{"_path":64,"title":63,"description":2231},"上一篇讲 anysort 的文章说到因网易云音乐的歌单排序功能较弱，我们自己实现的用来给歌单自定义排序的排序库的思路。这篇文章在排序库的基础上，介绍了其 TypeScript 类型实现。",{"_path":70,"title":69,"description":2233},"本文介绍了使用CSS判断鼠标进入区域方向的原理，并且在codepen笑脸demo的基础上实现了一个眼睛跟随鼠标位置进行转动的效果。",1710257706831]