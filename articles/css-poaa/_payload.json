[{"data":1,"prerenderedAt":2231},["Reactive",2],{"navigation":3,"/articles/css-poaa":383,"/articles/css-poaa-surround":2226},[4,32,80,96,123,129,135,366,372,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"图片模糊","/gists/blur",{"title":148,"_path":149},"渲染相关笔记","/gists/c4d",{"title":151,"_path":152},"CDN 问题记录","/gists/cdn",{"title":154,"_path":155},"消毒剂","/gists/cleaner",{"title":157,"_path":158},"Windows Command","/gists/cmd",{"title":160,"_path":161},"Command","/gists/command",{"title":163,"_path":164},"复杂科学","/gists/complexity-science",{"title":166,"_path":167},"宇宙","/gists/cosmos",{"title":169,"_path":170},"C++","/gists/cpp",{"title":172,"_path":173},"Data Structure","/gists/data-structure",{"title":175,"_path":176},"DEPRESSION","/gists/depression",{"title":178,"_path":179},"设计模式","/gists/design-patterns",{"title":181,"_path":182},"Developer Experience","/gists/developer-experience",{"title":184,"_path":185},"Device Metrics","/gists/device-metrix",{"title":187,"_path":188},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":190,"_path":191},"正则表达式","/gists/eegex",{"title":193,"_path":194},"Emoji","/gists/emoji",{"title":196,"_path":197},"工程","/gists/engineering",{"title":199,"_path":200},"熵","/gists/entropy",{"title":202,"_path":203},"Environment","/gists/environment",{"title":205,"_path":206},"Erlang","/gists/erlang",{"title":208,"_path":209},"逃离塔克夫","/gists/escape-from-tarkov",{"title":211,"_path":212},"ESNext (ES6-ES11)","/gists/esnext",{"title":214,"_path":215},"Eval！","/gists/eval",{"title":217,"_path":218},"Flutter","/gists/flutter",{"title":220,"_path":221},"字体","/gists/font",{"title":223,"_path":224},"JS 函数式编程","/gists/functional",{"title":226,"_path":227},"Google C++ Standard","/gists/google-cpp-standard",{"title":229,"_path":230},"双向链接完全体","/gists/graph",{"title":232,"_path":233},"Hardwares","/gists/hardwares",{"title":235,"_path":236},"哈希冲突","/gists/hash-collision",{"title":238,"_path":239},"信息设计","/gists/information-design",{"title":241,"_path":242},"InstantPage","/gists/instant.page",{"title":244,"_path":245},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":247,"_path":248},"KVStore","/gists/key-value-db",{"title":250,"_path":251},"Kubernetes","/gists/kubernetes",{"title":253,"_path":254},"Makefile","/gists/makefile",{"title":256,"_path":257},"Markdown Inline Style","/gists/markdown-nice",{"title":259,"_path":260},"小程序","/gists/miniapp",{"title":262,"_path":263},"减小页面快照体积","/gists/minify-html",{"title":265,"_path":266},"mklink","/gists/mklink",{"title":268,"_path":269},"Mock","/gists/mock",{"title":271,"_path":272},"多端应用","/gists/multy-end-app",{"title":274,"_path":275},"神经科学","/gists/neuroscience",{"title":277,"_path":278},"OO","/gists/oo",{"title":280,"_path":281},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":283,"_path":284},"人物","/gists/person",{"title":286,"_path":287},"PInvoke","/gists/pinvoke",{"title":289,"_path":290},"像素","/gists/pixel",{"title":292,"_path":293},"PowerShell","/gists/powershell",{"title":295,"_path":296},"量子","/gists/quantum",{"title":298,"_path":299},"保持好奇心","/gists/questions",{"title":301,"_path":302},"React Native","/gists/react-native",{"title":304,"_path":305},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":307,"_path":308},"SEO","/gists/seo",{"title":310,"_path":311},"Shader","/gists/shader",{"title":313,"_path":314},"Shape Up","/gists/shape-up",{"title":316,"_path":317},"睡觉","/gists/sleep",{"title":319,"_path":320},"States","/gists/states",{"title":322,"_path":323},"Storage","/gists/storage",{"title":325,"_path":326},"音视频流处理","/gists/stream-cli",{"title":328,"_path":329},"Symbol","/gists/symbol",{"title":331,"_path":332},"系统论","/gists/systems-theory",{"title":334,"_path":335},"Taro","/gists/taro",{"title":337,"_path":338},"任务切片","/gists/task-slice",{"title":340,"_path":341},"技术偏好","/gists/tech-dudge",{"title":343,"_path":344},"Untitled","/gists/untitled",{"title":346,"_path":347},"可变字体","/gists/variable-font",{"title":349,"_path":350},"视觉错觉","/gists/visual-illusion",{"title":352,"_path":353},"SS(SSR)","/gists/vpn",{"title":355,"_path":356},"VS Code 插件开发","/gists/vscode-plugin",{"title":358,"_path":359},"Web Components","/gists/web-components",{"title":361,"_path":362},"Windows","/gists/windows",{"title":364,"_path":365},"查缺补漏","/gists/wrong",{"title":367,"_path":368,"children":369},"代码笔记 / Gists","/source-code",[370],{"title":371,"_path":368},"🚄 代码笔记",{"title":373,"_path":374,"children":375},"我 / Abount","/hire",[376],{"title":377,"_path":374},"📬 技术简历",{"title":379,"_path":380,"children":381},"todo","/todo",[382],{"title":379,"_path":380},{"_path":67,"_dir":384,"_draft":385,"_partial":385,"_locale":386,"title":66,"description":387,"body":388,"_type":2221,"_id":2222,"_source":2223,"_file":2224,"_extension":2225},"articles",false,"","传统网页的渲染是基于像素的，所以常出现锯齿。本文简单介绍了锯齿出现的成因，以及CSS中相关锯齿处理的字体平滑、图片渲染属性，并通过实践创造了一种类似FXAA原理的background背景图案抗锯齿技术poaa（pixel-offset-anti-aliasing）。",{"type":389,"children":390,"toc":2210},"root",[391,399,405,420,425,462,467,472,478,483,492,497,506,511,519,527,539,547,552,560,565,570,578,583,591,596,604,609,617,622,626,632,637,643,680,685,693,698,706,722,763,771,783,788,794,799,2204],{"type":392,"tag":393,"props":394,"children":396},"element","h2",{"id":395},"前言",[397],{"type":398,"value":395},"text",{"type":392,"tag":400,"props":401,"children":402},"p",{},[403],{"type":398,"value":404},"传统网页的呈现是基于像素单位的，所以图片不能和 SVG 一样进行任意尺寸缩放后还保持边缘平整。也就是说，放大像素逻辑的图片，必然导致可视质量下降（信息失真）。所以我们往往会使用技术手段去规避失真，如：",{"type":392,"tag":406,"props":407,"children":408},"ul",{},[409,415],{"type":392,"tag":410,"props":411,"children":412},"li",{},[413],{"type":398,"value":414},"使用 SVG 替换位图",{"type":392,"tag":410,"props":416,"children":417},{},[418],{"type":398,"value":419},"使用矢量字体（如 TrueType 字体）替换位图字体",{"type":392,"tag":400,"props":421,"children":422},{},[423],{"type":398,"value":424},"如果不得已，被迫进行像素操作，我们也有多种手段用来矫正失真：",{"type":392,"tag":406,"props":426,"children":427},{},[428,433,438,443,448,453],{"type":392,"tag":410,"props":429,"children":430},{},[431],{"type":398,"value":432},"使用 CSS Image-Rendering 属性调整图像缩放时的采样算法",{"type":392,"tag":410,"props":434,"children":435},{},[436],{"type":398,"value":437},"使用 CSS Font-Smoothing 属性平滑字体渲染",{"type":392,"tag":410,"props":439,"children":440},{},[441],{"type":398,"value":442},"绘图时使用 Canvas 的抗锯齿 API",{"type":392,"tag":410,"props":444,"children":445},{},[446],{"type":398,"value":447},"将元素尺寸放大，然后再使用 Transform 将布局尺寸还原",{"type":392,"tag":410,"props":449,"children":450},{},[451],{"type":398,"value":452},"某些特殊情况下，可以使用浏览器硬件加速来平滑锯齿",{"type":392,"tag":410,"props":454,"children":455},{},[456],{"type":392,"tag":457,"props":458,"children":459},"del",{},[460],{"type":398,"value":461},"将图片模糊处理迫使用户开启钛合金脑放",{"type":392,"tag":400,"props":463,"children":464},{},[465],{"type":398,"value":466},"这篇文章将会简单的提及以上几点，并介绍一种通过 CSS BackgroundImage 抗锯齿的全新思路（我称之为 Pixel-Offset Anti-Aliasing）。要提前说明的是，当下手机的屏幕分辨率已经相当高，同时处理器性能却十分薄弱，这直接导致我们没有在手机端浏览器讨论抗锯齿的必要。本文所述几乎都局限于桌面端的大显示器（我祈祷你不是在用 8K 分辨率的显示器看这篇博客）。",{"type":392,"tag":393,"props":468,"children":470},{"id":469},"抗锯齿及相关技术",[471],{"type":398,"value":469},{"type":392,"tag":473,"props":474,"children":476},"h3",{"id":475},"抗锯齿的形成",[477],{"type":398,"value":475},{"type":392,"tag":400,"props":479,"children":480},{},[481],{"type":398,"value":482},"信息失真（Aliasing）和图像锯齿不是一码事儿，但是对于游戏玩家来说，几乎可以把两者划上等号。要使用 CSS 抗锯齿，我们不得不先提及锯齿的形成。",{"type":392,"tag":400,"props":484,"children":485},{},[486],{"type":392,"tag":487,"props":488,"children":489},"strong",{},[490],{"type":398,"value":491},"为什么会有锯齿？",{"type":392,"tag":400,"props":493,"children":494},{},[495],{"type":398,"value":496},"我们的眼睛能对物体的形状进行感知，意识到到一条实际上并不存在的“线条”。见下图，我们能感受到线条，虽然看起来不太平整：",{"type":392,"tag":400,"props":498,"children":499},{},[500],{"type":392,"tag":501,"props":502,"children":505},"img",{"alt":503,"src":504},"Aliasing","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Aliasing.png",[],{"type":392,"tag":400,"props":507,"children":508},{},[509],{"type":398,"value":510},"下面这幅图中，带箭头的线代表我们感知的线段，其余线段相交的网格代表像素网格。从上图可以发现，只要是带箭头的线经过的地方，就会被黄颜色填充。不过理想中的线段是完美的，它完全平滑的。把不定方向的平滑线段，映射到像素排列的低 DPI 的屏幕上，就会出现信息丢失的情况。像素颗粒越大，信息丢失情况就越严重（以下就简称为锯齿）。",{"type":392,"tag":400,"props":512,"children":513},{},[514],{"type":392,"tag":501,"props":515,"children":518},{"alt":516,"src":517},"Aliasing-LineDirection","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Aliasing-LineDirection.png",[],{"type":392,"tag":400,"props":520,"children":521},{},[522],{"type":392,"tag":487,"props":523,"children":524},{},[525],{"type":398,"value":526},"怎么样看起来才没有锯齿？",{"type":392,"tag":400,"props":528,"children":529},{},[530,532,537],{"type":398,"value":531},"这里我画了一张图，可以先仔细观察，然后再站在离显示器稍微远一些的地方",{"type":392,"tag":487,"props":533,"children":534},{},[535],{"type":398,"value":536},"眯起眼睛",{"type":398,"value":538},"看：",{"type":392,"tag":400,"props":540,"children":541},{},[542],{"type":392,"tag":501,"props":543,"children":546},{"alt":544,"src":545},"AntiAliasingPaint","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/AntiAliasingPaint.png",[],{"type":392,"tag":400,"props":548,"children":549},{},[550],{"type":398,"value":551},"在像素周围，我用黄色涂鸦将丢失的信息稍加补充。图中黄色涂鸦的大小代表了像素透明度。这里有一张抗锯齿的成品图片，可以看处图形的边缘被填充了有透明度的像素：",{"type":392,"tag":400,"props":553,"children":554},{},[555],{"type":392,"tag":501,"props":556,"children":559},{"alt":557,"src":558},"AntiAliasingPic","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/AntiAliasingPic.png",[],{"type":392,"tag":473,"props":561,"children":563},{"id":562},"常见抗锯齿技术",[564],{"type":398,"value":562},{"type":392,"tag":400,"props":566,"children":567},{},[568],{"type":398,"value":569},"在音频领域，我们可以通过高质量的播放器和无损音频减少传入耳朵的信息失真。但在游戏领域，普通玩家不可能在家里准备了 8K 显示器。伴随显示器分辨率从 720p 到 1080p 发展的，是几种同样跟随游戏业界发展而成长起来的抗锯齿技术。",{"type":392,"tag":406,"props":571,"children":572},{},[573],{"type":392,"tag":410,"props":574,"children":575},{},[576],{"type":398,"value":577},"SSAA（Super Sampling Anti-Aliasing）",{"type":392,"tag":400,"props":579,"children":580},{},[581],{"type":398,"value":582},"超级采样抗锯齿，它会把当前画面渲染的分辨率成倍提高，比如 1024×768 的图形开启 2 倍 SSAA 后，显卡实际运算就变成了 2048×1536，这之后，再降采样，将多个像素融合，映射回显示器的单个像素。像素融合能使颜色过渡更自然，看起来没有明显的毛刺。不过，因为硬件的运算增加（指数级），可以想象它会消耗极高的性能。",{"type":392,"tag":406,"props":584,"children":585},{},[586],{"type":392,"tag":410,"props":587,"children":588},{},[589],{"type":398,"value":590},"MSAA（Multi Sampling Anti-Aliasing）",{"type":392,"tag":400,"props":592,"children":593},{},[594],{"type":398,"value":595},"多重采样抗锯齿，它针对特定缓存区域的数据进行多重采样——可以简单理解为对多边形的边缘进行多重采样。性能消耗较高，但效果也不错。",{"type":392,"tag":406,"props":597,"children":598},{},[599],{"type":392,"tag":410,"props":600,"children":601},{},[602],{"type":398,"value":603},"FXAA（Fast Approximate Anti-Aliasing）",{"type":392,"tag":400,"props":605,"children":606},{},[607],{"type":398,"value":608},"快速近似抗锯齿，它找到画面中所有图形的边缘并进行平滑处理。尽管很多图形边缘并不对应游戏实际建模的边缘（如材质和纹理），但 FXAA 性能消耗小，性价比高，不失为一种抗锯齿的常用选择。",{"type":392,"tag":406,"props":610,"children":611},{},[612],{"type":392,"tag":410,"props":613,"children":614},{},[615],{"type":398,"value":616},"DLSS（Deep Learning Super Sampling）",{"type":392,"tag":400,"props":618,"children":619},{},[620],{"type":398,"value":621},"深度学习超级采样，它通过硬件加速的深度学习算法，根据几何、着色、时域多个方面的数据（说人话就是根据过往帧、形状、像素动量等数据）对实时渲染的低分辨率图像重建多倍超级采样结果。相对于传统渲染，不仅能极大提高画质，还能极大提高帧率。",{"type":392,"tag":623,"props":624,"children":625},"hr",{},[],{"type":392,"tag":393,"props":627,"children":629},{"id":628},"css-抗锯齿技术",[630],{"type":398,"value":631},"CSS 抗锯齿技术",{"type":392,"tag":400,"props":633,"children":634},{},[635],{"type":398,"value":636},"以下，我们提及几种常见的抗锯齿技术。",{"type":392,"tag":473,"props":638,"children":640},{"id":639},"css-font-smoothing",[641],{"type":398,"value":642},"CSS Font-Smoothing",{"type":392,"tag":400,"props":644,"children":645},{},[646,648,655,657,663,665,671,672,678],{"type":398,"value":647},"字体平滑属性属于早期的 CSS 规范，后来因为种种原因又被移除了。不过现在仍可以通过前缀属性兼容（如 ",{"type":392,"tag":649,"props":650,"children":652},"code",{"className":651},[],[653],{"type":398,"value":654},"-webkit-font-smoothing",{"type":398,"value":656},"）。一般来说，字体平滑有三个值可选，",{"type":392,"tag":649,"props":658,"children":660},{"className":659},[],[661],{"type":398,"value":662},"none",{"type":398,"value":664},"、",{"type":392,"tag":649,"props":666,"children":668},{"className":667},[],[669],{"type":398,"value":670},"subpixel-antialiased",{"type":398,"value":664},{"type":392,"tag":649,"props":673,"children":675},{"className":674},[],[676],{"type":398,"value":677},"antialiased",{"type":398,"value":679},"。值的作用正如其名，分别是无抗锯齿，亚像素级抗锯齿和（全像素）抗锯齿。",{"type":392,"tag":400,"props":681,"children":682},{},[683],{"type":398,"value":684},"一般来说，屏幕上的每一个像素点，都是由三原色条纹（可能如红、绿、蓝三个发光点）组合而成。亚像素级抗锯齿，意味着字体渲染时，将以亚像素（如红光）为单位。不发光的像素显示黑色，其余像素在抗锯齿处理时则会显示暗色，见下图：",{"type":392,"tag":400,"props":686,"children":687},{},[688],{"type":392,"tag":501,"props":689,"children":692},{"alt":690,"src":691},"亚像素抗锯齿的小写字母“e”","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/subpixels.jpg",[],{"type":392,"tag":400,"props":694,"children":695},{},[696],{"type":398,"value":697},"全像素抗锯齿，则以整颗像素（包含红蓝绿三个条纹）为单位渲染字体。抗锯齿处理时，字体若超出了一个像素的单位，会以一颗与之相邻的透明暗色像素作平滑，见下图：",{"type":392,"tag":400,"props":699,"children":700},{},[701],{"type":392,"tag":501,"props":702,"children":705},{"alt":703,"src":704},"抗锯齿后的“后浪”中的“后”字","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/fullpixels.jpg",[],{"type":392,"tag":400,"props":707,"children":708},{},[709,711,720],{"type":398,"value":710},"“后浪”的“后”字，中间那一横，实际的宽度要小于一个像素，所以也用透明暗色渲染。除了单字，在 ",{"type":392,"tag":712,"props":713,"children":717},"a",{"href":714,"rel":715},"http://maxvoltar.com/archive/-WebKit-font-smoothing",[716],"nofollow",[718],{"type":398,"value":719},"@MAXVOLTAR",{"type":398,"value":721}," 这篇博客，有英文排版的示例图片，以下直接引用了：",{"type":392,"tag":406,"props":723,"children":724},{},[725,738,750],{"type":392,"tag":410,"props":726,"children":727},{},[728,729,733],{"type":398,"value":662},{"type":392,"tag":730,"props":731,"children":732},"br",{},[],{"type":392,"tag":501,"props":734,"children":737},{"alt":735,"src":736},"font-smooth-none","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/font-smooth-none.png",[],{"type":392,"tag":410,"props":739,"children":740},{},[741,742,745],{"type":398,"value":670},{"type":392,"tag":730,"props":743,"children":744},{},[],{"type":392,"tag":501,"props":746,"children":749},{"alt":747,"src":748},"font-smooth-subpixel","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/font-smooth-subpixel.png",[],{"type":392,"tag":410,"props":751,"children":752},{},[753,755,758],{"type":398,"value":754},"antiliasing",{"type":392,"tag":730,"props":756,"children":757},{},[],{"type":392,"tag":501,"props":759,"children":762},{"alt":760,"src":761},"font-smooth-antiliasing","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/font-smooth-antiliasing.png",[],{"type":392,"tag":400,"props":764,"children":765},{},[766],{"type":392,"tag":487,"props":767,"children":768},{},[769],{"type":398,"value":770},"那三种值应该如何选择呢？",{"type":392,"tag":400,"props":772,"children":773},{},[774,776,781],{"type":398,"value":775},"我的建议是，仅仅了解渲染机制和呈现方式就行。",{"type":392,"tag":487,"props":777,"children":778},{},[779],{"type":398,"value":780},"像素抗锯齿会使字体呈现稍细，而亚像素级抗锯齿则使字体呈现过粗。黑色背景下则反之",{"type":398,"value":782},"。倒不必因为知道它就必须使用上——这三种方式有各自的优点和缺陷。一般来说，扔掉这个属性，让浏览器自行判断字体渲染的方式就可以了。如果你引入了特殊字体（比如印刷字体）进行平滑处理。（我相信中文的网页版面下，能自由发挥的范围应该很有限。）",{"type":392,"tag":400,"props":784,"children":785},{},[786],{"type":398,"value":787},"附，感兴趣的话，文末我留了相关链接，可以再查阅。",{"type":392,"tag":473,"props":789,"children":791},{"id":790},"css-image-rendering",[792],{"type":398,"value":793},"CSS Image-Rendering",{"type":392,"tag":400,"props":795,"children":796},{},[797],{"type":398,"value":798},"Image-Rendering 属性用于设置图像缩放算法，这个属性有几种常见的值。见下组件：",{"type":392,"tag":800,"props":801,"children":802},"article-a200604-image-render-property",{},[803,808],{"type":392,"tag":400,"props":804,"children":805},{},[806],{"type":398,"value":807},"可以发现，Pixelated 值设置之后，浏览器不会对边缘进行平滑处理，而 Auto 则对整幅图像进行柔和处理。也就是说，使用 Transform Scale 放大图片，浏览器会应用默认的平滑缩放算法（可能是双线性插值之类的）。",{"type":392,"tag":809,"props":810,"children":815},"article-a200604-image-render",{"process":811,"property":812,"src":813,":value":814},"scale","image-rendering","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200319/2020-03-19-15-39-43.png","['auto', 'pixelated']",[816,821],{"type":392,"tag":400,"props":817,"children":818},{},[819],{"type":398,"value":820},"那可不可以对图片先放大数倍，再缩小还原为实际尺寸呢？以下是试验结果：",{"type":392,"tag":809,"props":822,"children":826},{"process":823,"property":812,"src":813,":compare":824,":value":825},"enlarge-and-shrink","true","[\n     { value: 'auto', title: 'Auto, Normal' }, \n     { value: 'auto', title: 'Auto, Scale(100) Scale(0.01)' }\n ]",[827,832,840,852,857,862],{"type":392,"tag":400,"props":828,"children":829},{},[830],{"type":398,"value":831},"如果你不能运行上面那个组件的话，这里有 GIF 效果：",{"type":392,"tag":400,"props":833,"children":834},{},[835],{"type":392,"tag":501,"props":836,"children":839},{"alt":837,"src":838},"Scale","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Scale.gif",[],{"type":392,"tag":400,"props":841,"children":842},{},[843,845,850],{"type":398,"value":844},"不知道是浏览器对多个 Scale 串联进行了优化，还是使用了某种不损失图像信息的采样算法，总之",{"type":392,"tag":487,"props":846,"children":847},{},[848],{"type":398,"value":849},"不改变图片尺寸又想使用平滑图片是行不通的",{"type":398,"value":851},"。",{"type":392,"tag":473,"props":853,"children":855},{"id":854},"硬件加速抗锯齿",[856],{"type":398,"value":854},{"type":392,"tag":400,"props":858,"children":859},{},[860],{"type":398,"value":861},"关于使用浏览器的硬件加速抗锯齿功能，是我在试验 PXAA 时的偶得（不过已经有博客介绍过了）。当元素通过 Transform:Rotate 旋转之后，如果此元素是被 GPU 渲染的，那么会应用浏览器对应 GPU 的抗锯齿属性——比方说你用 GTX 1060ti 运行浏览器，那么相关配置就能在英伟达控制面板中找到（不过这有相当程度是我的猜测，待验证）。听起来好像有点复杂，看下面例子就一目了然了：",{"type":392,"tag":863,"props":864,"children":865},"article-a200604-gpu",{},[866,871,879,891,896,902,907,913],{"type":392,"tag":400,"props":867,"children":868},{},[869],{"type":398,"value":870},"如果你不能运行上面那个组件的话，这里有图片效果：",{"type":392,"tag":400,"props":872,"children":873},{},[874],{"type":392,"tag":501,"props":875,"children":878},{"alt":876,"src":877},"Rotate&GPU","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Rotate&GPU.gif",[],{"type":392,"tag":400,"props":880,"children":881},{},[882,884,889],{"type":398,"value":883},"当元素旋转，并应用硬件加速（TranslateZ）之后，渲染出来的边缘会被平滑处理。但是如果",{"type":392,"tag":487,"props":885,"children":886},{},[887],{"type":398,"value":888},"仅仅启用硬件加速或是单使用旋转，不能达到效果",{"type":398,"value":890},"。经过我的测试，在 Windows 端 Chrome 内核的浏览器，这种抗锯齿方式能得到一些体验——你甚至可以通过仅旋转 0.1° 来柔和边缘（虽然不明显）。",{"type":392,"tag":400,"props":892,"children":893},{},[894],{"type":398,"value":895},"CSS 相关的抗锯齿技术就到此为止，下一节开始是新的思路。",{"type":392,"tag":393,"props":897,"children":899},{"id":898},"pixel-offset-anti-aliasing",[900],{"type":398,"value":901},"Pixel-Offset Anti-Aliasing",{"type":392,"tag":400,"props":903,"children":904},{},[905],{"type":398,"value":906},"像素偏移抗锯齿（下简称 POAA），这是一种很神奇的方法，貌似网上还没人分享过，不过效果确实挺惊艳的。我不知道具体原理是什么，但是它就是有效（It works!）。这里有两副使用 BackgroundImage 属性绘制的图像，我先展示一下应用 POAA 后的结果吧：",{"type":392,"tag":908,"props":909,"children":911},"h4",{"id":910},"效果展示",[912],{"type":398,"value":910},{"type":392,"tag":914,"props":915,"children":916},"article-a200604-offset",{},[917,922,930,935,940,954,962,970,975,983,1094,1099,1122,1127,1133,1138,1143,1156,1161,1272,1277,1285,1290,1298,1303,1311,1411,1416,1424,1516,1521,1526,1534,1539,1544,1552,1557,1575,1580,2055,2060,2066,2071,2076,2090,2100,2111,2116,2121,2134,2139],{"type":392,"tag":400,"props":918,"children":919},{},[920],{"type":398,"value":921},"如果上面那些组件不能运行的话，我准备了张 GIF 图片：",{"type":392,"tag":400,"props":923,"children":924},{},[925],{"type":392,"tag":501,"props":926,"children":929},{"alt":927,"src":928},"POAA-1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/POAA-1.gif",[],{"type":392,"tag":908,"props":931,"children":933},{"id":932},"原理",[934],{"type":398,"value":932},{"type":392,"tag":400,"props":936,"children":937},{},[938],{"type":398,"value":939},"常见的游戏抗锯齿技术是建立在游戏渲染前或后，从模型到光照多个步骤产生的数据的基础上的，所以我们可以根据帧历史的内容、像素动量、提高采样等方法中进行筛选信息并重建画面。但浏览器给用户展现的内容，可以说就是渲染后的东西。我们能够参与浏览器内部渲染的方式貌似几乎没有（以后可能会有 CSS Houdini）。比方说使用 BackgroundImage 绘图展现在你的屏幕上的这些像素，你无法参与渲染改变它们，你也没有办法用预渲染数据告诉浏览器“你应该这样做”。不过好消息是，程序员都是坚信任何问题都能被解决的人，这里我们换种思路。",{"type":392,"tag":400,"props":941,"children":942},{},[943,945,952],{"type":398,"value":944},"我想你应该记得开篇我们提及过 FXAA。FXAA 可以简单概括为边缘寻找->重建边缘这两个步骤（并不专业，也许还会有矫正之类的我不清楚）。在",{"type":392,"tag":712,"props":946,"children":949},{"href":947,"rel":948},"http://blog.simonrodriguez.fr/articles/30-07-2016_implementing_fxaa.html",[716],[950],{"type":398,"value":951},"Implementing FXAA",{"type":398,"value":953},"这篇博客中，解释了 FXAA 具体是如何运作的。对于一个已经被找到的图形边缘，经过 FXAA 处理后会变成这样，见下两幅图：",{"type":392,"tag":400,"props":955,"children":956},{},[957],{"type":392,"tag":501,"props":958,"children":961},{"alt":959,"src":960},"RawImage","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/exp1.png",[],{"type":392,"tag":400,"props":963,"children":964},{},[965],{"type":392,"tag":501,"props":966,"children":969},{"alt":967,"src":968},"After FXAA","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/exp2.png",[],{"type":392,"tag":400,"props":971,"children":972},{},[973],{"type":398,"value":974},"给 FXAA 输入源图像，就能通过颜色或对比度确认物体的边缘，并通过改变像素周围的点的透明度，让整体看起来得到平滑。仔细想想，使用 BackgroundImage 绘图时，其实我们已经知道边缘在哪儿了。边缘不藏在国王的帽子里，它就在我们写的代码中。比方，上一小节那个圆形渐变图形的源码是这样的：",{"type":392,"tag":400,"props":976,"children":977},{},[978],{"type":392,"tag":501,"props":979,"children":982},{"alt":980,"src":981},"Radial","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Radial.png",[],{"type":392,"tag":984,"props":985,"children":989},"pre",{"className":986,"code":987,"language":988,"meta":386,"style":386},"language-SCSS shiki shiki-themes material-theme-lighter github-light github-dark monokai",".circle-con {\n    $c1: #cd3f4f;\n    $c2: #e6a964;\n    position: relative;\n    height: 300px;\n    background-image: repeating-radial-gradient(\n        circle at 0% 50%,\n        $c1 0,\n        $c2 50px\n    );\n}\n","SCSS",[990],{"type":392,"tag":649,"props":991,"children":992},{"__ignoreMap":386},[993,1004,1013,1022,1031,1040,1049,1058,1067,1076,1085],{"type":392,"tag":994,"props":995,"children":998},"span",{"class":996,"line":997},"line",1,[999],{"type":392,"tag":994,"props":1000,"children":1001},{},[1002],{"type":398,"value":1003},".circle-con {\n",{"type":392,"tag":994,"props":1005,"children":1007},{"class":996,"line":1006},2,[1008],{"type":392,"tag":994,"props":1009,"children":1010},{},[1011],{"type":398,"value":1012},"    $c1: #cd3f4f;\n",{"type":392,"tag":994,"props":1014,"children":1016},{"class":996,"line":1015},3,[1017],{"type":392,"tag":994,"props":1018,"children":1019},{},[1020],{"type":398,"value":1021},"    $c2: #e6a964;\n",{"type":392,"tag":994,"props":1023,"children":1025},{"class":996,"line":1024},4,[1026],{"type":392,"tag":994,"props":1027,"children":1028},{},[1029],{"type":398,"value":1030},"    position: relative;\n",{"type":392,"tag":994,"props":1032,"children":1034},{"class":996,"line":1033},5,[1035],{"type":392,"tag":994,"props":1036,"children":1037},{},[1038],{"type":398,"value":1039},"    height: 300px;\n",{"type":392,"tag":994,"props":1041,"children":1043},{"class":996,"line":1042},6,[1044],{"type":392,"tag":994,"props":1045,"children":1046},{},[1047],{"type":398,"value":1048},"    background-image: repeating-radial-gradient(\n",{"type":392,"tag":994,"props":1050,"children":1052},{"class":996,"line":1051},7,[1053],{"type":392,"tag":994,"props":1054,"children":1055},{},[1056],{"type":398,"value":1057},"        circle at 0% 50%,\n",{"type":392,"tag":994,"props":1059,"children":1061},{"class":996,"line":1060},8,[1062],{"type":392,"tag":994,"props":1063,"children":1064},{},[1065],{"type":398,"value":1066},"        $c1 0,\n",{"type":392,"tag":994,"props":1068,"children":1070},{"class":996,"line":1069},9,[1071],{"type":392,"tag":994,"props":1072,"children":1073},{},[1074],{"type":398,"value":1075},"        $c2 50px\n",{"type":392,"tag":994,"props":1077,"children":1079},{"class":996,"line":1078},10,[1080],{"type":392,"tag":994,"props":1081,"children":1082},{},[1083],{"type":398,"value":1084},"    );\n",{"type":392,"tag":994,"props":1086,"children":1088},{"class":996,"line":1087},11,[1089],{"type":392,"tag":994,"props":1090,"children":1091},{},[1092],{"type":398,"value":1093},"}\n",{"type":392,"tag":400,"props":1095,"children":1096},{},[1097],{"type":398,"value":1098},"我们可以轻易找到找到边缘——对，就是那些渐变的颜色改变的地方——0px(50px)。现在我们有了边缘信息，接着就要重建边缘。重建边缘也许可以再拆分，分为以下几个步骤：",{"type":392,"tag":406,"props":1100,"children":1101},{},[1102,1107,1112,1117],{"type":392,"tag":410,"props":1103,"children":1104},{},[1105],{"type":398,"value":1106},"需要通过某种方法得到透明度的点",{"type":392,"tag":410,"props":1108,"children":1109},{},[1110],{"type":398,"value":1111},"这些点需要能够组成线段",{"type":392,"tag":410,"props":1113,"children":1114},{},[1115],{"type":398,"value":1116},"线段完全吻合我们的 BackgroundImage",{"type":392,"tag":410,"props":1118,"children":1119},{},[1120],{"type":398,"value":1121},"使线段覆盖在 BackgroundImage 的上一层以应用我们的修改",{"type":392,"tag":400,"props":1123,"children":1124},{},[1125],{"type":398,"value":1126},"这就是大体思路，我们并没有参与浏览器的渲染，而是通过像 FXAA 一样的后处理的方法。在已渲染的图像上做文章。不过将上述步骤仔细考虑后，会发现问题的难点在于如何生成抗锯齿条纹。",{"type":392,"tag":400,"props":1128,"children":1129},{},[1130],{"type":392,"tag":501,"props":1131,"children":1132},{"alt":544,"src":545},[],{"type":392,"tag":400,"props":1134,"children":1135},{},[1136],{"type":398,"value":1137},"总之，我们需要继续改良思路。",{"type":392,"tag":400,"props":1139,"children":1140},{},[1141],{"type":398,"value":1142},"在 BackgroundImage 中，像素是基本单位不能再分，点的透明度显然不能通过点的大小来模拟。这里有两种解决方法：",{"type":392,"tag":406,"props":1144,"children":1145},{},[1146,1151],{"type":392,"tag":410,"props":1147,"children":1148},{},[1149],{"type":398,"value":1150},"Opacity，使用 CSS Opacity ，或者 CSS RGBA 函数、SCSS 函数。",{"type":392,"tag":410,"props":1152,"children":1153},{},[1154],{"type":398,"value":1155},"两种颜色相融合模拟像素透明度，如果不想扯上 JS，SCSS 也能解决。",{"type":392,"tag":400,"props":1157,"children":1158},{},[1159],{"type":398,"value":1160},"至于线段，也可以用 BackgroundImage 模拟，比如针对上面那段 CSS 代码，可以通过改写成以下方式：",{"type":392,"tag":984,"props":1162,"children":1164},{"className":986,"code":1163,"language":988,"meta":386,"style":386},".circle-con {\n    $c1: #cd3f4f;\n    $c2: #e6a964;\n    $line-width: 1px;\n    position: relative;\n    height: 300px;\n    background-image: repeating-radial-gradient(\n        circle at 0% 50%,\n        $c1 0,\n        transparent calc($line-width),\n        transparent calc(50px - $line-width),\n        $c2 50px\n    );\n}\n",[1165],{"type":392,"tag":649,"props":1166,"children":1167},{"__ignoreMap":386},[1168,1175,1182,1189,1197,1204,1211,1218,1225,1232,1240,1248,1256,1264],{"type":392,"tag":994,"props":1169,"children":1170},{"class":996,"line":997},[1171],{"type":392,"tag":994,"props":1172,"children":1173},{},[1174],{"type":398,"value":1003},{"type":392,"tag":994,"props":1176,"children":1177},{"class":996,"line":1006},[1178],{"type":392,"tag":994,"props":1179,"children":1180},{},[1181],{"type":398,"value":1012},{"type":392,"tag":994,"props":1183,"children":1184},{"class":996,"line":1015},[1185],{"type":392,"tag":994,"props":1186,"children":1187},{},[1188],{"type":398,"value":1021},{"type":392,"tag":994,"props":1190,"children":1191},{"class":996,"line":1024},[1192],{"type":392,"tag":994,"props":1193,"children":1194},{},[1195],{"type":398,"value":1196},"    $line-width: 1px;\n",{"type":392,"tag":994,"props":1198,"children":1199},{"class":996,"line":1033},[1200],{"type":392,"tag":994,"props":1201,"children":1202},{},[1203],{"type":398,"value":1030},{"type":392,"tag":994,"props":1205,"children":1206},{"class":996,"line":1042},[1207],{"type":392,"tag":994,"props":1208,"children":1209},{},[1210],{"type":398,"value":1039},{"type":392,"tag":994,"props":1212,"children":1213},{"class":996,"line":1051},[1214],{"type":392,"tag":994,"props":1215,"children":1216},{},[1217],{"type":398,"value":1048},{"type":392,"tag":994,"props":1219,"children":1220},{"class":996,"line":1060},[1221],{"type":392,"tag":994,"props":1222,"children":1223},{},[1224],{"type":398,"value":1057},{"type":392,"tag":994,"props":1226,"children":1227},{"class":996,"line":1069},[1228],{"type":392,"tag":994,"props":1229,"children":1230},{},[1231],{"type":398,"value":1066},{"type":392,"tag":994,"props":1233,"children":1234},{"class":996,"line":1078},[1235],{"type":392,"tag":994,"props":1236,"children":1237},{},[1238],{"type":398,"value":1239},"        transparent calc($line-width),\n",{"type":392,"tag":994,"props":1241,"children":1242},{"class":996,"line":1087},[1243],{"type":392,"tag":994,"props":1244,"children":1245},{},[1246],{"type":398,"value":1247},"        transparent calc(50px - $line-width),\n",{"type":392,"tag":994,"props":1249,"children":1251},{"class":996,"line":1250},12,[1252],{"type":392,"tag":994,"props":1253,"children":1254},{},[1255],{"type":398,"value":1075},{"type":392,"tag":994,"props":1257,"children":1259},{"class":996,"line":1258},13,[1260],{"type":392,"tag":994,"props":1261,"children":1262},{},[1263],{"type":398,"value":1084},{"type":392,"tag":994,"props":1265,"children":1267},{"class":996,"line":1266},14,[1268],{"type":392,"tag":994,"props":1269,"children":1270},{},[1271],{"type":398,"value":1093},{"type":392,"tag":400,"props":1273,"children":1274},{},[1275],{"type":398,"value":1276},"取得线段之后，将容器偏移几个单位像素，放到浏览器测试结果：",{"type":392,"tag":400,"props":1278,"children":1279},{},[1280],{"type":392,"tag":501,"props":1281,"children":1284},{"alt":1282,"src":1283},"Line1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Line1.png",[],{"type":392,"tag":400,"props":1286,"children":1287},{},[1288],{"type":398,"value":1289},"可以发现，会自然而然得到颜色混合透明度组成的线段。只不过透明度的方向并不是我们想要的。我希望能够得到透明线条反过来的图样：",{"type":392,"tag":400,"props":1291,"children":1292},{},[1293],{"type":392,"tag":501,"props":1294,"children":1297},{"alt":1295,"src":1296},"Line2","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/Line2.png",[],{"type":392,"tag":400,"props":1299,"children":1300},{},[1301],{"type":398,"value":1302},"经过试验，我发现只需简单调换颜色的顺序就行。比方说这是在容器 50% 的位置绘制的一条线段：",{"type":392,"tag":400,"props":1304,"children":1305},{},[1306],{"type":392,"tag":501,"props":1307,"children":1310},{"alt":1308,"src":1309},"yr1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/yr1.png",[],{"type":392,"tag":984,"props":1312,"children":1314},{"className":986,"code":1313,"language":988,"meta":386,"style":386},".old {\n    background: linear-gradient(\n        var(--deg),\n        transparent,\n        transparent\n        calc(50% - var(--line-width)),\n        yellow 50%,\n        red 50%,\n        transparent calc(50% + var(--line-width)),\n        transparent\n    );\n}\n",[1315],{"type":392,"tag":649,"props":1316,"children":1317},{"__ignoreMap":386},[1318,1326,1334,1342,1350,1358,1366,1374,1382,1390,1397,1404],{"type":392,"tag":994,"props":1319,"children":1320},{"class":996,"line":997},[1321],{"type":392,"tag":994,"props":1322,"children":1323},{},[1324],{"type":398,"value":1325},".old {\n",{"type":392,"tag":994,"props":1327,"children":1328},{"class":996,"line":1006},[1329],{"type":392,"tag":994,"props":1330,"children":1331},{},[1332],{"type":398,"value":1333},"    background: linear-gradient(\n",{"type":392,"tag":994,"props":1335,"children":1336},{"class":996,"line":1015},[1337],{"type":392,"tag":994,"props":1338,"children":1339},{},[1340],{"type":398,"value":1341},"        var(--deg),\n",{"type":392,"tag":994,"props":1343,"children":1344},{"class":996,"line":1024},[1345],{"type":392,"tag":994,"props":1346,"children":1347},{},[1348],{"type":398,"value":1349},"        transparent,\n",{"type":392,"tag":994,"props":1351,"children":1352},{"class":996,"line":1033},[1353],{"type":392,"tag":994,"props":1354,"children":1355},{},[1356],{"type":398,"value":1357},"        transparent\n",{"type":392,"tag":994,"props":1359,"children":1360},{"class":996,"line":1042},[1361],{"type":392,"tag":994,"props":1362,"children":1363},{},[1364],{"type":398,"value":1365},"        calc(50% - var(--line-width)),\n",{"type":392,"tag":994,"props":1367,"children":1368},{"class":996,"line":1051},[1369],{"type":392,"tag":994,"props":1370,"children":1371},{},[1372],{"type":398,"value":1373},"        yellow 50%,\n",{"type":392,"tag":994,"props":1375,"children":1376},{"class":996,"line":1060},[1377],{"type":392,"tag":994,"props":1378,"children":1379},{},[1380],{"type":398,"value":1381},"        red 50%,\n",{"type":392,"tag":994,"props":1383,"children":1384},{"class":996,"line":1069},[1385],{"type":392,"tag":994,"props":1386,"children":1387},{},[1388],{"type":398,"value":1389},"        transparent calc(50% + var(--line-width)),\n",{"type":392,"tag":994,"props":1391,"children":1392},{"class":996,"line":1078},[1393],{"type":392,"tag":994,"props":1394,"children":1395},{},[1396],{"type":398,"value":1357},{"type":392,"tag":994,"props":1398,"children":1399},{"class":996,"line":1087},[1400],{"type":392,"tag":994,"props":1401,"children":1402},{},[1403],{"type":398,"value":1084},{"type":392,"tag":994,"props":1405,"children":1406},{"class":996,"line":1250},[1407],{"type":392,"tag":994,"props":1408,"children":1409},{},[1410],{"type":398,"value":1093},{"type":392,"tag":400,"props":1412,"children":1413},{},[1414],{"type":398,"value":1415},"如果将线段颜色调换，就会变成：",{"type":392,"tag":400,"props":1417,"children":1418},{},[1419],{"type":392,"tag":501,"props":1420,"children":1423},{"alt":1421,"src":1422},"ry1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/ry1.png",[],{"type":392,"tag":984,"props":1425,"children":1427},{"className":986,"code":1426,"language":988,"meta":386,"style":386},".new {\n    background: linear-gradient(\n        var(--deg),\n        transparent,\n        transparent\n        calc(50% - var(--line-width)),\n        red 50%,\n        yellow 50%,\n        transparent calc(50% + var(--line-width)),\n        transparent\n    );\n}\n",[1428],{"type":392,"tag":649,"props":1429,"children":1430},{"__ignoreMap":386},[1431,1439,1446,1453,1460,1467,1474,1481,1488,1495,1502,1509],{"type":392,"tag":994,"props":1432,"children":1433},{"class":996,"line":997},[1434],{"type":392,"tag":994,"props":1435,"children":1436},{},[1437],{"type":398,"value":1438},".new {\n",{"type":392,"tag":994,"props":1440,"children":1441},{"class":996,"line":1006},[1442],{"type":392,"tag":994,"props":1443,"children":1444},{},[1445],{"type":398,"value":1333},{"type":392,"tag":994,"props":1447,"children":1448},{"class":996,"line":1015},[1449],{"type":392,"tag":994,"props":1450,"children":1451},{},[1452],{"type":398,"value":1341},{"type":392,"tag":994,"props":1454,"children":1455},{"class":996,"line":1024},[1456],{"type":392,"tag":994,"props":1457,"children":1458},{},[1459],{"type":398,"value":1349},{"type":392,"tag":994,"props":1461,"children":1462},{"class":996,"line":1033},[1463],{"type":392,"tag":994,"props":1464,"children":1465},{},[1466],{"type":398,"value":1357},{"type":392,"tag":994,"props":1468,"children":1469},{"class":996,"line":1042},[1470],{"type":392,"tag":994,"props":1471,"children":1472},{},[1473],{"type":398,"value":1365},{"type":392,"tag":994,"props":1475,"children":1476},{"class":996,"line":1051},[1477],{"type":392,"tag":994,"props":1478,"children":1479},{},[1480],{"type":398,"value":1381},{"type":392,"tag":994,"props":1482,"children":1483},{"class":996,"line":1060},[1484],{"type":392,"tag":994,"props":1485,"children":1486},{},[1487],{"type":398,"value":1373},{"type":392,"tag":994,"props":1489,"children":1490},{"class":996,"line":1069},[1491],{"type":392,"tag":994,"props":1492,"children":1493},{},[1494],{"type":398,"value":1389},{"type":392,"tag":994,"props":1496,"children":1497},{"class":996,"line":1078},[1498],{"type":392,"tag":994,"props":1499,"children":1500},{},[1501],{"type":398,"value":1357},{"type":392,"tag":994,"props":1503,"children":1504},{"class":996,"line":1087},[1505],{"type":392,"tag":994,"props":1506,"children":1507},{},[1508],{"type":398,"value":1084},{"type":392,"tag":994,"props":1510,"children":1511},{"class":996,"line":1250},[1512],{"type":392,"tag":994,"props":1513,"children":1514},{},[1515],{"type":398,"value":1093},{"type":392,"tag":400,"props":1517,"children":1518},{},[1519],{"type":398,"value":1520},"得到了我们想要的线段虚化的效果！这之后要做的事儿是吻合线条。",{"type":392,"tag":400,"props":1522,"children":1523},{},[1524],{"type":398,"value":1525},"接下来是见证奇迹的时刻：",{"type":392,"tag":400,"props":1527,"children":1528},{},[1529],{"type":392,"tag":501,"props":1530,"children":1533},{"alt":1531,"src":1532},"AntiAliasingLine","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/AntiAliasingLine.gif",[],{"type":392,"tag":400,"props":1535,"children":1536},{},[1537],{"type":398,"value":1538},"Well done!",{"type":392,"tag":400,"props":1540,"children":1541},{},[1542],{"type":398,"value":1543},"来一张成品 GIF，稍微离屏幕远一些看效果最好：",{"type":392,"tag":400,"props":1545,"children":1546},{},[1547],{"type":392,"tag":501,"props":1548,"children":1551},{"alt":1549,"src":1550},"POAA-2","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200604/POAA-2.gif",[],{"type":392,"tag":400,"props":1553,"children":1554},{},[1555],{"type":398,"value":1556},"成品在吻合线条的基础上还增加了一些内容及调整了相关参数：",{"type":392,"tag":406,"props":1558,"children":1559},{},[1560,1565,1570],{"type":392,"tag":410,"props":1561,"children":1562},{},[1563],{"type":398,"value":1564},"暗色和亮色混合的透明度的值不同",{"type":392,"tag":410,"props":1566,"children":1567},{},[1568],{"type":398,"value":1569},"X 轴和 Y 轴的偏移不同",{"type":392,"tag":410,"props":1571,"children":1572},{},[1573],{"type":398,"value":1574},"调整了拟合线段的粗细",{"type":392,"tag":400,"props":1576,"children":1577},{},[1578],{"type":398,"value":1579},"成品的代码如下：",{"type":392,"tag":984,"props":1581,"children":1583},{"className":986,"code":1582,"language":988,"meta":386,"style":386},".repeat-con {\n    --c1: #cd3f4f;\n    --c2: #e6a964;\n    --c3: #5996cc;\n    position: relative;\n    height: 300px;\n    background-image: repeating-linear-gradient(\n        var(--deg),\n        var(--c1),\n        var(--c1) 10px,\n        var(--c2) 10px,\n        var(--c2) 40px,\n        var(--c1) 40px,\n        var(--c1) 50px,\n        var(--c3) 50px,\n        var(--c3) 80px\n    );\n\n    &.antialiasing {\n        &::after {\n            --offsetX: 0.4px;\n            --offsetY: -0.1px;\n            --dark-alpha: 0.3;\n            --light-alpha: 0.6;\n            --line-width: 0.6px;\n            content: '';\n            position: absolute;\n            top: var(--offsetY);\n            left: var(--offsetX);\n            width: 100%;\n            height: 100%;\n            opacity: 0.5;\n            background-image: repeating-linear-gradient(\n                var(--deg),\n                var(--c3),\n                transparent calc(0px + var(--line-width)),\n                transparent calc(10px - var(--line-width)),\n                var(--c2) 10px,\n                var(--c1) 10px,\n                transparent calc(10px + var(--line-width)),\n                transparent calc(40px - var(--line-width)),\n                var(--c1) 40px,\n                var(--c2) 40px,\n                transparent calc(40px + var(--line-width)),\n                transparent calc(50px - var(--line-width)),\n                var(--c3) 50px,\n                var(--c1) 50px,\n                transparent calc(50px + var(--line-width)),\n                transparent calc(80px - var(--line-width)),\n                var(--c1) 80px\n            );\n        }\n    }\n}\n",[1584],{"type":392,"tag":649,"props":1585,"children":1586},{"__ignoreMap":386},[1587,1595,1603,1611,1619,1626,1633,1641,1648,1656,1664,1672,1680,1688,1696,1705,1714,1722,1732,1741,1750,1759,1768,1777,1786,1795,1804,1813,1822,1831,1840,1849,1858,1867,1876,1885,1894,1903,1912,1921,1930,1939,1948,1957,1966,1975,1984,1993,2002,2011,2020,2029,2038,2047],{"type":392,"tag":994,"props":1588,"children":1589},{"class":996,"line":997},[1590],{"type":392,"tag":994,"props":1591,"children":1592},{},[1593],{"type":398,"value":1594},".repeat-con {\n",{"type":392,"tag":994,"props":1596,"children":1597},{"class":996,"line":1006},[1598],{"type":392,"tag":994,"props":1599,"children":1600},{},[1601],{"type":398,"value":1602},"    --c1: #cd3f4f;\n",{"type":392,"tag":994,"props":1604,"children":1605},{"class":996,"line":1015},[1606],{"type":392,"tag":994,"props":1607,"children":1608},{},[1609],{"type":398,"value":1610},"    --c2: #e6a964;\n",{"type":392,"tag":994,"props":1612,"children":1613},{"class":996,"line":1024},[1614],{"type":392,"tag":994,"props":1615,"children":1616},{},[1617],{"type":398,"value":1618},"    --c3: #5996cc;\n",{"type":392,"tag":994,"props":1620,"children":1621},{"class":996,"line":1033},[1622],{"type":392,"tag":994,"props":1623,"children":1624},{},[1625],{"type":398,"value":1030},{"type":392,"tag":994,"props":1627,"children":1628},{"class":996,"line":1042},[1629],{"type":392,"tag":994,"props":1630,"children":1631},{},[1632],{"type":398,"value":1039},{"type":392,"tag":994,"props":1634,"children":1635},{"class":996,"line":1051},[1636],{"type":392,"tag":994,"props":1637,"children":1638},{},[1639],{"type":398,"value":1640},"    background-image: repeating-linear-gradient(\n",{"type":392,"tag":994,"props":1642,"children":1643},{"class":996,"line":1060},[1644],{"type":392,"tag":994,"props":1645,"children":1646},{},[1647],{"type":398,"value":1341},{"type":392,"tag":994,"props":1649,"children":1650},{"class":996,"line":1069},[1651],{"type":392,"tag":994,"props":1652,"children":1653},{},[1654],{"type":398,"value":1655},"        var(--c1),\n",{"type":392,"tag":994,"props":1657,"children":1658},{"class":996,"line":1078},[1659],{"type":392,"tag":994,"props":1660,"children":1661},{},[1662],{"type":398,"value":1663},"        var(--c1) 10px,\n",{"type":392,"tag":994,"props":1665,"children":1666},{"class":996,"line":1087},[1667],{"type":392,"tag":994,"props":1668,"children":1669},{},[1670],{"type":398,"value":1671},"        var(--c2) 10px,\n",{"type":392,"tag":994,"props":1673,"children":1674},{"class":996,"line":1250},[1675],{"type":392,"tag":994,"props":1676,"children":1677},{},[1678],{"type":398,"value":1679},"        var(--c2) 40px,\n",{"type":392,"tag":994,"props":1681,"children":1682},{"class":996,"line":1258},[1683],{"type":392,"tag":994,"props":1684,"children":1685},{},[1686],{"type":398,"value":1687},"        var(--c1) 40px,\n",{"type":392,"tag":994,"props":1689,"children":1690},{"class":996,"line":1266},[1691],{"type":392,"tag":994,"props":1692,"children":1693},{},[1694],{"type":398,"value":1695},"        var(--c1) 50px,\n",{"type":392,"tag":994,"props":1697,"children":1699},{"class":996,"line":1698},15,[1700],{"type":392,"tag":994,"props":1701,"children":1702},{},[1703],{"type":398,"value":1704},"        var(--c3) 50px,\n",{"type":392,"tag":994,"props":1706,"children":1708},{"class":996,"line":1707},16,[1709],{"type":392,"tag":994,"props":1710,"children":1711},{},[1712],{"type":398,"value":1713},"        var(--c3) 80px\n",{"type":392,"tag":994,"props":1715,"children":1717},{"class":996,"line":1716},17,[1718],{"type":392,"tag":994,"props":1719,"children":1720},{},[1721],{"type":398,"value":1084},{"type":392,"tag":994,"props":1723,"children":1725},{"class":996,"line":1724},18,[1726],{"type":392,"tag":994,"props":1727,"children":1729},{"emptyLinePlaceholder":1728},true,[1730],{"type":398,"value":1731},"\n",{"type":392,"tag":994,"props":1733,"children":1735},{"class":996,"line":1734},19,[1736],{"type":392,"tag":994,"props":1737,"children":1738},{},[1739],{"type":398,"value":1740},"    &.antialiasing {\n",{"type":392,"tag":994,"props":1742,"children":1744},{"class":996,"line":1743},20,[1745],{"type":392,"tag":994,"props":1746,"children":1747},{},[1748],{"type":398,"value":1749},"        &::after {\n",{"type":392,"tag":994,"props":1751,"children":1753},{"class":996,"line":1752},21,[1754],{"type":392,"tag":994,"props":1755,"children":1756},{},[1757],{"type":398,"value":1758},"            --offsetX: 0.4px;\n",{"type":392,"tag":994,"props":1760,"children":1762},{"class":996,"line":1761},22,[1763],{"type":392,"tag":994,"props":1764,"children":1765},{},[1766],{"type":398,"value":1767},"            --offsetY: -0.1px;\n",{"type":392,"tag":994,"props":1769,"children":1771},{"class":996,"line":1770},23,[1772],{"type":392,"tag":994,"props":1773,"children":1774},{},[1775],{"type":398,"value":1776},"            --dark-alpha: 0.3;\n",{"type":392,"tag":994,"props":1778,"children":1780},{"class":996,"line":1779},24,[1781],{"type":392,"tag":994,"props":1782,"children":1783},{},[1784],{"type":398,"value":1785},"            --light-alpha: 0.6;\n",{"type":392,"tag":994,"props":1787,"children":1789},{"class":996,"line":1788},25,[1790],{"type":392,"tag":994,"props":1791,"children":1792},{},[1793],{"type":398,"value":1794},"            --line-width: 0.6px;\n",{"type":392,"tag":994,"props":1796,"children":1798},{"class":996,"line":1797},26,[1799],{"type":392,"tag":994,"props":1800,"children":1801},{},[1802],{"type":398,"value":1803},"            content: '';\n",{"type":392,"tag":994,"props":1805,"children":1807},{"class":996,"line":1806},27,[1808],{"type":392,"tag":994,"props":1809,"children":1810},{},[1811],{"type":398,"value":1812},"            position: absolute;\n",{"type":392,"tag":994,"props":1814,"children":1816},{"class":996,"line":1815},28,[1817],{"type":392,"tag":994,"props":1818,"children":1819},{},[1820],{"type":398,"value":1821},"            top: var(--offsetY);\n",{"type":392,"tag":994,"props":1823,"children":1825},{"class":996,"line":1824},29,[1826],{"type":392,"tag":994,"props":1827,"children":1828},{},[1829],{"type":398,"value":1830},"            left: var(--offsetX);\n",{"type":392,"tag":994,"props":1832,"children":1834},{"class":996,"line":1833},30,[1835],{"type":392,"tag":994,"props":1836,"children":1837},{},[1838],{"type":398,"value":1839},"            width: 100%;\n",{"type":392,"tag":994,"props":1841,"children":1843},{"class":996,"line":1842},31,[1844],{"type":392,"tag":994,"props":1845,"children":1846},{},[1847],{"type":398,"value":1848},"            height: 100%;\n",{"type":392,"tag":994,"props":1850,"children":1852},{"class":996,"line":1851},32,[1853],{"type":392,"tag":994,"props":1854,"children":1855},{},[1856],{"type":398,"value":1857},"            opacity: 0.5;\n",{"type":392,"tag":994,"props":1859,"children":1861},{"class":996,"line":1860},33,[1862],{"type":392,"tag":994,"props":1863,"children":1864},{},[1865],{"type":398,"value":1866},"            background-image: repeating-linear-gradient(\n",{"type":392,"tag":994,"props":1868,"children":1870},{"class":996,"line":1869},34,[1871],{"type":392,"tag":994,"props":1872,"children":1873},{},[1874],{"type":398,"value":1875},"                var(--deg),\n",{"type":392,"tag":994,"props":1877,"children":1879},{"class":996,"line":1878},35,[1880],{"type":392,"tag":994,"props":1881,"children":1882},{},[1883],{"type":398,"value":1884},"                var(--c3),\n",{"type":392,"tag":994,"props":1886,"children":1888},{"class":996,"line":1887},36,[1889],{"type":392,"tag":994,"props":1890,"children":1891},{},[1892],{"type":398,"value":1893},"                transparent calc(0px + var(--line-width)),\n",{"type":392,"tag":994,"props":1895,"children":1897},{"class":996,"line":1896},37,[1898],{"type":392,"tag":994,"props":1899,"children":1900},{},[1901],{"type":398,"value":1902},"                transparent calc(10px - var(--line-width)),\n",{"type":392,"tag":994,"props":1904,"children":1906},{"class":996,"line":1905},38,[1907],{"type":392,"tag":994,"props":1908,"children":1909},{},[1910],{"type":398,"value":1911},"                var(--c2) 10px,\n",{"type":392,"tag":994,"props":1913,"children":1915},{"class":996,"line":1914},39,[1916],{"type":392,"tag":994,"props":1917,"children":1918},{},[1919],{"type":398,"value":1920},"                var(--c1) 10px,\n",{"type":392,"tag":994,"props":1922,"children":1924},{"class":996,"line":1923},40,[1925],{"type":392,"tag":994,"props":1926,"children":1927},{},[1928],{"type":398,"value":1929},"                transparent calc(10px + var(--line-width)),\n",{"type":392,"tag":994,"props":1931,"children":1933},{"class":996,"line":1932},41,[1934],{"type":392,"tag":994,"props":1935,"children":1936},{},[1937],{"type":398,"value":1938},"                transparent calc(40px - var(--line-width)),\n",{"type":392,"tag":994,"props":1940,"children":1942},{"class":996,"line":1941},42,[1943],{"type":392,"tag":994,"props":1944,"children":1945},{},[1946],{"type":398,"value":1947},"                var(--c1) 40px,\n",{"type":392,"tag":994,"props":1949,"children":1951},{"class":996,"line":1950},43,[1952],{"type":392,"tag":994,"props":1953,"children":1954},{},[1955],{"type":398,"value":1956},"                var(--c2) 40px,\n",{"type":392,"tag":994,"props":1958,"children":1960},{"class":996,"line":1959},44,[1961],{"type":392,"tag":994,"props":1962,"children":1963},{},[1964],{"type":398,"value":1965},"                transparent calc(40px + var(--line-width)),\n",{"type":392,"tag":994,"props":1967,"children":1969},{"class":996,"line":1968},45,[1970],{"type":392,"tag":994,"props":1971,"children":1972},{},[1973],{"type":398,"value":1974},"                transparent calc(50px - var(--line-width)),\n",{"type":392,"tag":994,"props":1976,"children":1978},{"class":996,"line":1977},46,[1979],{"type":392,"tag":994,"props":1980,"children":1981},{},[1982],{"type":398,"value":1983},"                var(--c3) 50px,\n",{"type":392,"tag":994,"props":1985,"children":1987},{"class":996,"line":1986},47,[1988],{"type":392,"tag":994,"props":1989,"children":1990},{},[1991],{"type":398,"value":1992},"                var(--c1) 50px,\n",{"type":392,"tag":994,"props":1994,"children":1996},{"class":996,"line":1995},48,[1997],{"type":392,"tag":994,"props":1998,"children":1999},{},[2000],{"type":398,"value":2001},"                transparent calc(50px + var(--line-width)),\n",{"type":392,"tag":994,"props":2003,"children":2005},{"class":996,"line":2004},49,[2006],{"type":392,"tag":994,"props":2007,"children":2008},{},[2009],{"type":398,"value":2010},"                transparent calc(80px - var(--line-width)),\n",{"type":392,"tag":994,"props":2012,"children":2014},{"class":996,"line":2013},50,[2015],{"type":392,"tag":994,"props":2016,"children":2017},{},[2018],{"type":398,"value":2019},"                var(--c1) 80px\n",{"type":392,"tag":994,"props":2021,"children":2023},{"class":996,"line":2022},51,[2024],{"type":392,"tag":994,"props":2025,"children":2026},{},[2027],{"type":398,"value":2028},"            );\n",{"type":392,"tag":994,"props":2030,"children":2032},{"class":996,"line":2031},52,[2033],{"type":392,"tag":994,"props":2034,"children":2035},{},[2036],{"type":398,"value":2037},"        }\n",{"type":392,"tag":994,"props":2039,"children":2041},{"class":996,"line":2040},53,[2042],{"type":392,"tag":994,"props":2043,"children":2044},{},[2045],{"type":398,"value":2046},"    }\n",{"type":392,"tag":994,"props":2048,"children":2050},{"class":996,"line":2049},54,[2051],{"type":392,"tag":994,"props":2052,"children":2053},{},[2054],{"type":398,"value":1093},{"type":392,"tag":400,"props":2056,"children":2057},{},[2058],{"type":398,"value":2059},"理论上，通过 SCSS 函数，能自动判断代码中线段的位置并生成填充抗锯齿的像素。无论是 LinearGradient、ConicGradient 还是 RadialGradient，都可以抗锯齿。不过我只是当试验品来写，所以没有写相应的工具函数。欢迎各位补充到 GitHub。",{"type":392,"tag":393,"props":2061,"children":2063},{"id":2062},"实践后记",[2064],{"type":398,"value":2065},"实践&后记",{"type":392,"tag":400,"props":2067,"children":2068},{},[2069],{"type":398,"value":2070},"在家闲着无事上 CodePen 玩耍时，看大触们用 BackgroundImage 画画，虽然好看，但狗牙令人心塞。于是起了尝试做一个抗锯齿 Demo 的想法（果然好康才是源动力）。\n本来这玩意儿会变成一个代码片段（类似 Gists，反正就是不那么重要的东西），但是前天看到掘金推荐的文章中有网友用 BackgroundImage 画优惠券的小圆圈缺角，这给了我启发，直接催生了《CSS 幻术》这篇博客。",{"type":392,"tag":400,"props":2072,"children":2073},{},[2074],{"type":398,"value":2075},"关于具体应用场景我必须说明清楚，POAA 只适用于低分辨率的显示器（严格来说是看 DPI，也就是分辨率和尺寸之比。就像我用的 2K 显示器，但是因为尺寸较大，所以能通过 POAA 取得效果），自然就排除了苹果电脑或者手机这些设备。POAA 只能作为一种技术补充，由于并不方便作实践的选择，所以我称之“幻术”。如果你需要在生产环境用浏览器绘图，那么肯定会选择优先使用 SVG 和 Canvas。选择 BackgroundImage 绘图，在我的印象里，只在需要追求时间和简便的情况下才会发生（就比如画优惠券）。这使得 BackgroundImage 地位尴尬，像是成了开发人员不会 SVG 时选择的替代品。不过... SVG 不应该是设计人员掌握的东西么？所以图形到底应该由谁来画，我不懂。",{"type":392,"tag":400,"props":2077,"children":2078},{},[2079,2081,2088],{"type":398,"value":2080},"最后，推荐大家来我的博客逛逛，在",{"type":392,"tag":712,"props":2082,"children":2085},{"href":2083,"rel":2084},"http://www.lionad.art",[716],[2086],{"type":398,"value":2087},"我的博客",{"type":398,"value":2089},"里你可以通过操纵杆和控制台亲自体验 POAA 的神奇之处。",{"type":392,"tag":400,"props":2091,"children":2092},{},[2093,2095],{"type":398,"value":2094},"啊，写这篇文章我起码喝了 3 瓶肥宅快乐水。我肯定又变肥宅了哭。都看到这里了，不点赞三连安慰我一下再走么？",{"type":392,"tag":487,"props":2096,"children":2097},{},[2098],{"type":398,"value":2099},"/(ㄒ o ㄒ)/~~",{"type":392,"tag":393,"props":2101,"children":2103},{"id":2102},"彩蛋脑放",[2104,2106],{"type":398,"value":2105},"彩蛋：",{"type":392,"tag":457,"props":2107,"children":2108},{},[2109],{"type":398,"value":2110},"脑放",{"type":392,"tag":400,"props":2112,"children":2113},{},[2114],{"type":398,"value":2115},"好吧，这里想介绍的不是“纯脑放”，而是一种先将图片变模糊以平滑图形边缘，再锐化图片强化边缘的思路。日常生活中使用 Photoshop 等工具处理图片经常会用到这种方法；有时电脑游戏画面增强也是这样处理的。",{"type":392,"tag":400,"props":2117,"children":2118},{},[2119],{"type":398,"value":2120},"先模糊，再锐化，两个步骤不能反过来，同时参数的调节也很重要（很玄学）。我在自己的博客中进行实验时，以下是我的尝试的方法：",{"type":392,"tag":406,"props":2122,"children":2123},{},[2124,2129],{"type":392,"tag":410,"props":2125,"children":2126},{},[2127],{"type":398,"value":2128},"CSS Filter 串联 SVG 自定义滤镜",{"type":392,"tag":410,"props":2130,"children":2131},{},[2132],{"type":398,"value":2133},"CSS Filter 串联 Blur 和 Constract 滤镜",{"type":392,"tag":400,"props":2135,"children":2136},{},[2137],{"type":398,"value":2138},"不过很遗憾，水平有限，始终没能调出想要的效果，所以直接结案了，下一题。",{"type":392,"tag":2140,"props":2141,"children":2142},"article-a200604-blur",{},[2143,2148,2157,2162],{"type":392,"tag":393,"props":2144,"children":2146},{"id":2145},"阅读更多",[2147],{"type":398,"value":2145},{"type":392,"tag":400,"props":2149,"children":2150},{},[2151,2153],{"type":398,"value":2152},"希望本文能对你有所帮助，如果文中出现了不流畅或理解错误的地方也麻烦各位评论指出。",{"type":392,"tag":2154,"props":2155,"children":2156},"jj",{},[],{"type":392,"tag":400,"props":2158,"children":2159},{},[2160],{"type":398,"value":2161},"若有任何疑问，或想深入探讨，可以给我发邮件：dGFuZ25hZEBxcS5jb20=",{"type":392,"tag":406,"props":2163,"children":2164},{},[2165,2175,2185,2195],{"type":392,"tag":410,"props":2166,"children":2167},{},[2168],{"type":392,"tag":712,"props":2169,"children":2172},{"href":2170,"rel":2171},"https://zhuanlan.zhihu.com/p/123642175",[716],[2173],{"type":398,"value":2174},"DLSS 2.0-基于深度学习的实时渲染图像重建",{"type":392,"tag":410,"props":2176,"children":2177},{},[2178],{"type":392,"tag":712,"props":2179,"children":2182},{"href":2180,"rel":2181},"https://usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/",[716],[2183],{"type":398,"value":2184},"Please Stop “Fixing” Font Smoothing",{"type":392,"tag":410,"props":2186,"children":2187},{},[2188],{"type":392,"tag":712,"props":2189,"children":2192},{"href":2190,"rel":2191},"https://www.cnblogs.com/ranyonsue/p/8296983",[716],[2193],{"type":398,"value":2194},"用 CSS 开启硬件加速来提高网站性能",{"type":392,"tag":410,"props":2196,"children":2197},{},[2198],{"type":392,"tag":712,"props":2199,"children":2202},{"href":2200,"rel":2201},"http://blog.simonrodriguez.fr/articles/30-07-2016_implementing_fxaa",[716],[2203],{"type":398,"value":951},{"type":392,"tag":2205,"props":2206,"children":2207},"style",{},[2208],{"type":398,"value":2209},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":386,"searchDepth":1006,"depth":1006,"links":2211},[2212,2213,2217],{"id":395,"depth":1006,"text":395},{"id":469,"depth":1006,"text":469,"children":2214},[2215,2216],{"id":475,"depth":1015,"text":475},{"id":562,"depth":1015,"text":562},{"id":628,"depth":1006,"text":631,"children":2218},[2219,2220],{"id":639,"depth":1015,"text":642},{"id":790,"depth":1015,"text":793},"markdown","content:2.articles:9.css-poaa.md","content","2.articles/9.css-poaa.md","md",[2227,2229],{"_path":64,"title":63,"description":2228},"上一篇讲 anysort 的文章说到因网易云音乐的歌单排序功能较弱，我们自己实现的用来给歌单自定义排序的排序库的思路。这篇文章在排序库的基础上，介绍了其 TypeScript 类型实现。",{"_path":70,"title":69,"description":2230},"本文介绍了使用CSS判断鼠标进入区域方向的原理，并且在codepen笑脸demo的基础上实现了一个眼睛跟随鼠标位置进行转动的效果。",1708107555469]