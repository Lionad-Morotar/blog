[{"data":1,"prerenderedAt":2352},["ShallowReactive",2],{"navigation":3,"/articles/design-patterns-and-js-magic-pot":161,"/articles/design-patterns-and-js-magic-pot-surround":2347},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":76,"_dir":162,"_draft":163,"_partial":163,"_locale":164,"title":75,"description":165,"body":166,"_type":2341,"_id":2342,"_source":2343,"_file":2344,"_stem":2345,"_extension":2346},"articles",false,"","排除人的因素，设计模式的本质只是相关代码复用。本文通过使用JS仿制并简化了几种OOL中经典设计模式，以探讨经典设计模式和代码模板的区别主要在于代码复用的层次不同，以及粗浅聊了聊设计模式与语言特征之间此强彼弱的关系。",{"type":167,"children":168,"toc":2331},"root",[169,181,187,208,213,222,234,239,244,249,258,283,288,342,347,374,384,389,394,399,404,409,417,422,427,439,444,449,472,480,485,737,755,1004,1009,1014,1019,1115,1130,1408,1413,1431,1445,1460,1491,1496,1501,1903,1908,1913,1918,1928,1933,1948,1953,1987,1992,1997,2002,2012,2017,2030,2079,2084,2092,2097,2102,2107,2112,2122,2127,2132,2137,2170,2175,2198,2325],{"type":170,"tag":171,"props":172,"children":173},"element","blockquote",{},[174],{"type":170,"tag":175,"props":176,"children":177},"p",{},[178],{"type":179,"value":180},"text","设计模式最终要融入任何语言。",{"type":170,"tag":182,"props":183,"children":185},"h2",{"id":184},"设计模式是什么",[186],{"type":179,"value":184},{"type":170,"tag":175,"props":188,"children":189},{},[190,192,206],{"type":179,"value":191},"从《人月神话》到《大教堂与集市》，许多闻名业界的作品都“低代码、高文化",{"type":170,"tag":193,"props":194,"children":195},"sup",{},[196],{"type":170,"tag":197,"props":198,"children":203},"a",{"href":199,"ariaDescribedBy":200,"dataFootnoteRef":164,"id":202},"#user-content-fn-%E6%96%87%E5%8C%96",[201],"footnote-label","user-content-fnref-%E6%96%87%E5%8C%96",[204],{"type":179,"value":205},"1",{"type":179,"value":207},"”；各种代码文化运动可以看作“造神运动”此类周日剧场。许多大佬在向人们传授代码经验之余，都喜欢尝试用文化手段（不论是哲学思想还是艺术内涵），来统一人与代码的关系。这种跨界思考的过程通常比较晦涩，诸如“面向对象”、“设计模式”这些放到现在来说我们耳熟能详的词，在过去几十年都是由行业顶尖大佬们牵头搞研究，再经过不断地实践，逐渐沉淀下来形成的标准。",{"type":170,"tag":175,"props":209,"children":210},{},[211],{"type":179,"value":212},"设计模式是什么？",{"type":170,"tag":175,"props":214,"children":215},{},[216],{"type":170,"tag":217,"props":218,"children":219},"strong",{},[220],{"type":179,"value":221},"设计模式是一种标准，它描述了使用面向对象编程语言解决问题的方式。",{"type":170,"tag":175,"props":223,"children":224},{},[225,227,232],{"type":179,"value":226},"设计模式一词发源于建筑学作品《建筑模式语言》，后被一个人们称为“四人帮”（GoF）的小组种出它在软件界开的新花。无论是建筑学还是软件学中的设计模式，相同的地方是，它们都想解决“人”和“物”的关系相关问题，并且形成了一套特定的方法论。",{"type":170,"tag":217,"props":228,"children":229},{},[230],{"type":179,"value":231},"好比人们有了灶就可以长久保存火种，用名词把晦涩难懂的抽象定义为标准，这样有利于思想传播",{"type":179,"value":233},"。只要人们普遍接纳并熟知设计模式，便能畅通无阻地沟通代码的实现。当然，现实很丰满，畅快沟通有个大前提：程序设计时，大家需要使用面向对象编程语言来合作。",{"type":170,"tag":182,"props":235,"children":237},{"id":236},"为什么非面向对象不可",[238],{"type":179,"value":236},{"type":170,"tag":175,"props":240,"children":241},{},[242],{"type":179,"value":243},"构建大型软件不止面向对象这一条路，与面向对象相对应的还有结构化、形式化等程序设计方法。任意一种有自有优劣。面对日益复杂的软件，人们关心的重心逐步转移到软件的可重用性方面。面向对象凭借着分类、封装等天然符合人们认知规律的优势，得到快速发展，终打通需求分析、程序设计到编程语言等开发上下游工作，赢得了业界青睐。",{"type":170,"tag":175,"props":245,"children":246},{},[247],{"type":179,"value":248},"面向对象把功能作为节点，组合为功能网格，节点间通过消息通讯以及做对应的响应。这样一来，开发在编程时不再需要直面输入输出这种数据流动的思考方式，只需要按照指令维护各个对象内部的状态即可，节点对应的代码片段也就能得到重用。",{"type":170,"tag":175,"props":250,"children":251},{},[252],{"type":170,"tag":253,"props":254,"children":257},"img",{"alt":255,"src":256},"Message Passing In OO","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210511174933.png?w=40",[],{"type":170,"tag":175,"props":259,"children":260},{},[261,263,274,276,281],{"type":179,"value":262},"相比子程序复用，函数复用已经是巨大的进步",{"type":170,"tag":193,"props":264,"children":265},{},[266],{"type":170,"tag":197,"props":267,"children":271},{"href":268,"ariaDescribedBy":269,"dataFootnoteRef":164,"id":270},"#user-content-fn-fn-call",[201],"user-content-fnref-fn-call",[272],{"type":179,"value":273},"2",{"type":179,"value":275},"。类复用相比函数复用要更加抽象，因为它保存了函数和状态的集合；而设计模式比类复用在抽象上更胜一筹：设计模式不单单直接复用某个类，而是复用整个“功能网格”，把特定问题的解决方案相关的所有节点和通讯机制全部拷贝，固化下来，命名并形成标准。",{"type":170,"tag":217,"props":277,"children":278},{},[279],{"type":179,"value":280},"设计模式其实是使用面向对象编程语言时代码复用的高级形式，是面向对象发展壮大之路的必然的产物",{"type":179,"value":282},"。只要写代码，就会碰到复用性问题，四人帮偏好面向对象，所以“设计模式”只是他们用来传授的面向对象编程中的代码复用性经验的概括。换句话说，大部分情况下我们讨论的“设计模式”和“面向对象设计模式”完全等同。这也就解释了为什么非面向对象不可了。",{"type":170,"tag":175,"props":284,"children":285},{},[286],{"type":179,"value":287},"我们讨论一个新的问题，如果过滤掉设计模式中的面向对象成分，剩下的是些啥呢？",{"type":170,"tag":289,"props":290,"children":294},"pre",{"className":291,"code":292,"language":293,"meta":164,"style":164},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","console.log(DesignPatterns.filter(removeOO))\n","js",[295],{"type":170,"tag":296,"props":297,"children":298},"code",{"__ignoreMap":164},[299],{"type":170,"tag":300,"props":301,"children":304},"span",{"class":302,"line":303},"line",1,[305,311,317,323,328,332,337],{"type":170,"tag":300,"props":306,"children":308},{"style":307},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[309],{"type":179,"value":310},"console",{"type":170,"tag":300,"props":312,"children":314},{"style":313},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[315],{"type":179,"value":316},".",{"type":170,"tag":300,"props":318,"children":320},{"style":319},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[321],{"type":179,"value":322},"log",{"type":170,"tag":300,"props":324,"children":325},{"style":307},[326],{"type":179,"value":327},"(DesignPatterns",{"type":170,"tag":300,"props":329,"children":330},{"style":313},[331],{"type":179,"value":316},{"type":170,"tag":300,"props":333,"children":334},{"style":319},[335],{"type":179,"value":336},"filter",{"type":170,"tag":300,"props":338,"children":339},{"style":307},[340],{"type":179,"value":341},"(removeOO))\n",{"type":170,"tag":182,"props":343,"children":345},{"id":344},"设计模式的本质",[346],{"type":179,"value":344},{"type":170,"tag":175,"props":348,"children":349},{},[350,352,358,360,365,367,372],{"type":179,"value":351},"我们先直接删除上文关于设计模式的定义中的“面向对象”几个字，看看剩下些什么：设计模式是一种标准，它描述了",{"type":170,"tag":353,"props":354,"children":355},"del",{},[356],{"type":179,"value":357},"使用面向对象编程语言",{"type":179,"value":359},"解决问题的方式，是",{"type":170,"tag":353,"props":361,"children":362},{},[363],{"type":179,"value":364},"使用面向对象编程语言时",{"type":179,"value":366},"代码复用性的高级形式，是",{"type":170,"tag":353,"props":368,"children":369},{},[370],{"type":179,"value":371},"面向对象",{"type":179,"value":373},"发展壮大之路的必然的产物。",{"type":170,"tag":175,"props":375,"children":376},{},[377,379],{"type":179,"value":378},"句子有些不通顺，修补之后变成了：",{"type":170,"tag":217,"props":380,"children":381},{},[382],{"type":179,"value":383},"设计模式是一种标准，它描述了编程时解决问题的特定方式，是代码复用的高级形式及发展代码复用必然的产物。",{"type":170,"tag":175,"props":385,"children":386},{},[387],{"type":179,"value":388},"设计模式本质是什么？不言自明，它只是相关代码复用的一种抽象概念。",{"type":170,"tag":175,"props":390,"children":391},{},[392],{"type":179,"value":393},"说到代码复用，主要关系到代码组织。从函数复用，到使用设计模式，再到使用库、框架，三种代码复用方式的主要区别在于代码组织的粒度不同。",{"type":170,"tag":175,"props":395,"children":396},{},[397],{"type":179,"value":398},"函数复用比较简单，你可以写一个叫做 Add 的函数给两数相加，然后 Copy&Paste 到其他地方复用，或是把函数存放到 Utils.js 文件中，通过模块机制复用。为了了解如何使用某个函数，需要在使用前阅读注释。",{"type":170,"tag":175,"props":400,"children":401},{},[402],{"type":179,"value":403},"库和框架最为复杂，它们是组织了大量函数及实体形成的巨型代码片段。开发新项目时很少会花精力自研框架，一般都引现成的轮子直接开造。使用某库或框架前，必须详细阅读文档。",{"type":170,"tag":175,"props":405,"children":406},{},[407],{"type":179,"value":408},"设计模式则是单个或多个函数的组合（在 Java 中不是函数而是类），既可以在新项目里现写一个模式供使用，也可以引入社区现有的模块来复用。为了了解如何使用某个设计模式，需要提前了解该模式定义的实体以及实体是通讯机制。",{"type":170,"tag":175,"props":410,"children":411},{},[412],{"type":170,"tag":253,"props":413,"children":416},{"alt":414,"src":415},"函数、设计模式、框架间的升级关系","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210513145630.png?w=70",[],{"type":170,"tag":175,"props":418,"children":419},{},[420],{"type":179,"value":421},"设计模式作为最简单的实体和函数的组合，可看作函数的升级版或是框架的缩水版；去掉设计模式中的面向对象相关内容，就只剩下了函数。",{"type":170,"tag":175,"props":423,"children":424},{},[425],{"type":179,"value":426},"等等，“实体和实体间通讯机制”凭空消失了？",{"type":170,"tag":175,"props":428,"children":429},{},[430,432,437],{"type":179,"value":431},"并没有。但我想让他消失。下文将从 JavaScript 入手，介绍如何把设计模式的概念映射到语言特征中。语言特征可是个好东西呀！如果你同意抽象也像复用一样有函数复用、库和框架等不同复杂度的层次的话，那我认为",{"type":170,"tag":217,"props":433,"children":434},{},[435],{"type":179,"value":436},"语言特征就是抽象的基础了。除了语言本身以外，所有抽象的建立都依赖于语言特征",{"type":179,"value":438},"。把设计模式映射成语言特征后，我们就能跳出面向对象的禁锢，从新的、更高层的角度重新思考代码复用问题。",{"type":170,"tag":175,"props":440,"children":441},{},[442],{"type":179,"value":443},"回到正题，我们从 JS 开始说起。",{"type":170,"tag":182,"props":445,"children":447},{"id":446},"仿制设计模式",[448],{"type":179,"value":446},{"type":170,"tag":175,"props":450,"children":451},{},[452,454,459,470],{"type":179,"value":453},"编程语言并不是万能的。",{"type":170,"tag":217,"props":455,"children":456},{},[457],{"type":179,"value":458},"特定语言适合用来解决特定问题",{"type":170,"tag":193,"props":460,"children":461},{},[462],{"type":170,"tag":197,"props":463,"children":467},{"href":464,"ariaDescribedBy":465,"dataFootnoteRef":164,"id":466},"#user-content-fn-css",[201],"user-content-fnref-css",[468],{"type":179,"value":469},"3",{"type":179,"value":471},"。提到 JavaScript 诸多语言特征，其优点可以用寥寥三个词概括：“原型”、“对象”、“函数”。熟练掌握了这些内容，就能在 JS 的世界中游刃有余。",{"type":170,"tag":175,"props":473,"children":474},{},[475],{"type":170,"tag":253,"props":476,"children":479},{"alt":477,"src":478},"《JavaScript 精粹》VS《JavaScript 权威指南》","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200704/20200709104930.png",[],{"type":170,"tag":175,"props":481,"children":482},{},[483],{"type":179,"value":484},"传统面向对象语言以类封装状态，并向外暴露改变状态的方法。以下代码中的书本类为例：Book Class 保持有 name 状态，可以使用 getPrintName 方法返回包装后的 name 或使用 rename 修改 name 。",{"type":170,"tag":289,"props":486,"children":488},{"className":291,"code":487,"language":293,"meta":164,"style":164},"class Book {\n  constructor () {\n    this.name = '设计模式与JS魔法锅'\n  }\n  getPrintName () {\n    return '《' + this.name + '》'\n  }\n  rename (newName) {\n    this.name = newName\n  }\n}\n",[489],{"type":170,"tag":296,"props":490,"children":491},{"__ignoreMap":164},[492,512,530,572,581,599,658,666,695,720,728],{"type":170,"tag":300,"props":493,"children":494},{"class":302,"line":303},[495,501,507],{"type":170,"tag":300,"props":496,"children":498},{"style":497},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[499],{"type":179,"value":500},"class",{"type":170,"tag":300,"props":502,"children":504},{"style":503},"--shiki-light:#E2931D;--shiki-light-text-decoration:inherit;--shiki-default:#6F42C1;--shiki-default-text-decoration:inherit;--shiki-dark:#B392F0;--shiki-dark-text-decoration:inherit;--shiki-sepia:#A6E22E;--shiki-sepia-text-decoration:underline",[505],{"type":179,"value":506}," Book",{"type":170,"tag":300,"props":508,"children":509},{"style":313},[510],{"type":179,"value":511}," {\n",{"type":170,"tag":300,"props":513,"children":515},{"class":302,"line":514},2,[516,521,526],{"type":170,"tag":300,"props":517,"children":518},{"style":497},[519],{"type":179,"value":520},"  constructor",{"type":170,"tag":300,"props":522,"children":523},{"style":313},[524],{"type":179,"value":525}," ()",{"type":170,"tag":300,"props":527,"children":528},{"style":313},[529],{"type":179,"value":511},{"type":170,"tag":300,"props":531,"children":533},{"class":302,"line":532},3,[534,540,544,549,555,561,567],{"type":170,"tag":300,"props":535,"children":537},{"style":536},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[538],{"type":179,"value":539},"    this",{"type":170,"tag":300,"props":541,"children":542},{"style":313},[543],{"type":179,"value":316},{"type":170,"tag":300,"props":545,"children":546},{"style":307},[547],{"type":179,"value":548},"name",{"type":170,"tag":300,"props":550,"children":552},{"style":551},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[553],{"type":179,"value":554}," =",{"type":170,"tag":300,"props":556,"children":558},{"style":557},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[559],{"type":179,"value":560}," '",{"type":170,"tag":300,"props":562,"children":564},{"style":563},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[565],{"type":179,"value":566},"设计模式与JS魔法锅",{"type":170,"tag":300,"props":568,"children":569},{"style":557},[570],{"type":179,"value":571},"'\n",{"type":170,"tag":300,"props":573,"children":575},{"class":302,"line":574},4,[576],{"type":170,"tag":300,"props":577,"children":578},{"style":313},[579],{"type":179,"value":580},"  }\n",{"type":170,"tag":300,"props":582,"children":584},{"class":302,"line":583},5,[585,591,595],{"type":170,"tag":300,"props":586,"children":588},{"style":587},"--shiki-light:#E53935;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[589],{"type":179,"value":590},"  getPrintName",{"type":170,"tag":300,"props":592,"children":593},{"style":313},[594],{"type":179,"value":525},{"type":170,"tag":300,"props":596,"children":597},{"style":313},[598],{"type":179,"value":511},{"type":170,"tag":300,"props":600,"children":602},{"class":302,"line":601},6,[603,609,613,618,623,628,633,637,641,645,649,654],{"type":170,"tag":300,"props":604,"children":606},{"style":605},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[607],{"type":179,"value":608},"    return",{"type":170,"tag":300,"props":610,"children":611},{"style":557},[612],{"type":179,"value":560},{"type":170,"tag":300,"props":614,"children":615},{"style":563},[616],{"type":179,"value":617},"《",{"type":170,"tag":300,"props":619,"children":620},{"style":557},[621],{"type":179,"value":622},"'",{"type":170,"tag":300,"props":624,"children":625},{"style":551},[626],{"type":179,"value":627}," +",{"type":170,"tag":300,"props":629,"children":630},{"style":536},[631],{"type":179,"value":632}," this",{"type":170,"tag":300,"props":634,"children":635},{"style":313},[636],{"type":179,"value":316},{"type":170,"tag":300,"props":638,"children":639},{"style":307},[640],{"type":179,"value":548},{"type":170,"tag":300,"props":642,"children":643},{"style":551},[644],{"type":179,"value":627},{"type":170,"tag":300,"props":646,"children":647},{"style":557},[648],{"type":179,"value":560},{"type":170,"tag":300,"props":650,"children":651},{"style":563},[652],{"type":179,"value":653},"》",{"type":170,"tag":300,"props":655,"children":656},{"style":557},[657],{"type":179,"value":571},{"type":170,"tag":300,"props":659,"children":661},{"class":302,"line":660},7,[662],{"type":170,"tag":300,"props":663,"children":664},{"style":313},[665],{"type":179,"value":580},{"type":170,"tag":300,"props":667,"children":669},{"class":302,"line":668},8,[670,675,680,686,691],{"type":170,"tag":300,"props":671,"children":672},{"style":587},[673],{"type":179,"value":674},"  rename",{"type":170,"tag":300,"props":676,"children":677},{"style":313},[678],{"type":179,"value":679}," (",{"type":170,"tag":300,"props":681,"children":683},{"style":682},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[684],{"type":179,"value":685},"newName",{"type":170,"tag":300,"props":687,"children":688},{"style":313},[689],{"type":179,"value":690},")",{"type":170,"tag":300,"props":692,"children":693},{"style":313},[694],{"type":179,"value":511},{"type":170,"tag":300,"props":696,"children":698},{"class":302,"line":697},9,[699,703,707,711,715],{"type":170,"tag":300,"props":700,"children":701},{"style":536},[702],{"type":179,"value":539},{"type":170,"tag":300,"props":704,"children":705},{"style":313},[706],{"type":179,"value":316},{"type":170,"tag":300,"props":708,"children":709},{"style":307},[710],{"type":179,"value":548},{"type":170,"tag":300,"props":712,"children":713},{"style":551},[714],{"type":179,"value":554},{"type":170,"tag":300,"props":716,"children":717},{"style":307},[718],{"type":179,"value":719}," newName\n",{"type":170,"tag":300,"props":721,"children":723},{"class":302,"line":722},10,[724],{"type":170,"tag":300,"props":725,"children":726},{"style":313},[727],{"type":179,"value":580},{"type":170,"tag":300,"props":729,"children":731},{"class":302,"line":730},11,[732],{"type":170,"tag":300,"props":733,"children":734},{"style":313},[735],{"type":179,"value":736},"}\n",{"type":170,"tag":175,"props":738,"children":739},{},[740,742,753],{"type":179,"value":741},"放到早期版本 JS 中，想要封装变量，这不好办。早期版本的 JS 没有块级作用域，所以声明的变量会在整个代码或函数作用域中生效。为了仿制类的状态封装能力，知名布道者道格拉斯发明了一种“模块模式”",{"type":170,"tag":193,"props":743,"children":744},{},[745],{"type":170,"tag":197,"props":746,"children":750},{"href":747,"ariaDescribedBy":748,"dataFootnoteRef":164,"id":749},"#user-content-fn-module-pattern",[201],"user-content-fnref-module-pattern",[751],{"type":179,"value":752},"4",{"type":179,"value":754},"，即通过闭包来控制变量的访问权，代码如下：",{"type":170,"tag":289,"props":756,"children":758},{"className":291,"code":757,"language":293,"meta":164,"style":164},"const aBook = (() => {\n  var name = '设计模式与JS魔法锅'\n  function getPrintName () {\n    return '《' + name + '》'\n  }\n  function rename (newName) {\n    name = newName\n  }\n  return {\n    getPrintName,\n    rename\n  }\n})()\n",[759],{"type":170,"tag":296,"props":760,"children":761},{"__ignoreMap":164},[762,798,827,848,891,898,926,942,949,961,974,982,990],{"type":170,"tag":300,"props":763,"children":764},{"class":302,"line":303},[765,770,776,780,784,789,794],{"type":170,"tag":300,"props":766,"children":767},{"style":497},[768],{"type":179,"value":769},"const",{"type":170,"tag":300,"props":771,"children":773},{"style":772},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[774],{"type":179,"value":775}," aBook",{"type":170,"tag":300,"props":777,"children":778},{"style":551},[779],{"type":179,"value":554},{"type":170,"tag":300,"props":781,"children":782},{"style":307},[783],{"type":179,"value":679},{"type":170,"tag":300,"props":785,"children":786},{"style":313},[787],{"type":179,"value":788},"()",{"type":170,"tag":300,"props":790,"children":791},{"style":497},[792],{"type":179,"value":793}," =>",{"type":170,"tag":300,"props":795,"children":796},{"style":313},[797],{"type":179,"value":511},{"type":170,"tag":300,"props":799,"children":800},{"class":302,"line":514},[801,806,811,815,819,823],{"type":170,"tag":300,"props":802,"children":803},{"style":497},[804],{"type":179,"value":805},"  var",{"type":170,"tag":300,"props":807,"children":808},{"style":307},[809],{"type":179,"value":810}," name",{"type":170,"tag":300,"props":812,"children":813},{"style":551},[814],{"type":179,"value":554},{"type":170,"tag":300,"props":816,"children":817},{"style":557},[818],{"type":179,"value":560},{"type":170,"tag":300,"props":820,"children":821},{"style":563},[822],{"type":179,"value":566},{"type":170,"tag":300,"props":824,"children":825},{"style":557},[826],{"type":179,"value":571},{"type":170,"tag":300,"props":828,"children":829},{"class":302,"line":532},[830,835,840,844],{"type":170,"tag":300,"props":831,"children":832},{"style":497},[833],{"type":179,"value":834},"  function",{"type":170,"tag":300,"props":836,"children":837},{"style":319},[838],{"type":179,"value":839}," getPrintName",{"type":170,"tag":300,"props":841,"children":842},{"style":313},[843],{"type":179,"value":525},{"type":170,"tag":300,"props":845,"children":846},{"style":313},[847],{"type":179,"value":511},{"type":170,"tag":300,"props":849,"children":850},{"class":302,"line":574},[851,855,859,863,867,871,875,879,883,887],{"type":170,"tag":300,"props":852,"children":853},{"style":605},[854],{"type":179,"value":608},{"type":170,"tag":300,"props":856,"children":857},{"style":557},[858],{"type":179,"value":560},{"type":170,"tag":300,"props":860,"children":861},{"style":563},[862],{"type":179,"value":617},{"type":170,"tag":300,"props":864,"children":865},{"style":557},[866],{"type":179,"value":622},{"type":170,"tag":300,"props":868,"children":869},{"style":551},[870],{"type":179,"value":627},{"type":170,"tag":300,"props":872,"children":873},{"style":307},[874],{"type":179,"value":810},{"type":170,"tag":300,"props":876,"children":877},{"style":551},[878],{"type":179,"value":627},{"type":170,"tag":300,"props":880,"children":881},{"style":557},[882],{"type":179,"value":560},{"type":170,"tag":300,"props":884,"children":885},{"style":563},[886],{"type":179,"value":653},{"type":170,"tag":300,"props":888,"children":889},{"style":557},[890],{"type":179,"value":571},{"type":170,"tag":300,"props":892,"children":893},{"class":302,"line":583},[894],{"type":170,"tag":300,"props":895,"children":896},{"style":313},[897],{"type":179,"value":580},{"type":170,"tag":300,"props":899,"children":900},{"class":302,"line":601},[901,905,910,914,918,922],{"type":170,"tag":300,"props":902,"children":903},{"style":497},[904],{"type":179,"value":834},{"type":170,"tag":300,"props":906,"children":907},{"style":319},[908],{"type":179,"value":909}," rename",{"type":170,"tag":300,"props":911,"children":912},{"style":313},[913],{"type":179,"value":679},{"type":170,"tag":300,"props":915,"children":916},{"style":682},[917],{"type":179,"value":685},{"type":170,"tag":300,"props":919,"children":920},{"style":313},[921],{"type":179,"value":690},{"type":170,"tag":300,"props":923,"children":924},{"style":313},[925],{"type":179,"value":511},{"type":170,"tag":300,"props":927,"children":928},{"class":302,"line":660},[929,934,938],{"type":170,"tag":300,"props":930,"children":931},{"style":307},[932],{"type":179,"value":933},"    name",{"type":170,"tag":300,"props":935,"children":936},{"style":551},[937],{"type":179,"value":554},{"type":170,"tag":300,"props":939,"children":940},{"style":307},[941],{"type":179,"value":719},{"type":170,"tag":300,"props":943,"children":944},{"class":302,"line":668},[945],{"type":170,"tag":300,"props":946,"children":947},{"style":313},[948],{"type":179,"value":580},{"type":170,"tag":300,"props":950,"children":951},{"class":302,"line":697},[952,957],{"type":170,"tag":300,"props":953,"children":954},{"style":605},[955],{"type":179,"value":956},"  return",{"type":170,"tag":300,"props":958,"children":959},{"style":313},[960],{"type":179,"value":511},{"type":170,"tag":300,"props":962,"children":963},{"class":302,"line":722},[964,969],{"type":170,"tag":300,"props":965,"children":966},{"style":307},[967],{"type":179,"value":968},"    getPrintName",{"type":170,"tag":300,"props":970,"children":971},{"style":313},[972],{"type":179,"value":973},",\n",{"type":170,"tag":300,"props":975,"children":976},{"class":302,"line":730},[977],{"type":170,"tag":300,"props":978,"children":979},{"style":307},[980],{"type":179,"value":981},"    rename\n",{"type":170,"tag":300,"props":983,"children":985},{"class":302,"line":984},12,[986],{"type":170,"tag":300,"props":987,"children":988},{"style":313},[989],{"type":179,"value":580},{"type":170,"tag":300,"props":991,"children":993},{"class":302,"line":992},13,[994,999],{"type":170,"tag":300,"props":995,"children":996},{"style":313},[997],{"type":179,"value":998},"}",{"type":170,"tag":300,"props":1000,"children":1001},{"style":307},[1002],{"type":179,"value":1003},")()\n",{"type":170,"tag":175,"props":1005,"children":1006},{},[1007],{"type":179,"value":1008},"看起来，模块模式就像是语言能力不足的补充。把目光从遥远的模块模式收回到 2015 年 ES6 发布之后，JavaScript 语言特征得到增强，曾风靡一时的潮词模块模式几乎从网络中销声匿迹了。现在我们可以自由地使用类封装状态，不必再写因缺乏语义显得蹩脚的 IIFE 。",{"type":170,"tag":175,"props":1010,"children":1011},{},[1012],{"type":179,"value":1013},"我们再来看看面向对象中的常见的装饰器模式。",{"type":170,"tag":175,"props":1015,"children":1016},{},[1017],{"type":179,"value":1018},"假设你在维护一个开源项目，项目中有些过时的 API，你想在别人调用该 API 时提示一句“你好，此 API 将在下个版本移除”。这段代码可以这样写：",{"type":170,"tag":289,"props":1020,"children":1022},{"className":291,"code":1021,"language":293,"meta":164,"style":164},"// 目前不支持给对象属性使用装饰器，所以这是一段伪代码\nconst myAPI = {\n  @deprecate('WARN: oldAPI is decrapted, please use oldAPI_v2')\n  oldAPI() {}\n}\n",[1023],{"type":170,"tag":296,"props":1024,"children":1025},{"__ignoreMap":164},[1026,1035,1055,1091,1108],{"type":170,"tag":300,"props":1027,"children":1028},{"class":302,"line":303},[1029],{"type":170,"tag":300,"props":1030,"children":1032},{"style":1031},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[1033],{"type":179,"value":1034},"// 目前不支持给对象属性使用装饰器，所以这是一段伪代码\n",{"type":170,"tag":300,"props":1036,"children":1037},{"class":302,"line":514},[1038,1042,1047,1051],{"type":170,"tag":300,"props":1039,"children":1040},{"style":497},[1041],{"type":179,"value":769},{"type":170,"tag":300,"props":1043,"children":1044},{"style":772},[1045],{"type":179,"value":1046}," myAPI",{"type":170,"tag":300,"props":1048,"children":1049},{"style":551},[1050],{"type":179,"value":554},{"type":170,"tag":300,"props":1052,"children":1053},{"style":313},[1054],{"type":179,"value":511},{"type":170,"tag":300,"props":1056,"children":1057},{"class":302,"line":532},[1058,1063,1068,1073,1077,1082,1086],{"type":170,"tag":300,"props":1059,"children":1060},{"style":307},[1061],{"type":179,"value":1062},"  @",{"type":170,"tag":300,"props":1064,"children":1065},{"style":587},[1066],{"type":179,"value":1067},"deprecate",{"type":170,"tag":300,"props":1069,"children":1070},{"style":313},[1071],{"type":179,"value":1072},"(",{"type":170,"tag":300,"props":1074,"children":1075},{"style":557},[1076],{"type":179,"value":622},{"type":170,"tag":300,"props":1078,"children":1079},{"style":563},[1080],{"type":179,"value":1081},"WARN: oldAPI is decrapted, please use oldAPI_v2",{"type":170,"tag":300,"props":1083,"children":1084},{"style":557},[1085],{"type":179,"value":622},{"type":170,"tag":300,"props":1087,"children":1088},{"style":313},[1089],{"type":179,"value":1090},")\n",{"type":170,"tag":300,"props":1092,"children":1093},{"class":302,"line":574},[1094,1099,1103],{"type":170,"tag":300,"props":1095,"children":1096},{"style":587},[1097],{"type":179,"value":1098},"  oldAPI",{"type":170,"tag":300,"props":1100,"children":1101},{"style":313},[1102],{"type":179,"value":788},{"type":170,"tag":300,"props":1104,"children":1105},{"style":313},[1106],{"type":179,"value":1107}," {}\n",{"type":170,"tag":300,"props":1109,"children":1110},{"class":302,"line":583},[1111],{"type":170,"tag":300,"props":1112,"children":1113},{"style":313},[1114],{"type":179,"value":736},{"type":170,"tag":175,"props":1116,"children":1117},{},[1118,1120,1128],{"type":179,"value":1119},"若不是",{"type":170,"tag":197,"props":1121,"children":1125},{"href":1122,"rel":1123},"https://github.com/tc39/proposal-decorators",[1124],"nofollow",[1126],{"type":179,"value":1127},"装饰器提案",{"type":179,"value":1129},"的出现，我赌五毛，社区里不会有太多讨论装饰器模式的文章。不过大家若有留意过平常的代码，肯定会注意到其实高阶函数就是装饰器的具体实现。函数在 JS 中是一等公民，通过函数组合可以极其方便地仿制某些设计模式。比如，下代码中，使用“局部应用”函数仿制了一个工厂模式：",{"type":170,"tag":289,"props":1131,"children":1133},{"className":291,"code":1132,"language":293,"meta":164,"style":164},"const Partial = (fn, ...args) => (...rest) => fn(...args, ...rest)\n\nconst Adder = (a, b) => a + b\n\nconst add5 = Partial(Adder, 5)\n\nadd5(5) // >>> 10\nadd5(10) // >>> 15\n",[1134],{"type":170,"tag":296,"props":1135,"children":1136},{"__ignoreMap":164},[1137,1238,1247,1303,1310,1349,1356,1383],{"type":170,"tag":300,"props":1138,"children":1139},{"class":302,"line":303},[1140,1144,1150,1154,1158,1163,1168,1173,1178,1182,1186,1190,1195,1200,1204,1208,1213,1217,1221,1225,1229,1233],{"type":170,"tag":300,"props":1141,"children":1142},{"style":497},[1143],{"type":179,"value":769},{"type":170,"tag":300,"props":1145,"children":1147},{"style":1146},"--shiki-light:#90A4AE;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1148],{"type":179,"value":1149}," Partial",{"type":170,"tag":300,"props":1151,"children":1152},{"style":551},[1153],{"type":179,"value":554},{"type":170,"tag":300,"props":1155,"children":1156},{"style":313},[1157],{"type":179,"value":679},{"type":170,"tag":300,"props":1159,"children":1160},{"style":682},[1161],{"type":179,"value":1162},"fn",{"type":170,"tag":300,"props":1164,"children":1165},{"style":313},[1166],{"type":179,"value":1167},",",{"type":170,"tag":300,"props":1169,"children":1170},{"style":551},[1171],{"type":179,"value":1172}," ...",{"type":170,"tag":300,"props":1174,"children":1175},{"style":682},[1176],{"type":179,"value":1177},"args",{"type":170,"tag":300,"props":1179,"children":1180},{"style":313},[1181],{"type":179,"value":690},{"type":170,"tag":300,"props":1183,"children":1184},{"style":497},[1185],{"type":179,"value":793},{"type":170,"tag":300,"props":1187,"children":1188},{"style":313},[1189],{"type":179,"value":679},{"type":170,"tag":300,"props":1191,"children":1192},{"style":551},[1193],{"type":179,"value":1194},"...",{"type":170,"tag":300,"props":1196,"children":1197},{"style":682},[1198],{"type":179,"value":1199},"rest",{"type":170,"tag":300,"props":1201,"children":1202},{"style":313},[1203],{"type":179,"value":690},{"type":170,"tag":300,"props":1205,"children":1206},{"style":497},[1207],{"type":179,"value":793},{"type":170,"tag":300,"props":1209,"children":1210},{"style":319},[1211],{"type":179,"value":1212}," fn",{"type":170,"tag":300,"props":1214,"children":1215},{"style":307},[1216],{"type":179,"value":1072},{"type":170,"tag":300,"props":1218,"children":1219},{"style":551},[1220],{"type":179,"value":1194},{"type":170,"tag":300,"props":1222,"children":1223},{"style":307},[1224],{"type":179,"value":1177},{"type":170,"tag":300,"props":1226,"children":1227},{"style":313},[1228],{"type":179,"value":1167},{"type":170,"tag":300,"props":1230,"children":1231},{"style":551},[1232],{"type":179,"value":1172},{"type":170,"tag":300,"props":1234,"children":1235},{"style":307},[1236],{"type":179,"value":1237},"rest)\n",{"type":170,"tag":300,"props":1239,"children":1240},{"class":302,"line":514},[1241],{"type":170,"tag":300,"props":1242,"children":1244},{"emptyLinePlaceholder":1243},true,[1245],{"type":179,"value":1246},"\n",{"type":170,"tag":300,"props":1248,"children":1249},{"class":302,"line":532},[1250,1254,1259,1263,1267,1271,1275,1280,1284,1288,1293,1298],{"type":170,"tag":300,"props":1251,"children":1252},{"style":497},[1253],{"type":179,"value":769},{"type":170,"tag":300,"props":1255,"children":1256},{"style":1146},[1257],{"type":179,"value":1258}," Adder",{"type":170,"tag":300,"props":1260,"children":1261},{"style":551},[1262],{"type":179,"value":554},{"type":170,"tag":300,"props":1264,"children":1265},{"style":313},[1266],{"type":179,"value":679},{"type":170,"tag":300,"props":1268,"children":1269},{"style":682},[1270],{"type":179,"value":197},{"type":170,"tag":300,"props":1272,"children":1273},{"style":313},[1274],{"type":179,"value":1167},{"type":170,"tag":300,"props":1276,"children":1277},{"style":682},[1278],{"type":179,"value":1279}," b",{"type":170,"tag":300,"props":1281,"children":1282},{"style":313},[1283],{"type":179,"value":690},{"type":170,"tag":300,"props":1285,"children":1286},{"style":497},[1287],{"type":179,"value":793},{"type":170,"tag":300,"props":1289,"children":1290},{"style":307},[1291],{"type":179,"value":1292}," a ",{"type":170,"tag":300,"props":1294,"children":1295},{"style":551},[1296],{"type":179,"value":1297},"+",{"type":170,"tag":300,"props":1299,"children":1300},{"style":307},[1301],{"type":179,"value":1302}," b\n",{"type":170,"tag":300,"props":1304,"children":1305},{"class":302,"line":574},[1306],{"type":170,"tag":300,"props":1307,"children":1308},{"emptyLinePlaceholder":1243},[1309],{"type":179,"value":1246},{"type":170,"tag":300,"props":1311,"children":1312},{"class":302,"line":583},[1313,1317,1322,1326,1330,1335,1339,1345],{"type":170,"tag":300,"props":1314,"children":1315},{"style":497},[1316],{"type":179,"value":769},{"type":170,"tag":300,"props":1318,"children":1319},{"style":772},[1320],{"type":179,"value":1321}," add5",{"type":170,"tag":300,"props":1323,"children":1324},{"style":551},[1325],{"type":179,"value":554},{"type":170,"tag":300,"props":1327,"children":1328},{"style":319},[1329],{"type":179,"value":1149},{"type":170,"tag":300,"props":1331,"children":1332},{"style":307},[1333],{"type":179,"value":1334},"(Adder",{"type":170,"tag":300,"props":1336,"children":1337},{"style":313},[1338],{"type":179,"value":1167},{"type":170,"tag":300,"props":1340,"children":1342},{"style":1341},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1343],{"type":179,"value":1344}," 5",{"type":170,"tag":300,"props":1346,"children":1347},{"style":307},[1348],{"type":179,"value":1090},{"type":170,"tag":300,"props":1350,"children":1351},{"class":302,"line":601},[1352],{"type":170,"tag":300,"props":1353,"children":1354},{"emptyLinePlaceholder":1243},[1355],{"type":179,"value":1246},{"type":170,"tag":300,"props":1357,"children":1358},{"class":302,"line":660},[1359,1364,1368,1373,1378],{"type":170,"tag":300,"props":1360,"children":1361},{"style":319},[1362],{"type":179,"value":1363},"add5",{"type":170,"tag":300,"props":1365,"children":1366},{"style":307},[1367],{"type":179,"value":1072},{"type":170,"tag":300,"props":1369,"children":1370},{"style":1341},[1371],{"type":179,"value":1372},"5",{"type":170,"tag":300,"props":1374,"children":1375},{"style":307},[1376],{"type":179,"value":1377},") ",{"type":170,"tag":300,"props":1379,"children":1380},{"style":1031},[1381],{"type":179,"value":1382},"// >>> 10\n",{"type":170,"tag":300,"props":1384,"children":1385},{"class":302,"line":668},[1386,1390,1394,1399,1403],{"type":170,"tag":300,"props":1387,"children":1388},{"style":319},[1389],{"type":179,"value":1363},{"type":170,"tag":300,"props":1391,"children":1392},{"style":307},[1393],{"type":179,"value":1072},{"type":170,"tag":300,"props":1395,"children":1396},{"style":1341},[1397],{"type":179,"value":1398},"10",{"type":170,"tag":300,"props":1400,"children":1401},{"style":307},[1402],{"type":179,"value":1377},{"type":170,"tag":300,"props":1404,"children":1405},{"style":1031},[1406],{"type":179,"value":1407},"// >>> 15\n",{"type":170,"tag":175,"props":1409,"children":1410},{},[1411],{"type":179,"value":1412},"我猜你想咆哮：“工厂模式根本就不是这样写的！”。哈哈，别那么固执，变通一些嘛。我们现在讨论的设计模式是去除了面向对象之后的余留物，几乎只保留了设计模式的本质，复用。换句话说，Partial 是“函数工厂”，是“生成器”，“产出”了仍能接受一个参数的函数。",{"type":170,"tag":1414,"props":1415,"children":1416},"details",{},[1417,1419,1425,1426],{"type":179,"value":1418},"\n    ",{"type":170,"tag":1420,"props":1421,"children":1422},"summary",{},[1423],{"type":179,"value":1424},"我用到了类吗？",{"type":179,"value":1418},{"type":170,"tag":175,"props":1427,"children":1428},{},[1429],{"type":179,"value":1430},"没有。",{"type":170,"tag":1414,"props":1432,"children":1433},{},[1434,1435,1440,1441],{"type":179,"value":1418},{"type":170,"tag":1420,"props":1436,"children":1437},{},[1438],{"type":179,"value":1439},"用到了原型吗？",{"type":179,"value":1418},{"type":170,"tag":175,"props":1442,"children":1443},{},[1444],{"type":179,"value":1430},{"type":170,"tag":1414,"props":1446,"children":1447},{},[1448,1449,1454,1455],{"type":179,"value":1418},{"type":170,"tag":1420,"props":1450,"children":1451},{},[1452],{"type":179,"value":1453},"那我在写什么？",{"type":179,"value":1418},{"type":170,"tag":175,"props":1456,"children":1457},{},[1458],{"type":179,"value":1459},"函数。",{"type":170,"tag":175,"props":1461,"children":1462},{},[1463,1465,1482,1484,1489],{"type":179,"value":1464},"函数，函数而已！",{"type":170,"tag":217,"props":1466,"children":1467},{},[1468,1470,1480],{"type":179,"value":1469},"“函数是一等公民",{"type":170,"tag":193,"props":1471,"children":1472},{},[1473],{"type":170,"tag":197,"props":1474,"children":1478},{"href":1475,"ariaDescribedBy":1476,"dataFootnoteRef":164,"id":1477},"#user-content-fn-firstclass",[201],"user-content-fnref-firstclass",[1479],{"type":179,"value":1372},{"type":179,"value":1481},"”",{"type":179,"value":1483},"，这句话得背熟了，因为诸如“闭包”、“回调”等概念都和函数有关，",{"type":170,"tag":353,"props":1485,"children":1486},{},[1487],{"type":179,"value":1488},"面试经常会问道",{"type":179,"value":1490},"你迟早会用上的。若谈论设计模式脱离不开语言特征的话，那扯上函数绝对不会有任何问题。",{"type":170,"tag":175,"props":1492,"children":1493},{},[1494],{"type":179,"value":1495},"亲函数而远类的写法可以帮助我们消化许多种类的设计模式，我们再来看最后一种，代理模式。",{"type":170,"tag":175,"props":1497,"children":1498},{},[1499],{"type":179,"value":1500},"ES6 原生支持代理模式。对，就是 Vue3 里的那个“Proxy”，直译为“代理器”。社区有很多讲 Vue3 原理分析的文章，肯定绕不开 Proxy，这里不再赘述了。以下展示一个使用 Proxy 拦截对象操作的小例子。",{"type":170,"tag":289,"props":1502,"children":1504},{"className":291,"code":1503,"language":293,"meta":164,"style":164},"/* 使用 Proxy 代理对象，禁用对象中下划线开头的属性的访问 */\nconst proxy = new Proxy({}, {\n  set(target, key, value) {\n    invariant(key, 'set')\n    target[key] = value\n    return true\n  }\n})\n\nfunction invariant(key, action) {\n  if (key.startsWith('_')) {\n    throw new Error(`Invalid Key`)\n  }\n}\n\nproxy._prop = 'somevalue'\n// Error: Invalid Key\n",[1505],{"type":170,"tag":296,"props":1506,"children":1507},{"__ignoreMap":164},[1508,1516,1555,1598,1637,1669,1682,1689,1700,1707,1745,1797,1836,1843,1851,1859,1894],{"type":170,"tag":300,"props":1509,"children":1510},{"class":302,"line":303},[1511],{"type":170,"tag":300,"props":1512,"children":1513},{"style":1031},[1514],{"type":179,"value":1515},"/* 使用 Proxy 代理对象，禁用对象中下划线开头的属性的访问 */\n",{"type":170,"tag":300,"props":1517,"children":1518},{"class":302,"line":514},[1519,1523,1528,1532,1537,1542,1546,1551],{"type":170,"tag":300,"props":1520,"children":1521},{"style":497},[1522],{"type":179,"value":769},{"type":170,"tag":300,"props":1524,"children":1525},{"style":772},[1526],{"type":179,"value":1527}," proxy",{"type":170,"tag":300,"props":1529,"children":1530},{"style":551},[1531],{"type":179,"value":554},{"type":170,"tag":300,"props":1533,"children":1534},{"style":551},[1535],{"type":179,"value":1536}," new",{"type":170,"tag":300,"props":1538,"children":1539},{"style":319},[1540],{"type":179,"value":1541}," Proxy",{"type":170,"tag":300,"props":1543,"children":1544},{"style":307},[1545],{"type":179,"value":1072},{"type":170,"tag":300,"props":1547,"children":1548},{"style":313},[1549],{"type":179,"value":1550},"{},",{"type":170,"tag":300,"props":1552,"children":1553},{"style":313},[1554],{"type":179,"value":511},{"type":170,"tag":300,"props":1556,"children":1557},{"class":302,"line":532},[1558,1563,1567,1572,1576,1581,1585,1590,1594],{"type":170,"tag":300,"props":1559,"children":1560},{"style":587},[1561],{"type":179,"value":1562},"  set",{"type":170,"tag":300,"props":1564,"children":1565},{"style":313},[1566],{"type":179,"value":1072},{"type":170,"tag":300,"props":1568,"children":1569},{"style":682},[1570],{"type":179,"value":1571},"target",{"type":170,"tag":300,"props":1573,"children":1574},{"style":313},[1575],{"type":179,"value":1167},{"type":170,"tag":300,"props":1577,"children":1578},{"style":682},[1579],{"type":179,"value":1580}," key",{"type":170,"tag":300,"props":1582,"children":1583},{"style":313},[1584],{"type":179,"value":1167},{"type":170,"tag":300,"props":1586,"children":1587},{"style":682},[1588],{"type":179,"value":1589}," value",{"type":170,"tag":300,"props":1591,"children":1592},{"style":313},[1593],{"type":179,"value":690},{"type":170,"tag":300,"props":1595,"children":1596},{"style":313},[1597],{"type":179,"value":511},{"type":170,"tag":300,"props":1599,"children":1600},{"class":302,"line":574},[1601,1606,1611,1616,1620,1624,1629,1633],{"type":170,"tag":300,"props":1602,"children":1603},{"style":319},[1604],{"type":179,"value":1605},"    invariant",{"type":170,"tag":300,"props":1607,"children":1609},{"style":1608},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1610],{"type":179,"value":1072},{"type":170,"tag":300,"props":1612,"children":1613},{"style":307},[1614],{"type":179,"value":1615},"key",{"type":170,"tag":300,"props":1617,"children":1618},{"style":313},[1619],{"type":179,"value":1167},{"type":170,"tag":300,"props":1621,"children":1622},{"style":557},[1623],{"type":179,"value":560},{"type":170,"tag":300,"props":1625,"children":1626},{"style":563},[1627],{"type":179,"value":1628},"set",{"type":170,"tag":300,"props":1630,"children":1631},{"style":557},[1632],{"type":179,"value":622},{"type":170,"tag":300,"props":1634,"children":1635},{"style":1608},[1636],{"type":179,"value":1090},{"type":170,"tag":300,"props":1638,"children":1639},{"class":302,"line":583},[1640,1645,1650,1654,1659,1664],{"type":170,"tag":300,"props":1641,"children":1642},{"style":307},[1643],{"type":179,"value":1644},"    target",{"type":170,"tag":300,"props":1646,"children":1647},{"style":1608},[1648],{"type":179,"value":1649},"[",{"type":170,"tag":300,"props":1651,"children":1652},{"style":307},[1653],{"type":179,"value":1615},{"type":170,"tag":300,"props":1655,"children":1656},{"style":1608},[1657],{"type":179,"value":1658},"] ",{"type":170,"tag":300,"props":1660,"children":1661},{"style":551},[1662],{"type":179,"value":1663},"=",{"type":170,"tag":300,"props":1665,"children":1666},{"style":307},[1667],{"type":179,"value":1668}," value\n",{"type":170,"tag":300,"props":1670,"children":1671},{"class":302,"line":601},[1672,1676],{"type":170,"tag":300,"props":1673,"children":1674},{"style":605},[1675],{"type":179,"value":608},{"type":170,"tag":300,"props":1677,"children":1679},{"style":1678},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1680],{"type":179,"value":1681}," true\n",{"type":170,"tag":300,"props":1683,"children":1684},{"class":302,"line":660},[1685],{"type":170,"tag":300,"props":1686,"children":1687},{"style":313},[1688],{"type":179,"value":580},{"type":170,"tag":300,"props":1690,"children":1691},{"class":302,"line":668},[1692,1696],{"type":170,"tag":300,"props":1693,"children":1694},{"style":313},[1695],{"type":179,"value":998},{"type":170,"tag":300,"props":1697,"children":1698},{"style":307},[1699],{"type":179,"value":1090},{"type":170,"tag":300,"props":1701,"children":1702},{"class":302,"line":697},[1703],{"type":170,"tag":300,"props":1704,"children":1705},{"emptyLinePlaceholder":1243},[1706],{"type":179,"value":1246},{"type":170,"tag":300,"props":1708,"children":1709},{"class":302,"line":722},[1710,1715,1720,1724,1728,1732,1737,1741],{"type":170,"tag":300,"props":1711,"children":1712},{"style":497},[1713],{"type":179,"value":1714},"function",{"type":170,"tag":300,"props":1716,"children":1717},{"style":319},[1718],{"type":179,"value":1719}," invariant",{"type":170,"tag":300,"props":1721,"children":1722},{"style":313},[1723],{"type":179,"value":1072},{"type":170,"tag":300,"props":1725,"children":1726},{"style":682},[1727],{"type":179,"value":1615},{"type":170,"tag":300,"props":1729,"children":1730},{"style":313},[1731],{"type":179,"value":1167},{"type":170,"tag":300,"props":1733,"children":1734},{"style":682},[1735],{"type":179,"value":1736}," action",{"type":170,"tag":300,"props":1738,"children":1739},{"style":313},[1740],{"type":179,"value":690},{"type":170,"tag":300,"props":1742,"children":1743},{"style":313},[1744],{"type":179,"value":511},{"type":170,"tag":300,"props":1746,"children":1747},{"class":302,"line":730},[1748,1753,1757,1761,1765,1770,1774,1778,1783,1787,1792],{"type":170,"tag":300,"props":1749,"children":1750},{"style":605},[1751],{"type":179,"value":1752},"  if",{"type":170,"tag":300,"props":1754,"children":1755},{"style":1608},[1756],{"type":179,"value":679},{"type":170,"tag":300,"props":1758,"children":1759},{"style":307},[1760],{"type":179,"value":1615},{"type":170,"tag":300,"props":1762,"children":1763},{"style":313},[1764],{"type":179,"value":316},{"type":170,"tag":300,"props":1766,"children":1767},{"style":319},[1768],{"type":179,"value":1769},"startsWith",{"type":170,"tag":300,"props":1771,"children":1772},{"style":1608},[1773],{"type":179,"value":1072},{"type":170,"tag":300,"props":1775,"children":1776},{"style":557},[1777],{"type":179,"value":622},{"type":170,"tag":300,"props":1779,"children":1780},{"style":563},[1781],{"type":179,"value":1782},"_",{"type":170,"tag":300,"props":1784,"children":1785},{"style":557},[1786],{"type":179,"value":622},{"type":170,"tag":300,"props":1788,"children":1789},{"style":1608},[1790],{"type":179,"value":1791},")) ",{"type":170,"tag":300,"props":1793,"children":1794},{"style":313},[1795],{"type":179,"value":1796},"{\n",{"type":170,"tag":300,"props":1798,"children":1799},{"class":302,"line":984},[1800,1805,1809,1814,1818,1823,1828,1832],{"type":170,"tag":300,"props":1801,"children":1802},{"style":605},[1803],{"type":179,"value":1804},"    throw",{"type":170,"tag":300,"props":1806,"children":1807},{"style":551},[1808],{"type":179,"value":1536},{"type":170,"tag":300,"props":1810,"children":1811},{"style":319},[1812],{"type":179,"value":1813}," Error",{"type":170,"tag":300,"props":1815,"children":1816},{"style":1608},[1817],{"type":179,"value":1072},{"type":170,"tag":300,"props":1819,"children":1820},{"style":557},[1821],{"type":179,"value":1822},"`",{"type":170,"tag":300,"props":1824,"children":1825},{"style":563},[1826],{"type":179,"value":1827},"Invalid Key",{"type":170,"tag":300,"props":1829,"children":1830},{"style":557},[1831],{"type":179,"value":1822},{"type":170,"tag":300,"props":1833,"children":1834},{"style":1608},[1835],{"type":179,"value":1090},{"type":170,"tag":300,"props":1837,"children":1838},{"class":302,"line":992},[1839],{"type":170,"tag":300,"props":1840,"children":1841},{"style":313},[1842],{"type":179,"value":580},{"type":170,"tag":300,"props":1844,"children":1846},{"class":302,"line":1845},14,[1847],{"type":170,"tag":300,"props":1848,"children":1849},{"style":313},[1850],{"type":179,"value":736},{"type":170,"tag":300,"props":1852,"children":1854},{"class":302,"line":1853},15,[1855],{"type":170,"tag":300,"props":1856,"children":1857},{"emptyLinePlaceholder":1243},[1858],{"type":179,"value":1246},{"type":170,"tag":300,"props":1860,"children":1862},{"class":302,"line":1861},16,[1863,1868,1872,1877,1881,1885,1890],{"type":170,"tag":300,"props":1864,"children":1865},{"style":307},[1866],{"type":179,"value":1867},"proxy",{"type":170,"tag":300,"props":1869,"children":1870},{"style":313},[1871],{"type":179,"value":316},{"type":170,"tag":300,"props":1873,"children":1874},{"style":307},[1875],{"type":179,"value":1876},"_prop ",{"type":170,"tag":300,"props":1878,"children":1879},{"style":551},[1880],{"type":179,"value":1663},{"type":170,"tag":300,"props":1882,"children":1883},{"style":557},[1884],{"type":179,"value":560},{"type":170,"tag":300,"props":1886,"children":1887},{"style":563},[1888],{"type":179,"value":1889},"somevalue",{"type":170,"tag":300,"props":1891,"children":1892},{"style":557},[1893],{"type":179,"value":571},{"type":170,"tag":300,"props":1895,"children":1897},{"class":302,"line":1896},17,[1898],{"type":170,"tag":300,"props":1899,"children":1900},{"style":1031},[1901],{"type":179,"value":1902},"// Error: Invalid Key\n",{"type":170,"tag":175,"props":1904,"children":1905},{},[1906],{"type":179,"value":1907},"若脱离 ES 6，代理模式会变成什么？",{"type":170,"tag":175,"props":1909,"children":1910},{},[1911],{"type":179,"value":1912},"会变成一团带有 Proxy Patterns 注释的函数，会被某个 GitHub 上的库吸收下放到 Readme 中亦或是变成社区中新增的几篇“JS 中的代理模式”的博客... 害，无所谓了。",{"type":170,"tag":182,"props":1914,"children":1916},{"id":1915},"设计模式的消融",[1917],{"type":179,"value":1915},{"type":170,"tag":175,"props":1919,"children":1920},{},[1921,1926],{"type":170,"tag":217,"props":1922,"children":1923},{},[1924],{"type":179,"value":1925},"总的来说，设计模式无非有三种作用：创建对象、组合对象以及处理对象的依赖",{"type":179,"value":1927},"。面向对象设计模式所代表的复用性，只能在面向对象的上下文中使用。跳出面向对象，你会发现代码复用的层次可以更加开放，下至语言特征，上至框架。",{"type":170,"tag":175,"props":1929,"children":1930},{},[1931],{"type":179,"value":1932},"作为抽象的最低层级，JS 语言特征，离不开日益见新的语言规范。上文总结的设计模式与语言特征的重叠之处，可以概括为以下两点：",{"type":170,"tag":1934,"props":1935,"children":1936},"ul",{},[1937,1943],{"type":170,"tag":1938,"props":1939,"children":1940},"li",{},[1941],{"type":179,"value":1942},"若语言本身孱弱时，可通过语言特征的再上层抽象，如函数，来提高复用的层次（即发明一种新的设计模式）；",{"type":170,"tag":1938,"props":1944,"children":1945},{},[1946],{"type":179,"value":1947},"当语言逐渐强大时，设计模式的概念也随之弱化；",{"type":170,"tag":175,"props":1949,"children":1950},{},[1951],{"type":179,"value":1952},"听起来颇有些“设计模式是对语言能力不足的补充”的味道，难道说我们要开始编程语言的圣战？这让我回想起 Paul Graham 在《黑客与画家》中描写到他对“强大语言”的赤裸裸的崇拜:",{"type":170,"tag":171,"props":1954,"children":1955},{},[1956],{"type":170,"tag":175,"props":1957,"children":1958},{},[1959,1961,1965,1967,1970,1972,1975,1977,1980,1982],{"type":179,"value":1960},"如果你想解决一个困难的问题，",{"type":170,"tag":1962,"props":1963,"children":1964},"br",{},[],{"type":179,"value":1966},"\n关键不是你使用的语言是否强大，而是好几个因素同时发挥作用：",{"type":170,"tag":1962,"props":1968,"children":1969},{},[],{"type":179,"value":1971},"\n（a）使用一种强大的语言；",{"type":170,"tag":1962,"props":1973,"children":1974},{},[],{"type":179,"value":1976},"\n（b）为这个难题写一个真实世界中的编译器；",{"type":170,"tag":1962,"props":1978,"children":1979},{},[],{"type":179,"value":1981},"\n（c）或者... 你把自己变成这个难题的人肉编译器。\n",{"type":170,"tag":548,"props":1983,"children":1984},{},[1985],{"type":179,"value":1986},"Paul Graham",{"type":170,"tag":175,"props":1988,"children":1989},{},[1990],{"type":179,"value":1991},"Paul Graham 就觉得设计模式就是一种对语言能力不足的妥协，“语言的编程能力越强大，写出来的程序就越短”。当然，就算有一种语言可以强大到和破除面向对象设计模式的神话，关于语言的表达能力强弱的争论也不会停止。不过好消息是，脱离场景谈语言一定是错误的，正如没有人会指望用汇编来编写 Web 程序。",{"type":170,"tag":175,"props":1993,"children":1994},{},[1995],{"type":179,"value":1996},"我们没必要去追求极致的编程语言表达力，表达力和复杂度往往是正相关的，就像世界上所有的语言的法阵都会伴随着词语的演进、读音的兴替以及对错误语法的包容，但很少有人说（或敢说）“你看，白话文比起文言文来说真是不够格啊”。",{"type":170,"tag":175,"props":1998,"children":1999},{},[2000],{"type":179,"value":2001},"脱离面向对象，我们也可以谈论设计模式，因为我们聊的就是代码复用。就算使用函数式、声明式的语言解决问题，也许有特定范式可遵循。请想象一下 CSS 中的设计模式。嗯？CSS 有设计模式么？私以为有。特异性、继承和层叠这三种语言特征就是 CSS 的设计模式；在这三种基础特性之上建立起来的各种代码组织方案/命名方案（如 OOCSS、Atomic CSS），也算。",{"type":170,"tag":175,"props":2003,"children":2004},{},[2005,2010],{"type":170,"tag":217,"props":2006,"children":2007},{},[2008],{"type":179,"value":2009},"唯一不变的，只有抽象的复用",{"type":179,"value":2011},"。我们做的一切工作，只是在抽象出不同层次的代码复用的同时，尽可能把代码组织成容易理解的形式。重要的不是记住某个设计模式中的实体以及实体是如何通讯的，而是要理解该设计模式所代表的抽象的体量适合的场景。",{"type":170,"tag":182,"props":2013,"children":2015},{"id":2014},"语言的魔法锅",[2016],{"type":179,"value":2014},{"type":170,"tag":171,"props":2018,"children":2019},{},[2020],{"type":170,"tag":175,"props":2021,"children":2022},{},[2023,2025],{"type":179,"value":2024},"在威尔士神话中，有一口神奇的大锅，加入特定配方熬制上一年零一天后，便能萃取出三滴解决任何难题的灵药。\n",{"type":170,"tag":548,"props":2026,"children":2027},{},[2028],{"type":179,"value":2029},"《塔列辛传奇》",{"type":170,"tag":175,"props":2031,"children":2032},{},[2033,2035,2042,2044,2051,2053,2064,2066,2077],{"type":179,"value":2034},"JavaScript 的火热日益见长，前端社区",{"type":170,"tag":197,"props":2036,"children":2039},{"href":2037,"rel":2038},"https://githut.info/",[1124],[2040],{"type":179,"value":2041},"越加活跃",{"type":179,"value":2043},"，规范也",{"type":170,"tag":197,"props":2045,"children":2048},{"href":2046,"rel":2047},"https://tc39.es/ecma262/",[1124],[2049],{"type":179,"value":2050},"日益见新",{"type":179,"value":2052},"。ESNeeext 已经往魔法锅中加了许多新材料，这是好事（其实我满心期待它直接把锅塞满）。新的语言特征能带来了更多的可能性，就目前而言，新特征大概率能增加语义，增强表达力、降低思维负担",{"type":170,"tag":193,"props":2054,"children":2055},{},[2056],{"type":170,"tag":197,"props":2057,"children":2061},{"href":2058,"ariaDescribedBy":2059,"dataFootnoteRef":164,"id":2060},"#user-content-fn-if-one-word",[201],"user-content-fnref-if-one-word",[2062],{"type":179,"value":2063},"6",{"type":179,"value":2065},"。尽管把材料往大锅中塞吧",{"type":170,"tag":193,"props":2067,"children":2068},{},[2069],{"type":170,"tag":197,"props":2070,"children":2074},{"href":2071,"ariaDescribedBy":2072,"dataFootnoteRef":164,"id":2073},"#user-content-fn-how-js-works",[201],"user-content-fnref-how-js-works",[2075],{"type":179,"value":2076},"7",{"type":179,"value":2078},"！让我们一同祈祷萃取出灵药的一天早日到来！",{"type":170,"tag":175,"props":2080,"children":2081},{},[2082],{"type":179,"value":2083},"以下就用魔法锅的故事作为文章结尾，这是一个颇有意思的传奇故事。",{"type":170,"tag":175,"props":2085,"children":2086},{},[2087],{"type":170,"tag":253,"props":2088,"children":2091},{"alt":2089,"src":2090},"炼金术 | 维基百科","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200704/20200713074400.png",[],{"type":170,"tag":175,"props":2093,"children":2094},{},[2095],{"type":179,"value":2096},"在爱尔兰一个隐秘的角落，住着一个精通智慧与魔法的巫师，凯丽杜恩（Ceridwen）。她能力超凡，偏偏却生了一个丑陋的儿子。所以这位母亲竭尽所能想将智慧传授给他，以弥补其外表的丑陋。她辗转于各种巫术与秘仪，最后，总算在一本隐秘的魔书中找到了灵感。",{"type":170,"tag":175,"props":2098,"children":2099},{},[2100],{"type":179,"value":2101},"魔书将秘密告诉凯丽杜恩：她需要使用一口大的魔法锅，填满红山花、小麦、火盐、精灵耳、直立根和灵尘，用大火熬制上一年零一天。最终会生成一锅致命毒物，但溅出的前三滴汁液却是充满“预言之灵”的智慧灵药。",{"type":170,"tag":175,"props":2103,"children":2104},{},[2105],{"type":179,"value":2106},"很快，熬制魔法锅的工作在凯丽杜恩的安排下有条不紊地进行，一个名字未知的盲人被派来搅拌大锅，年轻人巴赫则负责烧它下面的火。",{"type":170,"tag":175,"props":2108,"children":2109},{},[2110],{"type":179,"value":2111},"星象在天空中咯咯响地平移着，太阳和月亮绕着地球转了一轮又一轮... 随着时间推移，锅中的草药效力变得越来越强。看着咕嘟嘟冒着气泡的大锅，凯丽杜恩觉得很是满意，她便躺在温暖的锅边睡着了。",{"type":170,"tag":175,"props":2113,"children":2114},{},[2115,2117],{"type":179,"value":2116},"就在此时，意外发生了。翻腾着热气的大锅，意外地溅出了几点液体在年轻人巴赫的手指上，而巴赫居然不假思索地将手指吮吸地干干净净。和魔书的预言一样，巴赫立马就获得了智慧。他瞬间通晓了火焰的舞蹈和水的诉说，山的尊严和风的呢喃... 他知晓了无数秘密，以及... ",{"type":170,"tag":217,"props":2118,"children":2119},{},[2120],{"type":179,"value":2121},"凯丽杜恩肯定会杀了他！",{"type":170,"tag":175,"props":2123,"children":2124},{},[2125],{"type":179,"value":2126},"慌乱中，巴赫变成一只野兔夺路而逃，而凯丽杜恩惊醒后赶忙变成猎犬一路追踪过去。巴赫变成天空中的鸽子，她就变成一只鹰；他变成一头奔跑的鹿，她就变成一只草原上的狼；他化身为谷仓中的一粒麦粒，她就变成一只啄个不停老母鸡...",{"type":170,"tag":175,"props":2128,"children":2129},{},[2130],{"type":179,"value":2131},"这两人也许一直较量着，直到今天。",{"type":170,"tag":182,"props":2133,"children":2135},{"id":2134},"阅读更多",[2136],{"type":179,"value":2134},{"type":170,"tag":1934,"props":2138,"children":2139},{},[2140,2150,2160],{"type":170,"tag":1938,"props":2141,"children":2142},{},[2143],{"type":170,"tag":197,"props":2144,"children":2147},{"href":2145,"rel":2146},"https://www.jdon.com/37356",[1124],[2148],{"type":179,"value":2149},"15 年后 GoF 设计模式作者再谈设计模式",{"type":170,"tag":1938,"props":2151,"children":2152},{},[2153],{"type":170,"tag":197,"props":2154,"children":2157},{"href":2155,"rel":2156},"https://www.zhihu.com/question/37009570",[1124],[2158],{"type":179,"value":2159},"为什么不能乱点技能树",{"type":170,"tag":1938,"props":2161,"children":2162},{},[2163],{"type":170,"tag":197,"props":2164,"children":2167},{"href":2165,"rel":2166},"https://mp.weixin.qq.com/s?src=11&timestamp=1651051411&ver=3764&signature=AiaMcpc*LLVNlmVWIHaOvu4sThNq8OFp8ckqlVllLSohG8dWn**P3unuBhRwZAEND0uJdnurJtHvE6IKlBYAUUwuvRYknXkKje6CzOZaQBxRPIlnN4kwtzYsfa8fxKSM&new=1",[1124],[2168],{"type":179,"value":2169},"超越库和框架的技术创新",{"type":170,"tag":175,"props":2171,"children":2172},{},[2173],{"type":179,"value":2174},"希望本文能对你有所帮助，也欢迎各位批评文中观点或指出错误。",{"type":170,"tag":175,"props":2176,"children":2177},{},[2178,2180,2187,2189,2196],{"type":179,"value":2179},"想看看这篇文章是如何被创造的？你能从我的",{"type":170,"tag":197,"props":2181,"children":2184},{"href":2182,"rel":2183},"https://github.com/Lionad-Morotar/blogs",[1124],[2185],{"type":179,"value":2186},"博客项目",{"type":179,"value":2188},"中找到答案~ 欢迎 Star & Follow~ 也请大家多来我的",{"type":170,"tag":197,"props":2190,"children":2193},{"href":2191,"rel":2192},"https://www.lionad.art",[1124],[2194],{"type":179,"value":2195},"线上博客逛逛",{"type":179,"value":2197},"，排版超 Nice 哦~",{"type":170,"tag":2199,"props":2200,"children":2203},"section",{"className":2201,"dataFootnotes":164},[2202],"footnotes",[2204,2211],{"type":170,"tag":182,"props":2205,"children":2208},{"className":2206,"id":201},[2207],"sr-only",[2209],{"type":179,"value":2210},"Footnotes",{"type":170,"tag":2212,"props":2213,"children":2214},"ol",{},[2215,2230,2252,2265,2286,2299,2312],{"type":170,"tag":1938,"props":2216,"children":2218},{"id":2217},"user-content-fn-%E6%96%87%E5%8C%96",[2219,2221],{"type":179,"value":2220},"非贬义。 ",{"type":170,"tag":197,"props":2222,"children":2227},{"href":2223,"ariaLabel":2224,"className":2225,"dataFootnoteBackref":164},"#user-content-fnref-%E6%96%87%E5%8C%96","Back to reference 1",[2226],"data-footnote-backref",[2228],{"type":179,"value":2229},"↩",{"type":170,"tag":1938,"props":2231,"children":2233},{"id":2232},"user-content-fn-fn-call",[2234,2236,2243,2245],{"type":179,"value":2235},"见：",{"type":170,"tag":197,"props":2237,"children":2240},{"href":2238,"rel":2239},"https://zhuanlan.zhihu.com/p/95741316",[1124],[2241],{"type":179,"value":2242},"子程序（函数）考古学",{"type":179,"value":2244}," ",{"type":170,"tag":197,"props":2246,"children":2250},{"href":2247,"ariaLabel":2248,"className":2249,"dataFootnoteBackref":164},"#user-content-fnref-fn-call","Back to reference 2",[2226],[2251],{"type":179,"value":2229},{"type":170,"tag":1938,"props":2253,"children":2255},{"id":2254},"user-content-fn-css",[2256,2258],{"type":179,"value":2257},"试试使用 CSS 去写游戏？即便可行，但过程也会让人无比沮丧。 ",{"type":170,"tag":197,"props":2259,"children":2263},{"href":2260,"ariaLabel":2261,"className":2262,"dataFootnoteBackref":164},"#user-content-fnref-css","Back to reference 3",[2226],[2264],{"type":179,"value":2229},{"type":170,"tag":1938,"props":2266,"children":2268},{"id":2267},"user-content-fn-module-pattern",[2269,2271,2277,2279],{"type":179,"value":2270},"此模块模式并非传统面向对象中的模块模式，后者的定义见：",{"type":170,"tag":197,"props":2272,"children":2275},{"href":2273,"rel":2274},"https://www.jdon.com/52843",[1124],[2276],{"type":179,"value":2273},{"type":179,"value":2278},"。 ",{"type":170,"tag":197,"props":2280,"children":2284},{"href":2281,"ariaLabel":2282,"className":2283,"dataFootnoteBackref":164},"#user-content-fnref-module-pattern","Back to reference 4",[2226],[2285],{"type":179,"value":2229},{"type":170,"tag":1938,"props":2287,"children":2289},{"id":2288},"user-content-fn-firstclass",[2290,2292],{"type":179,"value":2291},"且叫且珍惜，说不定以后就听不到“一等公民”这种叫法啦。 ",{"type":170,"tag":197,"props":2293,"children":2297},{"href":2294,"ariaLabel":2295,"className":2296,"dataFootnoteBackref":164},"#user-content-fnref-firstclass","Back to reference 5",[2226],[2298],{"type":179,"value":2229},{"type":170,"tag":1938,"props":2300,"children":2302},{"id":2301},"user-content-fn-if-one-word",[2303,2305],{"type":179,"value":2304},"用一个单词就能达意时就不需要用一个句子。 ",{"type":170,"tag":197,"props":2306,"children":2310},{"href":2307,"ariaLabel":2308,"className":2309,"dataFootnoteBackref":164},"#user-content-fnref-if-one-word","Back to reference 6",[2226],[2311],{"type":179,"value":2229},{"type":170,"tag":1938,"props":2313,"children":2315},{"id":2314},"user-content-fn-how-js-works",[2316,2318],{"type":179,"value":2317},"语言特征并不总是银弹，类似观点见道格拉斯的《How JS Works》 ",{"type":170,"tag":197,"props":2319,"children":2323},{"href":2320,"ariaLabel":2321,"className":2322,"dataFootnoteBackref":164},"#user-content-fnref-how-js-works","Back to reference 7",[2226],[2324],{"type":179,"value":2229},{"type":170,"tag":2326,"props":2327,"children":2328},"style",{},[2329],{"type":179,"value":2330},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":164,"searchDepth":514,"depth":514,"links":2332},[2333,2334,2335,2336,2337,2338,2339,2340],{"id":184,"depth":514,"text":184},{"id":236,"depth":514,"text":236},{"id":344,"depth":514,"text":344},{"id":446,"depth":514,"text":446},{"id":1915,"depth":514,"text":1915},{"id":2014,"depth":514,"text":2014},{"id":2134,"depth":514,"text":2134},{"id":201,"depth":514,"text":2210},"markdown","content:2.articles:1107.design-patterns-and-js-magic-pot.md","content","2.articles/1107.design-patterns-and-js-magic-pot.md","2.articles/1107.design-patterns-and-js-magic-pot","md",[2348,2350],{"_path":73,"title":72,"description":2349},"本文介绍了几种通过CSS实现的常见阴影效果如单侧投影、空心投影、投影动画、彩色阴影、长投影和倒影，以及尝试使用SVG模拟材质特性如粗糙度及光学效应如菲尼尔效应生成了几种特殊的纹理，最后通过一个CSS绘制真实书本案例介绍了实战中的一些细节。",{"_path":79,"title":78,"description":2351},"上一篇讲 anysort 的文章说到因网易云音乐的歌单排序功能较弱，我们自己实现的用来给歌单自定义排序的排序库的思路。这篇文章在排序库的基础上，介绍了其 TypeScript 类型实现。",1750854362829]