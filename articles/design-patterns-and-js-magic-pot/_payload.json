[{"data":1,"prerenderedAt":2576},["Reactive",2],{"navigation":3,"/articles/design-patterns-and-js-magic-pot":386,"/articles/design-patterns-and-js-magic-pot-surround":2571},[4,32,80,96,123,129,135,369,375,381],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"Bit","/gists/bit",{"title":148,"_path":149},"图片模糊","/gists/blur",{"title":151,"_path":152},"渲染相关笔记","/gists/c4d",{"title":154,"_path":155},"CDN 问题记录","/gists/cdn",{"title":157,"_path":158},"消毒剂","/gists/cleaner",{"title":160,"_path":161},"Windows Command","/gists/cmd",{"title":163,"_path":164},"Command","/gists/command",{"title":166,"_path":167},"复杂科学","/gists/complexity-science",{"title":169,"_path":170},"宇宙","/gists/cosmos",{"title":172,"_path":173},"C++","/gists/cpp",{"title":175,"_path":176},"Data Structure","/gists/data-structure",{"title":178,"_path":179},"DEPRESSION","/gists/depression",{"title":181,"_path":182},"设计模式","/gists/design-patterns",{"title":184,"_path":185},"Developer Experience","/gists/developer-experience",{"title":187,"_path":188},"Device Metrics","/gists/device-metrix",{"title":190,"_path":191},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":193,"_path":194},"正则表达式","/gists/eegex",{"title":196,"_path":197},"Emoji","/gists/emoji",{"title":199,"_path":200},"工程","/gists/engineering",{"title":202,"_path":203},"熵","/gists/entropy",{"title":205,"_path":206},"Environment","/gists/environment",{"title":208,"_path":209},"Erlang","/gists/erlang",{"title":211,"_path":212},"逃离塔克夫","/gists/escape-from-tarkov",{"title":214,"_path":215},"ESNext (ES6-ES11)","/gists/esnext",{"title":217,"_path":218},"Eval！","/gists/eval",{"title":220,"_path":221},"Flutter","/gists/flutter",{"title":223,"_path":224},"字体","/gists/font",{"title":226,"_path":227},"JS 函数式编程","/gists/functional",{"title":229,"_path":230},"Google C++ Standard","/gists/google-cpp-standard",{"title":232,"_path":233},"双向链接完全体","/gists/graph",{"title":235,"_path":236},"Hardwares","/gists/hardwares",{"title":238,"_path":239},"哈希冲突","/gists/hash-collision",{"title":241,"_path":242},"信息设计","/gists/information-design",{"title":244,"_path":245},"InstantPage","/gists/instant.page",{"title":247,"_path":248},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":250,"_path":251},"KVStore","/gists/key-value-db",{"title":253,"_path":254},"Kubernetes","/gists/kubernetes",{"title":256,"_path":257},"Makefile","/gists/makefile",{"title":259,"_path":260},"Markdown Inline Style","/gists/markdown-nice",{"title":262,"_path":263},"小程序","/gists/miniapp",{"title":265,"_path":266},"减小页面快照体积","/gists/minify-html",{"title":268,"_path":269},"mklink","/gists/mklink",{"title":271,"_path":272},"Mock","/gists/mock",{"title":274,"_path":275},"多端应用","/gists/multy-end-app",{"title":277,"_path":278},"神经科学","/gists/neuroscience",{"title":280,"_path":281},"OO","/gists/oo",{"title":283,"_path":284},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":286,"_path":287},"人物","/gists/person",{"title":289,"_path":290},"PInvoke","/gists/pinvoke",{"title":292,"_path":293},"像素","/gists/pixel",{"title":295,"_path":296},"PowerShell","/gists/powershell",{"title":298,"_path":299},"量子","/gists/quantum",{"title":301,"_path":302},"保持好奇心","/gists/questions",{"title":304,"_path":305},"React Native","/gists/react-native",{"title":307,"_path":308},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":310,"_path":311},"SEO","/gists/seo",{"title":313,"_path":314},"Shader","/gists/shader",{"title":316,"_path":317},"Shape Up","/gists/shape-up",{"title":319,"_path":320},"睡觉","/gists/sleep",{"title":322,"_path":323},"States","/gists/states",{"title":325,"_path":326},"Storage","/gists/storage",{"title":328,"_path":329},"音视频流处理","/gists/stream-cli",{"title":331,"_path":332},"Symbol","/gists/symbol",{"title":334,"_path":335},"系统论","/gists/systems-theory",{"title":337,"_path":338},"Taro","/gists/taro",{"title":340,"_path":341},"任务切片","/gists/task-slice",{"title":343,"_path":344},"技术偏好","/gists/tech-dudge",{"title":346,"_path":347},"Untitled","/gists/untitled",{"title":349,"_path":350},"可变字体","/gists/variable-font",{"title":352,"_path":353},"视觉错觉","/gists/visual-illusion",{"title":355,"_path":356},"SS(SSR)","/gists/vpn",{"title":358,"_path":359},"VS Code 插件开发","/gists/vscode-plugin",{"title":361,"_path":362},"Web Components","/gists/web-components",{"title":364,"_path":365},"Windows","/gists/windows",{"title":367,"_path":368},"查缺补漏","/gists/wrong",{"title":370,"_path":371,"children":372},"代码笔记 / Gists","/source-code",[373],{"title":374,"_path":371},"🚄 代码笔记",{"title":376,"_path":377,"children":378},"我 / Abount","/hire",[379],{"title":380,"_path":377},"📬 技术简历",{"title":382,"_path":383,"children":384},"todo","/todo",[385],{"title":382,"_path":383},{"_path":61,"_dir":387,"_draft":388,"_partial":388,"_locale":389,"title":60,"description":390,"body":391,"_type":2566,"_id":2567,"_source":2568,"_file":2569,"_extension":2570},"articles",false,"","排除人的因素，设计模式的本质只是相关代码复用。本文通过使用JS仿制并简化了几种OOL中经典设计模式，以探讨经典设计模式和代码模板的区别主要在于代码复用的层次不同，以及粗浅聊了聊设计模式与语言特征之间此强彼弱的关系。",{"type":392,"children":393,"toc":2556},"root",[394,406,412,433,438,447,459,464,469,474,483,508,513,567,572,599,609,614,619,624,629,634,642,647,652,664,669,674,697,705,710,962,980,1229,1234,1239,1244,1340,1355,1633,1638,1656,1670,1685,1716,1721,1726,2128,2133,2138,2143,2153,2158,2173,2178,2212,2217,2222,2227,2237,2242,2255,2304,2309,2317,2322,2327,2332,2337,2347,2352,2357,2362,2395,2400,2423,2550],{"type":395,"tag":396,"props":397,"children":398},"element","blockquote",{},[399],{"type":395,"tag":400,"props":401,"children":402},"p",{},[403],{"type":404,"value":405},"text","设计模式最终要融入任何语言。",{"type":395,"tag":407,"props":408,"children":410},"h2",{"id":409},"设计模式是什么",[411],{"type":404,"value":409},{"type":395,"tag":400,"props":413,"children":414},{},[415,417,431],{"type":404,"value":416},"从《人月神话》到《大教堂与集市》，许多闻名业界的作品都“低代码、高文化",{"type":395,"tag":418,"props":419,"children":420},"sup",{},[421],{"type":395,"tag":422,"props":423,"children":428},"a",{"href":424,"ariaDescribedBy":425,"dataFootnoteRef":389,"id":427},"#user-content-fn-%E6%96%87%E5%8C%96",[426],"footnote-label","user-content-fnref-%E6%96%87%E5%8C%96",[429],{"type":404,"value":430},"1",{"type":404,"value":432},"”；各种代码文化运动可以看作“造神运动”此类周日剧场。许多大佬在向人们传授代码经验之余，都喜欢尝试用文化手段（不论是哲学思想还是艺术内涵），来统一人与代码的关系。这种跨界思考的过程通常比较晦涩，诸如“面向对象”、“设计模式”这些放到现在来说我们耳熟能详的词，在过去几十年都是由行业顶尖大佬们牵头搞研究，再经过不断地实践，逐渐沉淀下来形成的标准。",{"type":395,"tag":400,"props":434,"children":435},{},[436],{"type":404,"value":437},"设计模式是什么？",{"type":395,"tag":400,"props":439,"children":440},{},[441],{"type":395,"tag":442,"props":443,"children":444},"strong",{},[445],{"type":404,"value":446},"设计模式是一种标准，它描述了使用面向对象编程语言解决问题的方式。",{"type":395,"tag":400,"props":448,"children":449},{},[450,452,457],{"type":404,"value":451},"设计模式一词发源于建筑学作品《建筑模式语言》，后被一个人们称为“四人帮”（GoF）的小组种出它在软件界开的新花。无论是建筑学还是软件学中的设计模式，相同的地方是，它们都想解决“人”和“物”的关系相关问题，并且形成了一套特定的方法论。",{"type":395,"tag":442,"props":453,"children":454},{},[455],{"type":404,"value":456},"好比人们有了灶就可以长久保存火种，用名词把晦涩难懂的抽象定义为标准，这样有利于思想传播",{"type":404,"value":458},"。只要人们普遍接纳并熟知设计模式，便能畅通无阻地沟通代码的实现。当然，现实很丰满，畅快沟通有个大前提：程序设计时，大家需要使用面向对象编程语言来合作。",{"type":395,"tag":407,"props":460,"children":462},{"id":461},"为什么非面向对象不可",[463],{"type":404,"value":461},{"type":395,"tag":400,"props":465,"children":466},{},[467],{"type":404,"value":468},"构建大型软件不止面向对象这一条路，与面向对象相对应的还有结构化、形式化等程序设计方法。任意一种有自有优劣。面对日益复杂的软件，人们关心的重心逐步转移到软件的可重用性方面。面向对象凭借着分类、封装等天然符合人们认知规律的优势，得到快速发展，终打通需求分析、程序设计到编程语言等开发上下游工作，赢得了业界青睐。",{"type":395,"tag":400,"props":470,"children":471},{},[472],{"type":404,"value":473},"面向对象把功能作为节点，组合为功能网格，节点间通过消息通讯以及做对应的响应。这样一来，开发在编程时不再需要直面输入输出这种数据流动的思考方式，只需要按照指令维护各个对象内部的状态即可，节点对应的代码片段也就能得到重用。",{"type":395,"tag":400,"props":475,"children":476},{},[477],{"type":395,"tag":478,"props":479,"children":482},"img",{"alt":480,"src":481},"Message Passing In OO","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210511174933.png?w=40",[],{"type":395,"tag":400,"props":484,"children":485},{},[486,488,499,501,506],{"type":404,"value":487},"相比子程序复用，函数复用已经是巨大的进步",{"type":395,"tag":418,"props":489,"children":490},{},[491],{"type":395,"tag":422,"props":492,"children":496},{"href":493,"ariaDescribedBy":494,"dataFootnoteRef":389,"id":495},"#user-content-fn-fn-call",[426],"user-content-fnref-fn-call",[497],{"type":404,"value":498},"2",{"type":404,"value":500},"。类复用相比函数复用要更加抽象，因为它保存了函数和状态的集合；而设计模式比类复用在抽象上更胜一筹：设计模式不单单直接复用某个类，而是复用整个“功能网格”，把特定问题的解决方案相关的所有节点和通讯机制全部拷贝，固化下来，命名并形成标准。",{"type":395,"tag":442,"props":502,"children":503},{},[504],{"type":404,"value":505},"设计模式其实是使用面向对象编程语言时代码复用的高级形式，是面向对象发展壮大之路的必然的产物",{"type":404,"value":507},"。只要写代码，就会碰到复用性问题，四人帮偏好面向对象，所以“设计模式”只是他们用来传授的面向对象编程中的代码复用性经验的概括。换句话说，大部分情况下我们讨论的“设计模式”和“面向对象设计模式”完全等同。这也就解释了为什么非面向对象不可了。",{"type":395,"tag":400,"props":509,"children":510},{},[511],{"type":404,"value":512},"我们讨论一个新的问题，如果过滤掉设计模式中的面向对象成分，剩下的是些啥呢？",{"type":395,"tag":514,"props":515,"children":519},"pre",{"className":516,"code":517,"language":518,"meta":389,"style":389},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","console.log(DesignPatterns.filter(removeOO))\n","js",[520],{"type":395,"tag":521,"props":522,"children":523},"code",{"__ignoreMap":389},[524],{"type":395,"tag":525,"props":526,"children":529},"span",{"class":527,"line":528},"line",1,[530,536,542,548,553,557,562],{"type":395,"tag":525,"props":531,"children":533},{"style":532},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[534],{"type":404,"value":535},"console",{"type":395,"tag":525,"props":537,"children":539},{"style":538},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[540],{"type":404,"value":541},".",{"type":395,"tag":525,"props":543,"children":545},{"style":544},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[546],{"type":404,"value":547},"log",{"type":395,"tag":525,"props":549,"children":550},{"style":532},[551],{"type":404,"value":552},"(DesignPatterns",{"type":395,"tag":525,"props":554,"children":555},{"style":538},[556],{"type":404,"value":541},{"type":395,"tag":525,"props":558,"children":559},{"style":544},[560],{"type":404,"value":561},"filter",{"type":395,"tag":525,"props":563,"children":564},{"style":532},[565],{"type":404,"value":566},"(removeOO))\n",{"type":395,"tag":407,"props":568,"children":570},{"id":569},"设计模式的本质",[571],{"type":404,"value":569},{"type":395,"tag":400,"props":573,"children":574},{},[575,577,583,585,590,592,597],{"type":404,"value":576},"我们先直接删除上文关于设计模式的定义中的“面向对象”几个字，看看剩下些什么：设计模式是一种标准，它描述了",{"type":395,"tag":578,"props":579,"children":580},"del",{},[581],{"type":404,"value":582},"使用面向对象编程语言",{"type":404,"value":584},"解决问题的方式，是",{"type":395,"tag":578,"props":586,"children":587},{},[588],{"type":404,"value":589},"使用面向对象编程语言时",{"type":404,"value":591},"代码复用性的高级形式，是",{"type":395,"tag":578,"props":593,"children":594},{},[595],{"type":404,"value":596},"面向对象",{"type":404,"value":598},"发展壮大之路的必然的产物。",{"type":395,"tag":400,"props":600,"children":601},{},[602,604],{"type":404,"value":603},"句子有些不通顺，修补之后变成了：",{"type":395,"tag":442,"props":605,"children":606},{},[607],{"type":404,"value":608},"设计模式是一种标准，它描述了编程时解决问题的特定方式，是代码复用的高级形式及发展代码复用必然的产物。",{"type":395,"tag":400,"props":610,"children":611},{},[612],{"type":404,"value":613},"设计模式本质是什么？不言自明，它只是相关代码复用的一种抽象概念。",{"type":395,"tag":400,"props":615,"children":616},{},[617],{"type":404,"value":618},"说到代码复用，主要关系到代码组织。从函数复用，到使用设计模式，再到使用库、框架，三种代码复用方式的主要区别在于代码组织的粒度不同。",{"type":395,"tag":400,"props":620,"children":621},{},[622],{"type":404,"value":623},"函数复用比较简单，你可以写一个叫做 Add 的函数给两数相加，然后 Copy&Paste 到其他地方复用，或是把函数存放到 Utils.js 文件中，通过模块机制复用。为了了解如何使用某个函数，需要在使用前阅读注释。",{"type":395,"tag":400,"props":625,"children":626},{},[627],{"type":404,"value":628},"库和框架最为复杂，它们是组织了大量函数及实体形成的巨型代码片段。开发新项目时很少会花精力自研框架，一般都引现成的轮子直接开造。使用某库或框架前，必须详细阅读文档。",{"type":395,"tag":400,"props":630,"children":631},{},[632],{"type":404,"value":633},"设计模式则是单个或多个函数的组合（在 Java 中不是函数而是类），既可以在新项目里现写一个模式供使用，也可以引入社区现有的模块来复用。为了了解如何使用某个设计模式，需要提前了解该模式定义的实体以及实体是通讯机制。",{"type":395,"tag":400,"props":635,"children":636},{},[637],{"type":395,"tag":478,"props":638,"children":641},{"alt":639,"src":640},"函数、设计模式、框架间的升级关系","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210513145630.png?w=70",[],{"type":395,"tag":400,"props":643,"children":644},{},[645],{"type":404,"value":646},"设计模式作为最简单的实体和函数的组合，可看作函数的升级版或是框架的缩水版；去掉设计模式中的面向对象相关内容，就只剩下了函数。",{"type":395,"tag":400,"props":648,"children":649},{},[650],{"type":404,"value":651},"等等，“实体和实体间通讯机制”凭空消失了？",{"type":395,"tag":400,"props":653,"children":654},{},[655,657,662],{"type":404,"value":656},"并没有。但我想让他消失。下文将从 JavaScript 入手，介绍如何把设计模式的概念映射到语言特征中。语言特征可是个好东西呀！如果你同意抽象也像复用一样有函数复用、库和框架等不同复杂度的层次的话，那我认为",{"type":395,"tag":442,"props":658,"children":659},{},[660],{"type":404,"value":661},"语言特征就是抽象的基础了。除了语言本身以外，所有抽象的建立都依赖于语言特征",{"type":404,"value":663},"。把设计模式映射成语言特征后，我们就能跳出面向对象的禁锢，从新的、更高层的角度重新思考代码复用问题。",{"type":395,"tag":400,"props":665,"children":666},{},[667],{"type":404,"value":668},"回到正题，我们从 JS 开始说起。",{"type":395,"tag":407,"props":670,"children":672},{"id":671},"仿制设计模式",[673],{"type":404,"value":671},{"type":395,"tag":400,"props":675,"children":676},{},[677,679,684,695],{"type":404,"value":678},"编程语言并不是万能的。",{"type":395,"tag":442,"props":680,"children":681},{},[682],{"type":404,"value":683},"特定语言适合用来解决特定问题",{"type":395,"tag":418,"props":685,"children":686},{},[687],{"type":395,"tag":422,"props":688,"children":692},{"href":689,"ariaDescribedBy":690,"dataFootnoteRef":389,"id":691},"#user-content-fn-css",[426],"user-content-fnref-css",[693],{"type":404,"value":694},"3",{"type":404,"value":696},"。提到 JavaScript 诸多语言特征，其优点可以用寥寥三个词概括：“原型”、“对象”、“函数”。熟练掌握了这些内容，就能在 JS 的世界中游刃有余。",{"type":395,"tag":400,"props":698,"children":699},{},[700],{"type":395,"tag":478,"props":701,"children":704},{"alt":702,"src":703},"《JavaScript 精粹》VS《JavaScript 权威指南》","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200704/20200709104930.png",[],{"type":395,"tag":400,"props":706,"children":707},{},[708],{"type":404,"value":709},"传统面向对象语言以类封装状态，并向外暴露改变状态的方法。以下代码中的书本类为例：Book Class 保持有 name 状态，可以使用 getPrintName 方法返回包装后的 name 或使用 rename 修改 name 。",{"type":395,"tag":514,"props":711,"children":713},{"className":516,"code":712,"language":518,"meta":389,"style":389},"class Book {\n  constructor () {\n    this.name = '设计模式与JS魔法锅'\n  }\n  getPrintName () {\n    return '《' + this.name + '》'\n  }\n  rename (newName) {\n    this.name = newName\n  }\n}\n",[714],{"type":395,"tag":521,"props":715,"children":716},{"__ignoreMap":389},[717,737,755,797,806,824,883,891,920,945,953],{"type":395,"tag":525,"props":718,"children":719},{"class":527,"line":528},[720,726,732],{"type":395,"tag":525,"props":721,"children":723},{"style":722},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#66D9EF;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[724],{"type":404,"value":725},"class",{"type":395,"tag":525,"props":727,"children":729},{"style":728},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E;--shiki-light-text-decoration:inherit;--shiki-default-text-decoration:inherit;--shiki-dark-text-decoration:inherit;--shiki-sepia-text-decoration:underline",[730],{"type":404,"value":731}," Book",{"type":395,"tag":525,"props":733,"children":734},{"style":538},[735],{"type":404,"value":736}," {\n",{"type":395,"tag":525,"props":738,"children":740},{"class":527,"line":739},2,[741,746,751],{"type":395,"tag":525,"props":742,"children":743},{"style":722},[744],{"type":404,"value":745},"  constructor",{"type":395,"tag":525,"props":747,"children":748},{"style":538},[749],{"type":404,"value":750}," ()",{"type":395,"tag":525,"props":752,"children":753},{"style":538},[754],{"type":404,"value":736},{"type":395,"tag":525,"props":756,"children":758},{"class":527,"line":757},3,[759,765,769,774,780,786,792],{"type":395,"tag":525,"props":760,"children":762},{"style":761},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[763],{"type":404,"value":764},"    this",{"type":395,"tag":525,"props":766,"children":767},{"style":538},[768],{"type":404,"value":541},{"type":395,"tag":525,"props":770,"children":771},{"style":532},[772],{"type":404,"value":773},"name",{"type":395,"tag":525,"props":775,"children":777},{"style":776},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[778],{"type":404,"value":779}," =",{"type":395,"tag":525,"props":781,"children":783},{"style":782},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[784],{"type":404,"value":785}," '",{"type":395,"tag":525,"props":787,"children":789},{"style":788},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[790],{"type":404,"value":791},"设计模式与JS魔法锅",{"type":395,"tag":525,"props":793,"children":794},{"style":782},[795],{"type":404,"value":796},"'\n",{"type":395,"tag":525,"props":798,"children":800},{"class":527,"line":799},4,[801],{"type":395,"tag":525,"props":802,"children":803},{"style":538},[804],{"type":404,"value":805},"  }\n",{"type":395,"tag":525,"props":807,"children":809},{"class":527,"line":808},5,[810,816,820],{"type":395,"tag":525,"props":811,"children":813},{"style":812},"--shiki-light:#E53935;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[814],{"type":404,"value":815},"  getPrintName",{"type":395,"tag":525,"props":817,"children":818},{"style":538},[819],{"type":404,"value":750},{"type":395,"tag":525,"props":821,"children":822},{"style":538},[823],{"type":404,"value":736},{"type":395,"tag":525,"props":825,"children":827},{"class":527,"line":826},6,[828,834,838,843,848,853,858,862,866,870,874,879],{"type":395,"tag":525,"props":829,"children":831},{"style":830},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[832],{"type":404,"value":833},"    return",{"type":395,"tag":525,"props":835,"children":836},{"style":782},[837],{"type":404,"value":785},{"type":395,"tag":525,"props":839,"children":840},{"style":788},[841],{"type":404,"value":842},"《",{"type":395,"tag":525,"props":844,"children":845},{"style":782},[846],{"type":404,"value":847},"'",{"type":395,"tag":525,"props":849,"children":850},{"style":776},[851],{"type":404,"value":852}," +",{"type":395,"tag":525,"props":854,"children":855},{"style":761},[856],{"type":404,"value":857}," this",{"type":395,"tag":525,"props":859,"children":860},{"style":538},[861],{"type":404,"value":541},{"type":395,"tag":525,"props":863,"children":864},{"style":532},[865],{"type":404,"value":773},{"type":395,"tag":525,"props":867,"children":868},{"style":776},[869],{"type":404,"value":852},{"type":395,"tag":525,"props":871,"children":872},{"style":782},[873],{"type":404,"value":785},{"type":395,"tag":525,"props":875,"children":876},{"style":788},[877],{"type":404,"value":878},"》",{"type":395,"tag":525,"props":880,"children":881},{"style":782},[882],{"type":404,"value":796},{"type":395,"tag":525,"props":884,"children":886},{"class":527,"line":885},7,[887],{"type":395,"tag":525,"props":888,"children":889},{"style":538},[890],{"type":404,"value":805},{"type":395,"tag":525,"props":892,"children":894},{"class":527,"line":893},8,[895,900,905,911,916],{"type":395,"tag":525,"props":896,"children":897},{"style":812},[898],{"type":404,"value":899},"  rename",{"type":395,"tag":525,"props":901,"children":902},{"style":538},[903],{"type":404,"value":904}," (",{"type":395,"tag":525,"props":906,"children":908},{"style":907},"--shiki-light:#90A4AE;--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#FD971F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[909],{"type":404,"value":910},"newName",{"type":395,"tag":525,"props":912,"children":913},{"style":538},[914],{"type":404,"value":915},")",{"type":395,"tag":525,"props":917,"children":918},{"style":538},[919],{"type":404,"value":736},{"type":395,"tag":525,"props":921,"children":923},{"class":527,"line":922},9,[924,928,932,936,940],{"type":395,"tag":525,"props":925,"children":926},{"style":761},[927],{"type":404,"value":764},{"type":395,"tag":525,"props":929,"children":930},{"style":538},[931],{"type":404,"value":541},{"type":395,"tag":525,"props":933,"children":934},{"style":532},[935],{"type":404,"value":773},{"type":395,"tag":525,"props":937,"children":938},{"style":776},[939],{"type":404,"value":779},{"type":395,"tag":525,"props":941,"children":942},{"style":532},[943],{"type":404,"value":944}," newName\n",{"type":395,"tag":525,"props":946,"children":948},{"class":527,"line":947},10,[949],{"type":395,"tag":525,"props":950,"children":951},{"style":538},[952],{"type":404,"value":805},{"type":395,"tag":525,"props":954,"children":956},{"class":527,"line":955},11,[957],{"type":395,"tag":525,"props":958,"children":959},{"style":538},[960],{"type":404,"value":961},"}\n",{"type":395,"tag":400,"props":963,"children":964},{},[965,967,978],{"type":404,"value":966},"放到早期版本 JS 中，想要封装变量，这不好办。早期版本的 JS 没有块级作用域，所以声明的变量会在整个代码或函数作用域中生效。为了仿制类的状态封装能力，知名布道者道格拉斯发明了一种“模块模式”",{"type":395,"tag":418,"props":968,"children":969},{},[970],{"type":395,"tag":422,"props":971,"children":975},{"href":972,"ariaDescribedBy":973,"dataFootnoteRef":389,"id":974},"#user-content-fn-module-pattern",[426],"user-content-fnref-module-pattern",[976],{"type":404,"value":977},"4",{"type":404,"value":979},"，即通过闭包来控制变量的访问权，代码如下：",{"type":395,"tag":514,"props":981,"children":983},{"className":516,"code":982,"language":518,"meta":389,"style":389},"const aBook = (() => {\n  var name = '设计模式与JS魔法锅'\n  function getPrintName () {\n    return '《' + name + '》'\n  }\n  function rename (newName) {\n    name = newName\n  }\n  return {\n    getPrintName,\n    rename\n  }\n})()\n",[984],{"type":395,"tag":521,"props":985,"children":986},{"__ignoreMap":389},[987,1023,1052,1073,1116,1123,1151,1167,1174,1186,1199,1207,1215],{"type":395,"tag":525,"props":988,"children":989},{"class":527,"line":528},[990,995,1001,1005,1009,1014,1019],{"type":395,"tag":525,"props":991,"children":992},{"style":722},[993],{"type":404,"value":994},"const",{"type":395,"tag":525,"props":996,"children":998},{"style":997},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[999],{"type":404,"value":1000}," aBook",{"type":395,"tag":525,"props":1002,"children":1003},{"style":776},[1004],{"type":404,"value":779},{"type":395,"tag":525,"props":1006,"children":1007},{"style":532},[1008],{"type":404,"value":904},{"type":395,"tag":525,"props":1010,"children":1011},{"style":538},[1012],{"type":404,"value":1013},"()",{"type":395,"tag":525,"props":1015,"children":1016},{"style":722},[1017],{"type":404,"value":1018}," =>",{"type":395,"tag":525,"props":1020,"children":1021},{"style":538},[1022],{"type":404,"value":736},{"type":395,"tag":525,"props":1024,"children":1025},{"class":527,"line":739},[1026,1031,1036,1040,1044,1048],{"type":395,"tag":525,"props":1027,"children":1028},{"style":722},[1029],{"type":404,"value":1030},"  var",{"type":395,"tag":525,"props":1032,"children":1033},{"style":532},[1034],{"type":404,"value":1035}," name",{"type":395,"tag":525,"props":1037,"children":1038},{"style":776},[1039],{"type":404,"value":779},{"type":395,"tag":525,"props":1041,"children":1042},{"style":782},[1043],{"type":404,"value":785},{"type":395,"tag":525,"props":1045,"children":1046},{"style":788},[1047],{"type":404,"value":791},{"type":395,"tag":525,"props":1049,"children":1050},{"style":782},[1051],{"type":404,"value":796},{"type":395,"tag":525,"props":1053,"children":1054},{"class":527,"line":757},[1055,1060,1065,1069],{"type":395,"tag":525,"props":1056,"children":1057},{"style":722},[1058],{"type":404,"value":1059},"  function",{"type":395,"tag":525,"props":1061,"children":1062},{"style":544},[1063],{"type":404,"value":1064}," getPrintName",{"type":395,"tag":525,"props":1066,"children":1067},{"style":538},[1068],{"type":404,"value":750},{"type":395,"tag":525,"props":1070,"children":1071},{"style":538},[1072],{"type":404,"value":736},{"type":395,"tag":525,"props":1074,"children":1075},{"class":527,"line":799},[1076,1080,1084,1088,1092,1096,1100,1104,1108,1112],{"type":395,"tag":525,"props":1077,"children":1078},{"style":830},[1079],{"type":404,"value":833},{"type":395,"tag":525,"props":1081,"children":1082},{"style":782},[1083],{"type":404,"value":785},{"type":395,"tag":525,"props":1085,"children":1086},{"style":788},[1087],{"type":404,"value":842},{"type":395,"tag":525,"props":1089,"children":1090},{"style":782},[1091],{"type":404,"value":847},{"type":395,"tag":525,"props":1093,"children":1094},{"style":776},[1095],{"type":404,"value":852},{"type":395,"tag":525,"props":1097,"children":1098},{"style":532},[1099],{"type":404,"value":1035},{"type":395,"tag":525,"props":1101,"children":1102},{"style":776},[1103],{"type":404,"value":852},{"type":395,"tag":525,"props":1105,"children":1106},{"style":782},[1107],{"type":404,"value":785},{"type":395,"tag":525,"props":1109,"children":1110},{"style":788},[1111],{"type":404,"value":878},{"type":395,"tag":525,"props":1113,"children":1114},{"style":782},[1115],{"type":404,"value":796},{"type":395,"tag":525,"props":1117,"children":1118},{"class":527,"line":808},[1119],{"type":395,"tag":525,"props":1120,"children":1121},{"style":538},[1122],{"type":404,"value":805},{"type":395,"tag":525,"props":1124,"children":1125},{"class":527,"line":826},[1126,1130,1135,1139,1143,1147],{"type":395,"tag":525,"props":1127,"children":1128},{"style":722},[1129],{"type":404,"value":1059},{"type":395,"tag":525,"props":1131,"children":1132},{"style":544},[1133],{"type":404,"value":1134}," rename",{"type":395,"tag":525,"props":1136,"children":1137},{"style":538},[1138],{"type":404,"value":904},{"type":395,"tag":525,"props":1140,"children":1141},{"style":907},[1142],{"type":404,"value":910},{"type":395,"tag":525,"props":1144,"children":1145},{"style":538},[1146],{"type":404,"value":915},{"type":395,"tag":525,"props":1148,"children":1149},{"style":538},[1150],{"type":404,"value":736},{"type":395,"tag":525,"props":1152,"children":1153},{"class":527,"line":885},[1154,1159,1163],{"type":395,"tag":525,"props":1155,"children":1156},{"style":532},[1157],{"type":404,"value":1158},"    name",{"type":395,"tag":525,"props":1160,"children":1161},{"style":776},[1162],{"type":404,"value":779},{"type":395,"tag":525,"props":1164,"children":1165},{"style":532},[1166],{"type":404,"value":944},{"type":395,"tag":525,"props":1168,"children":1169},{"class":527,"line":893},[1170],{"type":395,"tag":525,"props":1171,"children":1172},{"style":538},[1173],{"type":404,"value":805},{"type":395,"tag":525,"props":1175,"children":1176},{"class":527,"line":922},[1177,1182],{"type":395,"tag":525,"props":1178,"children":1179},{"style":830},[1180],{"type":404,"value":1181},"  return",{"type":395,"tag":525,"props":1183,"children":1184},{"style":538},[1185],{"type":404,"value":736},{"type":395,"tag":525,"props":1187,"children":1188},{"class":527,"line":947},[1189,1194],{"type":395,"tag":525,"props":1190,"children":1191},{"style":532},[1192],{"type":404,"value":1193},"    getPrintName",{"type":395,"tag":525,"props":1195,"children":1196},{"style":538},[1197],{"type":404,"value":1198},",\n",{"type":395,"tag":525,"props":1200,"children":1201},{"class":527,"line":955},[1202],{"type":395,"tag":525,"props":1203,"children":1204},{"style":532},[1205],{"type":404,"value":1206},"    rename\n",{"type":395,"tag":525,"props":1208,"children":1210},{"class":527,"line":1209},12,[1211],{"type":395,"tag":525,"props":1212,"children":1213},{"style":538},[1214],{"type":404,"value":805},{"type":395,"tag":525,"props":1216,"children":1218},{"class":527,"line":1217},13,[1219,1224],{"type":395,"tag":525,"props":1220,"children":1221},{"style":538},[1222],{"type":404,"value":1223},"}",{"type":395,"tag":525,"props":1225,"children":1226},{"style":532},[1227],{"type":404,"value":1228},")()\n",{"type":395,"tag":400,"props":1230,"children":1231},{},[1232],{"type":404,"value":1233},"看起来，模块模式就像是语言能力不足的补充。把目光从遥远的模块模式收回到 2015 年 ES6 发布之后，JavaScript 语言特征得到增强，曾风靡一时的潮词模块模式几乎从网络中销声匿迹了。现在我们可以自由地使用类封装状态，不必再写因缺乏语义显得蹩脚的 IIFE 。",{"type":395,"tag":400,"props":1235,"children":1236},{},[1237],{"type":404,"value":1238},"我们再来看看面向对象中的常见的装饰器模式。",{"type":395,"tag":400,"props":1240,"children":1241},{},[1242],{"type":404,"value":1243},"假设你在维护一个开源项目，项目中有些过时的 API，你想在别人调用该 API 时提示一句“你好，此 API 将在下个版本移除”。这段代码可以这样写：",{"type":395,"tag":514,"props":1245,"children":1247},{"className":516,"code":1246,"language":518,"meta":389,"style":389},"// 目前不支持给对象属性使用装饰器，所以这是一段伪代码\nconst myAPI = {\n  @deprecate('WARN: oldAPI is decrapted, please use oldAPI_v2')\n  oldAPI() {}\n}\n",[1248],{"type":395,"tag":521,"props":1249,"children":1250},{"__ignoreMap":389},[1251,1260,1280,1316,1333],{"type":395,"tag":525,"props":1252,"children":1253},{"class":527,"line":528},[1254],{"type":395,"tag":525,"props":1255,"children":1257},{"style":1256},"--shiki-light:#90A4AE;--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[1258],{"type":404,"value":1259},"// 目前不支持给对象属性使用装饰器，所以这是一段伪代码\n",{"type":395,"tag":525,"props":1261,"children":1262},{"class":527,"line":739},[1263,1267,1272,1276],{"type":395,"tag":525,"props":1264,"children":1265},{"style":722},[1266],{"type":404,"value":994},{"type":395,"tag":525,"props":1268,"children":1269},{"style":997},[1270],{"type":404,"value":1271}," myAPI",{"type":395,"tag":525,"props":1273,"children":1274},{"style":776},[1275],{"type":404,"value":779},{"type":395,"tag":525,"props":1277,"children":1278},{"style":538},[1279],{"type":404,"value":736},{"type":395,"tag":525,"props":1281,"children":1282},{"class":527,"line":757},[1283,1288,1293,1298,1302,1307,1311],{"type":395,"tag":525,"props":1284,"children":1285},{"style":532},[1286],{"type":404,"value":1287},"  @",{"type":395,"tag":525,"props":1289,"children":1290},{"style":812},[1291],{"type":404,"value":1292},"deprecate",{"type":395,"tag":525,"props":1294,"children":1295},{"style":538},[1296],{"type":404,"value":1297},"(",{"type":395,"tag":525,"props":1299,"children":1300},{"style":782},[1301],{"type":404,"value":847},{"type":395,"tag":525,"props":1303,"children":1304},{"style":788},[1305],{"type":404,"value":1306},"WARN: oldAPI is decrapted, please use oldAPI_v2",{"type":395,"tag":525,"props":1308,"children":1309},{"style":782},[1310],{"type":404,"value":847},{"type":395,"tag":525,"props":1312,"children":1313},{"style":538},[1314],{"type":404,"value":1315},")\n",{"type":395,"tag":525,"props":1317,"children":1318},{"class":527,"line":799},[1319,1324,1328],{"type":395,"tag":525,"props":1320,"children":1321},{"style":812},[1322],{"type":404,"value":1323},"  oldAPI",{"type":395,"tag":525,"props":1325,"children":1326},{"style":538},[1327],{"type":404,"value":1013},{"type":395,"tag":525,"props":1329,"children":1330},{"style":538},[1331],{"type":404,"value":1332}," {}\n",{"type":395,"tag":525,"props":1334,"children":1335},{"class":527,"line":808},[1336],{"type":395,"tag":525,"props":1337,"children":1338},{"style":538},[1339],{"type":404,"value":961},{"type":395,"tag":400,"props":1341,"children":1342},{},[1343,1345,1353],{"type":404,"value":1344},"若不是",{"type":395,"tag":422,"props":1346,"children":1350},{"href":1347,"rel":1348},"https://github.com/tc39/proposal-decorators",[1349],"nofollow",[1351],{"type":404,"value":1352},"装饰器提案",{"type":404,"value":1354},"的出现，我赌五毛，社区里不会有太多讨论装饰器模式的文章。不过大家若有留意过平常的代码，肯定会注意到其实高阶函数就是装饰器的具体实现。函数在 JS 中是一等公民，通过函数组合可以极其方便地仿制某些设计模式。比如，下代码中，使用“局部应用”函数仿制了一个工厂模式：",{"type":395,"tag":514,"props":1356,"children":1358},{"className":516,"code":1357,"language":518,"meta":389,"style":389},"const Partial = (fn, ...args) => (...rest) => fn(...args, ...rest)\n\nconst Adder = (a, b) => a + b\n\nconst add5 = Partial(Adder, 5)\n\nadd5(5) // >>> 10\nadd5(10) // >>> 15\n",[1359],{"type":395,"tag":521,"props":1360,"children":1361},{"__ignoreMap":389},[1362,1463,1472,1528,1535,1574,1581,1608],{"type":395,"tag":525,"props":1363,"children":1364},{"class":527,"line":528},[1365,1369,1375,1379,1383,1388,1393,1398,1403,1407,1411,1415,1420,1425,1429,1433,1438,1442,1446,1450,1454,1458],{"type":395,"tag":525,"props":1366,"children":1367},{"style":722},[1368],{"type":404,"value":994},{"type":395,"tag":525,"props":1370,"children":1372},{"style":1371},"--shiki-light:#90A4AE;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1373],{"type":404,"value":1374}," Partial",{"type":395,"tag":525,"props":1376,"children":1377},{"style":776},[1378],{"type":404,"value":779},{"type":395,"tag":525,"props":1380,"children":1381},{"style":538},[1382],{"type":404,"value":904},{"type":395,"tag":525,"props":1384,"children":1385},{"style":907},[1386],{"type":404,"value":1387},"fn",{"type":395,"tag":525,"props":1389,"children":1390},{"style":538},[1391],{"type":404,"value":1392},",",{"type":395,"tag":525,"props":1394,"children":1395},{"style":776},[1396],{"type":404,"value":1397}," ...",{"type":395,"tag":525,"props":1399,"children":1400},{"style":907},[1401],{"type":404,"value":1402},"args",{"type":395,"tag":525,"props":1404,"children":1405},{"style":538},[1406],{"type":404,"value":915},{"type":395,"tag":525,"props":1408,"children":1409},{"style":722},[1410],{"type":404,"value":1018},{"type":395,"tag":525,"props":1412,"children":1413},{"style":538},[1414],{"type":404,"value":904},{"type":395,"tag":525,"props":1416,"children":1417},{"style":776},[1418],{"type":404,"value":1419},"...",{"type":395,"tag":525,"props":1421,"children":1422},{"style":907},[1423],{"type":404,"value":1424},"rest",{"type":395,"tag":525,"props":1426,"children":1427},{"style":538},[1428],{"type":404,"value":915},{"type":395,"tag":525,"props":1430,"children":1431},{"style":722},[1432],{"type":404,"value":1018},{"type":395,"tag":525,"props":1434,"children":1435},{"style":544},[1436],{"type":404,"value":1437}," fn",{"type":395,"tag":525,"props":1439,"children":1440},{"style":532},[1441],{"type":404,"value":1297},{"type":395,"tag":525,"props":1443,"children":1444},{"style":776},[1445],{"type":404,"value":1419},{"type":395,"tag":525,"props":1447,"children":1448},{"style":532},[1449],{"type":404,"value":1402},{"type":395,"tag":525,"props":1451,"children":1452},{"style":538},[1453],{"type":404,"value":1392},{"type":395,"tag":525,"props":1455,"children":1456},{"style":776},[1457],{"type":404,"value":1397},{"type":395,"tag":525,"props":1459,"children":1460},{"style":532},[1461],{"type":404,"value":1462},"rest)\n",{"type":395,"tag":525,"props":1464,"children":1465},{"class":527,"line":739},[1466],{"type":395,"tag":525,"props":1467,"children":1469},{"emptyLinePlaceholder":1468},true,[1470],{"type":404,"value":1471},"\n",{"type":395,"tag":525,"props":1473,"children":1474},{"class":527,"line":757},[1475,1479,1484,1488,1492,1496,1500,1505,1509,1513,1518,1523],{"type":395,"tag":525,"props":1476,"children":1477},{"style":722},[1478],{"type":404,"value":994},{"type":395,"tag":525,"props":1480,"children":1481},{"style":1371},[1482],{"type":404,"value":1483}," Adder",{"type":395,"tag":525,"props":1485,"children":1486},{"style":776},[1487],{"type":404,"value":779},{"type":395,"tag":525,"props":1489,"children":1490},{"style":538},[1491],{"type":404,"value":904},{"type":395,"tag":525,"props":1493,"children":1494},{"style":907},[1495],{"type":404,"value":422},{"type":395,"tag":525,"props":1497,"children":1498},{"style":538},[1499],{"type":404,"value":1392},{"type":395,"tag":525,"props":1501,"children":1502},{"style":907},[1503],{"type":404,"value":1504}," b",{"type":395,"tag":525,"props":1506,"children":1507},{"style":538},[1508],{"type":404,"value":915},{"type":395,"tag":525,"props":1510,"children":1511},{"style":722},[1512],{"type":404,"value":1018},{"type":395,"tag":525,"props":1514,"children":1515},{"style":532},[1516],{"type":404,"value":1517}," a ",{"type":395,"tag":525,"props":1519,"children":1520},{"style":776},[1521],{"type":404,"value":1522},"+",{"type":395,"tag":525,"props":1524,"children":1525},{"style":532},[1526],{"type":404,"value":1527}," b\n",{"type":395,"tag":525,"props":1529,"children":1530},{"class":527,"line":799},[1531],{"type":395,"tag":525,"props":1532,"children":1533},{"emptyLinePlaceholder":1468},[1534],{"type":404,"value":1471},{"type":395,"tag":525,"props":1536,"children":1537},{"class":527,"line":808},[1538,1542,1547,1551,1555,1560,1564,1570],{"type":395,"tag":525,"props":1539,"children":1540},{"style":722},[1541],{"type":404,"value":994},{"type":395,"tag":525,"props":1543,"children":1544},{"style":997},[1545],{"type":404,"value":1546}," add5",{"type":395,"tag":525,"props":1548,"children":1549},{"style":776},[1550],{"type":404,"value":779},{"type":395,"tag":525,"props":1552,"children":1553},{"style":544},[1554],{"type":404,"value":1374},{"type":395,"tag":525,"props":1556,"children":1557},{"style":532},[1558],{"type":404,"value":1559},"(Adder",{"type":395,"tag":525,"props":1561,"children":1562},{"style":538},[1563],{"type":404,"value":1392},{"type":395,"tag":525,"props":1565,"children":1567},{"style":1566},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1568],{"type":404,"value":1569}," 5",{"type":395,"tag":525,"props":1571,"children":1572},{"style":532},[1573],{"type":404,"value":1315},{"type":395,"tag":525,"props":1575,"children":1576},{"class":527,"line":826},[1577],{"type":395,"tag":525,"props":1578,"children":1579},{"emptyLinePlaceholder":1468},[1580],{"type":404,"value":1471},{"type":395,"tag":525,"props":1582,"children":1583},{"class":527,"line":885},[1584,1589,1593,1598,1603],{"type":395,"tag":525,"props":1585,"children":1586},{"style":544},[1587],{"type":404,"value":1588},"add5",{"type":395,"tag":525,"props":1590,"children":1591},{"style":532},[1592],{"type":404,"value":1297},{"type":395,"tag":525,"props":1594,"children":1595},{"style":1566},[1596],{"type":404,"value":1597},"5",{"type":395,"tag":525,"props":1599,"children":1600},{"style":532},[1601],{"type":404,"value":1602},") ",{"type":395,"tag":525,"props":1604,"children":1605},{"style":1256},[1606],{"type":404,"value":1607},"// >>> 10\n",{"type":395,"tag":525,"props":1609,"children":1610},{"class":527,"line":893},[1611,1615,1619,1624,1628],{"type":395,"tag":525,"props":1612,"children":1613},{"style":544},[1614],{"type":404,"value":1588},{"type":395,"tag":525,"props":1616,"children":1617},{"style":532},[1618],{"type":404,"value":1297},{"type":395,"tag":525,"props":1620,"children":1621},{"style":1566},[1622],{"type":404,"value":1623},"10",{"type":395,"tag":525,"props":1625,"children":1626},{"style":532},[1627],{"type":404,"value":1602},{"type":395,"tag":525,"props":1629,"children":1630},{"style":1256},[1631],{"type":404,"value":1632},"// >>> 15\n",{"type":395,"tag":400,"props":1634,"children":1635},{},[1636],{"type":404,"value":1637},"我猜你想咆哮：“工厂模式根本就不是这样写的！”。哈哈，别那么固执，变通一些嘛。我们现在讨论的设计模式是去除了面向对象之后的余留物，几乎只保留了设计模式的本质，复用。换句话说，Partial 是“函数工厂”，是“生成器”，“产出”了仍能接受一个参数的函数。",{"type":395,"tag":1639,"props":1640,"children":1641},"details",{},[1642,1644,1650,1651],{"type":404,"value":1643},"\n    ",{"type":395,"tag":1645,"props":1646,"children":1647},"summary",{},[1648],{"type":404,"value":1649},"我用到了类吗？",{"type":404,"value":1643},{"type":395,"tag":400,"props":1652,"children":1653},{},[1654],{"type":404,"value":1655},"没有。",{"type":395,"tag":1639,"props":1657,"children":1658},{},[1659,1660,1665,1666],{"type":404,"value":1643},{"type":395,"tag":1645,"props":1661,"children":1662},{},[1663],{"type":404,"value":1664},"用到了原型吗？",{"type":404,"value":1643},{"type":395,"tag":400,"props":1667,"children":1668},{},[1669],{"type":404,"value":1655},{"type":395,"tag":1639,"props":1671,"children":1672},{},[1673,1674,1679,1680],{"type":404,"value":1643},{"type":395,"tag":1645,"props":1675,"children":1676},{},[1677],{"type":404,"value":1678},"那我在写什么？",{"type":404,"value":1643},{"type":395,"tag":400,"props":1681,"children":1682},{},[1683],{"type":404,"value":1684},"函数。",{"type":395,"tag":400,"props":1686,"children":1687},{},[1688,1690,1707,1709,1714],{"type":404,"value":1689},"函数，函数而已！",{"type":395,"tag":442,"props":1691,"children":1692},{},[1693,1695,1705],{"type":404,"value":1694},"“函数是一等公民",{"type":395,"tag":418,"props":1696,"children":1697},{},[1698],{"type":395,"tag":422,"props":1699,"children":1703},{"href":1700,"ariaDescribedBy":1701,"dataFootnoteRef":389,"id":1702},"#user-content-fn-firstclass",[426],"user-content-fnref-firstclass",[1704],{"type":404,"value":1597},{"type":404,"value":1706},"”",{"type":404,"value":1708},"，这句话得背熟了，因为诸如“闭包”、“回调”等概念都和函数有关，",{"type":395,"tag":578,"props":1710,"children":1711},{},[1712],{"type":404,"value":1713},"面试经常会问道",{"type":404,"value":1715},"你迟早会用上的。若谈论设计模式脱离不开语言特征的话，那扯上函数绝对不会有任何问题。",{"type":395,"tag":400,"props":1717,"children":1718},{},[1719],{"type":404,"value":1720},"亲函数而远类的写法可以帮助我们消化许多种类的设计模式，我们再来看最后一种，代理模式。",{"type":395,"tag":400,"props":1722,"children":1723},{},[1724],{"type":404,"value":1725},"ES6 原生支持代理模式。对，就是 Vue3 里的那个“Proxy”，直译为“代理器”。社区有很多讲 Vue3 原理分析的文章，肯定绕不开 Proxy，这里不再赘述了。以下展示一个使用 Proxy 拦截对象操作的小例子。",{"type":395,"tag":514,"props":1727,"children":1729},{"className":516,"code":1728,"language":518,"meta":389,"style":389},"/* 使用 Proxy 代理对象，禁用对象中下划线开头的属性的访问 */\nconst proxy = new Proxy({}, {\n  set(target, key, value) {\n    invariant(key, 'set')\n    target[key] = value\n    return true\n  }\n})\n\nfunction invariant(key, action) {\n  if (key.startsWith('_')) {\n    throw new Error(`Invalid Key`)\n  }\n}\n\nproxy._prop = 'somevalue'\n// Error: Invalid Key\n",[1730],{"type":395,"tag":521,"props":1731,"children":1732},{"__ignoreMap":389},[1733,1741,1780,1823,1862,1894,1907,1914,1925,1932,1970,2022,2061,2068,2076,2084,2119],{"type":395,"tag":525,"props":1734,"children":1735},{"class":527,"line":528},[1736],{"type":395,"tag":525,"props":1737,"children":1738},{"style":1256},[1739],{"type":404,"value":1740},"/* 使用 Proxy 代理对象，禁用对象中下划线开头的属性的访问 */\n",{"type":395,"tag":525,"props":1742,"children":1743},{"class":527,"line":739},[1744,1748,1753,1757,1762,1767,1771,1776],{"type":395,"tag":525,"props":1745,"children":1746},{"style":722},[1747],{"type":404,"value":994},{"type":395,"tag":525,"props":1749,"children":1750},{"style":997},[1751],{"type":404,"value":1752}," proxy",{"type":395,"tag":525,"props":1754,"children":1755},{"style":776},[1756],{"type":404,"value":779},{"type":395,"tag":525,"props":1758,"children":1759},{"style":776},[1760],{"type":404,"value":1761}," new",{"type":395,"tag":525,"props":1763,"children":1764},{"style":544},[1765],{"type":404,"value":1766}," Proxy",{"type":395,"tag":525,"props":1768,"children":1769},{"style":532},[1770],{"type":404,"value":1297},{"type":395,"tag":525,"props":1772,"children":1773},{"style":538},[1774],{"type":404,"value":1775},"{},",{"type":395,"tag":525,"props":1777,"children":1778},{"style":538},[1779],{"type":404,"value":736},{"type":395,"tag":525,"props":1781,"children":1782},{"class":527,"line":757},[1783,1788,1792,1797,1801,1806,1810,1815,1819],{"type":395,"tag":525,"props":1784,"children":1785},{"style":812},[1786],{"type":404,"value":1787},"  set",{"type":395,"tag":525,"props":1789,"children":1790},{"style":538},[1791],{"type":404,"value":1297},{"type":395,"tag":525,"props":1793,"children":1794},{"style":907},[1795],{"type":404,"value":1796},"target",{"type":395,"tag":525,"props":1798,"children":1799},{"style":538},[1800],{"type":404,"value":1392},{"type":395,"tag":525,"props":1802,"children":1803},{"style":907},[1804],{"type":404,"value":1805}," key",{"type":395,"tag":525,"props":1807,"children":1808},{"style":538},[1809],{"type":404,"value":1392},{"type":395,"tag":525,"props":1811,"children":1812},{"style":907},[1813],{"type":404,"value":1814}," value",{"type":395,"tag":525,"props":1816,"children":1817},{"style":538},[1818],{"type":404,"value":915},{"type":395,"tag":525,"props":1820,"children":1821},{"style":538},[1822],{"type":404,"value":736},{"type":395,"tag":525,"props":1824,"children":1825},{"class":527,"line":799},[1826,1831,1836,1841,1845,1849,1854,1858],{"type":395,"tag":525,"props":1827,"children":1828},{"style":544},[1829],{"type":404,"value":1830},"    invariant",{"type":395,"tag":525,"props":1832,"children":1834},{"style":1833},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1835],{"type":404,"value":1297},{"type":395,"tag":525,"props":1837,"children":1838},{"style":532},[1839],{"type":404,"value":1840},"key",{"type":395,"tag":525,"props":1842,"children":1843},{"style":538},[1844],{"type":404,"value":1392},{"type":395,"tag":525,"props":1846,"children":1847},{"style":782},[1848],{"type":404,"value":785},{"type":395,"tag":525,"props":1850,"children":1851},{"style":788},[1852],{"type":404,"value":1853},"set",{"type":395,"tag":525,"props":1855,"children":1856},{"style":782},[1857],{"type":404,"value":847},{"type":395,"tag":525,"props":1859,"children":1860},{"style":1833},[1861],{"type":404,"value":1315},{"type":395,"tag":525,"props":1863,"children":1864},{"class":527,"line":808},[1865,1870,1875,1879,1884,1889],{"type":395,"tag":525,"props":1866,"children":1867},{"style":532},[1868],{"type":404,"value":1869},"    target",{"type":395,"tag":525,"props":1871,"children":1872},{"style":1833},[1873],{"type":404,"value":1874},"[",{"type":395,"tag":525,"props":1876,"children":1877},{"style":532},[1878],{"type":404,"value":1840},{"type":395,"tag":525,"props":1880,"children":1881},{"style":1833},[1882],{"type":404,"value":1883},"] ",{"type":395,"tag":525,"props":1885,"children":1886},{"style":776},[1887],{"type":404,"value":1888},"=",{"type":395,"tag":525,"props":1890,"children":1891},{"style":532},[1892],{"type":404,"value":1893}," value\n",{"type":395,"tag":525,"props":1895,"children":1896},{"class":527,"line":826},[1897,1901],{"type":395,"tag":525,"props":1898,"children":1899},{"style":830},[1900],{"type":404,"value":833},{"type":395,"tag":525,"props":1902,"children":1904},{"style":1903},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1905],{"type":404,"value":1906}," true\n",{"type":395,"tag":525,"props":1908,"children":1909},{"class":527,"line":885},[1910],{"type":395,"tag":525,"props":1911,"children":1912},{"style":538},[1913],{"type":404,"value":805},{"type":395,"tag":525,"props":1915,"children":1916},{"class":527,"line":893},[1917,1921],{"type":395,"tag":525,"props":1918,"children":1919},{"style":538},[1920],{"type":404,"value":1223},{"type":395,"tag":525,"props":1922,"children":1923},{"style":532},[1924],{"type":404,"value":1315},{"type":395,"tag":525,"props":1926,"children":1927},{"class":527,"line":922},[1928],{"type":395,"tag":525,"props":1929,"children":1930},{"emptyLinePlaceholder":1468},[1931],{"type":404,"value":1471},{"type":395,"tag":525,"props":1933,"children":1934},{"class":527,"line":947},[1935,1940,1945,1949,1953,1957,1962,1966],{"type":395,"tag":525,"props":1936,"children":1937},{"style":722},[1938],{"type":404,"value":1939},"function",{"type":395,"tag":525,"props":1941,"children":1942},{"style":544},[1943],{"type":404,"value":1944}," invariant",{"type":395,"tag":525,"props":1946,"children":1947},{"style":538},[1948],{"type":404,"value":1297},{"type":395,"tag":525,"props":1950,"children":1951},{"style":907},[1952],{"type":404,"value":1840},{"type":395,"tag":525,"props":1954,"children":1955},{"style":538},[1956],{"type":404,"value":1392},{"type":395,"tag":525,"props":1958,"children":1959},{"style":907},[1960],{"type":404,"value":1961}," action",{"type":395,"tag":525,"props":1963,"children":1964},{"style":538},[1965],{"type":404,"value":915},{"type":395,"tag":525,"props":1967,"children":1968},{"style":538},[1969],{"type":404,"value":736},{"type":395,"tag":525,"props":1971,"children":1972},{"class":527,"line":955},[1973,1978,1982,1986,1990,1995,1999,2003,2008,2012,2017],{"type":395,"tag":525,"props":1974,"children":1975},{"style":830},[1976],{"type":404,"value":1977},"  if",{"type":395,"tag":525,"props":1979,"children":1980},{"style":1833},[1981],{"type":404,"value":904},{"type":395,"tag":525,"props":1983,"children":1984},{"style":532},[1985],{"type":404,"value":1840},{"type":395,"tag":525,"props":1987,"children":1988},{"style":538},[1989],{"type":404,"value":541},{"type":395,"tag":525,"props":1991,"children":1992},{"style":544},[1993],{"type":404,"value":1994},"startsWith",{"type":395,"tag":525,"props":1996,"children":1997},{"style":1833},[1998],{"type":404,"value":1297},{"type":395,"tag":525,"props":2000,"children":2001},{"style":782},[2002],{"type":404,"value":847},{"type":395,"tag":525,"props":2004,"children":2005},{"style":788},[2006],{"type":404,"value":2007},"_",{"type":395,"tag":525,"props":2009,"children":2010},{"style":782},[2011],{"type":404,"value":847},{"type":395,"tag":525,"props":2013,"children":2014},{"style":1833},[2015],{"type":404,"value":2016},")) ",{"type":395,"tag":525,"props":2018,"children":2019},{"style":538},[2020],{"type":404,"value":2021},"{\n",{"type":395,"tag":525,"props":2023,"children":2024},{"class":527,"line":1209},[2025,2030,2034,2039,2043,2048,2053,2057],{"type":395,"tag":525,"props":2026,"children":2027},{"style":830},[2028],{"type":404,"value":2029},"    throw",{"type":395,"tag":525,"props":2031,"children":2032},{"style":776},[2033],{"type":404,"value":1761},{"type":395,"tag":525,"props":2035,"children":2036},{"style":544},[2037],{"type":404,"value":2038}," Error",{"type":395,"tag":525,"props":2040,"children":2041},{"style":1833},[2042],{"type":404,"value":1297},{"type":395,"tag":525,"props":2044,"children":2045},{"style":782},[2046],{"type":404,"value":2047},"`",{"type":395,"tag":525,"props":2049,"children":2050},{"style":788},[2051],{"type":404,"value":2052},"Invalid Key",{"type":395,"tag":525,"props":2054,"children":2055},{"style":782},[2056],{"type":404,"value":2047},{"type":395,"tag":525,"props":2058,"children":2059},{"style":1833},[2060],{"type":404,"value":1315},{"type":395,"tag":525,"props":2062,"children":2063},{"class":527,"line":1217},[2064],{"type":395,"tag":525,"props":2065,"children":2066},{"style":538},[2067],{"type":404,"value":805},{"type":395,"tag":525,"props":2069,"children":2071},{"class":527,"line":2070},14,[2072],{"type":395,"tag":525,"props":2073,"children":2074},{"style":538},[2075],{"type":404,"value":961},{"type":395,"tag":525,"props":2077,"children":2079},{"class":527,"line":2078},15,[2080],{"type":395,"tag":525,"props":2081,"children":2082},{"emptyLinePlaceholder":1468},[2083],{"type":404,"value":1471},{"type":395,"tag":525,"props":2085,"children":2087},{"class":527,"line":2086},16,[2088,2093,2097,2102,2106,2110,2115],{"type":395,"tag":525,"props":2089,"children":2090},{"style":532},[2091],{"type":404,"value":2092},"proxy",{"type":395,"tag":525,"props":2094,"children":2095},{"style":538},[2096],{"type":404,"value":541},{"type":395,"tag":525,"props":2098,"children":2099},{"style":532},[2100],{"type":404,"value":2101},"_prop ",{"type":395,"tag":525,"props":2103,"children":2104},{"style":776},[2105],{"type":404,"value":1888},{"type":395,"tag":525,"props":2107,"children":2108},{"style":782},[2109],{"type":404,"value":785},{"type":395,"tag":525,"props":2111,"children":2112},{"style":788},[2113],{"type":404,"value":2114},"somevalue",{"type":395,"tag":525,"props":2116,"children":2117},{"style":782},[2118],{"type":404,"value":796},{"type":395,"tag":525,"props":2120,"children":2122},{"class":527,"line":2121},17,[2123],{"type":395,"tag":525,"props":2124,"children":2125},{"style":1256},[2126],{"type":404,"value":2127},"// Error: Invalid Key\n",{"type":395,"tag":400,"props":2129,"children":2130},{},[2131],{"type":404,"value":2132},"若脱离 ES 6，代理模式会变成什么？",{"type":395,"tag":400,"props":2134,"children":2135},{},[2136],{"type":404,"value":2137},"会变成一团带有 Proxy Patterns 注释的函数，会被某个 GitHub 上的库吸收下放到 Readme 中亦或是变成社区中新增的几篇“JS 中的代理模式”的博客... 害，无所谓了。",{"type":395,"tag":407,"props":2139,"children":2141},{"id":2140},"设计模式的消融",[2142],{"type":404,"value":2140},{"type":395,"tag":400,"props":2144,"children":2145},{},[2146,2151],{"type":395,"tag":442,"props":2147,"children":2148},{},[2149],{"type":404,"value":2150},"总的来说，设计模式无非有三种作用：创建对象、组合对象以及处理对象的依赖",{"type":404,"value":2152},"。面向对象设计模式所代表的复用性，只能在面向对象的上下文中使用。跳出面向对象，你会发现代码复用的层次可以更加开放，下至语言特征，上至框架。",{"type":395,"tag":400,"props":2154,"children":2155},{},[2156],{"type":404,"value":2157},"作为抽象的最低层级，JS 语言特征，离不开日益见新的语言规范。上文总结的设计模式与语言特征的重叠之处，可以概括为以下两点：",{"type":395,"tag":2159,"props":2160,"children":2161},"ul",{},[2162,2168],{"type":395,"tag":2163,"props":2164,"children":2165},"li",{},[2166],{"type":404,"value":2167},"若语言本身孱弱时，可通过语言特征的再上层抽象，如函数，来提高复用的层次（即发明一种新的设计模式）；",{"type":395,"tag":2163,"props":2169,"children":2170},{},[2171],{"type":404,"value":2172},"当语言逐渐强大时，设计模式的概念也随之弱化；",{"type":395,"tag":400,"props":2174,"children":2175},{},[2176],{"type":404,"value":2177},"听起来颇有些“设计模式是对语言能力不足的补充”的味道，难道说我们要开始编程语言的圣战？这让我回想起 Paul Graham 在《黑客与画家》中描写到他对“强大语言”的赤裸裸的崇拜:",{"type":395,"tag":396,"props":2179,"children":2180},{},[2181],{"type":395,"tag":400,"props":2182,"children":2183},{},[2184,2186,2190,2192,2195,2197,2200,2202,2205,2207],{"type":404,"value":2185},"如果你想解决一个困难的问题，",{"type":395,"tag":2187,"props":2188,"children":2189},"br",{},[],{"type":404,"value":2191},"\n关键不是你使用的语言是否强大，而是好几个因素同时发挥作用：",{"type":395,"tag":2187,"props":2193,"children":2194},{},[],{"type":404,"value":2196},"\n（a）使用一种强大的语言；",{"type":395,"tag":2187,"props":2198,"children":2199},{},[],{"type":404,"value":2201},"\n（b）为这个难题写一个真实世界中的编译器；",{"type":395,"tag":2187,"props":2203,"children":2204},{},[],{"type":404,"value":2206},"\n（c）或者... 你把自己变成这个难题的人肉编译器。\n",{"type":395,"tag":773,"props":2208,"children":2209},{},[2210],{"type":404,"value":2211},"Paul Graham",{"type":395,"tag":400,"props":2213,"children":2214},{},[2215],{"type":404,"value":2216},"Paul Graham 就觉得设计模式就是一种对语言能力不足的妥协，“语言的编程能力越强大，写出来的程序就越短”。当然，就算有一种语言可以强大到和破除面向对象设计模式的神话，关于语言的表达能力强弱的争论也不会停止。不过好消息是，脱离场景谈语言一定是错误的，正如没有人会指望用汇编来编写 Web 程序。",{"type":395,"tag":400,"props":2218,"children":2219},{},[2220],{"type":404,"value":2221},"我们没必要去追求极致的编程语言表达力，表达力和复杂度往往是正相关的，就像世界上所有的语言的法阵都会伴随着词语的演进、读音的兴替以及对错误语法的包容，但很少有人说（或敢说）“你看，白话文比起文言文来说真是不够格啊”。",{"type":395,"tag":400,"props":2223,"children":2224},{},[2225],{"type":404,"value":2226},"脱离面向对象，我们也可以谈论设计模式，因为我们聊的就是代码复用。就算使用函数式、声明式的语言解决问题，也许有特定范式可遵循。请想象一下 CSS 中的设计模式。嗯？CSS 有设计模式么？私以为有。特异性、继承和层叠这三种语言特征就是 CSS 的设计模式；在这三种基础特性之上建立起来的各种代码组织方案/命名方案（如 OOCSS、Atomic CSS），也算。",{"type":395,"tag":400,"props":2228,"children":2229},{},[2230,2235],{"type":395,"tag":442,"props":2231,"children":2232},{},[2233],{"type":404,"value":2234},"唯一不变的，只有抽象的复用",{"type":404,"value":2236},"。我们做的一切工作，只是在抽象出不同层次的代码复用的同时，尽可能把代码组织成容易理解的形式。重要的不是记住某个设计模式中的实体以及实体是如何通讯的，而是要理解该设计模式所代表的抽象的体量适合的场景。",{"type":395,"tag":407,"props":2238,"children":2240},{"id":2239},"语言的魔法锅",[2241],{"type":404,"value":2239},{"type":395,"tag":396,"props":2243,"children":2244},{},[2245],{"type":395,"tag":400,"props":2246,"children":2247},{},[2248,2250],{"type":404,"value":2249},"在威尔士神话中，有一口神奇的大锅，加入特定配方熬制上一年零一天后，便能萃取出三滴解决任何难题的灵药。\n",{"type":395,"tag":773,"props":2251,"children":2252},{},[2253],{"type":404,"value":2254},"《塔列辛传奇》",{"type":395,"tag":400,"props":2256,"children":2257},{},[2258,2260,2267,2269,2276,2278,2289,2291,2302],{"type":404,"value":2259},"JavaScript 的火热日益见长，前端社区",{"type":395,"tag":422,"props":2261,"children":2264},{"href":2262,"rel":2263},"https://githut.info/",[1349],[2265],{"type":404,"value":2266},"越加活跃",{"type":404,"value":2268},"，规范也",{"type":395,"tag":422,"props":2270,"children":2273},{"href":2271,"rel":2272},"https://tc39.es/ecma262/",[1349],[2274],{"type":404,"value":2275},"日益见新",{"type":404,"value":2277},"。ESNeeext 已经往魔法锅中加了许多新材料，这是好事（其实我满心期待它直接把锅塞满）。新的语言特征能带来了更多的可能性，就目前而言，新特征大概率能增加语义，增强表达力、降低思维负担",{"type":395,"tag":418,"props":2279,"children":2280},{},[2281],{"type":395,"tag":422,"props":2282,"children":2286},{"href":2283,"ariaDescribedBy":2284,"dataFootnoteRef":389,"id":2285},"#user-content-fn-if-one-word",[426],"user-content-fnref-if-one-word",[2287],{"type":404,"value":2288},"6",{"type":404,"value":2290},"。尽管把材料往大锅中塞吧",{"type":395,"tag":418,"props":2292,"children":2293},{},[2294],{"type":395,"tag":422,"props":2295,"children":2299},{"href":2296,"ariaDescribedBy":2297,"dataFootnoteRef":389,"id":2298},"#user-content-fn-how-js-works",[426],"user-content-fnref-how-js-works",[2300],{"type":404,"value":2301},"7",{"type":404,"value":2303},"！让我们一同祈祷萃取出灵药的一天早日到来！",{"type":395,"tag":400,"props":2305,"children":2306},{},[2307],{"type":404,"value":2308},"以下就用魔法锅的故事作为文章结尾，这是一个颇有意思的传奇故事。",{"type":395,"tag":400,"props":2310,"children":2311},{},[2312],{"type":395,"tag":478,"props":2313,"children":2316},{"alt":2314,"src":2315},"炼金术 | 维基百科","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200704/20200713074400.png",[],{"type":395,"tag":400,"props":2318,"children":2319},{},[2320],{"type":404,"value":2321},"在爱尔兰一个隐秘的角落，住着一个精通智慧与魔法的巫师，凯丽杜恩（Ceridwen）。她能力超凡，偏偏却生了一个丑陋的儿子。所以这位母亲竭尽所能想将智慧传授给他，以弥补其外表的丑陋。她辗转于各种巫术与秘仪，最后，总算在一本隐秘的魔书中找到了灵感。",{"type":395,"tag":400,"props":2323,"children":2324},{},[2325],{"type":404,"value":2326},"魔书将秘密告诉凯丽杜恩：她需要使用一口大的魔法锅，填满红山花、小麦、火盐、精灵耳、直立根和灵尘，用大火熬制上一年零一天。最终会生成一锅致命毒物，但溅出的前三滴汁液却是充满“预言之灵”的智慧灵药。",{"type":395,"tag":400,"props":2328,"children":2329},{},[2330],{"type":404,"value":2331},"很快，熬制魔法锅的工作在凯丽杜恩的安排下有条不紊地进行，一个名字未知的盲人被派来搅拌大锅，年轻人巴赫则负责烧它下面的火。",{"type":395,"tag":400,"props":2333,"children":2334},{},[2335],{"type":404,"value":2336},"星象在天空中咯咯响地平移着，太阳和月亮绕着地球转了一轮又一轮... 随着时间推移，锅中的草药效力变得越来越强。看着咕嘟嘟冒着气泡的大锅，凯丽杜恩觉得很是满意，她便躺在温暖的锅边睡着了。",{"type":395,"tag":400,"props":2338,"children":2339},{},[2340,2342],{"type":404,"value":2341},"就在此时，意外发生了。翻腾着热气的大锅，意外地溅出了几点液体在年轻人巴赫的手指上，而巴赫居然不假思索地将手指吮吸地干干净净。和魔书的预言一样，巴赫立马就获得了智慧。他瞬间通晓了火焰的舞蹈和水的诉说，山的尊严和风的呢喃... 他知晓了无数秘密，以及... ",{"type":395,"tag":442,"props":2343,"children":2344},{},[2345],{"type":404,"value":2346},"凯丽杜恩肯定会杀了他！",{"type":395,"tag":400,"props":2348,"children":2349},{},[2350],{"type":404,"value":2351},"慌乱中，巴赫变成一只野兔夺路而逃，而凯丽杜恩惊醒后赶忙变成猎犬一路追踪过去。巴赫变成天空中的鸽子，她就变成一只鹰；他变成一头奔跑的鹿，她就变成一只草原上的狼；他化身为谷仓中的一粒麦粒，她就变成一只啄个不停老母鸡...",{"type":395,"tag":400,"props":2353,"children":2354},{},[2355],{"type":404,"value":2356},"这两人也许一直较量着，直到今天。",{"type":395,"tag":407,"props":2358,"children":2360},{"id":2359},"阅读更多",[2361],{"type":404,"value":2359},{"type":395,"tag":2159,"props":2363,"children":2364},{},[2365,2375,2385],{"type":395,"tag":2163,"props":2366,"children":2367},{},[2368],{"type":395,"tag":422,"props":2369,"children":2372},{"href":2370,"rel":2371},"https://www.jdon.com/37356",[1349],[2373],{"type":404,"value":2374},"15 年后 GoF 设计模式作者再谈设计模式",{"type":395,"tag":2163,"props":2376,"children":2377},{},[2378],{"type":395,"tag":422,"props":2379,"children":2382},{"href":2380,"rel":2381},"https://www.zhihu.com/question/37009570",[1349],[2383],{"type":404,"value":2384},"为什么不能乱点技能树",{"type":395,"tag":2163,"props":2386,"children":2387},{},[2388],{"type":395,"tag":422,"props":2389,"children":2392},{"href":2390,"rel":2391},"https://mp.weixin.qq.com/s?src=11&timestamp=1651051411&ver=3764&signature=AiaMcpc*LLVNlmVWIHaOvu4sThNq8OFp8ckqlVllLSohG8dWn**P3unuBhRwZAEND0uJdnurJtHvE6IKlBYAUUwuvRYknXkKje6CzOZaQBxRPIlnN4kwtzYsfa8fxKSM&new=1",[1349],[2393],{"type":404,"value":2394},"超越库和框架的技术创新",{"type":395,"tag":400,"props":2396,"children":2397},{},[2398],{"type":404,"value":2399},"希望本文能对你有所帮助，也欢迎各位批评文中观点或指出错误。",{"type":395,"tag":400,"props":2401,"children":2402},{},[2403,2405,2412,2414,2421],{"type":404,"value":2404},"想看看这篇文章是如何被创造的？你能从我的",{"type":395,"tag":422,"props":2406,"children":2409},{"href":2407,"rel":2408},"https://github.com/Lionad-Morotar/blogs",[1349],[2410],{"type":404,"value":2411},"博客项目",{"type":404,"value":2413},"中找到答案~ 欢迎 Star & Follow~ 也请大家多来我的",{"type":395,"tag":422,"props":2415,"children":2418},{"href":2416,"rel":2417},"https://www.lionad.art",[1349],[2419],{"type":404,"value":2420},"线上博客逛逛",{"type":404,"value":2422},"，排版超 Nice 哦~",{"type":395,"tag":2424,"props":2425,"children":2428},"section",{"className":2426,"dataFootnotes":389},[2427],"footnotes",[2429,2436],{"type":395,"tag":407,"props":2430,"children":2433},{"className":2431,"id":426},[2432],"sr-only",[2434],{"type":404,"value":2435},"Footnotes",{"type":395,"tag":2437,"props":2438,"children":2439},"ol",{},[2440,2455,2477,2490,2511,2524,2537],{"type":395,"tag":2163,"props":2441,"children":2443},{"id":2442},"user-content-fn-%E6%96%87%E5%8C%96",[2444,2446],{"type":404,"value":2445},"非贬义。 ",{"type":395,"tag":422,"props":2447,"children":2452},{"href":2448,"ariaLabel":2449,"className":2450,"dataFootnoteBackref":389},"#user-content-fnref-%E6%96%87%E5%8C%96","Back to reference 1",[2451],"data-footnote-backref",[2453],{"type":404,"value":2454},"↩",{"type":395,"tag":2163,"props":2456,"children":2458},{"id":2457},"user-content-fn-fn-call",[2459,2461,2468,2470],{"type":404,"value":2460},"见：",{"type":395,"tag":422,"props":2462,"children":2465},{"href":2463,"rel":2464},"https://zhuanlan.zhihu.com/p/95741316",[1349],[2466],{"type":404,"value":2467},"子程序（函数）考古学",{"type":404,"value":2469}," ",{"type":395,"tag":422,"props":2471,"children":2475},{"href":2472,"ariaLabel":2473,"className":2474,"dataFootnoteBackref":389},"#user-content-fnref-fn-call","Back to reference 2",[2451],[2476],{"type":404,"value":2454},{"type":395,"tag":2163,"props":2478,"children":2480},{"id":2479},"user-content-fn-css",[2481,2483],{"type":404,"value":2482},"试试使用 CSS 去写游戏？即便可行，但过程也会让人无比沮丧。 ",{"type":395,"tag":422,"props":2484,"children":2488},{"href":2485,"ariaLabel":2486,"className":2487,"dataFootnoteBackref":389},"#user-content-fnref-css","Back to reference 3",[2451],[2489],{"type":404,"value":2454},{"type":395,"tag":2163,"props":2491,"children":2493},{"id":2492},"user-content-fn-module-pattern",[2494,2496,2502,2504],{"type":404,"value":2495},"此模块模式并非传统面向对象中的模块模式，后者的定义见：",{"type":395,"tag":422,"props":2497,"children":2500},{"href":2498,"rel":2499},"https://www.jdon.com/52843",[1349],[2501],{"type":404,"value":2498},{"type":404,"value":2503},"。 ",{"type":395,"tag":422,"props":2505,"children":2509},{"href":2506,"ariaLabel":2507,"className":2508,"dataFootnoteBackref":389},"#user-content-fnref-module-pattern","Back to reference 4",[2451],[2510],{"type":404,"value":2454},{"type":395,"tag":2163,"props":2512,"children":2514},{"id":2513},"user-content-fn-firstclass",[2515,2517],{"type":404,"value":2516},"且叫且珍惜，说不定以后就听不到“一等公民”这种叫法啦。 ",{"type":395,"tag":422,"props":2518,"children":2522},{"href":2519,"ariaLabel":2520,"className":2521,"dataFootnoteBackref":389},"#user-content-fnref-firstclass","Back to reference 5",[2451],[2523],{"type":404,"value":2454},{"type":395,"tag":2163,"props":2525,"children":2527},{"id":2526},"user-content-fn-if-one-word",[2528,2530],{"type":404,"value":2529},"用一个单词就能达意时就不需要用一个句子。 ",{"type":395,"tag":422,"props":2531,"children":2535},{"href":2532,"ariaLabel":2533,"className":2534,"dataFootnoteBackref":389},"#user-content-fnref-if-one-word","Back to reference 6",[2451],[2536],{"type":404,"value":2454},{"type":395,"tag":2163,"props":2538,"children":2540},{"id":2539},"user-content-fn-how-js-works",[2541,2543],{"type":404,"value":2542},"语言特征并不总是银弹，类似观点见道格拉斯的《How JS Works》 ",{"type":395,"tag":422,"props":2544,"children":2548},{"href":2545,"ariaLabel":2546,"className":2547,"dataFootnoteBackref":389},"#user-content-fnref-how-js-works","Back to reference 7",[2451],[2549],{"type":404,"value":2454},{"type":395,"tag":2551,"props":2552,"children":2553},"style",{},[2554],{"type":404,"value":2555},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":389,"searchDepth":739,"depth":739,"links":2557},[2558,2559,2560,2561,2562,2563,2564,2565],{"id":409,"depth":739,"text":409},{"id":461,"depth":739,"text":461},{"id":569,"depth":739,"text":569},{"id":671,"depth":739,"text":671},{"id":2140,"depth":739,"text":2140},{"id":2239,"depth":739,"text":2239},{"id":2359,"depth":739,"text":2359},{"id":426,"depth":739,"text":2435},"markdown","content:2.articles:7.design-patterns-and-js-magic-pot.md","content","2.articles/7.design-patterns-and-js-magic-pot.md","md",[2572,2574],{"_path":58,"title":57,"description":2573},"本文介绍了几种通过CSS实现的常见阴影效果如单侧投影、空心投影、投影动画、彩色阴影、长投影和倒影，以及尝试使用SVG模拟材质特性如粗糙度及光学效应如菲尼尔效应生成了几种特殊的纹理，最后通过一个CSS绘制真实书本案例介绍了实战中的一些细节。",{"_path":64,"title":63,"description":2575},"上一篇讲 anysort 的文章说到因网易云音乐的歌单排序功能较弱，我们自己实现的用来给歌单自定义排序的排序库的思路。这篇文章在排序库的基础上，介绍了其 TypeScript 类型实现。",1710257706213]