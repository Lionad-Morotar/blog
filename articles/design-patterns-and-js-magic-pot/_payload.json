[{"data":1,"prerenderedAt":2346},["ShallowReactive",2],{"navigation":3,"/articles/design-patterns-and-js-magic-pot":155,"/articles/design-patterns-and-js-magic-pot-surround":2341},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":70,"_dir":156,"_draft":157,"_partial":157,"_locale":158,"title":69,"description":159,"body":160,"_type":2335,"_id":2336,"_source":2337,"_file":2338,"_stem":2339,"_extension":2340},"articles",false,"","排除人的因素，设计模式的本质只是相关代码复用。本文通过使用JS仿制并简化了几种OOL中经典设计模式，以探讨经典设计模式和代码模板的区别主要在于代码复用的层次不同，以及粗浅聊了聊设计模式与语言特征之间此强彼弱的关系。",{"type":161,"children":162,"toc":2325},"root",[163,175,181,202,207,216,228,233,238,243,252,277,282,336,341,368,378,383,388,393,398,403,411,416,421,433,438,443,466,474,479,731,749,998,1003,1008,1013,1109,1124,1402,1407,1425,1439,1454,1485,1490,1495,1897,1902,1907,1912,1922,1927,1942,1947,1981,1986,1991,1996,2006,2011,2024,2073,2078,2086,2091,2096,2101,2106,2116,2121,2126,2131,2164,2169,2192,2319],{"type":164,"tag":165,"props":166,"children":167},"element","blockquote",{},[168],{"type":164,"tag":169,"props":170,"children":171},"p",{},[172],{"type":173,"value":174},"text","设计模式最终要融入任何语言。",{"type":164,"tag":176,"props":177,"children":179},"h2",{"id":178},"设计模式是什么",[180],{"type":173,"value":178},{"type":164,"tag":169,"props":182,"children":183},{},[184,186,200],{"type":173,"value":185},"从《人月神话》到《大教堂与集市》，许多闻名业界的作品都“低代码、高文化",{"type":164,"tag":187,"props":188,"children":189},"sup",{},[190],{"type":164,"tag":191,"props":192,"children":197},"a",{"href":193,"ariaDescribedBy":194,"dataFootnoteRef":158,"id":196},"#user-content-fn-%E6%96%87%E5%8C%96",[195],"footnote-label","user-content-fnref-%E6%96%87%E5%8C%96",[198],{"type":173,"value":199},"1",{"type":173,"value":201},"”；各种代码文化运动可以看作“造神运动”此类周日剧场。许多大佬在向人们传授代码经验之余，都喜欢尝试用文化手段（不论是哲学思想还是艺术内涵），来统一人与代码的关系。这种跨界思考的过程通常比较晦涩，诸如“面向对象”、“设计模式”这些放到现在来说我们耳熟能详的词，在过去几十年都是由行业顶尖大佬们牵头搞研究，再经过不断地实践，逐渐沉淀下来形成的标准。",{"type":164,"tag":169,"props":203,"children":204},{},[205],{"type":173,"value":206},"设计模式是什么？",{"type":164,"tag":169,"props":208,"children":209},{},[210],{"type":164,"tag":211,"props":212,"children":213},"strong",{},[214],{"type":173,"value":215},"设计模式是一种标准，它描述了使用面向对象编程语言解决问题的方式。",{"type":164,"tag":169,"props":217,"children":218},{},[219,221,226],{"type":173,"value":220},"设计模式一词发源于建筑学作品《建筑模式语言》，后被一个人们称为“四人帮”（GoF）的小组种出它在软件界开的新花。无论是建筑学还是软件学中的设计模式，相同的地方是，它们都想解决“人”和“物”的关系相关问题，并且形成了一套特定的方法论。",{"type":164,"tag":211,"props":222,"children":223},{},[224],{"type":173,"value":225},"好比人们有了灶就可以长久保存火种，用名词把晦涩难懂的抽象定义为标准，这样有利于思想传播",{"type":173,"value":227},"。只要人们普遍接纳并熟知设计模式，便能畅通无阻地沟通代码的实现。当然，现实很丰满，畅快沟通有个大前提：程序设计时，大家需要使用面向对象编程语言来合作。",{"type":164,"tag":176,"props":229,"children":231},{"id":230},"为什么非面向对象不可",[232],{"type":173,"value":230},{"type":164,"tag":169,"props":234,"children":235},{},[236],{"type":173,"value":237},"构建大型软件不止面向对象这一条路，与面向对象相对应的还有结构化、形式化等程序设计方法。任意一种有自有优劣。面对日益复杂的软件，人们关心的重心逐步转移到软件的可重用性方面。面向对象凭借着分类、封装等天然符合人们认知规律的优势，得到快速发展，终打通需求分析、程序设计到编程语言等开发上下游工作，赢得了业界青睐。",{"type":164,"tag":169,"props":239,"children":240},{},[241],{"type":173,"value":242},"面向对象把功能作为节点，组合为功能网格，节点间通过消息通讯以及做对应的响应。这样一来，开发在编程时不再需要直面输入输出这种数据流动的思考方式，只需要按照指令维护各个对象内部的状态即可，节点对应的代码片段也就能得到重用。",{"type":164,"tag":169,"props":244,"children":245},{},[246],{"type":164,"tag":247,"props":248,"children":251},"img",{"alt":249,"src":250},"Message Passing In OO","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210511174933.png?w=40",[],{"type":164,"tag":169,"props":253,"children":254},{},[255,257,268,270,275],{"type":173,"value":256},"相比子程序复用，函数复用已经是巨大的进步",{"type":164,"tag":187,"props":258,"children":259},{},[260],{"type":164,"tag":191,"props":261,"children":265},{"href":262,"ariaDescribedBy":263,"dataFootnoteRef":158,"id":264},"#user-content-fn-fn-call",[195],"user-content-fnref-fn-call",[266],{"type":173,"value":267},"2",{"type":173,"value":269},"。类复用相比函数复用要更加抽象，因为它保存了函数和状态的集合；而设计模式比类复用在抽象上更胜一筹：设计模式不单单直接复用某个类，而是复用整个“功能网格”，把特定问题的解决方案相关的所有节点和通讯机制全部拷贝，固化下来，命名并形成标准。",{"type":164,"tag":211,"props":271,"children":272},{},[273],{"type":173,"value":274},"设计模式其实是使用面向对象编程语言时代码复用的高级形式，是面向对象发展壮大之路的必然的产物",{"type":173,"value":276},"。只要写代码，就会碰到复用性问题，四人帮偏好面向对象，所以“设计模式”只是他们用来传授的面向对象编程中的代码复用性经验的概括。换句话说，大部分情况下我们讨论的“设计模式”和“面向对象设计模式”完全等同。这也就解释了为什么非面向对象不可了。",{"type":164,"tag":169,"props":278,"children":279},{},[280],{"type":173,"value":281},"我们讨论一个新的问题，如果过滤掉设计模式中的面向对象成分，剩下的是些啥呢？",{"type":164,"tag":283,"props":284,"children":288},"pre",{"className":285,"code":286,"language":287,"meta":158,"style":158},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","console.log(DesignPatterns.filter(removeOO))\n","js",[289],{"type":164,"tag":290,"props":291,"children":292},"code",{"__ignoreMap":158},[293],{"type":164,"tag":294,"props":295,"children":298},"span",{"class":296,"line":297},"line",1,[299,305,311,317,322,326,331],{"type":164,"tag":294,"props":300,"children":302},{"style":301},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[303],{"type":173,"value":304},"console",{"type":164,"tag":294,"props":306,"children":308},{"style":307},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[309],{"type":173,"value":310},".",{"type":164,"tag":294,"props":312,"children":314},{"style":313},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[315],{"type":173,"value":316},"log",{"type":164,"tag":294,"props":318,"children":319},{"style":301},[320],{"type":173,"value":321},"(DesignPatterns",{"type":164,"tag":294,"props":323,"children":324},{"style":307},[325],{"type":173,"value":310},{"type":164,"tag":294,"props":327,"children":328},{"style":313},[329],{"type":173,"value":330},"filter",{"type":164,"tag":294,"props":332,"children":333},{"style":301},[334],{"type":173,"value":335},"(removeOO))\n",{"type":164,"tag":176,"props":337,"children":339},{"id":338},"设计模式的本质",[340],{"type":173,"value":338},{"type":164,"tag":169,"props":342,"children":343},{},[344,346,352,354,359,361,366],{"type":173,"value":345},"我们先直接删除上文关于设计模式的定义中的“面向对象”几个字，看看剩下些什么：设计模式是一种标准，它描述了",{"type":164,"tag":347,"props":348,"children":349},"del",{},[350],{"type":173,"value":351},"使用面向对象编程语言",{"type":173,"value":353},"解决问题的方式，是",{"type":164,"tag":347,"props":355,"children":356},{},[357],{"type":173,"value":358},"使用面向对象编程语言时",{"type":173,"value":360},"代码复用性的高级形式，是",{"type":164,"tag":347,"props":362,"children":363},{},[364],{"type":173,"value":365},"面向对象",{"type":173,"value":367},"发展壮大之路的必然的产物。",{"type":164,"tag":169,"props":369,"children":370},{},[371,373],{"type":173,"value":372},"句子有些不通顺，修补之后变成了：",{"type":164,"tag":211,"props":374,"children":375},{},[376],{"type":173,"value":377},"设计模式是一种标准，它描述了编程时解决问题的特定方式，是代码复用的高级形式及发展代码复用必然的产物。",{"type":164,"tag":169,"props":379,"children":380},{},[381],{"type":173,"value":382},"设计模式本质是什么？不言自明，它只是相关代码复用的一种抽象概念。",{"type":164,"tag":169,"props":384,"children":385},{},[386],{"type":173,"value":387},"说到代码复用，主要关系到代码组织。从函数复用，到使用设计模式，再到使用库、框架，三种代码复用方式的主要区别在于代码组织的粒度不同。",{"type":164,"tag":169,"props":389,"children":390},{},[391],{"type":173,"value":392},"函数复用比较简单，你可以写一个叫做 Add 的函数给两数相加，然后 Copy&Paste 到其他地方复用，或是把函数存放到 Utils.js 文件中，通过模块机制复用。为了了解如何使用某个函数，需要在使用前阅读注释。",{"type":164,"tag":169,"props":394,"children":395},{},[396],{"type":173,"value":397},"库和框架最为复杂，它们是组织了大量函数及实体形成的巨型代码片段。开发新项目时很少会花精力自研框架，一般都引现成的轮子直接开造。使用某库或框架前，必须详细阅读文档。",{"type":164,"tag":169,"props":399,"children":400},{},[401],{"type":173,"value":402},"设计模式则是单个或多个函数的组合（在 Java 中不是函数而是类），既可以在新项目里现写一个模式供使用，也可以引入社区现有的模块来复用。为了了解如何使用某个设计模式，需要提前了解该模式定义的实体以及实体是通讯机制。",{"type":164,"tag":169,"props":404,"children":405},{},[406],{"type":164,"tag":247,"props":407,"children":410},{"alt":408,"src":409},"函数、设计模式、框架间的升级关系","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210513145630.png?w=70",[],{"type":164,"tag":169,"props":412,"children":413},{},[414],{"type":173,"value":415},"设计模式作为最简单的实体和函数的组合，可看作函数的升级版或是框架的缩水版；去掉设计模式中的面向对象相关内容，就只剩下了函数。",{"type":164,"tag":169,"props":417,"children":418},{},[419],{"type":173,"value":420},"等等，“实体和实体间通讯机制”凭空消失了？",{"type":164,"tag":169,"props":422,"children":423},{},[424,426,431],{"type":173,"value":425},"并没有。但我想让他消失。下文将从 JavaScript 入手，介绍如何把设计模式的概念映射到语言特征中。语言特征可是个好东西呀！如果你同意抽象也像复用一样有函数复用、库和框架等不同复杂度的层次的话，那我认为",{"type":164,"tag":211,"props":427,"children":428},{},[429],{"type":173,"value":430},"语言特征就是抽象的基础了。除了语言本身以外，所有抽象的建立都依赖于语言特征",{"type":173,"value":432},"。把设计模式映射成语言特征后，我们就能跳出面向对象的禁锢，从新的、更高层的角度重新思考代码复用问题。",{"type":164,"tag":169,"props":434,"children":435},{},[436],{"type":173,"value":437},"回到正题，我们从 JS 开始说起。",{"type":164,"tag":176,"props":439,"children":441},{"id":440},"仿制设计模式",[442],{"type":173,"value":440},{"type":164,"tag":169,"props":444,"children":445},{},[446,448,453,464],{"type":173,"value":447},"编程语言并不是万能的。",{"type":164,"tag":211,"props":449,"children":450},{},[451],{"type":173,"value":452},"特定语言适合用来解决特定问题",{"type":164,"tag":187,"props":454,"children":455},{},[456],{"type":164,"tag":191,"props":457,"children":461},{"href":458,"ariaDescribedBy":459,"dataFootnoteRef":158,"id":460},"#user-content-fn-css",[195],"user-content-fnref-css",[462],{"type":173,"value":463},"3",{"type":173,"value":465},"。提到 JavaScript 诸多语言特征，其优点可以用寥寥三个词概括：“原型”、“对象”、“函数”。熟练掌握了这些内容，就能在 JS 的世界中游刃有余。",{"type":164,"tag":169,"props":467,"children":468},{},[469],{"type":164,"tag":247,"props":470,"children":473},{"alt":471,"src":472},"《JavaScript 精粹》VS《JavaScript 权威指南》","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200704/20200709104930.png",[],{"type":164,"tag":169,"props":475,"children":476},{},[477],{"type":173,"value":478},"传统面向对象语言以类封装状态，并向外暴露改变状态的方法。以下代码中的书本类为例：Book Class 保持有 name 状态，可以使用 getPrintName 方法返回包装后的 name 或使用 rename 修改 name 。",{"type":164,"tag":283,"props":480,"children":482},{"className":285,"code":481,"language":287,"meta":158,"style":158},"class Book {\n  constructor () {\n    this.name = '设计模式与JS魔法锅'\n  }\n  getPrintName () {\n    return '《' + this.name + '》'\n  }\n  rename (newName) {\n    this.name = newName\n  }\n}\n",[483],{"type":164,"tag":290,"props":484,"children":485},{"__ignoreMap":158},[486,506,524,566,575,593,652,660,689,714,722],{"type":164,"tag":294,"props":487,"children":488},{"class":296,"line":297},[489,495,501],{"type":164,"tag":294,"props":490,"children":492},{"style":491},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[493],{"type":173,"value":494},"class",{"type":164,"tag":294,"props":496,"children":498},{"style":497},"--shiki-light:#E2931D;--shiki-light-text-decoration:inherit;--shiki-default:#6F42C1;--shiki-default-text-decoration:inherit;--shiki-dark:#B392F0;--shiki-dark-text-decoration:inherit;--shiki-sepia:#A6E22E;--shiki-sepia-text-decoration:underline",[499],{"type":173,"value":500}," Book",{"type":164,"tag":294,"props":502,"children":503},{"style":307},[504],{"type":173,"value":505}," {\n",{"type":164,"tag":294,"props":507,"children":509},{"class":296,"line":508},2,[510,515,520],{"type":164,"tag":294,"props":511,"children":512},{"style":491},[513],{"type":173,"value":514},"  constructor",{"type":164,"tag":294,"props":516,"children":517},{"style":307},[518],{"type":173,"value":519}," ()",{"type":164,"tag":294,"props":521,"children":522},{"style":307},[523],{"type":173,"value":505},{"type":164,"tag":294,"props":525,"children":527},{"class":296,"line":526},3,[528,534,538,543,549,555,561],{"type":164,"tag":294,"props":529,"children":531},{"style":530},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[532],{"type":173,"value":533},"    this",{"type":164,"tag":294,"props":535,"children":536},{"style":307},[537],{"type":173,"value":310},{"type":164,"tag":294,"props":539,"children":540},{"style":301},[541],{"type":173,"value":542},"name",{"type":164,"tag":294,"props":544,"children":546},{"style":545},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[547],{"type":173,"value":548}," =",{"type":164,"tag":294,"props":550,"children":552},{"style":551},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[553],{"type":173,"value":554}," '",{"type":164,"tag":294,"props":556,"children":558},{"style":557},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[559],{"type":173,"value":560},"设计模式与JS魔法锅",{"type":164,"tag":294,"props":562,"children":563},{"style":551},[564],{"type":173,"value":565},"'\n",{"type":164,"tag":294,"props":567,"children":569},{"class":296,"line":568},4,[570],{"type":164,"tag":294,"props":571,"children":572},{"style":307},[573],{"type":173,"value":574},"  }\n",{"type":164,"tag":294,"props":576,"children":578},{"class":296,"line":577},5,[579,585,589],{"type":164,"tag":294,"props":580,"children":582},{"style":581},"--shiki-light:#E53935;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[583],{"type":173,"value":584},"  getPrintName",{"type":164,"tag":294,"props":586,"children":587},{"style":307},[588],{"type":173,"value":519},{"type":164,"tag":294,"props":590,"children":591},{"style":307},[592],{"type":173,"value":505},{"type":164,"tag":294,"props":594,"children":596},{"class":296,"line":595},6,[597,603,607,612,617,622,627,631,635,639,643,648],{"type":164,"tag":294,"props":598,"children":600},{"style":599},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[601],{"type":173,"value":602},"    return",{"type":164,"tag":294,"props":604,"children":605},{"style":551},[606],{"type":173,"value":554},{"type":164,"tag":294,"props":608,"children":609},{"style":557},[610],{"type":173,"value":611},"《",{"type":164,"tag":294,"props":613,"children":614},{"style":551},[615],{"type":173,"value":616},"'",{"type":164,"tag":294,"props":618,"children":619},{"style":545},[620],{"type":173,"value":621}," +",{"type":164,"tag":294,"props":623,"children":624},{"style":530},[625],{"type":173,"value":626}," this",{"type":164,"tag":294,"props":628,"children":629},{"style":307},[630],{"type":173,"value":310},{"type":164,"tag":294,"props":632,"children":633},{"style":301},[634],{"type":173,"value":542},{"type":164,"tag":294,"props":636,"children":637},{"style":545},[638],{"type":173,"value":621},{"type":164,"tag":294,"props":640,"children":641},{"style":551},[642],{"type":173,"value":554},{"type":164,"tag":294,"props":644,"children":645},{"style":557},[646],{"type":173,"value":647},"》",{"type":164,"tag":294,"props":649,"children":650},{"style":551},[651],{"type":173,"value":565},{"type":164,"tag":294,"props":653,"children":655},{"class":296,"line":654},7,[656],{"type":164,"tag":294,"props":657,"children":658},{"style":307},[659],{"type":173,"value":574},{"type":164,"tag":294,"props":661,"children":663},{"class":296,"line":662},8,[664,669,674,680,685],{"type":164,"tag":294,"props":665,"children":666},{"style":581},[667],{"type":173,"value":668},"  rename",{"type":164,"tag":294,"props":670,"children":671},{"style":307},[672],{"type":173,"value":673}," (",{"type":164,"tag":294,"props":675,"children":677},{"style":676},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[678],{"type":173,"value":679},"newName",{"type":164,"tag":294,"props":681,"children":682},{"style":307},[683],{"type":173,"value":684},")",{"type":164,"tag":294,"props":686,"children":687},{"style":307},[688],{"type":173,"value":505},{"type":164,"tag":294,"props":690,"children":692},{"class":296,"line":691},9,[693,697,701,705,709],{"type":164,"tag":294,"props":694,"children":695},{"style":530},[696],{"type":173,"value":533},{"type":164,"tag":294,"props":698,"children":699},{"style":307},[700],{"type":173,"value":310},{"type":164,"tag":294,"props":702,"children":703},{"style":301},[704],{"type":173,"value":542},{"type":164,"tag":294,"props":706,"children":707},{"style":545},[708],{"type":173,"value":548},{"type":164,"tag":294,"props":710,"children":711},{"style":301},[712],{"type":173,"value":713}," newName\n",{"type":164,"tag":294,"props":715,"children":717},{"class":296,"line":716},10,[718],{"type":164,"tag":294,"props":719,"children":720},{"style":307},[721],{"type":173,"value":574},{"type":164,"tag":294,"props":723,"children":725},{"class":296,"line":724},11,[726],{"type":164,"tag":294,"props":727,"children":728},{"style":307},[729],{"type":173,"value":730},"}\n",{"type":164,"tag":169,"props":732,"children":733},{},[734,736,747],{"type":173,"value":735},"放到早期版本 JS 中，想要封装变量，这不好办。早期版本的 JS 没有块级作用域，所以声明的变量会在整个代码或函数作用域中生效。为了仿制类的状态封装能力，知名布道者道格拉斯发明了一种“模块模式”",{"type":164,"tag":187,"props":737,"children":738},{},[739],{"type":164,"tag":191,"props":740,"children":744},{"href":741,"ariaDescribedBy":742,"dataFootnoteRef":158,"id":743},"#user-content-fn-module-pattern",[195],"user-content-fnref-module-pattern",[745],{"type":173,"value":746},"4",{"type":173,"value":748},"，即通过闭包来控制变量的访问权，代码如下：",{"type":164,"tag":283,"props":750,"children":752},{"className":285,"code":751,"language":287,"meta":158,"style":158},"const aBook = (() => {\n  var name = '设计模式与JS魔法锅'\n  function getPrintName () {\n    return '《' + name + '》'\n  }\n  function rename (newName) {\n    name = newName\n  }\n  return {\n    getPrintName,\n    rename\n  }\n})()\n",[753],{"type":164,"tag":290,"props":754,"children":755},{"__ignoreMap":158},[756,792,821,842,885,892,920,936,943,955,968,976,984],{"type":164,"tag":294,"props":757,"children":758},{"class":296,"line":297},[759,764,770,774,778,783,788],{"type":164,"tag":294,"props":760,"children":761},{"style":491},[762],{"type":173,"value":763},"const",{"type":164,"tag":294,"props":765,"children":767},{"style":766},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[768],{"type":173,"value":769}," aBook",{"type":164,"tag":294,"props":771,"children":772},{"style":545},[773],{"type":173,"value":548},{"type":164,"tag":294,"props":775,"children":776},{"style":301},[777],{"type":173,"value":673},{"type":164,"tag":294,"props":779,"children":780},{"style":307},[781],{"type":173,"value":782},"()",{"type":164,"tag":294,"props":784,"children":785},{"style":491},[786],{"type":173,"value":787}," =>",{"type":164,"tag":294,"props":789,"children":790},{"style":307},[791],{"type":173,"value":505},{"type":164,"tag":294,"props":793,"children":794},{"class":296,"line":508},[795,800,805,809,813,817],{"type":164,"tag":294,"props":796,"children":797},{"style":491},[798],{"type":173,"value":799},"  var",{"type":164,"tag":294,"props":801,"children":802},{"style":301},[803],{"type":173,"value":804}," name",{"type":164,"tag":294,"props":806,"children":807},{"style":545},[808],{"type":173,"value":548},{"type":164,"tag":294,"props":810,"children":811},{"style":551},[812],{"type":173,"value":554},{"type":164,"tag":294,"props":814,"children":815},{"style":557},[816],{"type":173,"value":560},{"type":164,"tag":294,"props":818,"children":819},{"style":551},[820],{"type":173,"value":565},{"type":164,"tag":294,"props":822,"children":823},{"class":296,"line":526},[824,829,834,838],{"type":164,"tag":294,"props":825,"children":826},{"style":491},[827],{"type":173,"value":828},"  function",{"type":164,"tag":294,"props":830,"children":831},{"style":313},[832],{"type":173,"value":833}," getPrintName",{"type":164,"tag":294,"props":835,"children":836},{"style":307},[837],{"type":173,"value":519},{"type":164,"tag":294,"props":839,"children":840},{"style":307},[841],{"type":173,"value":505},{"type":164,"tag":294,"props":843,"children":844},{"class":296,"line":568},[845,849,853,857,861,865,869,873,877,881],{"type":164,"tag":294,"props":846,"children":847},{"style":599},[848],{"type":173,"value":602},{"type":164,"tag":294,"props":850,"children":851},{"style":551},[852],{"type":173,"value":554},{"type":164,"tag":294,"props":854,"children":855},{"style":557},[856],{"type":173,"value":611},{"type":164,"tag":294,"props":858,"children":859},{"style":551},[860],{"type":173,"value":616},{"type":164,"tag":294,"props":862,"children":863},{"style":545},[864],{"type":173,"value":621},{"type":164,"tag":294,"props":866,"children":867},{"style":301},[868],{"type":173,"value":804},{"type":164,"tag":294,"props":870,"children":871},{"style":545},[872],{"type":173,"value":621},{"type":164,"tag":294,"props":874,"children":875},{"style":551},[876],{"type":173,"value":554},{"type":164,"tag":294,"props":878,"children":879},{"style":557},[880],{"type":173,"value":647},{"type":164,"tag":294,"props":882,"children":883},{"style":551},[884],{"type":173,"value":565},{"type":164,"tag":294,"props":886,"children":887},{"class":296,"line":577},[888],{"type":164,"tag":294,"props":889,"children":890},{"style":307},[891],{"type":173,"value":574},{"type":164,"tag":294,"props":893,"children":894},{"class":296,"line":595},[895,899,904,908,912,916],{"type":164,"tag":294,"props":896,"children":897},{"style":491},[898],{"type":173,"value":828},{"type":164,"tag":294,"props":900,"children":901},{"style":313},[902],{"type":173,"value":903}," rename",{"type":164,"tag":294,"props":905,"children":906},{"style":307},[907],{"type":173,"value":673},{"type":164,"tag":294,"props":909,"children":910},{"style":676},[911],{"type":173,"value":679},{"type":164,"tag":294,"props":913,"children":914},{"style":307},[915],{"type":173,"value":684},{"type":164,"tag":294,"props":917,"children":918},{"style":307},[919],{"type":173,"value":505},{"type":164,"tag":294,"props":921,"children":922},{"class":296,"line":654},[923,928,932],{"type":164,"tag":294,"props":924,"children":925},{"style":301},[926],{"type":173,"value":927},"    name",{"type":164,"tag":294,"props":929,"children":930},{"style":545},[931],{"type":173,"value":548},{"type":164,"tag":294,"props":933,"children":934},{"style":301},[935],{"type":173,"value":713},{"type":164,"tag":294,"props":937,"children":938},{"class":296,"line":662},[939],{"type":164,"tag":294,"props":940,"children":941},{"style":307},[942],{"type":173,"value":574},{"type":164,"tag":294,"props":944,"children":945},{"class":296,"line":691},[946,951],{"type":164,"tag":294,"props":947,"children":948},{"style":599},[949],{"type":173,"value":950},"  return",{"type":164,"tag":294,"props":952,"children":953},{"style":307},[954],{"type":173,"value":505},{"type":164,"tag":294,"props":956,"children":957},{"class":296,"line":716},[958,963],{"type":164,"tag":294,"props":959,"children":960},{"style":301},[961],{"type":173,"value":962},"    getPrintName",{"type":164,"tag":294,"props":964,"children":965},{"style":307},[966],{"type":173,"value":967},",\n",{"type":164,"tag":294,"props":969,"children":970},{"class":296,"line":724},[971],{"type":164,"tag":294,"props":972,"children":973},{"style":301},[974],{"type":173,"value":975},"    rename\n",{"type":164,"tag":294,"props":977,"children":979},{"class":296,"line":978},12,[980],{"type":164,"tag":294,"props":981,"children":982},{"style":307},[983],{"type":173,"value":574},{"type":164,"tag":294,"props":985,"children":987},{"class":296,"line":986},13,[988,993],{"type":164,"tag":294,"props":989,"children":990},{"style":307},[991],{"type":173,"value":992},"}",{"type":164,"tag":294,"props":994,"children":995},{"style":301},[996],{"type":173,"value":997},")()\n",{"type":164,"tag":169,"props":999,"children":1000},{},[1001],{"type":173,"value":1002},"看起来，模块模式就像是语言能力不足的补充。把目光从遥远的模块模式收回到 2015 年 ES6 发布之后，JavaScript 语言特征得到增强，曾风靡一时的潮词模块模式几乎从网络中销声匿迹了。现在我们可以自由地使用类封装状态，不必再写因缺乏语义显得蹩脚的 IIFE 。",{"type":164,"tag":169,"props":1004,"children":1005},{},[1006],{"type":173,"value":1007},"我们再来看看面向对象中的常见的装饰器模式。",{"type":164,"tag":169,"props":1009,"children":1010},{},[1011],{"type":173,"value":1012},"假设你在维护一个开源项目，项目中有些过时的 API，你想在别人调用该 API 时提示一句“你好，此 API 将在下个版本移除”。这段代码可以这样写：",{"type":164,"tag":283,"props":1014,"children":1016},{"className":285,"code":1015,"language":287,"meta":158,"style":158},"// 目前不支持给对象属性使用装饰器，所以这是一段伪代码\nconst myAPI = {\n  @deprecate('WARN: oldAPI is decrapted, please use oldAPI_v2')\n  oldAPI() {}\n}\n",[1017],{"type":164,"tag":290,"props":1018,"children":1019},{"__ignoreMap":158},[1020,1029,1049,1085,1102],{"type":164,"tag":294,"props":1021,"children":1022},{"class":296,"line":297},[1023],{"type":164,"tag":294,"props":1024,"children":1026},{"style":1025},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[1027],{"type":173,"value":1028},"// 目前不支持给对象属性使用装饰器，所以这是一段伪代码\n",{"type":164,"tag":294,"props":1030,"children":1031},{"class":296,"line":508},[1032,1036,1041,1045],{"type":164,"tag":294,"props":1033,"children":1034},{"style":491},[1035],{"type":173,"value":763},{"type":164,"tag":294,"props":1037,"children":1038},{"style":766},[1039],{"type":173,"value":1040}," myAPI",{"type":164,"tag":294,"props":1042,"children":1043},{"style":545},[1044],{"type":173,"value":548},{"type":164,"tag":294,"props":1046,"children":1047},{"style":307},[1048],{"type":173,"value":505},{"type":164,"tag":294,"props":1050,"children":1051},{"class":296,"line":526},[1052,1057,1062,1067,1071,1076,1080],{"type":164,"tag":294,"props":1053,"children":1054},{"style":301},[1055],{"type":173,"value":1056},"  @",{"type":164,"tag":294,"props":1058,"children":1059},{"style":581},[1060],{"type":173,"value":1061},"deprecate",{"type":164,"tag":294,"props":1063,"children":1064},{"style":307},[1065],{"type":173,"value":1066},"(",{"type":164,"tag":294,"props":1068,"children":1069},{"style":551},[1070],{"type":173,"value":616},{"type":164,"tag":294,"props":1072,"children":1073},{"style":557},[1074],{"type":173,"value":1075},"WARN: oldAPI is decrapted, please use oldAPI_v2",{"type":164,"tag":294,"props":1077,"children":1078},{"style":551},[1079],{"type":173,"value":616},{"type":164,"tag":294,"props":1081,"children":1082},{"style":307},[1083],{"type":173,"value":1084},")\n",{"type":164,"tag":294,"props":1086,"children":1087},{"class":296,"line":568},[1088,1093,1097],{"type":164,"tag":294,"props":1089,"children":1090},{"style":581},[1091],{"type":173,"value":1092},"  oldAPI",{"type":164,"tag":294,"props":1094,"children":1095},{"style":307},[1096],{"type":173,"value":782},{"type":164,"tag":294,"props":1098,"children":1099},{"style":307},[1100],{"type":173,"value":1101}," {}\n",{"type":164,"tag":294,"props":1103,"children":1104},{"class":296,"line":577},[1105],{"type":164,"tag":294,"props":1106,"children":1107},{"style":307},[1108],{"type":173,"value":730},{"type":164,"tag":169,"props":1110,"children":1111},{},[1112,1114,1122],{"type":173,"value":1113},"若不是",{"type":164,"tag":191,"props":1115,"children":1119},{"href":1116,"rel":1117},"https://github.com/tc39/proposal-decorators",[1118],"nofollow",[1120],{"type":173,"value":1121},"装饰器提案",{"type":173,"value":1123},"的出现，我赌五毛，社区里不会有太多讨论装饰器模式的文章。不过大家若有留意过平常的代码，肯定会注意到其实高阶函数就是装饰器的具体实现。函数在 JS 中是一等公民，通过函数组合可以极其方便地仿制某些设计模式。比如，下代码中，使用“局部应用”函数仿制了一个工厂模式：",{"type":164,"tag":283,"props":1125,"children":1127},{"className":285,"code":1126,"language":287,"meta":158,"style":158},"const Partial = (fn, ...args) => (...rest) => fn(...args, ...rest)\n\nconst Adder = (a, b) => a + b\n\nconst add5 = Partial(Adder, 5)\n\nadd5(5) // >>> 10\nadd5(10) // >>> 15\n",[1128],{"type":164,"tag":290,"props":1129,"children":1130},{"__ignoreMap":158},[1131,1232,1241,1297,1304,1343,1350,1377],{"type":164,"tag":294,"props":1132,"children":1133},{"class":296,"line":297},[1134,1138,1144,1148,1152,1157,1162,1167,1172,1176,1180,1184,1189,1194,1198,1202,1207,1211,1215,1219,1223,1227],{"type":164,"tag":294,"props":1135,"children":1136},{"style":491},[1137],{"type":173,"value":763},{"type":164,"tag":294,"props":1139,"children":1141},{"style":1140},"--shiki-light:#90A4AE;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1142],{"type":173,"value":1143}," Partial",{"type":164,"tag":294,"props":1145,"children":1146},{"style":545},[1147],{"type":173,"value":548},{"type":164,"tag":294,"props":1149,"children":1150},{"style":307},[1151],{"type":173,"value":673},{"type":164,"tag":294,"props":1153,"children":1154},{"style":676},[1155],{"type":173,"value":1156},"fn",{"type":164,"tag":294,"props":1158,"children":1159},{"style":307},[1160],{"type":173,"value":1161},",",{"type":164,"tag":294,"props":1163,"children":1164},{"style":545},[1165],{"type":173,"value":1166}," ...",{"type":164,"tag":294,"props":1168,"children":1169},{"style":676},[1170],{"type":173,"value":1171},"args",{"type":164,"tag":294,"props":1173,"children":1174},{"style":307},[1175],{"type":173,"value":684},{"type":164,"tag":294,"props":1177,"children":1178},{"style":491},[1179],{"type":173,"value":787},{"type":164,"tag":294,"props":1181,"children":1182},{"style":307},[1183],{"type":173,"value":673},{"type":164,"tag":294,"props":1185,"children":1186},{"style":545},[1187],{"type":173,"value":1188},"...",{"type":164,"tag":294,"props":1190,"children":1191},{"style":676},[1192],{"type":173,"value":1193},"rest",{"type":164,"tag":294,"props":1195,"children":1196},{"style":307},[1197],{"type":173,"value":684},{"type":164,"tag":294,"props":1199,"children":1200},{"style":491},[1201],{"type":173,"value":787},{"type":164,"tag":294,"props":1203,"children":1204},{"style":313},[1205],{"type":173,"value":1206}," fn",{"type":164,"tag":294,"props":1208,"children":1209},{"style":301},[1210],{"type":173,"value":1066},{"type":164,"tag":294,"props":1212,"children":1213},{"style":545},[1214],{"type":173,"value":1188},{"type":164,"tag":294,"props":1216,"children":1217},{"style":301},[1218],{"type":173,"value":1171},{"type":164,"tag":294,"props":1220,"children":1221},{"style":307},[1222],{"type":173,"value":1161},{"type":164,"tag":294,"props":1224,"children":1225},{"style":545},[1226],{"type":173,"value":1166},{"type":164,"tag":294,"props":1228,"children":1229},{"style":301},[1230],{"type":173,"value":1231},"rest)\n",{"type":164,"tag":294,"props":1233,"children":1234},{"class":296,"line":508},[1235],{"type":164,"tag":294,"props":1236,"children":1238},{"emptyLinePlaceholder":1237},true,[1239],{"type":173,"value":1240},"\n",{"type":164,"tag":294,"props":1242,"children":1243},{"class":296,"line":526},[1244,1248,1253,1257,1261,1265,1269,1274,1278,1282,1287,1292],{"type":164,"tag":294,"props":1245,"children":1246},{"style":491},[1247],{"type":173,"value":763},{"type":164,"tag":294,"props":1249,"children":1250},{"style":1140},[1251],{"type":173,"value":1252}," Adder",{"type":164,"tag":294,"props":1254,"children":1255},{"style":545},[1256],{"type":173,"value":548},{"type":164,"tag":294,"props":1258,"children":1259},{"style":307},[1260],{"type":173,"value":673},{"type":164,"tag":294,"props":1262,"children":1263},{"style":676},[1264],{"type":173,"value":191},{"type":164,"tag":294,"props":1266,"children":1267},{"style":307},[1268],{"type":173,"value":1161},{"type":164,"tag":294,"props":1270,"children":1271},{"style":676},[1272],{"type":173,"value":1273}," b",{"type":164,"tag":294,"props":1275,"children":1276},{"style":307},[1277],{"type":173,"value":684},{"type":164,"tag":294,"props":1279,"children":1280},{"style":491},[1281],{"type":173,"value":787},{"type":164,"tag":294,"props":1283,"children":1284},{"style":301},[1285],{"type":173,"value":1286}," a ",{"type":164,"tag":294,"props":1288,"children":1289},{"style":545},[1290],{"type":173,"value":1291},"+",{"type":164,"tag":294,"props":1293,"children":1294},{"style":301},[1295],{"type":173,"value":1296}," b\n",{"type":164,"tag":294,"props":1298,"children":1299},{"class":296,"line":568},[1300],{"type":164,"tag":294,"props":1301,"children":1302},{"emptyLinePlaceholder":1237},[1303],{"type":173,"value":1240},{"type":164,"tag":294,"props":1305,"children":1306},{"class":296,"line":577},[1307,1311,1316,1320,1324,1329,1333,1339],{"type":164,"tag":294,"props":1308,"children":1309},{"style":491},[1310],{"type":173,"value":763},{"type":164,"tag":294,"props":1312,"children":1313},{"style":766},[1314],{"type":173,"value":1315}," add5",{"type":164,"tag":294,"props":1317,"children":1318},{"style":545},[1319],{"type":173,"value":548},{"type":164,"tag":294,"props":1321,"children":1322},{"style":313},[1323],{"type":173,"value":1143},{"type":164,"tag":294,"props":1325,"children":1326},{"style":301},[1327],{"type":173,"value":1328},"(Adder",{"type":164,"tag":294,"props":1330,"children":1331},{"style":307},[1332],{"type":173,"value":1161},{"type":164,"tag":294,"props":1334,"children":1336},{"style":1335},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1337],{"type":173,"value":1338}," 5",{"type":164,"tag":294,"props":1340,"children":1341},{"style":301},[1342],{"type":173,"value":1084},{"type":164,"tag":294,"props":1344,"children":1345},{"class":296,"line":595},[1346],{"type":164,"tag":294,"props":1347,"children":1348},{"emptyLinePlaceholder":1237},[1349],{"type":173,"value":1240},{"type":164,"tag":294,"props":1351,"children":1352},{"class":296,"line":654},[1353,1358,1362,1367,1372],{"type":164,"tag":294,"props":1354,"children":1355},{"style":313},[1356],{"type":173,"value":1357},"add5",{"type":164,"tag":294,"props":1359,"children":1360},{"style":301},[1361],{"type":173,"value":1066},{"type":164,"tag":294,"props":1363,"children":1364},{"style":1335},[1365],{"type":173,"value":1366},"5",{"type":164,"tag":294,"props":1368,"children":1369},{"style":301},[1370],{"type":173,"value":1371},") ",{"type":164,"tag":294,"props":1373,"children":1374},{"style":1025},[1375],{"type":173,"value":1376},"// >>> 10\n",{"type":164,"tag":294,"props":1378,"children":1379},{"class":296,"line":662},[1380,1384,1388,1393,1397],{"type":164,"tag":294,"props":1381,"children":1382},{"style":313},[1383],{"type":173,"value":1357},{"type":164,"tag":294,"props":1385,"children":1386},{"style":301},[1387],{"type":173,"value":1066},{"type":164,"tag":294,"props":1389,"children":1390},{"style":1335},[1391],{"type":173,"value":1392},"10",{"type":164,"tag":294,"props":1394,"children":1395},{"style":301},[1396],{"type":173,"value":1371},{"type":164,"tag":294,"props":1398,"children":1399},{"style":1025},[1400],{"type":173,"value":1401},"// >>> 15\n",{"type":164,"tag":169,"props":1403,"children":1404},{},[1405],{"type":173,"value":1406},"我猜你想咆哮：“工厂模式根本就不是这样写的！”。哈哈，别那么固执，变通一些嘛。我们现在讨论的设计模式是去除了面向对象之后的余留物，几乎只保留了设计模式的本质，复用。换句话说，Partial 是“函数工厂”，是“生成器”，“产出”了仍能接受一个参数的函数。",{"type":164,"tag":1408,"props":1409,"children":1410},"details",{},[1411,1413,1419,1420],{"type":173,"value":1412},"\n    ",{"type":164,"tag":1414,"props":1415,"children":1416},"summary",{},[1417],{"type":173,"value":1418},"我用到了类吗？",{"type":173,"value":1412},{"type":164,"tag":169,"props":1421,"children":1422},{},[1423],{"type":173,"value":1424},"没有。",{"type":164,"tag":1408,"props":1426,"children":1427},{},[1428,1429,1434,1435],{"type":173,"value":1412},{"type":164,"tag":1414,"props":1430,"children":1431},{},[1432],{"type":173,"value":1433},"用到了原型吗？",{"type":173,"value":1412},{"type":164,"tag":169,"props":1436,"children":1437},{},[1438],{"type":173,"value":1424},{"type":164,"tag":1408,"props":1440,"children":1441},{},[1442,1443,1448,1449],{"type":173,"value":1412},{"type":164,"tag":1414,"props":1444,"children":1445},{},[1446],{"type":173,"value":1447},"那我在写什么？",{"type":173,"value":1412},{"type":164,"tag":169,"props":1450,"children":1451},{},[1452],{"type":173,"value":1453},"函数。",{"type":164,"tag":169,"props":1455,"children":1456},{},[1457,1459,1476,1478,1483],{"type":173,"value":1458},"函数，函数而已！",{"type":164,"tag":211,"props":1460,"children":1461},{},[1462,1464,1474],{"type":173,"value":1463},"“函数是一等公民",{"type":164,"tag":187,"props":1465,"children":1466},{},[1467],{"type":164,"tag":191,"props":1468,"children":1472},{"href":1469,"ariaDescribedBy":1470,"dataFootnoteRef":158,"id":1471},"#user-content-fn-firstclass",[195],"user-content-fnref-firstclass",[1473],{"type":173,"value":1366},{"type":173,"value":1475},"”",{"type":173,"value":1477},"，这句话得背熟了，因为诸如“闭包”、“回调”等概念都和函数有关，",{"type":164,"tag":347,"props":1479,"children":1480},{},[1481],{"type":173,"value":1482},"面试经常会问道",{"type":173,"value":1484},"你迟早会用上的。若谈论设计模式脱离不开语言特征的话，那扯上函数绝对不会有任何问题。",{"type":164,"tag":169,"props":1486,"children":1487},{},[1488],{"type":173,"value":1489},"亲函数而远类的写法可以帮助我们消化许多种类的设计模式，我们再来看最后一种，代理模式。",{"type":164,"tag":169,"props":1491,"children":1492},{},[1493],{"type":173,"value":1494},"ES6 原生支持代理模式。对，就是 Vue3 里的那个“Proxy”，直译为“代理器”。社区有很多讲 Vue3 原理分析的文章，肯定绕不开 Proxy，这里不再赘述了。以下展示一个使用 Proxy 拦截对象操作的小例子。",{"type":164,"tag":283,"props":1496,"children":1498},{"className":285,"code":1497,"language":287,"meta":158,"style":158},"/* 使用 Proxy 代理对象，禁用对象中下划线开头的属性的访问 */\nconst proxy = new Proxy({}, {\n  set(target, key, value) {\n    invariant(key, 'set')\n    target[key] = value\n    return true\n  }\n})\n\nfunction invariant(key, action) {\n  if (key.startsWith('_')) {\n    throw new Error(`Invalid Key`)\n  }\n}\n\nproxy._prop = 'somevalue'\n// Error: Invalid Key\n",[1499],{"type":164,"tag":290,"props":1500,"children":1501},{"__ignoreMap":158},[1502,1510,1549,1592,1631,1663,1676,1683,1694,1701,1739,1791,1830,1837,1845,1853,1888],{"type":164,"tag":294,"props":1503,"children":1504},{"class":296,"line":297},[1505],{"type":164,"tag":294,"props":1506,"children":1507},{"style":1025},[1508],{"type":173,"value":1509},"/* 使用 Proxy 代理对象，禁用对象中下划线开头的属性的访问 */\n",{"type":164,"tag":294,"props":1511,"children":1512},{"class":296,"line":508},[1513,1517,1522,1526,1531,1536,1540,1545],{"type":164,"tag":294,"props":1514,"children":1515},{"style":491},[1516],{"type":173,"value":763},{"type":164,"tag":294,"props":1518,"children":1519},{"style":766},[1520],{"type":173,"value":1521}," proxy",{"type":164,"tag":294,"props":1523,"children":1524},{"style":545},[1525],{"type":173,"value":548},{"type":164,"tag":294,"props":1527,"children":1528},{"style":545},[1529],{"type":173,"value":1530}," new",{"type":164,"tag":294,"props":1532,"children":1533},{"style":313},[1534],{"type":173,"value":1535}," Proxy",{"type":164,"tag":294,"props":1537,"children":1538},{"style":301},[1539],{"type":173,"value":1066},{"type":164,"tag":294,"props":1541,"children":1542},{"style":307},[1543],{"type":173,"value":1544},"{},",{"type":164,"tag":294,"props":1546,"children":1547},{"style":307},[1548],{"type":173,"value":505},{"type":164,"tag":294,"props":1550,"children":1551},{"class":296,"line":526},[1552,1557,1561,1566,1570,1575,1579,1584,1588],{"type":164,"tag":294,"props":1553,"children":1554},{"style":581},[1555],{"type":173,"value":1556},"  set",{"type":164,"tag":294,"props":1558,"children":1559},{"style":307},[1560],{"type":173,"value":1066},{"type":164,"tag":294,"props":1562,"children":1563},{"style":676},[1564],{"type":173,"value":1565},"target",{"type":164,"tag":294,"props":1567,"children":1568},{"style":307},[1569],{"type":173,"value":1161},{"type":164,"tag":294,"props":1571,"children":1572},{"style":676},[1573],{"type":173,"value":1574}," key",{"type":164,"tag":294,"props":1576,"children":1577},{"style":307},[1578],{"type":173,"value":1161},{"type":164,"tag":294,"props":1580,"children":1581},{"style":676},[1582],{"type":173,"value":1583}," value",{"type":164,"tag":294,"props":1585,"children":1586},{"style":307},[1587],{"type":173,"value":684},{"type":164,"tag":294,"props":1589,"children":1590},{"style":307},[1591],{"type":173,"value":505},{"type":164,"tag":294,"props":1593,"children":1594},{"class":296,"line":568},[1595,1600,1605,1610,1614,1618,1623,1627],{"type":164,"tag":294,"props":1596,"children":1597},{"style":313},[1598],{"type":173,"value":1599},"    invariant",{"type":164,"tag":294,"props":1601,"children":1603},{"style":1602},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1604],{"type":173,"value":1066},{"type":164,"tag":294,"props":1606,"children":1607},{"style":301},[1608],{"type":173,"value":1609},"key",{"type":164,"tag":294,"props":1611,"children":1612},{"style":307},[1613],{"type":173,"value":1161},{"type":164,"tag":294,"props":1615,"children":1616},{"style":551},[1617],{"type":173,"value":554},{"type":164,"tag":294,"props":1619,"children":1620},{"style":557},[1621],{"type":173,"value":1622},"set",{"type":164,"tag":294,"props":1624,"children":1625},{"style":551},[1626],{"type":173,"value":616},{"type":164,"tag":294,"props":1628,"children":1629},{"style":1602},[1630],{"type":173,"value":1084},{"type":164,"tag":294,"props":1632,"children":1633},{"class":296,"line":577},[1634,1639,1644,1648,1653,1658],{"type":164,"tag":294,"props":1635,"children":1636},{"style":301},[1637],{"type":173,"value":1638},"    target",{"type":164,"tag":294,"props":1640,"children":1641},{"style":1602},[1642],{"type":173,"value":1643},"[",{"type":164,"tag":294,"props":1645,"children":1646},{"style":301},[1647],{"type":173,"value":1609},{"type":164,"tag":294,"props":1649,"children":1650},{"style":1602},[1651],{"type":173,"value":1652},"] ",{"type":164,"tag":294,"props":1654,"children":1655},{"style":545},[1656],{"type":173,"value":1657},"=",{"type":164,"tag":294,"props":1659,"children":1660},{"style":301},[1661],{"type":173,"value":1662}," value\n",{"type":164,"tag":294,"props":1664,"children":1665},{"class":296,"line":595},[1666,1670],{"type":164,"tag":294,"props":1667,"children":1668},{"style":599},[1669],{"type":173,"value":602},{"type":164,"tag":294,"props":1671,"children":1673},{"style":1672},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1674],{"type":173,"value":1675}," true\n",{"type":164,"tag":294,"props":1677,"children":1678},{"class":296,"line":654},[1679],{"type":164,"tag":294,"props":1680,"children":1681},{"style":307},[1682],{"type":173,"value":574},{"type":164,"tag":294,"props":1684,"children":1685},{"class":296,"line":662},[1686,1690],{"type":164,"tag":294,"props":1687,"children":1688},{"style":307},[1689],{"type":173,"value":992},{"type":164,"tag":294,"props":1691,"children":1692},{"style":301},[1693],{"type":173,"value":1084},{"type":164,"tag":294,"props":1695,"children":1696},{"class":296,"line":691},[1697],{"type":164,"tag":294,"props":1698,"children":1699},{"emptyLinePlaceholder":1237},[1700],{"type":173,"value":1240},{"type":164,"tag":294,"props":1702,"children":1703},{"class":296,"line":716},[1704,1709,1714,1718,1722,1726,1731,1735],{"type":164,"tag":294,"props":1705,"children":1706},{"style":491},[1707],{"type":173,"value":1708},"function",{"type":164,"tag":294,"props":1710,"children":1711},{"style":313},[1712],{"type":173,"value":1713}," invariant",{"type":164,"tag":294,"props":1715,"children":1716},{"style":307},[1717],{"type":173,"value":1066},{"type":164,"tag":294,"props":1719,"children":1720},{"style":676},[1721],{"type":173,"value":1609},{"type":164,"tag":294,"props":1723,"children":1724},{"style":307},[1725],{"type":173,"value":1161},{"type":164,"tag":294,"props":1727,"children":1728},{"style":676},[1729],{"type":173,"value":1730}," action",{"type":164,"tag":294,"props":1732,"children":1733},{"style":307},[1734],{"type":173,"value":684},{"type":164,"tag":294,"props":1736,"children":1737},{"style":307},[1738],{"type":173,"value":505},{"type":164,"tag":294,"props":1740,"children":1741},{"class":296,"line":724},[1742,1747,1751,1755,1759,1764,1768,1772,1777,1781,1786],{"type":164,"tag":294,"props":1743,"children":1744},{"style":599},[1745],{"type":173,"value":1746},"  if",{"type":164,"tag":294,"props":1748,"children":1749},{"style":1602},[1750],{"type":173,"value":673},{"type":164,"tag":294,"props":1752,"children":1753},{"style":301},[1754],{"type":173,"value":1609},{"type":164,"tag":294,"props":1756,"children":1757},{"style":307},[1758],{"type":173,"value":310},{"type":164,"tag":294,"props":1760,"children":1761},{"style":313},[1762],{"type":173,"value":1763},"startsWith",{"type":164,"tag":294,"props":1765,"children":1766},{"style":1602},[1767],{"type":173,"value":1066},{"type":164,"tag":294,"props":1769,"children":1770},{"style":551},[1771],{"type":173,"value":616},{"type":164,"tag":294,"props":1773,"children":1774},{"style":557},[1775],{"type":173,"value":1776},"_",{"type":164,"tag":294,"props":1778,"children":1779},{"style":551},[1780],{"type":173,"value":616},{"type":164,"tag":294,"props":1782,"children":1783},{"style":1602},[1784],{"type":173,"value":1785},")) ",{"type":164,"tag":294,"props":1787,"children":1788},{"style":307},[1789],{"type":173,"value":1790},"{\n",{"type":164,"tag":294,"props":1792,"children":1793},{"class":296,"line":978},[1794,1799,1803,1808,1812,1817,1822,1826],{"type":164,"tag":294,"props":1795,"children":1796},{"style":599},[1797],{"type":173,"value":1798},"    throw",{"type":164,"tag":294,"props":1800,"children":1801},{"style":545},[1802],{"type":173,"value":1530},{"type":164,"tag":294,"props":1804,"children":1805},{"style":313},[1806],{"type":173,"value":1807}," Error",{"type":164,"tag":294,"props":1809,"children":1810},{"style":1602},[1811],{"type":173,"value":1066},{"type":164,"tag":294,"props":1813,"children":1814},{"style":551},[1815],{"type":173,"value":1816},"`",{"type":164,"tag":294,"props":1818,"children":1819},{"style":557},[1820],{"type":173,"value":1821},"Invalid Key",{"type":164,"tag":294,"props":1823,"children":1824},{"style":551},[1825],{"type":173,"value":1816},{"type":164,"tag":294,"props":1827,"children":1828},{"style":1602},[1829],{"type":173,"value":1084},{"type":164,"tag":294,"props":1831,"children":1832},{"class":296,"line":986},[1833],{"type":164,"tag":294,"props":1834,"children":1835},{"style":307},[1836],{"type":173,"value":574},{"type":164,"tag":294,"props":1838,"children":1840},{"class":296,"line":1839},14,[1841],{"type":164,"tag":294,"props":1842,"children":1843},{"style":307},[1844],{"type":173,"value":730},{"type":164,"tag":294,"props":1846,"children":1848},{"class":296,"line":1847},15,[1849],{"type":164,"tag":294,"props":1850,"children":1851},{"emptyLinePlaceholder":1237},[1852],{"type":173,"value":1240},{"type":164,"tag":294,"props":1854,"children":1856},{"class":296,"line":1855},16,[1857,1862,1866,1871,1875,1879,1884],{"type":164,"tag":294,"props":1858,"children":1859},{"style":301},[1860],{"type":173,"value":1861},"proxy",{"type":164,"tag":294,"props":1863,"children":1864},{"style":307},[1865],{"type":173,"value":310},{"type":164,"tag":294,"props":1867,"children":1868},{"style":301},[1869],{"type":173,"value":1870},"_prop ",{"type":164,"tag":294,"props":1872,"children":1873},{"style":545},[1874],{"type":173,"value":1657},{"type":164,"tag":294,"props":1876,"children":1877},{"style":551},[1878],{"type":173,"value":554},{"type":164,"tag":294,"props":1880,"children":1881},{"style":557},[1882],{"type":173,"value":1883},"somevalue",{"type":164,"tag":294,"props":1885,"children":1886},{"style":551},[1887],{"type":173,"value":565},{"type":164,"tag":294,"props":1889,"children":1891},{"class":296,"line":1890},17,[1892],{"type":164,"tag":294,"props":1893,"children":1894},{"style":1025},[1895],{"type":173,"value":1896},"// Error: Invalid Key\n",{"type":164,"tag":169,"props":1898,"children":1899},{},[1900],{"type":173,"value":1901},"若脱离 ES 6，代理模式会变成什么？",{"type":164,"tag":169,"props":1903,"children":1904},{},[1905],{"type":173,"value":1906},"会变成一团带有 Proxy Patterns 注释的函数，会被某个 GitHub 上的库吸收下放到 Readme 中亦或是变成社区中新增的几篇“JS 中的代理模式”的博客... 害，无所谓了。",{"type":164,"tag":176,"props":1908,"children":1910},{"id":1909},"设计模式的消融",[1911],{"type":173,"value":1909},{"type":164,"tag":169,"props":1913,"children":1914},{},[1915,1920],{"type":164,"tag":211,"props":1916,"children":1917},{},[1918],{"type":173,"value":1919},"总的来说，设计模式无非有三种作用：创建对象、组合对象以及处理对象的依赖",{"type":173,"value":1921},"。面向对象设计模式所代表的复用性，只能在面向对象的上下文中使用。跳出面向对象，你会发现代码复用的层次可以更加开放，下至语言特征，上至框架。",{"type":164,"tag":169,"props":1923,"children":1924},{},[1925],{"type":173,"value":1926},"作为抽象的最低层级，JS 语言特征，离不开日益见新的语言规范。上文总结的设计模式与语言特征的重叠之处，可以概括为以下两点：",{"type":164,"tag":1928,"props":1929,"children":1930},"ul",{},[1931,1937],{"type":164,"tag":1932,"props":1933,"children":1934},"li",{},[1935],{"type":173,"value":1936},"若语言本身孱弱时，可通过语言特征的再上层抽象，如函数，来提高复用的层次（即发明一种新的设计模式）；",{"type":164,"tag":1932,"props":1938,"children":1939},{},[1940],{"type":173,"value":1941},"当语言逐渐强大时，设计模式的概念也随之弱化；",{"type":164,"tag":169,"props":1943,"children":1944},{},[1945],{"type":173,"value":1946},"听起来颇有些“设计模式是对语言能力不足的补充”的味道，难道说我们要开始编程语言的圣战？这让我回想起 Paul Graham 在《黑客与画家》中描写到他对“强大语言”的赤裸裸的崇拜:",{"type":164,"tag":165,"props":1948,"children":1949},{},[1950],{"type":164,"tag":169,"props":1951,"children":1952},{},[1953,1955,1959,1961,1964,1966,1969,1971,1974,1976],{"type":173,"value":1954},"如果你想解决一个困难的问题，",{"type":164,"tag":1956,"props":1957,"children":1958},"br",{},[],{"type":173,"value":1960},"\n关键不是你使用的语言是否强大，而是好几个因素同时发挥作用：",{"type":164,"tag":1956,"props":1962,"children":1963},{},[],{"type":173,"value":1965},"\n（a）使用一种强大的语言；",{"type":164,"tag":1956,"props":1967,"children":1968},{},[],{"type":173,"value":1970},"\n（b）为这个难题写一个真实世界中的编译器；",{"type":164,"tag":1956,"props":1972,"children":1973},{},[],{"type":173,"value":1975},"\n（c）或者... 你把自己变成这个难题的人肉编译器。\n",{"type":164,"tag":542,"props":1977,"children":1978},{},[1979],{"type":173,"value":1980},"Paul Graham",{"type":164,"tag":169,"props":1982,"children":1983},{},[1984],{"type":173,"value":1985},"Paul Graham 就觉得设计模式就是一种对语言能力不足的妥协，“语言的编程能力越强大，写出来的程序就越短”。当然，就算有一种语言可以强大到和破除面向对象设计模式的神话，关于语言的表达能力强弱的争论也不会停止。不过好消息是，脱离场景谈语言一定是错误的，正如没有人会指望用汇编来编写 Web 程序。",{"type":164,"tag":169,"props":1987,"children":1988},{},[1989],{"type":173,"value":1990},"我们没必要去追求极致的编程语言表达力，表达力和复杂度往往是正相关的，就像世界上所有的语言的法阵都会伴随着词语的演进、读音的兴替以及对错误语法的包容，但很少有人说（或敢说）“你看，白话文比起文言文来说真是不够格啊”。",{"type":164,"tag":169,"props":1992,"children":1993},{},[1994],{"type":173,"value":1995},"脱离面向对象，我们也可以谈论设计模式，因为我们聊的就是代码复用。就算使用函数式、声明式的语言解决问题，也许有特定范式可遵循。请想象一下 CSS 中的设计模式。嗯？CSS 有设计模式么？私以为有。特异性、继承和层叠这三种语言特征就是 CSS 的设计模式；在这三种基础特性之上建立起来的各种代码组织方案/命名方案（如 OOCSS、Atomic CSS），也算。",{"type":164,"tag":169,"props":1997,"children":1998},{},[1999,2004],{"type":164,"tag":211,"props":2000,"children":2001},{},[2002],{"type":173,"value":2003},"唯一不变的，只有抽象的复用",{"type":173,"value":2005},"。我们做的一切工作，只是在抽象出不同层次的代码复用的同时，尽可能把代码组织成容易理解的形式。重要的不是记住某个设计模式中的实体以及实体是如何通讯的，而是要理解该设计模式所代表的抽象的体量适合的场景。",{"type":164,"tag":176,"props":2007,"children":2009},{"id":2008},"语言的魔法锅",[2010],{"type":173,"value":2008},{"type":164,"tag":165,"props":2012,"children":2013},{},[2014],{"type":164,"tag":169,"props":2015,"children":2016},{},[2017,2019],{"type":173,"value":2018},"在威尔士神话中，有一口神奇的大锅，加入特定配方熬制上一年零一天后，便能萃取出三滴解决任何难题的灵药。\n",{"type":164,"tag":542,"props":2020,"children":2021},{},[2022],{"type":173,"value":2023},"《塔列辛传奇》",{"type":164,"tag":169,"props":2025,"children":2026},{},[2027,2029,2036,2038,2045,2047,2058,2060,2071],{"type":173,"value":2028},"JavaScript 的火热日益见长，前端社区",{"type":164,"tag":191,"props":2030,"children":2033},{"href":2031,"rel":2032},"https://githut.info/",[1118],[2034],{"type":173,"value":2035},"越加活跃",{"type":173,"value":2037},"，规范也",{"type":164,"tag":191,"props":2039,"children":2042},{"href":2040,"rel":2041},"https://tc39.es/ecma262/",[1118],[2043],{"type":173,"value":2044},"日益见新",{"type":173,"value":2046},"。ESNeeext 已经往魔法锅中加了许多新材料，这是好事（其实我满心期待它直接把锅塞满）。新的语言特征能带来了更多的可能性，就目前而言，新特征大概率能增加语义，增强表达力、降低思维负担",{"type":164,"tag":187,"props":2048,"children":2049},{},[2050],{"type":164,"tag":191,"props":2051,"children":2055},{"href":2052,"ariaDescribedBy":2053,"dataFootnoteRef":158,"id":2054},"#user-content-fn-if-one-word",[195],"user-content-fnref-if-one-word",[2056],{"type":173,"value":2057},"6",{"type":173,"value":2059},"。尽管把材料往大锅中塞吧",{"type":164,"tag":187,"props":2061,"children":2062},{},[2063],{"type":164,"tag":191,"props":2064,"children":2068},{"href":2065,"ariaDescribedBy":2066,"dataFootnoteRef":158,"id":2067},"#user-content-fn-how-js-works",[195],"user-content-fnref-how-js-works",[2069],{"type":173,"value":2070},"7",{"type":173,"value":2072},"！让我们一同祈祷萃取出灵药的一天早日到来！",{"type":164,"tag":169,"props":2074,"children":2075},{},[2076],{"type":173,"value":2077},"以下就用魔法锅的故事作为文章结尾，这是一个颇有意思的传奇故事。",{"type":164,"tag":169,"props":2079,"children":2080},{},[2081],{"type":164,"tag":247,"props":2082,"children":2085},{"alt":2083,"src":2084},"炼金术 | 维基百科","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200704/20200713074400.png",[],{"type":164,"tag":169,"props":2087,"children":2088},{},[2089],{"type":173,"value":2090},"在爱尔兰一个隐秘的角落，住着一个精通智慧与魔法的巫师，凯丽杜恩（Ceridwen）。她能力超凡，偏偏却生了一个丑陋的儿子。所以这位母亲竭尽所能想将智慧传授给他，以弥补其外表的丑陋。她辗转于各种巫术与秘仪，最后，总算在一本隐秘的魔书中找到了灵感。",{"type":164,"tag":169,"props":2092,"children":2093},{},[2094],{"type":173,"value":2095},"魔书将秘密告诉凯丽杜恩：她需要使用一口大的魔法锅，填满红山花、小麦、火盐、精灵耳、直立根和灵尘，用大火熬制上一年零一天。最终会生成一锅致命毒物，但溅出的前三滴汁液却是充满“预言之灵”的智慧灵药。",{"type":164,"tag":169,"props":2097,"children":2098},{},[2099],{"type":173,"value":2100},"很快，熬制魔法锅的工作在凯丽杜恩的安排下有条不紊地进行，一个名字未知的盲人被派来搅拌大锅，年轻人巴赫则负责烧它下面的火。",{"type":164,"tag":169,"props":2102,"children":2103},{},[2104],{"type":173,"value":2105},"星象在天空中咯咯响地平移着，太阳和月亮绕着地球转了一轮又一轮... 随着时间推移，锅中的草药效力变得越来越强。看着咕嘟嘟冒着气泡的大锅，凯丽杜恩觉得很是满意，她便躺在温暖的锅边睡着了。",{"type":164,"tag":169,"props":2107,"children":2108},{},[2109,2111],{"type":173,"value":2110},"就在此时，意外发生了。翻腾着热气的大锅，意外地溅出了几点液体在年轻人巴赫的手指上，而巴赫居然不假思索地将手指吮吸地干干净净。和魔书的预言一样，巴赫立马就获得了智慧。他瞬间通晓了火焰的舞蹈和水的诉说，山的尊严和风的呢喃... 他知晓了无数秘密，以及... ",{"type":164,"tag":211,"props":2112,"children":2113},{},[2114],{"type":173,"value":2115},"凯丽杜恩肯定会杀了他！",{"type":164,"tag":169,"props":2117,"children":2118},{},[2119],{"type":173,"value":2120},"慌乱中，巴赫变成一只野兔夺路而逃，而凯丽杜恩惊醒后赶忙变成猎犬一路追踪过去。巴赫变成天空中的鸽子，她就变成一只鹰；他变成一头奔跑的鹿，她就变成一只草原上的狼；他化身为谷仓中的一粒麦粒，她就变成一只啄个不停老母鸡...",{"type":164,"tag":169,"props":2122,"children":2123},{},[2124],{"type":173,"value":2125},"这两人也许一直较量着，直到今天。",{"type":164,"tag":176,"props":2127,"children":2129},{"id":2128},"阅读更多",[2130],{"type":173,"value":2128},{"type":164,"tag":1928,"props":2132,"children":2133},{},[2134,2144,2154],{"type":164,"tag":1932,"props":2135,"children":2136},{},[2137],{"type":164,"tag":191,"props":2138,"children":2141},{"href":2139,"rel":2140},"https://www.jdon.com/37356",[1118],[2142],{"type":173,"value":2143},"15 年后 GoF 设计模式作者再谈设计模式",{"type":164,"tag":1932,"props":2145,"children":2146},{},[2147],{"type":164,"tag":191,"props":2148,"children":2151},{"href":2149,"rel":2150},"https://www.zhihu.com/question/37009570",[1118],[2152],{"type":173,"value":2153},"为什么不能乱点技能树",{"type":164,"tag":1932,"props":2155,"children":2156},{},[2157],{"type":164,"tag":191,"props":2158,"children":2161},{"href":2159,"rel":2160},"https://mp.weixin.qq.com/s?src=11&timestamp=1651051411&ver=3764&signature=AiaMcpc*LLVNlmVWIHaOvu4sThNq8OFp8ckqlVllLSohG8dWn**P3unuBhRwZAEND0uJdnurJtHvE6IKlBYAUUwuvRYknXkKje6CzOZaQBxRPIlnN4kwtzYsfa8fxKSM&new=1",[1118],[2162],{"type":173,"value":2163},"超越库和框架的技术创新",{"type":164,"tag":169,"props":2165,"children":2166},{},[2167],{"type":173,"value":2168},"希望本文能对你有所帮助，也欢迎各位批评文中观点或指出错误。",{"type":164,"tag":169,"props":2170,"children":2171},{},[2172,2174,2181,2183,2190],{"type":173,"value":2173},"想看看这篇文章是如何被创造的？你能从我的",{"type":164,"tag":191,"props":2175,"children":2178},{"href":2176,"rel":2177},"https://github.com/Lionad-Morotar/blogs",[1118],[2179],{"type":173,"value":2180},"博客项目",{"type":173,"value":2182},"中找到答案~ 欢迎 Star & Follow~ 也请大家多来我的",{"type":164,"tag":191,"props":2184,"children":2187},{"href":2185,"rel":2186},"https://www.lionad.art",[1118],[2188],{"type":173,"value":2189},"线上博客逛逛",{"type":173,"value":2191},"，排版超 Nice 哦~",{"type":164,"tag":2193,"props":2194,"children":2197},"section",{"className":2195,"dataFootnotes":158},[2196],"footnotes",[2198,2205],{"type":164,"tag":176,"props":2199,"children":2202},{"className":2200,"id":195},[2201],"sr-only",[2203],{"type":173,"value":2204},"Footnotes",{"type":164,"tag":2206,"props":2207,"children":2208},"ol",{},[2209,2224,2246,2259,2280,2293,2306],{"type":164,"tag":1932,"props":2210,"children":2212},{"id":2211},"user-content-fn-%E6%96%87%E5%8C%96",[2213,2215],{"type":173,"value":2214},"非贬义。 ",{"type":164,"tag":191,"props":2216,"children":2221},{"href":2217,"ariaLabel":2218,"className":2219,"dataFootnoteBackref":158},"#user-content-fnref-%E6%96%87%E5%8C%96","Back to reference 1",[2220],"data-footnote-backref",[2222],{"type":173,"value":2223},"↩",{"type":164,"tag":1932,"props":2225,"children":2227},{"id":2226},"user-content-fn-fn-call",[2228,2230,2237,2239],{"type":173,"value":2229},"见：",{"type":164,"tag":191,"props":2231,"children":2234},{"href":2232,"rel":2233},"https://zhuanlan.zhihu.com/p/95741316",[1118],[2235],{"type":173,"value":2236},"子程序（函数）考古学",{"type":173,"value":2238}," ",{"type":164,"tag":191,"props":2240,"children":2244},{"href":2241,"ariaLabel":2242,"className":2243,"dataFootnoteBackref":158},"#user-content-fnref-fn-call","Back to reference 2",[2220],[2245],{"type":173,"value":2223},{"type":164,"tag":1932,"props":2247,"children":2249},{"id":2248},"user-content-fn-css",[2250,2252],{"type":173,"value":2251},"试试使用 CSS 去写游戏？即便可行，但过程也会让人无比沮丧。 ",{"type":164,"tag":191,"props":2253,"children":2257},{"href":2254,"ariaLabel":2255,"className":2256,"dataFootnoteBackref":158},"#user-content-fnref-css","Back to reference 3",[2220],[2258],{"type":173,"value":2223},{"type":164,"tag":1932,"props":2260,"children":2262},{"id":2261},"user-content-fn-module-pattern",[2263,2265,2271,2273],{"type":173,"value":2264},"此模块模式并非传统面向对象中的模块模式，后者的定义见：",{"type":164,"tag":191,"props":2266,"children":2269},{"href":2267,"rel":2268},"https://www.jdon.com/52843",[1118],[2270],{"type":173,"value":2267},{"type":173,"value":2272},"。 ",{"type":164,"tag":191,"props":2274,"children":2278},{"href":2275,"ariaLabel":2276,"className":2277,"dataFootnoteBackref":158},"#user-content-fnref-module-pattern","Back to reference 4",[2220],[2279],{"type":173,"value":2223},{"type":164,"tag":1932,"props":2281,"children":2283},{"id":2282},"user-content-fn-firstclass",[2284,2286],{"type":173,"value":2285},"且叫且珍惜，说不定以后就听不到“一等公民”这种叫法啦。 ",{"type":164,"tag":191,"props":2287,"children":2291},{"href":2288,"ariaLabel":2289,"className":2290,"dataFootnoteBackref":158},"#user-content-fnref-firstclass","Back to reference 5",[2220],[2292],{"type":173,"value":2223},{"type":164,"tag":1932,"props":2294,"children":2296},{"id":2295},"user-content-fn-if-one-word",[2297,2299],{"type":173,"value":2298},"用一个单词就能达意时就不需要用一个句子。 ",{"type":164,"tag":191,"props":2300,"children":2304},{"href":2301,"ariaLabel":2302,"className":2303,"dataFootnoteBackref":158},"#user-content-fnref-if-one-word","Back to reference 6",[2220],[2305],{"type":173,"value":2223},{"type":164,"tag":1932,"props":2307,"children":2309},{"id":2308},"user-content-fn-how-js-works",[2310,2312],{"type":173,"value":2311},"语言特征并不总是银弹，类似观点见道格拉斯的《How JS Works》 ",{"type":164,"tag":191,"props":2313,"children":2317},{"href":2314,"ariaLabel":2315,"className":2316,"dataFootnoteBackref":158},"#user-content-fnref-how-js-works","Back to reference 7",[2220],[2318],{"type":173,"value":2223},{"type":164,"tag":2320,"props":2321,"children":2322},"style",{},[2323],{"type":173,"value":2324},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":158,"searchDepth":508,"depth":508,"links":2326},[2327,2328,2329,2330,2331,2332,2333,2334],{"id":178,"depth":508,"text":178},{"id":230,"depth":508,"text":230},{"id":338,"depth":508,"text":338},{"id":440,"depth":508,"text":440},{"id":1909,"depth":508,"text":1909},{"id":2008,"depth":508,"text":2008},{"id":2128,"depth":508,"text":2128},{"id":195,"depth":508,"text":2204},"markdown","content:2.articles:1107.design-patterns-and-js-magic-pot.md","content","2.articles/1107.design-patterns-and-js-magic-pot.md","2.articles/1107.design-patterns-and-js-magic-pot","md",[2342,2344],{"_path":67,"title":66,"description":2343},"本文介绍了几种通过CSS实现的常见阴影效果如单侧投影、空心投影、投影动画、彩色阴影、长投影和倒影，以及尝试使用SVG模拟材质特性如粗糙度及光学效应如菲尼尔效应生成了几种特殊的纹理，最后通过一个CSS绘制真实书本案例介绍了实战中的一些细节。",{"_path":73,"title":72,"description":2345},"上一篇讲 anysort 的文章说到因网易云音乐的歌单排序功能较弱，我们自己实现的用来给歌单自定义排序的排序库的思路。这篇文章在排序库的基础上，介绍了其 TypeScript 类型实现。",1742745232677]