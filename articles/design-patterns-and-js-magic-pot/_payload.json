[{"data":1,"prerenderedAt":2573},["Reactive",2],{"navigation":3,"/articles/design-patterns-and-js-magic-pot":383,"/articles/design-patterns-and-js-magic-pot-surround":2568},[4,32,80,96,123,129,135,366,372,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"图片模糊","/gists/blur",{"title":148,"_path":149},"渲染相关笔记","/gists/c4d",{"title":151,"_path":152},"CDN 问题记录","/gists/cdn",{"title":154,"_path":155},"消毒剂","/gists/cleaner",{"title":157,"_path":158},"Windows Command","/gists/cmd",{"title":160,"_path":161},"Command","/gists/command",{"title":163,"_path":164},"复杂科学","/gists/complexity-science",{"title":166,"_path":167},"宇宙","/gists/cosmos",{"title":169,"_path":170},"C++","/gists/cpp",{"title":172,"_path":173},"Data Structure","/gists/data-structure",{"title":175,"_path":176},"DEPRESSION","/gists/depression",{"title":178,"_path":179},"设计模式","/gists/design-patterns",{"title":181,"_path":182},"Developer Experience","/gists/developer-experience",{"title":184,"_path":185},"Device Metrics","/gists/device-metrix",{"title":187,"_path":188},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":190,"_path":191},"正则表达式","/gists/eegex",{"title":193,"_path":194},"Emoji","/gists/emoji",{"title":196,"_path":197},"工程","/gists/engineering",{"title":199,"_path":200},"熵","/gists/entropy",{"title":202,"_path":203},"Environment","/gists/environment",{"title":205,"_path":206},"Erlang","/gists/erlang",{"title":208,"_path":209},"逃离塔克夫","/gists/escape-from-tarkov",{"title":211,"_path":212},"ESNext (ES6-ES11)","/gists/esnext",{"title":214,"_path":215},"Eval！","/gists/eval",{"title":217,"_path":218},"Flutter","/gists/flutter",{"title":220,"_path":221},"字体","/gists/font",{"title":223,"_path":224},"JS 函数式编程","/gists/functional",{"title":226,"_path":227},"Google C++ Standard","/gists/google-cpp-standard",{"title":229,"_path":230},"双向链接完全体","/gists/graph",{"title":232,"_path":233},"Hardwares","/gists/hardwares",{"title":235,"_path":236},"哈希冲突","/gists/hash-collision",{"title":238,"_path":239},"信息设计","/gists/information-design",{"title":241,"_path":242},"InstantPage","/gists/instant.page",{"title":244,"_path":245},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":247,"_path":248},"KVStore","/gists/key-value-db",{"title":250,"_path":251},"Kubernetes","/gists/kubernetes",{"title":253,"_path":254},"Makefile","/gists/makefile",{"title":256,"_path":257},"Markdown Inline Style","/gists/markdown-nice",{"title":259,"_path":260},"小程序","/gists/miniapp",{"title":262,"_path":263},"减小页面快照体积","/gists/minify-html",{"title":265,"_path":266},"mklink","/gists/mklink",{"title":268,"_path":269},"Mock","/gists/mock",{"title":271,"_path":272},"多端应用","/gists/multy-end-app",{"title":274,"_path":275},"神经科学","/gists/neuroscience",{"title":277,"_path":278},"OO","/gists/oo",{"title":280,"_path":281},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":283,"_path":284},"人物","/gists/person",{"title":286,"_path":287},"PInvoke","/gists/pinvoke",{"title":289,"_path":290},"像素","/gists/pixel",{"title":292,"_path":293},"PowerShell","/gists/powershell",{"title":295,"_path":296},"量子","/gists/quantum",{"title":298,"_path":299},"保持好奇心","/gists/questions",{"title":301,"_path":302},"React Native","/gists/react-native",{"title":304,"_path":305},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":307,"_path":308},"SEO","/gists/seo",{"title":310,"_path":311},"Shader","/gists/shader",{"title":313,"_path":314},"Shape Up","/gists/shape-up",{"title":316,"_path":317},"睡觉","/gists/sleep",{"title":319,"_path":320},"States","/gists/states",{"title":322,"_path":323},"Storage","/gists/storage",{"title":325,"_path":326},"音视频流处理","/gists/stream-cli",{"title":328,"_path":329},"Symbol","/gists/symbol",{"title":331,"_path":332},"系统论","/gists/systems-theory",{"title":334,"_path":335},"Taro","/gists/taro",{"title":337,"_path":338},"任务切片","/gists/task-slice",{"title":340,"_path":341},"技术偏好","/gists/tech-dudge",{"title":343,"_path":344},"Untitled","/gists/untitled",{"title":346,"_path":347},"可变字体","/gists/variable-font",{"title":349,"_path":350},"视觉错觉","/gists/visual-illusion",{"title":352,"_path":353},"SS(SSR)","/gists/vpn",{"title":355,"_path":356},"VS Code 插件开发","/gists/vscode-plugin",{"title":358,"_path":359},"Web Components","/gists/web-components",{"title":361,"_path":362},"Windows","/gists/windows",{"title":364,"_path":365},"查缺补漏","/gists/wrong",{"title":367,"_path":368,"children":369},"代码笔记 / Gists","/source-code",[370],{"title":371,"_path":368},"🚄 代码笔记",{"title":373,"_path":374,"children":375},"我 / Abount","/hire",[376],{"title":377,"_path":374},"📬 技术简历",{"title":379,"_path":380,"children":381},"todo","/todo",[382],{"title":379,"_path":380},{"_path":61,"_dir":384,"_draft":385,"_partial":385,"_locale":386,"title":60,"description":387,"body":388,"_type":2563,"_id":2564,"_source":2565,"_file":2566,"_extension":2567},"articles",false,"","排除人的因素，设计模式的本质只是相关代码复用。本文通过使用JS仿制并简化了几种OOL中经典设计模式，以探讨经典设计模式和代码模板的区别主要在于代码复用的层次不同，以及粗浅聊了聊设计模式与语言特征之间此强彼弱的关系。",{"type":389,"children":390,"toc":2553},"root",[391,403,409,430,435,444,456,461,466,471,480,505,510,564,569,596,606,611,616,621,626,631,639,644,649,661,666,671,694,702,707,959,977,1226,1231,1236,1241,1337,1352,1630,1635,1653,1667,1682,1713,1718,1723,2125,2130,2135,2140,2150,2155,2170,2175,2209,2214,2219,2224,2234,2239,2252,2301,2306,2314,2319,2324,2329,2334,2344,2349,2354,2359,2392,2397,2420,2547],{"type":392,"tag":393,"props":394,"children":395},"element","blockquote",{},[396],{"type":392,"tag":397,"props":398,"children":399},"p",{},[400],{"type":401,"value":402},"text","设计模式最终要融入任何语言。",{"type":392,"tag":404,"props":405,"children":407},"h2",{"id":406},"设计模式是什么",[408],{"type":401,"value":406},{"type":392,"tag":397,"props":410,"children":411},{},[412,414,428],{"type":401,"value":413},"从《人月神话》到《大教堂与集市》，许多闻名业界的作品都“低代码、高文化",{"type":392,"tag":415,"props":416,"children":417},"sup",{},[418],{"type":392,"tag":419,"props":420,"children":425},"a",{"href":421,"ariaDescribedBy":422,"dataFootnoteRef":386,"id":424},"#user-content-fn-%E6%96%87%E5%8C%96",[423],"footnote-label","user-content-fnref-%E6%96%87%E5%8C%96",[426],{"type":401,"value":427},"1",{"type":401,"value":429},"”；各种代码文化运动可以看作“造神运动”此类周日剧场。许多大佬在向人们传授代码经验之余，都喜欢尝试用文化手段（不论是哲学思想还是艺术内涵），来统一人与代码的关系。这种跨界思考的过程通常比较晦涩，诸如“面向对象”、“设计模式”这些放到现在来说我们耳熟能详的词，在过去几十年都是由行业顶尖大佬们牵头搞研究，再经过不断地实践，逐渐沉淀下来形成的标准。",{"type":392,"tag":397,"props":431,"children":432},{},[433],{"type":401,"value":434},"设计模式是什么？",{"type":392,"tag":397,"props":436,"children":437},{},[438],{"type":392,"tag":439,"props":440,"children":441},"strong",{},[442],{"type":401,"value":443},"设计模式是一种标准，它描述了使用面向对象编程语言解决问题的方式。",{"type":392,"tag":397,"props":445,"children":446},{},[447,449,454],{"type":401,"value":448},"设计模式一词发源于建筑学作品《建筑模式语言》，后被一个人们称为“四人帮”（GoF）的小组种出它在软件界开的新花。无论是建筑学还是软件学中的设计模式，相同的地方是，它们都想解决“人”和“物”的关系相关问题，并且形成了一套特定的方法论。",{"type":392,"tag":439,"props":450,"children":451},{},[452],{"type":401,"value":453},"好比人们有了灶就可以长久保存火种，用名词把晦涩难懂的抽象定义为标准，这样有利于思想传播",{"type":401,"value":455},"。只要人们普遍接纳并熟知设计模式，便能畅通无阻地沟通代码的实现。当然，现实很丰满，畅快沟通有个大前提：程序设计时，大家需要使用面向对象编程语言来合作。",{"type":392,"tag":404,"props":457,"children":459},{"id":458},"为什么非面向对象不可",[460],{"type":401,"value":458},{"type":392,"tag":397,"props":462,"children":463},{},[464],{"type":401,"value":465},"构建大型软件不止面向对象这一条路，与面向对象相对应的还有结构化、形式化等程序设计方法。任意一种有自有优劣。面对日益复杂的软件，人们关心的重心逐步转移到软件的可重用性方面。面向对象凭借着分类、封装等天然符合人们认知规律的优势，得到快速发展，终打通需求分析、程序设计到编程语言等开发上下游工作，赢得了业界青睐。",{"type":392,"tag":397,"props":467,"children":468},{},[469],{"type":401,"value":470},"面向对象把功能作为节点，组合为功能网格，节点间通过消息通讯以及做对应的响应。这样一来，开发在编程时不再需要直面输入输出这种数据流动的思考方式，只需要按照指令维护各个对象内部的状态即可，节点对应的代码片段也就能得到重用。",{"type":392,"tag":397,"props":472,"children":473},{},[474],{"type":392,"tag":475,"props":476,"children":479},"img",{"alt":477,"src":478},"Message Passing In OO","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210511174933.png?w=40",[],{"type":392,"tag":397,"props":481,"children":482},{},[483,485,496,498,503],{"type":401,"value":484},"相比子程序复用，函数复用已经是巨大的进步",{"type":392,"tag":415,"props":486,"children":487},{},[488],{"type":392,"tag":419,"props":489,"children":493},{"href":490,"ariaDescribedBy":491,"dataFootnoteRef":386,"id":492},"#user-content-fn-fn-call",[423],"user-content-fnref-fn-call",[494],{"type":401,"value":495},"2",{"type":401,"value":497},"。类复用相比函数复用要更加抽象，因为它保存了函数和状态的集合；而设计模式比类复用在抽象上更胜一筹：设计模式不单单直接复用某个类，而是复用整个“功能网格”，把特定问题的解决方案相关的所有节点和通讯机制全部拷贝，固化下来，命名并形成标准。",{"type":392,"tag":439,"props":499,"children":500},{},[501],{"type":401,"value":502},"设计模式其实是使用面向对象编程语言时代码复用的高级形式，是面向对象发展壮大之路的必然的产物",{"type":401,"value":504},"。只要写代码，就会碰到复用性问题，四人帮偏好面向对象，所以“设计模式”只是他们用来传授的面向对象编程中的代码复用性经验的概括。换句话说，大部分情况下我们讨论的“设计模式”和“面向对象设计模式”完全等同。这也就解释了为什么非面向对象不可了。",{"type":392,"tag":397,"props":506,"children":507},{},[508],{"type":401,"value":509},"我们讨论一个新的问题，如果过滤掉设计模式中的面向对象成分，剩下的是些啥呢？",{"type":392,"tag":511,"props":512,"children":516},"pre",{"className":513,"code":514,"language":515,"meta":386,"style":386},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","console.log(DesignPatterns.filter(removeOO))\n","js",[517],{"type":392,"tag":518,"props":519,"children":520},"code",{"__ignoreMap":386},[521],{"type":392,"tag":522,"props":523,"children":526},"span",{"class":524,"line":525},"line",1,[527,533,539,545,550,554,559],{"type":392,"tag":522,"props":528,"children":530},{"style":529},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[531],{"type":401,"value":532},"console",{"type":392,"tag":522,"props":534,"children":536},{"style":535},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[537],{"type":401,"value":538},".",{"type":392,"tag":522,"props":540,"children":542},{"style":541},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[543],{"type":401,"value":544},"log",{"type":392,"tag":522,"props":546,"children":547},{"style":529},[548],{"type":401,"value":549},"(DesignPatterns",{"type":392,"tag":522,"props":551,"children":552},{"style":535},[553],{"type":401,"value":538},{"type":392,"tag":522,"props":555,"children":556},{"style":541},[557],{"type":401,"value":558},"filter",{"type":392,"tag":522,"props":560,"children":561},{"style":529},[562],{"type":401,"value":563},"(removeOO))\n",{"type":392,"tag":404,"props":565,"children":567},{"id":566},"设计模式的本质",[568],{"type":401,"value":566},{"type":392,"tag":397,"props":570,"children":571},{},[572,574,580,582,587,589,594],{"type":401,"value":573},"我们先直接删除上文关于设计模式的定义中的“面向对象”几个字，看看剩下些什么：设计模式是一种标准，它描述了",{"type":392,"tag":575,"props":576,"children":577},"del",{},[578],{"type":401,"value":579},"使用面向对象编程语言",{"type":401,"value":581},"解决问题的方式，是",{"type":392,"tag":575,"props":583,"children":584},{},[585],{"type":401,"value":586},"使用面向对象编程语言时",{"type":401,"value":588},"代码复用性的高级形式，是",{"type":392,"tag":575,"props":590,"children":591},{},[592],{"type":401,"value":593},"面向对象",{"type":401,"value":595},"发展壮大之路的必然的产物。",{"type":392,"tag":397,"props":597,"children":598},{},[599,601],{"type":401,"value":600},"句子有些不通顺，修补之后变成了：",{"type":392,"tag":439,"props":602,"children":603},{},[604],{"type":401,"value":605},"设计模式是一种标准，它描述了编程时解决问题的特定方式，是代码复用的高级形式及发展代码复用必然的产物。",{"type":392,"tag":397,"props":607,"children":608},{},[609],{"type":401,"value":610},"设计模式本质是什么？不言自明，它只是相关代码复用的一种抽象概念。",{"type":392,"tag":397,"props":612,"children":613},{},[614],{"type":401,"value":615},"说到代码复用，主要关系到代码组织。从函数复用，到使用设计模式，再到使用库、框架，三种代码复用方式的主要区别在于代码组织的粒度不同。",{"type":392,"tag":397,"props":617,"children":618},{},[619],{"type":401,"value":620},"函数复用比较简单，你可以写一个叫做 Add 的函数给两数相加，然后 Copy&Paste 到其他地方复用，或是把函数存放到 Utils.js 文件中，通过模块机制复用。为了了解如何使用某个函数，需要在使用前阅读注释。",{"type":392,"tag":397,"props":622,"children":623},{},[624],{"type":401,"value":625},"库和框架最为复杂，它们是组织了大量函数及实体形成的巨型代码片段。开发新项目时很少会花精力自研框架，一般都引现成的轮子直接开造。使用某库或框架前，必须详细阅读文档。",{"type":392,"tag":397,"props":627,"children":628},{},[629],{"type":401,"value":630},"设计模式则是单个或多个函数的组合（在 Java 中不是函数而是类），既可以在新项目里现写一个模式供使用，也可以引入社区现有的模块来复用。为了了解如何使用某个设计模式，需要提前了解该模式定义的实体以及实体是通讯机制。",{"type":392,"tag":397,"props":632,"children":633},{},[634],{"type":392,"tag":475,"props":635,"children":638},{"alt":636,"src":637},"函数、设计模式、框架间的升级关系","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210513145630.png?w=70",[],{"type":392,"tag":397,"props":640,"children":641},{},[642],{"type":401,"value":643},"设计模式作为最简单的实体和函数的组合，可看作函数的升级版或是框架的缩水版；去掉设计模式中的面向对象相关内容，就只剩下了函数。",{"type":392,"tag":397,"props":645,"children":646},{},[647],{"type":401,"value":648},"等等，“实体和实体间通讯机制”凭空消失了？",{"type":392,"tag":397,"props":650,"children":651},{},[652,654,659],{"type":401,"value":653},"并没有。但我想让他消失。下文将从 JavaScript 入手，介绍如何把设计模式的概念映射到语言特征中。语言特征可是个好东西呀！如果你同意抽象也像复用一样有函数复用、库和框架等不同复杂度的层次的话，那我认为",{"type":392,"tag":439,"props":655,"children":656},{},[657],{"type":401,"value":658},"语言特征就是抽象的基础了。除了语言本身以外，所有抽象的建立都依赖于语言特征",{"type":401,"value":660},"。把设计模式映射成语言特征后，我们就能跳出面向对象的禁锢，从新的、更高层的角度重新思考代码复用问题。",{"type":392,"tag":397,"props":662,"children":663},{},[664],{"type":401,"value":665},"回到正题，我们从 JS 开始说起。",{"type":392,"tag":404,"props":667,"children":669},{"id":668},"仿制设计模式",[670],{"type":401,"value":668},{"type":392,"tag":397,"props":672,"children":673},{},[674,676,681,692],{"type":401,"value":675},"编程语言并不是万能的。",{"type":392,"tag":439,"props":677,"children":678},{},[679],{"type":401,"value":680},"特定语言适合用来解决特定问题",{"type":392,"tag":415,"props":682,"children":683},{},[684],{"type":392,"tag":419,"props":685,"children":689},{"href":686,"ariaDescribedBy":687,"dataFootnoteRef":386,"id":688},"#user-content-fn-css",[423],"user-content-fnref-css",[690],{"type":401,"value":691},"3",{"type":401,"value":693},"。提到 JavaScript 诸多语言特征，其优点可以用寥寥三个词概括：“原型”、“对象”、“函数”。熟练掌握了这些内容，就能在 JS 的世界中游刃有余。",{"type":392,"tag":397,"props":695,"children":696},{},[697],{"type":392,"tag":475,"props":698,"children":701},{"alt":699,"src":700},"《JavaScript 精粹》VS《JavaScript 权威指南》","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200704/20200709104930.png",[],{"type":392,"tag":397,"props":703,"children":704},{},[705],{"type":401,"value":706},"传统面向对象语言以类封装状态，并向外暴露改变状态的方法。以下代码中的书本类为例：Book Class 保持有 name 状态，可以使用 getPrintName 方法返回包装后的 name 或使用 rename 修改 name 。",{"type":392,"tag":511,"props":708,"children":710},{"className":513,"code":709,"language":515,"meta":386,"style":386},"class Book {\n  constructor () {\n    this.name = '设计模式与JS魔法锅'\n  }\n  getPrintName () {\n    return '《' + this.name + '》'\n  }\n  rename (newName) {\n    this.name = newName\n  }\n}\n",[711],{"type":392,"tag":518,"props":712,"children":713},{"__ignoreMap":386},[714,734,752,794,803,821,880,888,917,942,950],{"type":392,"tag":522,"props":715,"children":716},{"class":524,"line":525},[717,723,729],{"type":392,"tag":522,"props":718,"children":720},{"style":719},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#66D9EF;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[721],{"type":401,"value":722},"class",{"type":392,"tag":522,"props":724,"children":726},{"style":725},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E;--shiki-light-text-decoration:inherit;--shiki-default-text-decoration:inherit;--shiki-dark-text-decoration:inherit;--shiki-sepia-text-decoration:underline",[727],{"type":401,"value":728}," Book",{"type":392,"tag":522,"props":730,"children":731},{"style":535},[732],{"type":401,"value":733}," {\n",{"type":392,"tag":522,"props":735,"children":737},{"class":524,"line":736},2,[738,743,748],{"type":392,"tag":522,"props":739,"children":740},{"style":719},[741],{"type":401,"value":742},"  constructor",{"type":392,"tag":522,"props":744,"children":745},{"style":535},[746],{"type":401,"value":747}," ()",{"type":392,"tag":522,"props":749,"children":750},{"style":535},[751],{"type":401,"value":733},{"type":392,"tag":522,"props":753,"children":755},{"class":524,"line":754},3,[756,762,766,771,777,783,789],{"type":392,"tag":522,"props":757,"children":759},{"style":758},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[760],{"type":401,"value":761},"    this",{"type":392,"tag":522,"props":763,"children":764},{"style":535},[765],{"type":401,"value":538},{"type":392,"tag":522,"props":767,"children":768},{"style":529},[769],{"type":401,"value":770},"name",{"type":392,"tag":522,"props":772,"children":774},{"style":773},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[775],{"type":401,"value":776}," =",{"type":392,"tag":522,"props":778,"children":780},{"style":779},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[781],{"type":401,"value":782}," '",{"type":392,"tag":522,"props":784,"children":786},{"style":785},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[787],{"type":401,"value":788},"设计模式与JS魔法锅",{"type":392,"tag":522,"props":790,"children":791},{"style":779},[792],{"type":401,"value":793},"'\n",{"type":392,"tag":522,"props":795,"children":797},{"class":524,"line":796},4,[798],{"type":392,"tag":522,"props":799,"children":800},{"style":535},[801],{"type":401,"value":802},"  }\n",{"type":392,"tag":522,"props":804,"children":806},{"class":524,"line":805},5,[807,813,817],{"type":392,"tag":522,"props":808,"children":810},{"style":809},"--shiki-light:#E53935;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[811],{"type":401,"value":812},"  getPrintName",{"type":392,"tag":522,"props":814,"children":815},{"style":535},[816],{"type":401,"value":747},{"type":392,"tag":522,"props":818,"children":819},{"style":535},[820],{"type":401,"value":733},{"type":392,"tag":522,"props":822,"children":824},{"class":524,"line":823},6,[825,831,835,840,845,850,855,859,863,867,871,876],{"type":392,"tag":522,"props":826,"children":828},{"style":827},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[829],{"type":401,"value":830},"    return",{"type":392,"tag":522,"props":832,"children":833},{"style":779},[834],{"type":401,"value":782},{"type":392,"tag":522,"props":836,"children":837},{"style":785},[838],{"type":401,"value":839},"《",{"type":392,"tag":522,"props":841,"children":842},{"style":779},[843],{"type":401,"value":844},"'",{"type":392,"tag":522,"props":846,"children":847},{"style":773},[848],{"type":401,"value":849}," +",{"type":392,"tag":522,"props":851,"children":852},{"style":758},[853],{"type":401,"value":854}," this",{"type":392,"tag":522,"props":856,"children":857},{"style":535},[858],{"type":401,"value":538},{"type":392,"tag":522,"props":860,"children":861},{"style":529},[862],{"type":401,"value":770},{"type":392,"tag":522,"props":864,"children":865},{"style":773},[866],{"type":401,"value":849},{"type":392,"tag":522,"props":868,"children":869},{"style":779},[870],{"type":401,"value":782},{"type":392,"tag":522,"props":872,"children":873},{"style":785},[874],{"type":401,"value":875},"》",{"type":392,"tag":522,"props":877,"children":878},{"style":779},[879],{"type":401,"value":793},{"type":392,"tag":522,"props":881,"children":883},{"class":524,"line":882},7,[884],{"type":392,"tag":522,"props":885,"children":886},{"style":535},[887],{"type":401,"value":802},{"type":392,"tag":522,"props":889,"children":891},{"class":524,"line":890},8,[892,897,902,908,913],{"type":392,"tag":522,"props":893,"children":894},{"style":809},[895],{"type":401,"value":896},"  rename",{"type":392,"tag":522,"props":898,"children":899},{"style":535},[900],{"type":401,"value":901}," (",{"type":392,"tag":522,"props":903,"children":905},{"style":904},"--shiki-light:#90A4AE;--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#FD971F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[906],{"type":401,"value":907},"newName",{"type":392,"tag":522,"props":909,"children":910},{"style":535},[911],{"type":401,"value":912},")",{"type":392,"tag":522,"props":914,"children":915},{"style":535},[916],{"type":401,"value":733},{"type":392,"tag":522,"props":918,"children":920},{"class":524,"line":919},9,[921,925,929,933,937],{"type":392,"tag":522,"props":922,"children":923},{"style":758},[924],{"type":401,"value":761},{"type":392,"tag":522,"props":926,"children":927},{"style":535},[928],{"type":401,"value":538},{"type":392,"tag":522,"props":930,"children":931},{"style":529},[932],{"type":401,"value":770},{"type":392,"tag":522,"props":934,"children":935},{"style":773},[936],{"type":401,"value":776},{"type":392,"tag":522,"props":938,"children":939},{"style":529},[940],{"type":401,"value":941}," newName\n",{"type":392,"tag":522,"props":943,"children":945},{"class":524,"line":944},10,[946],{"type":392,"tag":522,"props":947,"children":948},{"style":535},[949],{"type":401,"value":802},{"type":392,"tag":522,"props":951,"children":953},{"class":524,"line":952},11,[954],{"type":392,"tag":522,"props":955,"children":956},{"style":535},[957],{"type":401,"value":958},"}\n",{"type":392,"tag":397,"props":960,"children":961},{},[962,964,975],{"type":401,"value":963},"放到早期版本 JS 中，想要封装变量，这不好办。早期版本的 JS 没有块级作用域，所以声明的变量会在整个代码或函数作用域中生效。为了仿制类的状态封装能力，知名布道者道格拉斯发明了一种“模块模式”",{"type":392,"tag":415,"props":965,"children":966},{},[967],{"type":392,"tag":419,"props":968,"children":972},{"href":969,"ariaDescribedBy":970,"dataFootnoteRef":386,"id":971},"#user-content-fn-module-pattern",[423],"user-content-fnref-module-pattern",[973],{"type":401,"value":974},"4",{"type":401,"value":976},"，即通过闭包来控制变量的访问权，代码如下：",{"type":392,"tag":511,"props":978,"children":980},{"className":513,"code":979,"language":515,"meta":386,"style":386},"const aBook = (() => {\n  var name = '设计模式与JS魔法锅'\n  function getPrintName () {\n    return '《' + name + '》'\n  }\n  function rename (newName) {\n    name = newName\n  }\n  return {\n    getPrintName,\n    rename\n  }\n})()\n",[981],{"type":392,"tag":518,"props":982,"children":983},{"__ignoreMap":386},[984,1020,1049,1070,1113,1120,1148,1164,1171,1183,1196,1204,1212],{"type":392,"tag":522,"props":985,"children":986},{"class":524,"line":525},[987,992,998,1002,1006,1011,1016],{"type":392,"tag":522,"props":988,"children":989},{"style":719},[990],{"type":401,"value":991},"const",{"type":392,"tag":522,"props":993,"children":995},{"style":994},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[996],{"type":401,"value":997}," aBook",{"type":392,"tag":522,"props":999,"children":1000},{"style":773},[1001],{"type":401,"value":776},{"type":392,"tag":522,"props":1003,"children":1004},{"style":529},[1005],{"type":401,"value":901},{"type":392,"tag":522,"props":1007,"children":1008},{"style":535},[1009],{"type":401,"value":1010},"()",{"type":392,"tag":522,"props":1012,"children":1013},{"style":719},[1014],{"type":401,"value":1015}," =>",{"type":392,"tag":522,"props":1017,"children":1018},{"style":535},[1019],{"type":401,"value":733},{"type":392,"tag":522,"props":1021,"children":1022},{"class":524,"line":736},[1023,1028,1033,1037,1041,1045],{"type":392,"tag":522,"props":1024,"children":1025},{"style":719},[1026],{"type":401,"value":1027},"  var",{"type":392,"tag":522,"props":1029,"children":1030},{"style":529},[1031],{"type":401,"value":1032}," name",{"type":392,"tag":522,"props":1034,"children":1035},{"style":773},[1036],{"type":401,"value":776},{"type":392,"tag":522,"props":1038,"children":1039},{"style":779},[1040],{"type":401,"value":782},{"type":392,"tag":522,"props":1042,"children":1043},{"style":785},[1044],{"type":401,"value":788},{"type":392,"tag":522,"props":1046,"children":1047},{"style":779},[1048],{"type":401,"value":793},{"type":392,"tag":522,"props":1050,"children":1051},{"class":524,"line":754},[1052,1057,1062,1066],{"type":392,"tag":522,"props":1053,"children":1054},{"style":719},[1055],{"type":401,"value":1056},"  function",{"type":392,"tag":522,"props":1058,"children":1059},{"style":541},[1060],{"type":401,"value":1061}," getPrintName",{"type":392,"tag":522,"props":1063,"children":1064},{"style":535},[1065],{"type":401,"value":747},{"type":392,"tag":522,"props":1067,"children":1068},{"style":535},[1069],{"type":401,"value":733},{"type":392,"tag":522,"props":1071,"children":1072},{"class":524,"line":796},[1073,1077,1081,1085,1089,1093,1097,1101,1105,1109],{"type":392,"tag":522,"props":1074,"children":1075},{"style":827},[1076],{"type":401,"value":830},{"type":392,"tag":522,"props":1078,"children":1079},{"style":779},[1080],{"type":401,"value":782},{"type":392,"tag":522,"props":1082,"children":1083},{"style":785},[1084],{"type":401,"value":839},{"type":392,"tag":522,"props":1086,"children":1087},{"style":779},[1088],{"type":401,"value":844},{"type":392,"tag":522,"props":1090,"children":1091},{"style":773},[1092],{"type":401,"value":849},{"type":392,"tag":522,"props":1094,"children":1095},{"style":529},[1096],{"type":401,"value":1032},{"type":392,"tag":522,"props":1098,"children":1099},{"style":773},[1100],{"type":401,"value":849},{"type":392,"tag":522,"props":1102,"children":1103},{"style":779},[1104],{"type":401,"value":782},{"type":392,"tag":522,"props":1106,"children":1107},{"style":785},[1108],{"type":401,"value":875},{"type":392,"tag":522,"props":1110,"children":1111},{"style":779},[1112],{"type":401,"value":793},{"type":392,"tag":522,"props":1114,"children":1115},{"class":524,"line":805},[1116],{"type":392,"tag":522,"props":1117,"children":1118},{"style":535},[1119],{"type":401,"value":802},{"type":392,"tag":522,"props":1121,"children":1122},{"class":524,"line":823},[1123,1127,1132,1136,1140,1144],{"type":392,"tag":522,"props":1124,"children":1125},{"style":719},[1126],{"type":401,"value":1056},{"type":392,"tag":522,"props":1128,"children":1129},{"style":541},[1130],{"type":401,"value":1131}," rename",{"type":392,"tag":522,"props":1133,"children":1134},{"style":535},[1135],{"type":401,"value":901},{"type":392,"tag":522,"props":1137,"children":1138},{"style":904},[1139],{"type":401,"value":907},{"type":392,"tag":522,"props":1141,"children":1142},{"style":535},[1143],{"type":401,"value":912},{"type":392,"tag":522,"props":1145,"children":1146},{"style":535},[1147],{"type":401,"value":733},{"type":392,"tag":522,"props":1149,"children":1150},{"class":524,"line":882},[1151,1156,1160],{"type":392,"tag":522,"props":1152,"children":1153},{"style":529},[1154],{"type":401,"value":1155},"    name",{"type":392,"tag":522,"props":1157,"children":1158},{"style":773},[1159],{"type":401,"value":776},{"type":392,"tag":522,"props":1161,"children":1162},{"style":529},[1163],{"type":401,"value":941},{"type":392,"tag":522,"props":1165,"children":1166},{"class":524,"line":890},[1167],{"type":392,"tag":522,"props":1168,"children":1169},{"style":535},[1170],{"type":401,"value":802},{"type":392,"tag":522,"props":1172,"children":1173},{"class":524,"line":919},[1174,1179],{"type":392,"tag":522,"props":1175,"children":1176},{"style":827},[1177],{"type":401,"value":1178},"  return",{"type":392,"tag":522,"props":1180,"children":1181},{"style":535},[1182],{"type":401,"value":733},{"type":392,"tag":522,"props":1184,"children":1185},{"class":524,"line":944},[1186,1191],{"type":392,"tag":522,"props":1187,"children":1188},{"style":529},[1189],{"type":401,"value":1190},"    getPrintName",{"type":392,"tag":522,"props":1192,"children":1193},{"style":535},[1194],{"type":401,"value":1195},",\n",{"type":392,"tag":522,"props":1197,"children":1198},{"class":524,"line":952},[1199],{"type":392,"tag":522,"props":1200,"children":1201},{"style":529},[1202],{"type":401,"value":1203},"    rename\n",{"type":392,"tag":522,"props":1205,"children":1207},{"class":524,"line":1206},12,[1208],{"type":392,"tag":522,"props":1209,"children":1210},{"style":535},[1211],{"type":401,"value":802},{"type":392,"tag":522,"props":1213,"children":1215},{"class":524,"line":1214},13,[1216,1221],{"type":392,"tag":522,"props":1217,"children":1218},{"style":535},[1219],{"type":401,"value":1220},"}",{"type":392,"tag":522,"props":1222,"children":1223},{"style":529},[1224],{"type":401,"value":1225},")()\n",{"type":392,"tag":397,"props":1227,"children":1228},{},[1229],{"type":401,"value":1230},"看起来，模块模式就像是语言能力不足的补充。把目光从遥远的模块模式收回到 2015 年 ES6 发布之后，JavaScript 语言特征得到增强，曾风靡一时的潮词模块模式几乎从网络中销声匿迹了。现在我们可以自由地使用类封装状态，不必再写因缺乏语义显得蹩脚的 IIFE 。",{"type":392,"tag":397,"props":1232,"children":1233},{},[1234],{"type":401,"value":1235},"我们再来看看面向对象中的常见的装饰器模式。",{"type":392,"tag":397,"props":1237,"children":1238},{},[1239],{"type":401,"value":1240},"假设你在维护一个开源项目，项目中有些过时的 API，你想在别人调用该 API 时提示一句“你好，此 API 将在下个版本移除”。这段代码可以这样写：",{"type":392,"tag":511,"props":1242,"children":1244},{"className":513,"code":1243,"language":515,"meta":386,"style":386},"// 目前不支持给对象属性使用装饰器，所以这是一段伪代码\nconst myAPI = {\n  @deprecate('WARN: oldAPI is decrapted, please use oldAPI_v2')\n  oldAPI() {}\n}\n",[1245],{"type":392,"tag":518,"props":1246,"children":1247},{"__ignoreMap":386},[1248,1257,1277,1313,1330],{"type":392,"tag":522,"props":1249,"children":1250},{"class":524,"line":525},[1251],{"type":392,"tag":522,"props":1252,"children":1254},{"style":1253},"--shiki-light:#90A4AE;--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[1255],{"type":401,"value":1256},"// 目前不支持给对象属性使用装饰器，所以这是一段伪代码\n",{"type":392,"tag":522,"props":1258,"children":1259},{"class":524,"line":736},[1260,1264,1269,1273],{"type":392,"tag":522,"props":1261,"children":1262},{"style":719},[1263],{"type":401,"value":991},{"type":392,"tag":522,"props":1265,"children":1266},{"style":994},[1267],{"type":401,"value":1268}," myAPI",{"type":392,"tag":522,"props":1270,"children":1271},{"style":773},[1272],{"type":401,"value":776},{"type":392,"tag":522,"props":1274,"children":1275},{"style":535},[1276],{"type":401,"value":733},{"type":392,"tag":522,"props":1278,"children":1279},{"class":524,"line":754},[1280,1285,1290,1295,1299,1304,1308],{"type":392,"tag":522,"props":1281,"children":1282},{"style":529},[1283],{"type":401,"value":1284},"  @",{"type":392,"tag":522,"props":1286,"children":1287},{"style":809},[1288],{"type":401,"value":1289},"deprecate",{"type":392,"tag":522,"props":1291,"children":1292},{"style":535},[1293],{"type":401,"value":1294},"(",{"type":392,"tag":522,"props":1296,"children":1297},{"style":779},[1298],{"type":401,"value":844},{"type":392,"tag":522,"props":1300,"children":1301},{"style":785},[1302],{"type":401,"value":1303},"WARN: oldAPI is decrapted, please use oldAPI_v2",{"type":392,"tag":522,"props":1305,"children":1306},{"style":779},[1307],{"type":401,"value":844},{"type":392,"tag":522,"props":1309,"children":1310},{"style":535},[1311],{"type":401,"value":1312},")\n",{"type":392,"tag":522,"props":1314,"children":1315},{"class":524,"line":796},[1316,1321,1325],{"type":392,"tag":522,"props":1317,"children":1318},{"style":809},[1319],{"type":401,"value":1320},"  oldAPI",{"type":392,"tag":522,"props":1322,"children":1323},{"style":535},[1324],{"type":401,"value":1010},{"type":392,"tag":522,"props":1326,"children":1327},{"style":535},[1328],{"type":401,"value":1329}," {}\n",{"type":392,"tag":522,"props":1331,"children":1332},{"class":524,"line":805},[1333],{"type":392,"tag":522,"props":1334,"children":1335},{"style":535},[1336],{"type":401,"value":958},{"type":392,"tag":397,"props":1338,"children":1339},{},[1340,1342,1350],{"type":401,"value":1341},"若不是",{"type":392,"tag":419,"props":1343,"children":1347},{"href":1344,"rel":1345},"https://github.com/tc39/proposal-decorators",[1346],"nofollow",[1348],{"type":401,"value":1349},"装饰器提案",{"type":401,"value":1351},"的出现，我赌五毛，社区里不会有太多讨论装饰器模式的文章。不过大家若有留意过平常的代码，肯定会注意到其实高阶函数就是装饰器的具体实现。函数在 JS 中是一等公民，通过函数组合可以极其方便地仿制某些设计模式。比如，下代码中，使用“局部应用”函数仿制了一个工厂模式：",{"type":392,"tag":511,"props":1353,"children":1355},{"className":513,"code":1354,"language":515,"meta":386,"style":386},"const Partial = (fn, ...args) => (...rest) => fn(...args, ...rest)\n\nconst Adder = (a, b) => a + b\n\nconst add5 = Partial(Adder, 5)\n\nadd5(5) // >>> 10\nadd5(10) // >>> 15\n",[1356],{"type":392,"tag":518,"props":1357,"children":1358},{"__ignoreMap":386},[1359,1460,1469,1525,1532,1571,1578,1605],{"type":392,"tag":522,"props":1360,"children":1361},{"class":524,"line":525},[1362,1366,1372,1376,1380,1385,1390,1395,1400,1404,1408,1412,1417,1422,1426,1430,1435,1439,1443,1447,1451,1455],{"type":392,"tag":522,"props":1363,"children":1364},{"style":719},[1365],{"type":401,"value":991},{"type":392,"tag":522,"props":1367,"children":1369},{"style":1368},"--shiki-light:#90A4AE;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1370],{"type":401,"value":1371}," Partial",{"type":392,"tag":522,"props":1373,"children":1374},{"style":773},[1375],{"type":401,"value":776},{"type":392,"tag":522,"props":1377,"children":1378},{"style":535},[1379],{"type":401,"value":901},{"type":392,"tag":522,"props":1381,"children":1382},{"style":904},[1383],{"type":401,"value":1384},"fn",{"type":392,"tag":522,"props":1386,"children":1387},{"style":535},[1388],{"type":401,"value":1389},",",{"type":392,"tag":522,"props":1391,"children":1392},{"style":773},[1393],{"type":401,"value":1394}," ...",{"type":392,"tag":522,"props":1396,"children":1397},{"style":904},[1398],{"type":401,"value":1399},"args",{"type":392,"tag":522,"props":1401,"children":1402},{"style":535},[1403],{"type":401,"value":912},{"type":392,"tag":522,"props":1405,"children":1406},{"style":719},[1407],{"type":401,"value":1015},{"type":392,"tag":522,"props":1409,"children":1410},{"style":535},[1411],{"type":401,"value":901},{"type":392,"tag":522,"props":1413,"children":1414},{"style":773},[1415],{"type":401,"value":1416},"...",{"type":392,"tag":522,"props":1418,"children":1419},{"style":904},[1420],{"type":401,"value":1421},"rest",{"type":392,"tag":522,"props":1423,"children":1424},{"style":535},[1425],{"type":401,"value":912},{"type":392,"tag":522,"props":1427,"children":1428},{"style":719},[1429],{"type":401,"value":1015},{"type":392,"tag":522,"props":1431,"children":1432},{"style":541},[1433],{"type":401,"value":1434}," fn",{"type":392,"tag":522,"props":1436,"children":1437},{"style":529},[1438],{"type":401,"value":1294},{"type":392,"tag":522,"props":1440,"children":1441},{"style":773},[1442],{"type":401,"value":1416},{"type":392,"tag":522,"props":1444,"children":1445},{"style":529},[1446],{"type":401,"value":1399},{"type":392,"tag":522,"props":1448,"children":1449},{"style":535},[1450],{"type":401,"value":1389},{"type":392,"tag":522,"props":1452,"children":1453},{"style":773},[1454],{"type":401,"value":1394},{"type":392,"tag":522,"props":1456,"children":1457},{"style":529},[1458],{"type":401,"value":1459},"rest)\n",{"type":392,"tag":522,"props":1461,"children":1462},{"class":524,"line":736},[1463],{"type":392,"tag":522,"props":1464,"children":1466},{"emptyLinePlaceholder":1465},true,[1467],{"type":401,"value":1468},"\n",{"type":392,"tag":522,"props":1470,"children":1471},{"class":524,"line":754},[1472,1476,1481,1485,1489,1493,1497,1502,1506,1510,1515,1520],{"type":392,"tag":522,"props":1473,"children":1474},{"style":719},[1475],{"type":401,"value":991},{"type":392,"tag":522,"props":1477,"children":1478},{"style":1368},[1479],{"type":401,"value":1480}," Adder",{"type":392,"tag":522,"props":1482,"children":1483},{"style":773},[1484],{"type":401,"value":776},{"type":392,"tag":522,"props":1486,"children":1487},{"style":535},[1488],{"type":401,"value":901},{"type":392,"tag":522,"props":1490,"children":1491},{"style":904},[1492],{"type":401,"value":419},{"type":392,"tag":522,"props":1494,"children":1495},{"style":535},[1496],{"type":401,"value":1389},{"type":392,"tag":522,"props":1498,"children":1499},{"style":904},[1500],{"type":401,"value":1501}," b",{"type":392,"tag":522,"props":1503,"children":1504},{"style":535},[1505],{"type":401,"value":912},{"type":392,"tag":522,"props":1507,"children":1508},{"style":719},[1509],{"type":401,"value":1015},{"type":392,"tag":522,"props":1511,"children":1512},{"style":529},[1513],{"type":401,"value":1514}," a ",{"type":392,"tag":522,"props":1516,"children":1517},{"style":773},[1518],{"type":401,"value":1519},"+",{"type":392,"tag":522,"props":1521,"children":1522},{"style":529},[1523],{"type":401,"value":1524}," b\n",{"type":392,"tag":522,"props":1526,"children":1527},{"class":524,"line":796},[1528],{"type":392,"tag":522,"props":1529,"children":1530},{"emptyLinePlaceholder":1465},[1531],{"type":401,"value":1468},{"type":392,"tag":522,"props":1533,"children":1534},{"class":524,"line":805},[1535,1539,1544,1548,1552,1557,1561,1567],{"type":392,"tag":522,"props":1536,"children":1537},{"style":719},[1538],{"type":401,"value":991},{"type":392,"tag":522,"props":1540,"children":1541},{"style":994},[1542],{"type":401,"value":1543}," add5",{"type":392,"tag":522,"props":1545,"children":1546},{"style":773},[1547],{"type":401,"value":776},{"type":392,"tag":522,"props":1549,"children":1550},{"style":541},[1551],{"type":401,"value":1371},{"type":392,"tag":522,"props":1553,"children":1554},{"style":529},[1555],{"type":401,"value":1556},"(Adder",{"type":392,"tag":522,"props":1558,"children":1559},{"style":535},[1560],{"type":401,"value":1389},{"type":392,"tag":522,"props":1562,"children":1564},{"style":1563},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1565],{"type":401,"value":1566}," 5",{"type":392,"tag":522,"props":1568,"children":1569},{"style":529},[1570],{"type":401,"value":1312},{"type":392,"tag":522,"props":1572,"children":1573},{"class":524,"line":823},[1574],{"type":392,"tag":522,"props":1575,"children":1576},{"emptyLinePlaceholder":1465},[1577],{"type":401,"value":1468},{"type":392,"tag":522,"props":1579,"children":1580},{"class":524,"line":882},[1581,1586,1590,1595,1600],{"type":392,"tag":522,"props":1582,"children":1583},{"style":541},[1584],{"type":401,"value":1585},"add5",{"type":392,"tag":522,"props":1587,"children":1588},{"style":529},[1589],{"type":401,"value":1294},{"type":392,"tag":522,"props":1591,"children":1592},{"style":1563},[1593],{"type":401,"value":1594},"5",{"type":392,"tag":522,"props":1596,"children":1597},{"style":529},[1598],{"type":401,"value":1599},") ",{"type":392,"tag":522,"props":1601,"children":1602},{"style":1253},[1603],{"type":401,"value":1604},"// >>> 10\n",{"type":392,"tag":522,"props":1606,"children":1607},{"class":524,"line":890},[1608,1612,1616,1621,1625],{"type":392,"tag":522,"props":1609,"children":1610},{"style":541},[1611],{"type":401,"value":1585},{"type":392,"tag":522,"props":1613,"children":1614},{"style":529},[1615],{"type":401,"value":1294},{"type":392,"tag":522,"props":1617,"children":1618},{"style":1563},[1619],{"type":401,"value":1620},"10",{"type":392,"tag":522,"props":1622,"children":1623},{"style":529},[1624],{"type":401,"value":1599},{"type":392,"tag":522,"props":1626,"children":1627},{"style":1253},[1628],{"type":401,"value":1629},"// >>> 15\n",{"type":392,"tag":397,"props":1631,"children":1632},{},[1633],{"type":401,"value":1634},"我猜你想咆哮：“工厂模式根本就不是这样写的！”。哈哈，别那么固执，变通一些嘛。我们现在讨论的设计模式是去除了面向对象之后的余留物，几乎只保留了设计模式的本质，复用。换句话说，Partial 是“函数工厂”，是“生成器”，“产出”了仍能接受一个参数的函数。",{"type":392,"tag":1636,"props":1637,"children":1638},"details",{},[1639,1641,1647,1648],{"type":401,"value":1640},"\n    ",{"type":392,"tag":1642,"props":1643,"children":1644},"summary",{},[1645],{"type":401,"value":1646},"我用到了类吗？",{"type":401,"value":1640},{"type":392,"tag":397,"props":1649,"children":1650},{},[1651],{"type":401,"value":1652},"没有。",{"type":392,"tag":1636,"props":1654,"children":1655},{},[1656,1657,1662,1663],{"type":401,"value":1640},{"type":392,"tag":1642,"props":1658,"children":1659},{},[1660],{"type":401,"value":1661},"用到了原型吗？",{"type":401,"value":1640},{"type":392,"tag":397,"props":1664,"children":1665},{},[1666],{"type":401,"value":1652},{"type":392,"tag":1636,"props":1668,"children":1669},{},[1670,1671,1676,1677],{"type":401,"value":1640},{"type":392,"tag":1642,"props":1672,"children":1673},{},[1674],{"type":401,"value":1675},"那我在写什么？",{"type":401,"value":1640},{"type":392,"tag":397,"props":1678,"children":1679},{},[1680],{"type":401,"value":1681},"函数。",{"type":392,"tag":397,"props":1683,"children":1684},{},[1685,1687,1704,1706,1711],{"type":401,"value":1686},"函数，函数而已！",{"type":392,"tag":439,"props":1688,"children":1689},{},[1690,1692,1702],{"type":401,"value":1691},"“函数是一等公民",{"type":392,"tag":415,"props":1693,"children":1694},{},[1695],{"type":392,"tag":419,"props":1696,"children":1700},{"href":1697,"ariaDescribedBy":1698,"dataFootnoteRef":386,"id":1699},"#user-content-fn-firstclass",[423],"user-content-fnref-firstclass",[1701],{"type":401,"value":1594},{"type":401,"value":1703},"”",{"type":401,"value":1705},"，这句话得背熟了，因为诸如“闭包”、“回调”等概念都和函数有关，",{"type":392,"tag":575,"props":1707,"children":1708},{},[1709],{"type":401,"value":1710},"面试经常会问道",{"type":401,"value":1712},"你迟早会用上的。若谈论设计模式脱离不开语言特征的话，那扯上函数绝对不会有任何问题。",{"type":392,"tag":397,"props":1714,"children":1715},{},[1716],{"type":401,"value":1717},"亲函数而远类的写法可以帮助我们消化许多种类的设计模式，我们再来看最后一种，代理模式。",{"type":392,"tag":397,"props":1719,"children":1720},{},[1721],{"type":401,"value":1722},"ES6 原生支持代理模式。对，就是 Vue3 里的那个“Proxy”，直译为“代理器”。社区有很多讲 Vue3 原理分析的文章，肯定绕不开 Proxy，这里不再赘述了。以下展示一个使用 Proxy 拦截对象操作的小例子。",{"type":392,"tag":511,"props":1724,"children":1726},{"className":513,"code":1725,"language":515,"meta":386,"style":386},"/* 使用 Proxy 代理对象，禁用对象中下划线开头的属性的访问 */\nconst proxy = new Proxy({}, {\n  set(target, key, value) {\n    invariant(key, 'set')\n    target[key] = value\n    return true\n  }\n})\n\nfunction invariant(key, action) {\n  if (key.startsWith('_')) {\n    throw new Error(`Invalid Key`)\n  }\n}\n\nproxy._prop = 'somevalue'\n// Error: Invalid Key\n",[1727],{"type":392,"tag":518,"props":1728,"children":1729},{"__ignoreMap":386},[1730,1738,1777,1820,1859,1891,1904,1911,1922,1929,1967,2019,2058,2065,2073,2081,2116],{"type":392,"tag":522,"props":1731,"children":1732},{"class":524,"line":525},[1733],{"type":392,"tag":522,"props":1734,"children":1735},{"style":1253},[1736],{"type":401,"value":1737},"/* 使用 Proxy 代理对象，禁用对象中下划线开头的属性的访问 */\n",{"type":392,"tag":522,"props":1739,"children":1740},{"class":524,"line":736},[1741,1745,1750,1754,1759,1764,1768,1773],{"type":392,"tag":522,"props":1742,"children":1743},{"style":719},[1744],{"type":401,"value":991},{"type":392,"tag":522,"props":1746,"children":1747},{"style":994},[1748],{"type":401,"value":1749}," proxy",{"type":392,"tag":522,"props":1751,"children":1752},{"style":773},[1753],{"type":401,"value":776},{"type":392,"tag":522,"props":1755,"children":1756},{"style":773},[1757],{"type":401,"value":1758}," new",{"type":392,"tag":522,"props":1760,"children":1761},{"style":541},[1762],{"type":401,"value":1763}," Proxy",{"type":392,"tag":522,"props":1765,"children":1766},{"style":529},[1767],{"type":401,"value":1294},{"type":392,"tag":522,"props":1769,"children":1770},{"style":535},[1771],{"type":401,"value":1772},"{},",{"type":392,"tag":522,"props":1774,"children":1775},{"style":535},[1776],{"type":401,"value":733},{"type":392,"tag":522,"props":1778,"children":1779},{"class":524,"line":754},[1780,1785,1789,1794,1798,1803,1807,1812,1816],{"type":392,"tag":522,"props":1781,"children":1782},{"style":809},[1783],{"type":401,"value":1784},"  set",{"type":392,"tag":522,"props":1786,"children":1787},{"style":535},[1788],{"type":401,"value":1294},{"type":392,"tag":522,"props":1790,"children":1791},{"style":904},[1792],{"type":401,"value":1793},"target",{"type":392,"tag":522,"props":1795,"children":1796},{"style":535},[1797],{"type":401,"value":1389},{"type":392,"tag":522,"props":1799,"children":1800},{"style":904},[1801],{"type":401,"value":1802}," key",{"type":392,"tag":522,"props":1804,"children":1805},{"style":535},[1806],{"type":401,"value":1389},{"type":392,"tag":522,"props":1808,"children":1809},{"style":904},[1810],{"type":401,"value":1811}," value",{"type":392,"tag":522,"props":1813,"children":1814},{"style":535},[1815],{"type":401,"value":912},{"type":392,"tag":522,"props":1817,"children":1818},{"style":535},[1819],{"type":401,"value":733},{"type":392,"tag":522,"props":1821,"children":1822},{"class":524,"line":796},[1823,1828,1833,1838,1842,1846,1851,1855],{"type":392,"tag":522,"props":1824,"children":1825},{"style":541},[1826],{"type":401,"value":1827},"    invariant",{"type":392,"tag":522,"props":1829,"children":1831},{"style":1830},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1832],{"type":401,"value":1294},{"type":392,"tag":522,"props":1834,"children":1835},{"style":529},[1836],{"type":401,"value":1837},"key",{"type":392,"tag":522,"props":1839,"children":1840},{"style":535},[1841],{"type":401,"value":1389},{"type":392,"tag":522,"props":1843,"children":1844},{"style":779},[1845],{"type":401,"value":782},{"type":392,"tag":522,"props":1847,"children":1848},{"style":785},[1849],{"type":401,"value":1850},"set",{"type":392,"tag":522,"props":1852,"children":1853},{"style":779},[1854],{"type":401,"value":844},{"type":392,"tag":522,"props":1856,"children":1857},{"style":1830},[1858],{"type":401,"value":1312},{"type":392,"tag":522,"props":1860,"children":1861},{"class":524,"line":805},[1862,1867,1872,1876,1881,1886],{"type":392,"tag":522,"props":1863,"children":1864},{"style":529},[1865],{"type":401,"value":1866},"    target",{"type":392,"tag":522,"props":1868,"children":1869},{"style":1830},[1870],{"type":401,"value":1871},"[",{"type":392,"tag":522,"props":1873,"children":1874},{"style":529},[1875],{"type":401,"value":1837},{"type":392,"tag":522,"props":1877,"children":1878},{"style":1830},[1879],{"type":401,"value":1880},"] ",{"type":392,"tag":522,"props":1882,"children":1883},{"style":773},[1884],{"type":401,"value":1885},"=",{"type":392,"tag":522,"props":1887,"children":1888},{"style":529},[1889],{"type":401,"value":1890}," value\n",{"type":392,"tag":522,"props":1892,"children":1893},{"class":524,"line":823},[1894,1898],{"type":392,"tag":522,"props":1895,"children":1896},{"style":827},[1897],{"type":401,"value":830},{"type":392,"tag":522,"props":1899,"children":1901},{"style":1900},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1902],{"type":401,"value":1903}," true\n",{"type":392,"tag":522,"props":1905,"children":1906},{"class":524,"line":882},[1907],{"type":392,"tag":522,"props":1908,"children":1909},{"style":535},[1910],{"type":401,"value":802},{"type":392,"tag":522,"props":1912,"children":1913},{"class":524,"line":890},[1914,1918],{"type":392,"tag":522,"props":1915,"children":1916},{"style":535},[1917],{"type":401,"value":1220},{"type":392,"tag":522,"props":1919,"children":1920},{"style":529},[1921],{"type":401,"value":1312},{"type":392,"tag":522,"props":1923,"children":1924},{"class":524,"line":919},[1925],{"type":392,"tag":522,"props":1926,"children":1927},{"emptyLinePlaceholder":1465},[1928],{"type":401,"value":1468},{"type":392,"tag":522,"props":1930,"children":1931},{"class":524,"line":944},[1932,1937,1942,1946,1950,1954,1959,1963],{"type":392,"tag":522,"props":1933,"children":1934},{"style":719},[1935],{"type":401,"value":1936},"function",{"type":392,"tag":522,"props":1938,"children":1939},{"style":541},[1940],{"type":401,"value":1941}," invariant",{"type":392,"tag":522,"props":1943,"children":1944},{"style":535},[1945],{"type":401,"value":1294},{"type":392,"tag":522,"props":1947,"children":1948},{"style":904},[1949],{"type":401,"value":1837},{"type":392,"tag":522,"props":1951,"children":1952},{"style":535},[1953],{"type":401,"value":1389},{"type":392,"tag":522,"props":1955,"children":1956},{"style":904},[1957],{"type":401,"value":1958}," action",{"type":392,"tag":522,"props":1960,"children":1961},{"style":535},[1962],{"type":401,"value":912},{"type":392,"tag":522,"props":1964,"children":1965},{"style":535},[1966],{"type":401,"value":733},{"type":392,"tag":522,"props":1968,"children":1969},{"class":524,"line":952},[1970,1975,1979,1983,1987,1992,1996,2000,2005,2009,2014],{"type":392,"tag":522,"props":1971,"children":1972},{"style":827},[1973],{"type":401,"value":1974},"  if",{"type":392,"tag":522,"props":1976,"children":1977},{"style":1830},[1978],{"type":401,"value":901},{"type":392,"tag":522,"props":1980,"children":1981},{"style":529},[1982],{"type":401,"value":1837},{"type":392,"tag":522,"props":1984,"children":1985},{"style":535},[1986],{"type":401,"value":538},{"type":392,"tag":522,"props":1988,"children":1989},{"style":541},[1990],{"type":401,"value":1991},"startsWith",{"type":392,"tag":522,"props":1993,"children":1994},{"style":1830},[1995],{"type":401,"value":1294},{"type":392,"tag":522,"props":1997,"children":1998},{"style":779},[1999],{"type":401,"value":844},{"type":392,"tag":522,"props":2001,"children":2002},{"style":785},[2003],{"type":401,"value":2004},"_",{"type":392,"tag":522,"props":2006,"children":2007},{"style":779},[2008],{"type":401,"value":844},{"type":392,"tag":522,"props":2010,"children":2011},{"style":1830},[2012],{"type":401,"value":2013},")) ",{"type":392,"tag":522,"props":2015,"children":2016},{"style":535},[2017],{"type":401,"value":2018},"{\n",{"type":392,"tag":522,"props":2020,"children":2021},{"class":524,"line":1206},[2022,2027,2031,2036,2040,2045,2050,2054],{"type":392,"tag":522,"props":2023,"children":2024},{"style":827},[2025],{"type":401,"value":2026},"    throw",{"type":392,"tag":522,"props":2028,"children":2029},{"style":773},[2030],{"type":401,"value":1758},{"type":392,"tag":522,"props":2032,"children":2033},{"style":541},[2034],{"type":401,"value":2035}," Error",{"type":392,"tag":522,"props":2037,"children":2038},{"style":1830},[2039],{"type":401,"value":1294},{"type":392,"tag":522,"props":2041,"children":2042},{"style":779},[2043],{"type":401,"value":2044},"`",{"type":392,"tag":522,"props":2046,"children":2047},{"style":785},[2048],{"type":401,"value":2049},"Invalid Key",{"type":392,"tag":522,"props":2051,"children":2052},{"style":779},[2053],{"type":401,"value":2044},{"type":392,"tag":522,"props":2055,"children":2056},{"style":1830},[2057],{"type":401,"value":1312},{"type":392,"tag":522,"props":2059,"children":2060},{"class":524,"line":1214},[2061],{"type":392,"tag":522,"props":2062,"children":2063},{"style":535},[2064],{"type":401,"value":802},{"type":392,"tag":522,"props":2066,"children":2068},{"class":524,"line":2067},14,[2069],{"type":392,"tag":522,"props":2070,"children":2071},{"style":535},[2072],{"type":401,"value":958},{"type":392,"tag":522,"props":2074,"children":2076},{"class":524,"line":2075},15,[2077],{"type":392,"tag":522,"props":2078,"children":2079},{"emptyLinePlaceholder":1465},[2080],{"type":401,"value":1468},{"type":392,"tag":522,"props":2082,"children":2084},{"class":524,"line":2083},16,[2085,2090,2094,2099,2103,2107,2112],{"type":392,"tag":522,"props":2086,"children":2087},{"style":529},[2088],{"type":401,"value":2089},"proxy",{"type":392,"tag":522,"props":2091,"children":2092},{"style":535},[2093],{"type":401,"value":538},{"type":392,"tag":522,"props":2095,"children":2096},{"style":529},[2097],{"type":401,"value":2098},"_prop ",{"type":392,"tag":522,"props":2100,"children":2101},{"style":773},[2102],{"type":401,"value":1885},{"type":392,"tag":522,"props":2104,"children":2105},{"style":779},[2106],{"type":401,"value":782},{"type":392,"tag":522,"props":2108,"children":2109},{"style":785},[2110],{"type":401,"value":2111},"somevalue",{"type":392,"tag":522,"props":2113,"children":2114},{"style":779},[2115],{"type":401,"value":793},{"type":392,"tag":522,"props":2117,"children":2119},{"class":524,"line":2118},17,[2120],{"type":392,"tag":522,"props":2121,"children":2122},{"style":1253},[2123],{"type":401,"value":2124},"// Error: Invalid Key\n",{"type":392,"tag":397,"props":2126,"children":2127},{},[2128],{"type":401,"value":2129},"若脱离 ES 6，代理模式会变成什么？",{"type":392,"tag":397,"props":2131,"children":2132},{},[2133],{"type":401,"value":2134},"会变成一团带有 Proxy Patterns 注释的函数，会被某个 GitHub 上的库吸收下放到 Readme 中亦或是变成社区中新增的几篇“JS 中的代理模式”的博客... 害，无所谓了。",{"type":392,"tag":404,"props":2136,"children":2138},{"id":2137},"设计模式的消融",[2139],{"type":401,"value":2137},{"type":392,"tag":397,"props":2141,"children":2142},{},[2143,2148],{"type":392,"tag":439,"props":2144,"children":2145},{},[2146],{"type":401,"value":2147},"总的来说，设计模式无非有三种作用：创建对象、组合对象以及处理对象的依赖",{"type":401,"value":2149},"。面向对象设计模式所代表的复用性，只能在面向对象的上下文中使用。跳出面向对象，你会发现代码复用的层次可以更加开放，下至语言特征，上至框架。",{"type":392,"tag":397,"props":2151,"children":2152},{},[2153],{"type":401,"value":2154},"作为抽象的最低层级，JS 语言特征，离不开日益见新的语言规范。上文总结的设计模式与语言特征的重叠之处，可以概括为以下两点：",{"type":392,"tag":2156,"props":2157,"children":2158},"ul",{},[2159,2165],{"type":392,"tag":2160,"props":2161,"children":2162},"li",{},[2163],{"type":401,"value":2164},"若语言本身孱弱时，可通过语言特征的再上层抽象，如函数，来提高复用的层次（即发明一种新的设计模式）；",{"type":392,"tag":2160,"props":2166,"children":2167},{},[2168],{"type":401,"value":2169},"当语言逐渐强大时，设计模式的概念也随之弱化；",{"type":392,"tag":397,"props":2171,"children":2172},{},[2173],{"type":401,"value":2174},"听起来颇有些“设计模式是对语言能力不足的补充”的味道，难道说我们要开始编程语言的圣战？这让我回想起 Paul Graham 在《黑客与画家》中描写到他对“强大语言”的赤裸裸的崇拜:",{"type":392,"tag":393,"props":2176,"children":2177},{},[2178],{"type":392,"tag":397,"props":2179,"children":2180},{},[2181,2183,2187,2189,2192,2194,2197,2199,2202,2204],{"type":401,"value":2182},"如果你想解决一个困难的问题，",{"type":392,"tag":2184,"props":2185,"children":2186},"br",{},[],{"type":401,"value":2188},"\n关键不是你使用的语言是否强大，而是好几个因素同时发挥作用：",{"type":392,"tag":2184,"props":2190,"children":2191},{},[],{"type":401,"value":2193},"\n（a）使用一种强大的语言；",{"type":392,"tag":2184,"props":2195,"children":2196},{},[],{"type":401,"value":2198},"\n（b）为这个难题写一个真实世界中的编译器；",{"type":392,"tag":2184,"props":2200,"children":2201},{},[],{"type":401,"value":2203},"\n（c）或者... 你把自己变成这个难题的人肉编译器。\n",{"type":392,"tag":770,"props":2205,"children":2206},{},[2207],{"type":401,"value":2208},"Paul Graham",{"type":392,"tag":397,"props":2210,"children":2211},{},[2212],{"type":401,"value":2213},"Paul Graham 就觉得设计模式就是一种对语言能力不足的妥协，“语言的编程能力越强大，写出来的程序就越短”。当然，就算有一种语言可以强大到和破除面向对象设计模式的神话，关于语言的表达能力强弱的争论也不会停止。不过好消息是，脱离场景谈语言一定是错误的，正如没有人会指望用汇编来编写 Web 程序。",{"type":392,"tag":397,"props":2215,"children":2216},{},[2217],{"type":401,"value":2218},"我们没必要去追求极致的编程语言表达力，表达力和复杂度往往是正相关的，就像世界上所有的语言的法阵都会伴随着词语的演进、读音的兴替以及对错误语法的包容，但很少有人说（或敢说）“你看，白话文比起文言文来说真是不够格啊”。",{"type":392,"tag":397,"props":2220,"children":2221},{},[2222],{"type":401,"value":2223},"脱离面向对象，我们也可以谈论设计模式，因为我们聊的就是代码复用。就算使用函数式、声明式的语言解决问题，也许有特定范式可遵循。请想象一下 CSS 中的设计模式。嗯？CSS 有设计模式么？私以为有。特异性、继承和层叠这三种语言特征就是 CSS 的设计模式；在这三种基础特性之上建立起来的各种代码组织方案/命名方案（如 OOCSS、Atomic CSS），也算。",{"type":392,"tag":397,"props":2225,"children":2226},{},[2227,2232],{"type":392,"tag":439,"props":2228,"children":2229},{},[2230],{"type":401,"value":2231},"唯一不变的，只有抽象的复用",{"type":401,"value":2233},"。我们做的一切工作，只是在抽象出不同层次的代码复用的同时，尽可能把代码组织成容易理解的形式。重要的不是记住某个设计模式中的实体以及实体是如何通讯的，而是要理解该设计模式所代表的抽象的体量适合的场景。",{"type":392,"tag":404,"props":2235,"children":2237},{"id":2236},"语言的魔法锅",[2238],{"type":401,"value":2236},{"type":392,"tag":393,"props":2240,"children":2241},{},[2242],{"type":392,"tag":397,"props":2243,"children":2244},{},[2245,2247],{"type":401,"value":2246},"在威尔士神话中，有一口神奇的大锅，加入特定配方熬制上一年零一天后，便能萃取出三滴解决任何难题的灵药。\n",{"type":392,"tag":770,"props":2248,"children":2249},{},[2250],{"type":401,"value":2251},"《塔列辛传奇》",{"type":392,"tag":397,"props":2253,"children":2254},{},[2255,2257,2264,2266,2273,2275,2286,2288,2299],{"type":401,"value":2256},"JavaScript 的火热日益见长，前端社区",{"type":392,"tag":419,"props":2258,"children":2261},{"href":2259,"rel":2260},"https://githut.info/",[1346],[2262],{"type":401,"value":2263},"越加活跃",{"type":401,"value":2265},"，规范也",{"type":392,"tag":419,"props":2267,"children":2270},{"href":2268,"rel":2269},"https://tc39.es/ecma262/",[1346],[2271],{"type":401,"value":2272},"日益见新",{"type":401,"value":2274},"。ESNeeext 已经往魔法锅中加了许多新材料，这是好事（其实我满心期待它直接把锅塞满）。新的语言特征能带来了更多的可能性，就目前而言，新特征大概率能增加语义，增强表达力、降低思维负担",{"type":392,"tag":415,"props":2276,"children":2277},{},[2278],{"type":392,"tag":419,"props":2279,"children":2283},{"href":2280,"ariaDescribedBy":2281,"dataFootnoteRef":386,"id":2282},"#user-content-fn-if-one-word",[423],"user-content-fnref-if-one-word",[2284],{"type":401,"value":2285},"6",{"type":401,"value":2287},"。尽管把材料往大锅中塞吧",{"type":392,"tag":415,"props":2289,"children":2290},{},[2291],{"type":392,"tag":419,"props":2292,"children":2296},{"href":2293,"ariaDescribedBy":2294,"dataFootnoteRef":386,"id":2295},"#user-content-fn-how-js-works",[423],"user-content-fnref-how-js-works",[2297],{"type":401,"value":2298},"7",{"type":401,"value":2300},"！让我们一同祈祷萃取出灵药的一天早日到来！",{"type":392,"tag":397,"props":2302,"children":2303},{},[2304],{"type":401,"value":2305},"以下就用魔法锅的故事作为文章结尾，这是一个颇有意思的传奇故事。",{"type":392,"tag":397,"props":2307,"children":2308},{},[2309],{"type":392,"tag":475,"props":2310,"children":2313},{"alt":2311,"src":2312},"炼金术 | 维基百科","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200704/20200713074400.png",[],{"type":392,"tag":397,"props":2315,"children":2316},{},[2317],{"type":401,"value":2318},"在爱尔兰一个隐秘的角落，住着一个精通智慧与魔法的巫师，凯丽杜恩（Ceridwen）。她能力超凡，偏偏却生了一个丑陋的儿子。所以这位母亲竭尽所能想将智慧传授给他，以弥补其外表的丑陋。她辗转于各种巫术与秘仪，最后，总算在一本隐秘的魔书中找到了灵感。",{"type":392,"tag":397,"props":2320,"children":2321},{},[2322],{"type":401,"value":2323},"魔书将秘密告诉凯丽杜恩：她需要使用一口大的魔法锅，填满红山花、小麦、火盐、精灵耳、直立根和灵尘，用大火熬制上一年零一天。最终会生成一锅致命毒物，但溅出的前三滴汁液却是充满“预言之灵”的智慧灵药。",{"type":392,"tag":397,"props":2325,"children":2326},{},[2327],{"type":401,"value":2328},"很快，熬制魔法锅的工作在凯丽杜恩的安排下有条不紊地进行，一个名字未知的盲人被派来搅拌大锅，年轻人巴赫则负责烧它下面的火。",{"type":392,"tag":397,"props":2330,"children":2331},{},[2332],{"type":401,"value":2333},"星象在天空中咯咯响地平移着，太阳和月亮绕着地球转了一轮又一轮... 随着时间推移，锅中的草药效力变得越来越强。看着咕嘟嘟冒着气泡的大锅，凯丽杜恩觉得很是满意，她便躺在温暖的锅边睡着了。",{"type":392,"tag":397,"props":2335,"children":2336},{},[2337,2339],{"type":401,"value":2338},"就在此时，意外发生了。翻腾着热气的大锅，意外地溅出了几点液体在年轻人巴赫的手指上，而巴赫居然不假思索地将手指吮吸地干干净净。和魔书的预言一样，巴赫立马就获得了智慧。他瞬间通晓了火焰的舞蹈和水的诉说，山的尊严和风的呢喃... 他知晓了无数秘密，以及... ",{"type":392,"tag":439,"props":2340,"children":2341},{},[2342],{"type":401,"value":2343},"凯丽杜恩肯定会杀了他！",{"type":392,"tag":397,"props":2345,"children":2346},{},[2347],{"type":401,"value":2348},"慌乱中，巴赫变成一只野兔夺路而逃，而凯丽杜恩惊醒后赶忙变成猎犬一路追踪过去。巴赫变成天空中的鸽子，她就变成一只鹰；他变成一头奔跑的鹿，她就变成一只草原上的狼；他化身为谷仓中的一粒麦粒，她就变成一只啄个不停老母鸡...",{"type":392,"tag":397,"props":2350,"children":2351},{},[2352],{"type":401,"value":2353},"这两人也许一直较量着，直到今天。",{"type":392,"tag":404,"props":2355,"children":2357},{"id":2356},"阅读更多",[2358],{"type":401,"value":2356},{"type":392,"tag":2156,"props":2360,"children":2361},{},[2362,2372,2382],{"type":392,"tag":2160,"props":2363,"children":2364},{},[2365],{"type":392,"tag":419,"props":2366,"children":2369},{"href":2367,"rel":2368},"https://www.jdon.com/37356",[1346],[2370],{"type":401,"value":2371},"15 年后 GoF 设计模式作者再谈设计模式",{"type":392,"tag":2160,"props":2373,"children":2374},{},[2375],{"type":392,"tag":419,"props":2376,"children":2379},{"href":2377,"rel":2378},"https://www.zhihu.com/question/37009570",[1346],[2380],{"type":401,"value":2381},"为什么不能乱点技能树",{"type":392,"tag":2160,"props":2383,"children":2384},{},[2385],{"type":392,"tag":419,"props":2386,"children":2389},{"href":2387,"rel":2388},"https://mp.weixin.qq.com/s?src=11&timestamp=1651051411&ver=3764&signature=AiaMcpc*LLVNlmVWIHaOvu4sThNq8OFp8ckqlVllLSohG8dWn**P3unuBhRwZAEND0uJdnurJtHvE6IKlBYAUUwuvRYknXkKje6CzOZaQBxRPIlnN4kwtzYsfa8fxKSM&new=1",[1346],[2390],{"type":401,"value":2391},"超越库和框架的技术创新",{"type":392,"tag":397,"props":2393,"children":2394},{},[2395],{"type":401,"value":2396},"希望本文能对你有所帮助，也欢迎各位批评文中观点或指出错误。",{"type":392,"tag":397,"props":2398,"children":2399},{},[2400,2402,2409,2411,2418],{"type":401,"value":2401},"想看看这篇文章是如何被创造的？你能从我的",{"type":392,"tag":419,"props":2403,"children":2406},{"href":2404,"rel":2405},"https://github.com/Lionad-Morotar/blogs",[1346],[2407],{"type":401,"value":2408},"博客项目",{"type":401,"value":2410},"中找到答案~ 欢迎 Star & Follow~ 也请大家多来我的",{"type":392,"tag":419,"props":2412,"children":2415},{"href":2413,"rel":2414},"https://www.lionad.art",[1346],[2416],{"type":401,"value":2417},"线上博客逛逛",{"type":401,"value":2419},"，排版超 Nice 哦~",{"type":392,"tag":2421,"props":2422,"children":2425},"section",{"className":2423,"dataFootnotes":386},[2424],"footnotes",[2426,2433],{"type":392,"tag":404,"props":2427,"children":2430},{"className":2428,"id":423},[2429],"sr-only",[2431],{"type":401,"value":2432},"Footnotes",{"type":392,"tag":2434,"props":2435,"children":2436},"ol",{},[2437,2452,2474,2487,2508,2521,2534],{"type":392,"tag":2160,"props":2438,"children":2440},{"id":2439},"user-content-fn-%E6%96%87%E5%8C%96",[2441,2443],{"type":401,"value":2442},"非贬义。 ",{"type":392,"tag":419,"props":2444,"children":2449},{"href":2445,"ariaLabel":2446,"className":2447,"dataFootnoteBackref":386},"#user-content-fnref-%E6%96%87%E5%8C%96","Back to reference 1",[2448],"data-footnote-backref",[2450],{"type":401,"value":2451},"↩",{"type":392,"tag":2160,"props":2453,"children":2455},{"id":2454},"user-content-fn-fn-call",[2456,2458,2465,2467],{"type":401,"value":2457},"见：",{"type":392,"tag":419,"props":2459,"children":2462},{"href":2460,"rel":2461},"https://zhuanlan.zhihu.com/p/95741316",[1346],[2463],{"type":401,"value":2464},"子程序（函数）考古学",{"type":401,"value":2466}," ",{"type":392,"tag":419,"props":2468,"children":2472},{"href":2469,"ariaLabel":2470,"className":2471,"dataFootnoteBackref":386},"#user-content-fnref-fn-call","Back to reference 2",[2448],[2473],{"type":401,"value":2451},{"type":392,"tag":2160,"props":2475,"children":2477},{"id":2476},"user-content-fn-css",[2478,2480],{"type":401,"value":2479},"试试使用 CSS 去写游戏？即便可行，但过程也会让人无比沮丧。 ",{"type":392,"tag":419,"props":2481,"children":2485},{"href":2482,"ariaLabel":2483,"className":2484,"dataFootnoteBackref":386},"#user-content-fnref-css","Back to reference 3",[2448],[2486],{"type":401,"value":2451},{"type":392,"tag":2160,"props":2488,"children":2490},{"id":2489},"user-content-fn-module-pattern",[2491,2493,2499,2501],{"type":401,"value":2492},"此模块模式并非传统面向对象中的模块模式，后者的定义见：",{"type":392,"tag":419,"props":2494,"children":2497},{"href":2495,"rel":2496},"https://www.jdon.com/52843",[1346],[2498],{"type":401,"value":2495},{"type":401,"value":2500},"。 ",{"type":392,"tag":419,"props":2502,"children":2506},{"href":2503,"ariaLabel":2504,"className":2505,"dataFootnoteBackref":386},"#user-content-fnref-module-pattern","Back to reference 4",[2448],[2507],{"type":401,"value":2451},{"type":392,"tag":2160,"props":2509,"children":2511},{"id":2510},"user-content-fn-firstclass",[2512,2514],{"type":401,"value":2513},"且叫且珍惜，说不定以后就听不到“一等公民”这种叫法啦。 ",{"type":392,"tag":419,"props":2515,"children":2519},{"href":2516,"ariaLabel":2517,"className":2518,"dataFootnoteBackref":386},"#user-content-fnref-firstclass","Back to reference 5",[2448],[2520],{"type":401,"value":2451},{"type":392,"tag":2160,"props":2522,"children":2524},{"id":2523},"user-content-fn-if-one-word",[2525,2527],{"type":401,"value":2526},"用一个单词就能达意时就不需要用一个句子。 ",{"type":392,"tag":419,"props":2528,"children":2532},{"href":2529,"ariaLabel":2530,"className":2531,"dataFootnoteBackref":386},"#user-content-fnref-if-one-word","Back to reference 6",[2448],[2533],{"type":401,"value":2451},{"type":392,"tag":2160,"props":2535,"children":2537},{"id":2536},"user-content-fn-how-js-works",[2538,2540],{"type":401,"value":2539},"语言特征并不总是银弹，类似观点见道格拉斯的《How JS Works》 ",{"type":392,"tag":419,"props":2541,"children":2545},{"href":2542,"ariaLabel":2543,"className":2544,"dataFootnoteBackref":386},"#user-content-fnref-how-js-works","Back to reference 7",[2448],[2546],{"type":401,"value":2451},{"type":392,"tag":2548,"props":2549,"children":2550},"style",{},[2551],{"type":401,"value":2552},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":386,"searchDepth":736,"depth":736,"links":2554},[2555,2556,2557,2558,2559,2560,2561,2562],{"id":406,"depth":736,"text":406},{"id":458,"depth":736,"text":458},{"id":566,"depth":736,"text":566},{"id":668,"depth":736,"text":668},{"id":2137,"depth":736,"text":2137},{"id":2236,"depth":736,"text":2236},{"id":2356,"depth":736,"text":2356},{"id":423,"depth":736,"text":2432},"markdown","content:2.articles:7.design-patterns-and-js-magic-pot.md","content","2.articles/7.design-patterns-and-js-magic-pot.md","md",[2569,2571],{"_path":58,"title":57,"description":2570},"本文介绍了几种通过CSS实现的常见阴影效果如单侧投影、空心投影、投影动画、彩色阴影、长投影和倒影，以及尝试使用SVG模拟材质特性如粗糙度及光学效应如菲尼尔效应生成了几种特殊的纹理，最后通过一个CSS绘制真实书本案例介绍了实战中的一些细节。",{"_path":64,"title":63,"description":2572},"上一篇讲 anysort 的文章说到因网易云音乐的歌单排序功能较弱，我们自己实现的用来给歌单自定义排序的排序库的思路。这篇文章在排序库的基础上，介绍了其 TypeScript 类型实现。",1708107554845]