[{"data":1,"prerenderedAt":1879},["ShallowReactive",2],{"navigation":3,"/articles/use-gpt-learn-complex-frontend":410,"/articles/use-gpt-learn-complex-frontend-surround":1874},[4,32,83,102,129,135,141,147,393,399,405],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":42,"_path":43},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":45,"_path":46},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":48,"_path":49},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":51,"_path":52},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":54,"_path":55},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":57,"_path":58},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":60,"_path":61},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":63,"_path":64},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":66,"_path":67},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":69,"_path":70},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":72,"_path":73},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":75,"_path":76},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":78,"_path":79},"🚝 四十二篇系列","/articles/fourty-two",{"title":81,"_path":82},"📝 技术博客归档","/articles/fold",{"title":84,"_path":85,"children":86},"造物 / Make","/tools",[87,90,93,96,99],{"title":88,"_path":89},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":91,"_path":92},"🌐 AnySort","/tools/anysort",{"title":94,"_path":95},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":97,"_path":98},"👓 Crapto","/tools/crypto-inline",{"title":100,"_path":101},"🖨️ any-to-base64","/tools/any-to-base64",{"title":103,"_path":104,"children":105},"吉他剧场 / Music","/music",[106,108,111,114,117,120,123,126],{"title":107,"_path":104},"🎸 FingerStyle！",{"title":109,"_path":110},"🌬️ 等待的风","/music/wind",{"title":112,"_path":113},"💕 约定的海洋","/music/ocean",{"title":115,"_path":116},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":118,"_path":119},"🌏 残酷天使的行动纲领","/music/eva",{"title":121,"_path":122},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":124,"_path":125},"🍷 Wu Wei","/music/wu-wei",{"title":127,"_path":128},"🌅 无题","/music/untitled",{"title":130,"_path":131,"children":132},"画点什么 / Paint","/paint",[133],{"title":134,"_path":131},"🚧 正在施工",{"title":136,"_path":137,"children":138},"读书笔记 / Notes","/books",[139],{"title":140,"_path":137},"📕 读书笔记",{"title":142,"_path":143,"children":144},"知识地图 / Maps","/maps",[145],{"title":146,"_path":143},"🏁 知识地图",{"title":148,"_path":149,"children":150},"零散的笔记 / Gists","/gists",[151,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390],{"title":152,"_path":149},"🧊 Gists",{"title":154,"_path":155},"网站的可访问性","/gists/accessibility",{"title":157,"_path":158},"Bit","/gists/bit",{"title":160,"_path":161},"图片模糊","/gists/blur",{"title":163,"_path":164},"渲染相关笔记","/gists/c4d",{"title":166,"_path":167},"CDN 问题记录","/gists/cdn",{"title":169,"_path":170},"消毒剂","/gists/cleaner",{"title":172,"_path":173},"Windows Command","/gists/cmd",{"title":175,"_path":176},"Command","/gists/command",{"title":178,"_path":179},"复杂科学","/gists/complexity-science",{"title":181,"_path":182},"GitHub Copilot","/gists/copilot",{"title":184,"_path":185},"宇宙","/gists/cosmos",{"title":187,"_path":188},"C++","/gists/cpp",{"title":190,"_path":191},"Data Structure","/gists/data-structure",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"设计模式","/gists/design-patterns",{"title":199,"_path":200},"Developer Experience","/gists/developer-experience",{"title":202,"_path":203},"Device Metrics","/gists/device-metrix",{"title":205,"_path":206},"数字化转型","/gists/digital-transformation",{"title":208,"_path":209},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":211,"_path":212},"正则表达式","/gists/eegex",{"title":214,"_path":215},"Emoji","/gists/emoji",{"title":217,"_path":218},"工程","/gists/engineering",{"title":220,"_path":221},"熵","/gists/entropy",{"title":223,"_path":224},"Environment","/gists/environment",{"title":226,"_path":227},"Erlang","/gists/erlang",{"title":229,"_path":230},"逃离塔克夫","/gists/escape-from-tarkov",{"title":232,"_path":233},"ESNext (ES6-ES11)","/gists/esnext",{"title":235,"_path":236},"Eval！","/gists/eval",{"title":238,"_path":239},"Flutter","/gists/flutter",{"title":241,"_path":242},"字体","/gists/font",{"title":244,"_path":245},"JS 函数式编程","/gists/functional",{"title":247,"_path":248},"游戏化","/gists/gamification",{"title":250,"_path":251},"Google C++ Standard","/gists/google-cpp-standard",{"title":253,"_path":254},"双向链接完全体","/gists/graph",{"title":256,"_path":257},"Hardwares","/gists/hardwares",{"title":259,"_path":260},"哈希冲突","/gists/hash-collision",{"title":262,"_path":263},"信息设计","/gists/information-design",{"title":265,"_path":266},"InstantPage","/gists/instant.page",{"title":268,"_path":269},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":271,"_path":272},"KVStore","/gists/key-value-db",{"title":274,"_path":275},"Kubernetes","/gists/kubernetes",{"title":277,"_path":278},"Makefile","/gists/makefile",{"title":280,"_path":281},"Markdown Inline Style","/gists/markdown-nice",{"title":283,"_path":284},"小程序","/gists/miniapp",{"title":286,"_path":287},"减小页面快照体积","/gists/minify-html",{"title":289,"_path":290},"mklink","/gists/mklink",{"title":292,"_path":293},"Mock","/gists/mock",{"title":295,"_path":296},"多人协作系统","/gists/multiplayer",{"title":298,"_path":299},"多端应用","/gists/multy-end-app",{"title":301,"_path":302},"神经科学","/gists/neuroscience",{"title":304,"_path":305},"OO","/gists/oo",{"title":307,"_path":308},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":310,"_path":311},"PInvoke","/gists/pinvoke",{"title":313,"_path":314},"像素","/gists/pixel",{"title":316,"_path":317},"PowerShell","/gists/powershell",{"title":319,"_path":320},"量子","/gists/quantum",{"title":322,"_path":323},"保持好奇心","/gists/questions",{"title":325,"_path":326},"React Native","/gists/react-native",{"title":328,"_path":329},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":331,"_path":332},"SEO","/gists/seo",{"title":334,"_path":335},"Shader","/gists/shader",{"title":337,"_path":338},"Shape Up","/gists/shape-up",{"title":340,"_path":341},"睡觉","/gists/sleep",{"title":343,"_path":344},"记录奇怪的问题","/gists/solved",{"title":346,"_path":347},"States","/gists/states",{"title":349,"_path":350},"Storage","/gists/storage",{"title":352,"_path":353},"音视频流处理","/gists/stream-cli",{"title":355,"_path":356},"Symbol","/gists/symbol",{"title":358,"_path":359},"系统论","/gists/systems-theory",{"title":361,"_path":362},"Taro","/gists/taro",{"title":364,"_path":365},"任务切片","/gists/task-slice",{"title":367,"_path":368},"技术偏好","/gists/tech-dudge",{"title":370,"_path":371},"Untitled","/gists/untitled",{"title":373,"_path":374},"可变字体","/gists/variable-font",{"title":376,"_path":377},"视觉错觉","/gists/visual-illusion",{"title":379,"_path":380},"SS(SSR)","/gists/vpn",{"title":382,"_path":383},"VS Code 插件开发","/gists/vscode-plugin",{"title":385,"_path":386},"Web Components","/gists/web-components",{"title":388,"_path":389},"Windows","/gists/windows",{"title":391,"_path":392},"查缺补漏","/gists/wrong",{"title":394,"_path":395,"children":396},"代码笔记 / Gists","/source-code",[397],{"title":398,"_path":395},"🚄 代码笔记",{"title":400,"_path":401,"children":402},"我 / Abount","/hire",[403],{"title":404,"_path":401},"📬 技术简历",{"title":406,"_path":407,"children":408},"todo","/todo",[409],{"title":406,"_path":407},{"_path":49,"_dir":411,"_draft":412,"_partial":412,"_locale":413,"title":48,"description":414,"body":415,"_type":1868,"_id":1869,"_source":1870,"_file":1871,"_stem":1872,"_extension":1873},"articles",false,"","在两个纯知识面的问题上，受到了 GPT 的碾压",{"type":416,"children":417,"toc":1861},"root",[418,426,432,437,442,447,453,458,467,472,477,522,527,533,538,543,565,570,575,583,588,593,601,606,793,798,1500,1505,1510,1516,1521,1526,1531,1536,1541,1546,1577,1582,1587,1612,1617,1622,1648,1653,1658,1663,1668,1774,1779,1784,1789,1794,1814,1856],{"type":419,"tag":420,"props":421,"children":422},"element","p",{},[423],{"type":424,"value":425},"text","如何使用 GPT 辅助前端学习？我认为最重要的两步是，首先使用 GPT 咨询普遍性的、具体的问题获得关键字，然后翻阅相关文档进行具体地学习。因为在文中纯知识面的问题上，我感觉受到了 GPT 的碾压。",{"type":419,"tag":427,"props":428,"children":430},"h3",{"id":429},"应当咨询普遍性及具体的问题",[431],{"type":424,"value":429},{"type":419,"tag":420,"props":433,"children":434},{},[435],{"type":424,"value":436},"前端学习很难。首先是面对排山倒海的文字资料，如果没有掌握合适的方法，比如保持阅读文档和更新日志的习惯，很难在知识面上跟上具体框架的发展。另一方面，在细微的问题上有无数种解决方法（比如渐变边框的一百种画法），很少有方便学习的高质量的图书或稳定的聚合推荐。我觉得前端的难，以繁杂、琐碎的知识点带来的记忆难度为首，尤其当开发者入门后想建立起知识广度的积累时。",{"type":419,"tag":420,"props":438,"children":439},{},[440],{"type":424,"value":441},"ChatGPT 是一个好工具，很适合用作前端学习。但在工作中，我常看到同事错误的使用它。在一次帮忙排查 WebStorm 中 ESLint 插件失效时，同事反复将控制台报错信息粘贴进 GPT 中，期望获得有用的提示。但这次的报错并不是常见问题，所以直到最后，GPT 没有切中地给出解决问题的方法。它回复了万金油答案，就像是“问：升级 xxx 能带来什么？答：提高兼容性和性能”那样。",{"type":419,"tag":420,"props":443,"children":444},{},[445],{"type":424,"value":446},"我并不是说要通过系统地学习提示工程来引导 GPT 输出我们需要的回答，而是 GPT 工具本身在某些场景并不适合。目前许多 GPT 工具没有提供互联网连接，且知识库截至 2021 年。撇开提示技巧，我觉得应该在常见且具体的问题上咨询 GPT 的建议，最重要的两步是，首先使用 GPT 咨询普遍性的、具体的问题获得关键字，然后翻阅相关文档进行具体地学习。因为在以下两个问题，我感觉自己在纯知识面上受到了 GPT 的碾压。",{"type":419,"tag":427,"props":448,"children":450},{"id":449},"如何防止-element-plus-组件中的-popper-溢出容器",[451],{"type":424,"value":452},"如何防止 Element Plus 组件中的 Popper 溢出容器？",{"type":419,"tag":420,"props":454,"children":455},{},[456],{"type":424,"value":457},"第一个例子是关于防止 Popper 溢出容器的设置。",{"type":419,"tag":420,"props":459,"children":460},{},[461],{"type":419,"tag":462,"props":463,"children":466},"img",{"alt":464,"src":465},"el-tooltip example","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20230702125800.png",[],{"type":419,"tag":420,"props":468,"children":469},{},[470],{"type":424,"value":471},"B 端产品常将复杂性隐藏在 Dialog 或 Popup 中。我们公司的组件库基于 Element Plus，所以经常需要对弹窗的内容进行定制。这里有一个问题，Popper 的位置不好控制。当交互场景变得更复杂，比如当滚动弹窗内容要求 popper 不溢出弹窗容器时，你会发现问题开始变得难以解决。其一因为 Element Plus 的文档没有关于如何控制 popper 位置作更多说明，如果在 Element Plus 的文档中搜索“位置”，你只能找到 Popper 的 placement 和 offset 两种属性，而且都不是我们想要的答案；其二更重要，就算你在互联网搜索相关关键字，也很难从中汲取有效信息。你可以尝试搜索“element-plus+popper（或相关组件）+溢出弹窗 -'element-ui'”之类的关键词验证我的说法，这个问题过于垂直，所以网上没有具体的解决方法，或能搜出来的是关于 element-ui 的过时的资料。",{"type":419,"tag":420,"props":473,"children":474},{},[475],{"type":424,"value":476},"答案隐藏在 popper.js 的文档中，所以解决这个问题可能有以下几条通路：",{"type":419,"tag":478,"props":479,"children":480},"ol",{},[481,487,509],{"type":419,"tag":482,"props":483,"children":484},"li",{},[485],{"type":424,"value":486},"在 element-plus tooltip（或相关组件）文档漫游，通过不起眼的 popper.js 文档链接进入并搜寻，有概率能找到解决相关问题的 API",{"type":419,"tag":482,"props":488,"children":489},{},[490,492,499,501,507],{"type":424,"value":491},"在搜索引擎找到了其它用户在解决 ",{"type":419,"tag":493,"props":494,"children":496},"a",{"href":495},"mailto:element-ui+popper@1.x",[497],{"type":424,"value":498},"element-ui+popper@1.x",{"type":424,"value":500}," 位置控制方面的经验，于是自发搜索 ",{"type":419,"tag":493,"props":502,"children":504},{"href":503},"mailto:popper.js@2.x",[505],{"type":424,"value":506},"popper.js@2.x",{"type":424,"value":508}," 文档，并在文档中找到关键 API。",{"type":419,"tag":482,"props":510,"children":511},{},[512,514,520],{"type":424,"value":513},"在 github element-plus issues 中搜索 “popper+dialog”，能找到其它开发提供的提示，直接将你引向 ",{"type":419,"tag":493,"props":515,"children":517},{"href":516},"mailto:poppper.js@2.x",[518],{"type":424,"value":519},"poppper.js@2.x",{"type":424,"value":521}," 中解决相关问题的关键 API。",{"type":419,"tag":420,"props":523,"children":524},{},[525],{"type":424,"value":526},"只能说 HTML 不够 Hyper，所以搜索引擎在这种没有直接资料的场景中无能为力。不过，好消息是因为问题非常具体，所以 GPT 对这种问题通常答得很好，下面来看看 GPT 的回答：",{"type":419,"tag":528,"props":529,"children":531},"h4",{"id":530},"第一轮",[532],{"type":424,"value":530},{"type":419,"tag":420,"props":534,"children":535},{},[536],{"type":424,"value":537},"问：“你作为一个专业的前端工程师，请告诉我解决以下问题的思路：我在 el-dialog 中某个按钮上使用了 el-tooltip 组件，应当如何设置 el-tooltip 使其不超出 el-dialog 容器。”。",{"type":419,"tag":420,"props":539,"children":540},{},[541],{"type":424,"value":542},"GPT 答（下文的引用部分都作为 GPT 的回答）：",{"type":419,"tag":544,"props":545,"children":546},"blockquote",{},[547,552],{"type":419,"tag":420,"props":548,"children":549},{},[550],{"type":424,"value":551},"好的，以下是一个解决这个问题的思路：",{"type":419,"tag":478,"props":553,"children":554},{},[555,560],{"type":419,"tag":482,"props":556,"children":557},{},[558],{"type":424,"value":559},"使用插槽自定义内容，......",{"type":419,"tag":482,"props":561,"children":562},{},[563],{"type":424,"value":564},"使用 CSS 类名控制样式，......",{"type":419,"tag":528,"props":566,"children":568},{"id":567},"第二轮",[569],{"type":424,"value":567},{"type":419,"tag":420,"props":571,"children":572},{},[573],{"type":424,"value":574},"在第一轮得到了普通的回答，继续追问：“有没有其他方法用来控制 el-tooltip 不超出容器？”。",{"type":419,"tag":544,"props":576,"children":577},{},[578],{"type":419,"tag":420,"props":579,"children":580},{},[581],{"type":424,"value":582},"除了前面提到的两种方法外，还有一种方法可以用来控制 el-tooltip 不超出容器，那就是使用 CSS 中的 overflow: hidden 属性来控制容器的溢出，......",{"type":419,"tag":528,"props":584,"children":586},{"id":585},"第三轮",[587],{"type":424,"value":585},{"type":419,"tag":420,"props":589,"children":590},{},[591],{"type":424,"value":592},"在第二轮得到了超常但不好用的回答，重复提问：“有没有其他方法用来控制 el-tooltip 不超出容器？”。",{"type":419,"tag":544,"props":594,"children":595},{},[596],{"type":419,"tag":420,"props":597,"children":598},{},[599],{"type":424,"value":600},"除了前面提到的一种方法外，还有一种方法可以用来控制 el-tooltip 不超出容器，那就是使用 Popper.js 提供的 preventOverflow 选项来限制 el-tooltip 的位置，......",{"type":419,"tag":420,"props":602,"children":603},{},[604],{"type":424,"value":605},"经过三轮交流，GPT 给出了可参考的问题代码。通过搜索“popper-options”+“preventOverflow”关键词，能确定，这的确是能解决问题的关键 API。",{"type":419,"tag":607,"props":608,"children":612},"pre",{"className":609,"code":610,"language":611,"meta":413,"style":413},"language-vue shiki shiki-themes material-theme-lighter github-light github-dark monokai","\u003Cel-tooltip content=\"这是 el-tooltip 的内容\" placement=\"bottom\" :popper-options=\"{ preventOverflow: { boundariesElement: 'viewport' } }\">\n  \u003Cel-button>Hover Me\u003C/el-button>\n\u003C/el-tooltip>\n","vue",[613],{"type":419,"tag":614,"props":615,"children":616},"code",{"__ignoreMap":413},[617,766,776],{"type":419,"tag":618,"props":619,"children":622},"span",{"class":620,"line":621},"line",1,[623,629,635,641,646,652,658,662,667,671,675,680,684,689,694,698,703,708,714,719,724,729,733,738,743,748,753,757,761],{"type":419,"tag":618,"props":624,"children":626},{"style":625},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[627],{"type":424,"value":628},"\u003C",{"type":419,"tag":618,"props":630,"children":632},{"style":631},"--shiki-light:#E53935;--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672",[633],{"type":424,"value":634},"el-tooltip",{"type":419,"tag":618,"props":636,"children":638},{"style":637},"--shiki-light:#9C3EDA;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[639],{"type":424,"value":640}," content",{"type":419,"tag":618,"props":642,"children":643},{"style":625},[644],{"type":424,"value":645},"=",{"type":419,"tag":618,"props":647,"children":649},{"style":648},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[650],{"type":424,"value":651},"\"",{"type":419,"tag":618,"props":653,"children":655},{"style":654},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[656],{"type":424,"value":657},"这是 el-tooltip 的内容",{"type":419,"tag":618,"props":659,"children":660},{"style":648},[661],{"type":424,"value":651},{"type":419,"tag":618,"props":663,"children":664},{"style":637},[665],{"type":424,"value":666}," placement",{"type":419,"tag":618,"props":668,"children":669},{"style":625},[670],{"type":424,"value":645},{"type":419,"tag":618,"props":672,"children":673},{"style":648},[674],{"type":424,"value":651},{"type":419,"tag":618,"props":676,"children":677},{"style":654},[678],{"type":424,"value":679},"bottom",{"type":419,"tag":618,"props":681,"children":682},{"style":648},[683],{"type":424,"value":651},{"type":419,"tag":618,"props":685,"children":686},{"style":625},[687],{"type":424,"value":688}," :",{"type":419,"tag":618,"props":690,"children":691},{"style":637},[692],{"type":424,"value":693},"popper-options",{"type":419,"tag":618,"props":695,"children":696},{"style":625},[697],{"type":424,"value":645},{"type":419,"tag":618,"props":699,"children":701},{"style":700},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#F8F8F2",[702],{"type":424,"value":651},{"type":419,"tag":618,"props":704,"children":705},{"style":625},[706],{"type":424,"value":707},"{",{"type":419,"tag":618,"props":709,"children":711},{"style":710},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[712],{"type":424,"value":713}," preventOverflow",{"type":419,"tag":618,"props":715,"children":716},{"style":625},[717],{"type":424,"value":718},":",{"type":419,"tag":618,"props":720,"children":721},{"style":625},[722],{"type":424,"value":723}," {",{"type":419,"tag":618,"props":725,"children":726},{"style":710},[727],{"type":424,"value":728}," boundariesElement",{"type":419,"tag":618,"props":730,"children":731},{"style":625},[732],{"type":424,"value":718},{"type":419,"tag":618,"props":734,"children":735},{"style":648},[736],{"type":424,"value":737}," '",{"type":419,"tag":618,"props":739,"children":740},{"style":654},[741],{"type":424,"value":742},"viewport",{"type":419,"tag":618,"props":744,"children":745},{"style":648},[746],{"type":424,"value":747},"'",{"type":419,"tag":618,"props":749,"children":750},{"style":625},[751],{"type":424,"value":752}," }",{"type":419,"tag":618,"props":754,"children":755},{"style":625},[756],{"type":424,"value":752},{"type":419,"tag":618,"props":758,"children":759},{"style":700},[760],{"type":424,"value":651},{"type":419,"tag":618,"props":762,"children":763},{"style":625},[764],{"type":424,"value":765},">\n",{"type":419,"tag":618,"props":767,"children":769},{"class":620,"line":768},2,[770],{"type":419,"tag":618,"props":771,"children":773},{"style":772},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[774],{"type":424,"value":775},"  \u003Cel-button>Hover Me\u003C/el-button>\n",{"type":419,"tag":618,"props":777,"children":779},{"class":620,"line":778},3,[780,785,789],{"type":419,"tag":618,"props":781,"children":782},{"style":625},[783],{"type":424,"value":784},"\u003C/",{"type":419,"tag":618,"props":786,"children":787},{"style":631},[788],{"type":424,"value":634},{"type":419,"tag":618,"props":790,"children":791},{"style":625},[792],{"type":424,"value":765},{"type":419,"tag":420,"props":794,"children":795},{},[796],{"type":424,"value":797},"现实的问题对于 GPT 而言过于复杂，所以将其拆解为更小的更具体的问题是一个有效的提问手段。经过查阅文档进一步完善解决方法，总结出的“标准答案”如下：",{"type":419,"tag":607,"props":799,"children":801},{"className":609,"code":800,"language":611,"meta":413,"style":413},"\u003Ctemplate>\n  \u003Cel-tooltip\n    v-if=\"continaerElement\"\n    popper-class=\"test-popover\"\n    :popper-options=\"{\n      modifiers: [\n        // 通过 preventOverflow 插件防止 popper 超出某个容器\n        {\n          name: 'preventOverflow',\n          options: {\n            // 容器元素\n            boundary: continaerElement,\n            // popper 应当据容器的边距\n            padding: 12,\n            // 优先以“上下”方向计算 popper 和容器是否溢出，还是“左右”方向，\n            // 配置 altAxis 并配合 flip 插件，才能使“上下左右”四个方向都不发生溢出\n            altAxis: true,\n          },\n        },\n        {\n          name: 'flip',\n          options: {\n            // 容器元素\n            boundary: continaerElement,\n            // 当容器与 popper 发生碰撞时，使 popper 不会覆盖触发 popper 显示的 refference，\n            // 而是回退到其它方向显示\n            // more on https://popper.js.org/docs/v2/modifiers/flip/\n            fallbackPlacements: ['top', 'bottom', 'right', 'left'],\n          },\n        },\n      ],\n    }\"\n  />\n\u003C/template>\n\n\u003Cstyle lang=\"scss\">\n// 当 referrence 消失时，popper 应当立即消失，\n// 而不是移动到 （0，0）位置并等待动画结束再消失\n// more on https://popper.js.org/docs/v2/modifiers/hide/\n.test-popover[data-popper-reference-hidden='true'] {\n  visibility: hidden;\n  pointer-events: none;\n  opacity: 0;\n}\n\u003C/style>\n\n",[802],{"type":419,"tag":614,"props":803,"children":804},{"__ignoreMap":413},[805,821,834,861,887,913,927,937,946,978,992,1001,1022,1031,1054,1063,1072,1095,1104,1113,1121,1150,1162,1170,1190,1199,1208,1217,1300,1308,1316,1325,1338,1347,1363,1373,1412,1421,1430,1439,1448,1457,1466,1475,1484],{"type":419,"tag":618,"props":806,"children":807},{"class":620,"line":621},[808,812,817],{"type":419,"tag":618,"props":809,"children":810},{"style":625},[811],{"type":424,"value":628},{"type":419,"tag":618,"props":813,"children":814},{"style":631},[815],{"type":424,"value":816},"template",{"type":419,"tag":618,"props":818,"children":819},{"style":625},[820],{"type":424,"value":765},{"type":419,"tag":618,"props":822,"children":823},{"class":620,"line":768},[824,829],{"type":419,"tag":618,"props":825,"children":826},{"style":625},[827],{"type":424,"value":828},"  \u003C",{"type":419,"tag":618,"props":830,"children":831},{"style":631},[832],{"type":424,"value":833},"el-tooltip\n",{"type":419,"tag":618,"props":835,"children":836},{"class":620,"line":778},[837,843,847,851,856],{"type":419,"tag":618,"props":838,"children":840},{"style":839},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[841],{"type":424,"value":842},"    v-if",{"type":419,"tag":618,"props":844,"children":845},{"style":625},[846],{"type":424,"value":645},{"type":419,"tag":618,"props":848,"children":849},{"style":700},[850],{"type":424,"value":651},{"type":419,"tag":618,"props":852,"children":853},{"style":772},[854],{"type":424,"value":855},"continaerElement",{"type":419,"tag":618,"props":857,"children":858},{"style":700},[859],{"type":424,"value":860},"\"\n",{"type":419,"tag":618,"props":862,"children":864},{"class":620,"line":863},4,[865,870,874,878,883],{"type":419,"tag":618,"props":866,"children":867},{"style":637},[868],{"type":424,"value":869},"    popper-class",{"type":419,"tag":618,"props":871,"children":872},{"style":625},[873],{"type":424,"value":645},{"type":419,"tag":618,"props":875,"children":876},{"style":648},[877],{"type":424,"value":651},{"type":419,"tag":618,"props":879,"children":880},{"style":654},[881],{"type":424,"value":882},"test-popover",{"type":419,"tag":618,"props":884,"children":885},{"style":648},[886],{"type":424,"value":860},{"type":419,"tag":618,"props":888,"children":890},{"class":620,"line":889},5,[891,896,900,904,908],{"type":419,"tag":618,"props":892,"children":893},{"style":625},[894],{"type":424,"value":895},"    :",{"type":419,"tag":618,"props":897,"children":898},{"style":637},[899],{"type":424,"value":693},{"type":419,"tag":618,"props":901,"children":902},{"style":625},[903],{"type":424,"value":645},{"type":419,"tag":618,"props":905,"children":906},{"style":700},[907],{"type":424,"value":651},{"type":419,"tag":618,"props":909,"children":910},{"style":625},[911],{"type":424,"value":912},"{\n",{"type":419,"tag":618,"props":914,"children":916},{"class":620,"line":915},6,[917,922],{"type":419,"tag":618,"props":918,"children":919},{"style":710},[920],{"type":424,"value":921},"      modifiers",{"type":419,"tag":618,"props":923,"children":924},{"style":625},[925],{"type":424,"value":926},": [\n",{"type":419,"tag":618,"props":928,"children":930},{"class":620,"line":929},7,[931],{"type":419,"tag":618,"props":932,"children":934},{"style":933},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[935],{"type":424,"value":936},"        // 通过 preventOverflow 插件防止 popper 超出某个容器\n",{"type":419,"tag":618,"props":938,"children":940},{"class":620,"line":939},8,[941],{"type":419,"tag":618,"props":942,"children":943},{"style":625},[944],{"type":424,"value":945},"        {\n",{"type":419,"tag":618,"props":947,"children":949},{"class":620,"line":948},9,[950,955,960,964,969,973],{"type":419,"tag":618,"props":951,"children":952},{"style":710},[953],{"type":424,"value":954},"          name",{"type":419,"tag":618,"props":956,"children":957},{"style":625},[958],{"type":424,"value":959},": ",{"type":419,"tag":618,"props":961,"children":962},{"style":648},[963],{"type":424,"value":747},{"type":419,"tag":618,"props":965,"children":966},{"style":654},[967],{"type":424,"value":968},"preventOverflow",{"type":419,"tag":618,"props":970,"children":971},{"style":648},[972],{"type":424,"value":747},{"type":419,"tag":618,"props":974,"children":975},{"style":625},[976],{"type":424,"value":977},",\n",{"type":419,"tag":618,"props":979,"children":981},{"class":620,"line":980},10,[982,987],{"type":419,"tag":618,"props":983,"children":984},{"style":710},[985],{"type":424,"value":986},"          options",{"type":419,"tag":618,"props":988,"children":989},{"style":625},[990],{"type":424,"value":991},": {\n",{"type":419,"tag":618,"props":993,"children":995},{"class":620,"line":994},11,[996],{"type":419,"tag":618,"props":997,"children":998},{"style":933},[999],{"type":424,"value":1000},"            // 容器元素\n",{"type":419,"tag":618,"props":1002,"children":1004},{"class":620,"line":1003},12,[1005,1010,1014,1018],{"type":419,"tag":618,"props":1006,"children":1007},{"style":710},[1008],{"type":424,"value":1009},"            boundary",{"type":419,"tag":618,"props":1011,"children":1012},{"style":625},[1013],{"type":424,"value":959},{"type":419,"tag":618,"props":1015,"children":1016},{"style":772},[1017],{"type":424,"value":855},{"type":419,"tag":618,"props":1019,"children":1020},{"style":625},[1021],{"type":424,"value":977},{"type":419,"tag":618,"props":1023,"children":1025},{"class":620,"line":1024},13,[1026],{"type":419,"tag":618,"props":1027,"children":1028},{"style":933},[1029],{"type":424,"value":1030},"            // popper 应当据容器的边距\n",{"type":419,"tag":618,"props":1032,"children":1034},{"class":620,"line":1033},14,[1035,1040,1044,1050],{"type":419,"tag":618,"props":1036,"children":1037},{"style":710},[1038],{"type":424,"value":1039},"            padding",{"type":419,"tag":618,"props":1041,"children":1042},{"style":625},[1043],{"type":424,"value":959},{"type":419,"tag":618,"props":1045,"children":1047},{"style":1046},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1048],{"type":424,"value":1049},"12",{"type":419,"tag":618,"props":1051,"children":1052},{"style":625},[1053],{"type":424,"value":977},{"type":419,"tag":618,"props":1055,"children":1057},{"class":620,"line":1056},15,[1058],{"type":419,"tag":618,"props":1059,"children":1060},{"style":933},[1061],{"type":424,"value":1062},"            // 优先以“上下”方向计算 popper 和容器是否溢出，还是“左右”方向，\n",{"type":419,"tag":618,"props":1064,"children":1066},{"class":620,"line":1065},16,[1067],{"type":419,"tag":618,"props":1068,"children":1069},{"style":933},[1070],{"type":424,"value":1071},"            // 配置 altAxis 并配合 flip 插件，才能使“上下左右”四个方向都不发生溢出\n",{"type":419,"tag":618,"props":1073,"children":1075},{"class":620,"line":1074},17,[1076,1081,1085,1091],{"type":419,"tag":618,"props":1077,"children":1078},{"style":710},[1079],{"type":424,"value":1080},"            altAxis",{"type":419,"tag":618,"props":1082,"children":1083},{"style":625},[1084],{"type":424,"value":959},{"type":419,"tag":618,"props":1086,"children":1088},{"style":1087},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1089],{"type":424,"value":1090},"true",{"type":419,"tag":618,"props":1092,"children":1093},{"style":625},[1094],{"type":424,"value":977},{"type":419,"tag":618,"props":1096,"children":1098},{"class":620,"line":1097},18,[1099],{"type":419,"tag":618,"props":1100,"children":1101},{"style":625},[1102],{"type":424,"value":1103},"          },\n",{"type":419,"tag":618,"props":1105,"children":1107},{"class":620,"line":1106},19,[1108],{"type":419,"tag":618,"props":1109,"children":1110},{"style":625},[1111],{"type":424,"value":1112},"        },\n",{"type":419,"tag":618,"props":1114,"children":1116},{"class":620,"line":1115},20,[1117],{"type":419,"tag":618,"props":1118,"children":1119},{"style":625},[1120],{"type":424,"value":945},{"type":419,"tag":618,"props":1122,"children":1124},{"class":620,"line":1123},21,[1125,1129,1133,1137,1142,1146],{"type":419,"tag":618,"props":1126,"children":1127},{"style":710},[1128],{"type":424,"value":954},{"type":419,"tag":618,"props":1130,"children":1131},{"style":625},[1132],{"type":424,"value":959},{"type":419,"tag":618,"props":1134,"children":1135},{"style":648},[1136],{"type":424,"value":747},{"type":419,"tag":618,"props":1138,"children":1139},{"style":654},[1140],{"type":424,"value":1141},"flip",{"type":419,"tag":618,"props":1143,"children":1144},{"style":648},[1145],{"type":424,"value":747},{"type":419,"tag":618,"props":1147,"children":1148},{"style":625},[1149],{"type":424,"value":977},{"type":419,"tag":618,"props":1151,"children":1153},{"class":620,"line":1152},22,[1154,1158],{"type":419,"tag":618,"props":1155,"children":1156},{"style":710},[1157],{"type":424,"value":986},{"type":419,"tag":618,"props":1159,"children":1160},{"style":625},[1161],{"type":424,"value":991},{"type":419,"tag":618,"props":1163,"children":1165},{"class":620,"line":1164},23,[1166],{"type":419,"tag":618,"props":1167,"children":1168},{"style":933},[1169],{"type":424,"value":1000},{"type":419,"tag":618,"props":1171,"children":1173},{"class":620,"line":1172},24,[1174,1178,1182,1186],{"type":419,"tag":618,"props":1175,"children":1176},{"style":710},[1177],{"type":424,"value":1009},{"type":419,"tag":618,"props":1179,"children":1180},{"style":625},[1181],{"type":424,"value":959},{"type":419,"tag":618,"props":1183,"children":1184},{"style":772},[1185],{"type":424,"value":855},{"type":419,"tag":618,"props":1187,"children":1188},{"style":625},[1189],{"type":424,"value":977},{"type":419,"tag":618,"props":1191,"children":1193},{"class":620,"line":1192},25,[1194],{"type":419,"tag":618,"props":1195,"children":1196},{"style":933},[1197],{"type":424,"value":1198},"            // 当容器与 popper 发生碰撞时，使 popper 不会覆盖触发 popper 显示的 refference，\n",{"type":419,"tag":618,"props":1200,"children":1202},{"class":620,"line":1201},26,[1203],{"type":419,"tag":618,"props":1204,"children":1205},{"style":933},[1206],{"type":424,"value":1207},"            // 而是回退到其它方向显示\n",{"type":419,"tag":618,"props":1209,"children":1211},{"class":620,"line":1210},27,[1212],{"type":419,"tag":618,"props":1213,"children":1214},{"style":933},[1215],{"type":424,"value":1216},"            // more on https://popper.js.org/docs/v2/modifiers/flip/\n",{"type":419,"tag":618,"props":1218,"children":1220},{"class":620,"line":1219},28,[1221,1226,1231,1235,1240,1244,1249,1253,1257,1261,1265,1269,1274,1278,1282,1286,1291,1295],{"type":419,"tag":618,"props":1222,"children":1223},{"style":710},[1224],{"type":424,"value":1225},"            fallbackPlacements",{"type":419,"tag":618,"props":1227,"children":1228},{"style":625},[1229],{"type":424,"value":1230},": [",{"type":419,"tag":618,"props":1232,"children":1233},{"style":648},[1234],{"type":424,"value":747},{"type":419,"tag":618,"props":1236,"children":1237},{"style":654},[1238],{"type":424,"value":1239},"top",{"type":419,"tag":618,"props":1241,"children":1242},{"style":648},[1243],{"type":424,"value":747},{"type":419,"tag":618,"props":1245,"children":1246},{"style":625},[1247],{"type":424,"value":1248},", ",{"type":419,"tag":618,"props":1250,"children":1251},{"style":648},[1252],{"type":424,"value":747},{"type":419,"tag":618,"props":1254,"children":1255},{"style":654},[1256],{"type":424,"value":679},{"type":419,"tag":618,"props":1258,"children":1259},{"style":648},[1260],{"type":424,"value":747},{"type":419,"tag":618,"props":1262,"children":1263},{"style":625},[1264],{"type":424,"value":1248},{"type":419,"tag":618,"props":1266,"children":1267},{"style":648},[1268],{"type":424,"value":747},{"type":419,"tag":618,"props":1270,"children":1271},{"style":654},[1272],{"type":424,"value":1273},"right",{"type":419,"tag":618,"props":1275,"children":1276},{"style":648},[1277],{"type":424,"value":747},{"type":419,"tag":618,"props":1279,"children":1280},{"style":625},[1281],{"type":424,"value":1248},{"type":419,"tag":618,"props":1283,"children":1284},{"style":648},[1285],{"type":424,"value":747},{"type":419,"tag":618,"props":1287,"children":1288},{"style":654},[1289],{"type":424,"value":1290},"left",{"type":419,"tag":618,"props":1292,"children":1293},{"style":648},[1294],{"type":424,"value":747},{"type":419,"tag":618,"props":1296,"children":1297},{"style":625},[1298],{"type":424,"value":1299},"],\n",{"type":419,"tag":618,"props":1301,"children":1303},{"class":620,"line":1302},29,[1304],{"type":419,"tag":618,"props":1305,"children":1306},{"style":625},[1307],{"type":424,"value":1103},{"type":419,"tag":618,"props":1309,"children":1311},{"class":620,"line":1310},30,[1312],{"type":419,"tag":618,"props":1313,"children":1314},{"style":625},[1315],{"type":424,"value":1112},{"type":419,"tag":618,"props":1317,"children":1319},{"class":620,"line":1318},31,[1320],{"type":419,"tag":618,"props":1321,"children":1322},{"style":625},[1323],{"type":424,"value":1324},"      ],\n",{"type":419,"tag":618,"props":1326,"children":1328},{"class":620,"line":1327},32,[1329,1334],{"type":419,"tag":618,"props":1330,"children":1331},{"style":625},[1332],{"type":424,"value":1333},"    }",{"type":419,"tag":618,"props":1335,"children":1336},{"style":700},[1337],{"type":424,"value":860},{"type":419,"tag":618,"props":1339,"children":1341},{"class":620,"line":1340},33,[1342],{"type":419,"tag":618,"props":1343,"children":1344},{"style":625},[1345],{"type":424,"value":1346},"  />\n",{"type":419,"tag":618,"props":1348,"children":1350},{"class":620,"line":1349},34,[1351,1355,1359],{"type":419,"tag":618,"props":1352,"children":1353},{"style":625},[1354],{"type":424,"value":784},{"type":419,"tag":618,"props":1356,"children":1357},{"style":631},[1358],{"type":424,"value":816},{"type":419,"tag":618,"props":1360,"children":1361},{"style":625},[1362],{"type":424,"value":765},{"type":419,"tag":618,"props":1364,"children":1366},{"class":620,"line":1365},35,[1367],{"type":419,"tag":618,"props":1368,"children":1370},{"emptyLinePlaceholder":1369},true,[1371],{"type":424,"value":1372},"\n",{"type":419,"tag":618,"props":1374,"children":1376},{"class":620,"line":1375},36,[1377,1381,1386,1391,1395,1399,1404,1408],{"type":419,"tag":618,"props":1378,"children":1379},{"style":625},[1380],{"type":424,"value":628},{"type":419,"tag":618,"props":1382,"children":1383},{"style":631},[1384],{"type":424,"value":1385},"style",{"type":419,"tag":618,"props":1387,"children":1388},{"style":637},[1389],{"type":424,"value":1390}," lang",{"type":419,"tag":618,"props":1392,"children":1393},{"style":625},[1394],{"type":424,"value":645},{"type":419,"tag":618,"props":1396,"children":1397},{"style":648},[1398],{"type":424,"value":651},{"type":419,"tag":618,"props":1400,"children":1401},{"style":654},[1402],{"type":424,"value":1403},"scss",{"type":419,"tag":618,"props":1405,"children":1406},{"style":648},[1407],{"type":424,"value":651},{"type":419,"tag":618,"props":1409,"children":1410},{"style":625},[1411],{"type":424,"value":765},{"type":419,"tag":618,"props":1413,"children":1415},{"class":620,"line":1414},37,[1416],{"type":419,"tag":618,"props":1417,"children":1418},{"style":772},[1419],{"type":424,"value":1420},"// 当 referrence 消失时，popper 应当立即消失，\n",{"type":419,"tag":618,"props":1422,"children":1424},{"class":620,"line":1423},38,[1425],{"type":419,"tag":618,"props":1426,"children":1427},{"style":772},[1428],{"type":424,"value":1429},"// 而不是移动到 （0，0）位置并等待动画结束再消失\n",{"type":419,"tag":618,"props":1431,"children":1433},{"class":620,"line":1432},39,[1434],{"type":419,"tag":618,"props":1435,"children":1436},{"style":772},[1437],{"type":424,"value":1438},"// more on https://popper.js.org/docs/v2/modifiers/hide/\n",{"type":419,"tag":618,"props":1440,"children":1442},{"class":620,"line":1441},40,[1443],{"type":419,"tag":618,"props":1444,"children":1445},{"style":772},[1446],{"type":424,"value":1447},".test-popover[data-popper-reference-hidden='true'] {\n",{"type":419,"tag":618,"props":1449,"children":1451},{"class":620,"line":1450},41,[1452],{"type":419,"tag":618,"props":1453,"children":1454},{"style":772},[1455],{"type":424,"value":1456},"  visibility: hidden;\n",{"type":419,"tag":618,"props":1458,"children":1460},{"class":620,"line":1459},42,[1461],{"type":419,"tag":618,"props":1462,"children":1463},{"style":772},[1464],{"type":424,"value":1465},"  pointer-events: none;\n",{"type":419,"tag":618,"props":1467,"children":1469},{"class":620,"line":1468},43,[1470],{"type":419,"tag":618,"props":1471,"children":1472},{"style":772},[1473],{"type":424,"value":1474},"  opacity: 0;\n",{"type":419,"tag":618,"props":1476,"children":1478},{"class":620,"line":1477},44,[1479],{"type":419,"tag":618,"props":1480,"children":1481},{"style":772},[1482],{"type":424,"value":1483},"}\n",{"type":419,"tag":618,"props":1485,"children":1487},{"class":620,"line":1486},45,[1488,1492,1496],{"type":419,"tag":618,"props":1489,"children":1490},{"style":625},[1491],{"type":424,"value":784},{"type":419,"tag":618,"props":1493,"children":1494},{"style":631},[1495],{"type":424,"value":1385},{"type":419,"tag":618,"props":1497,"children":1498},{"style":625},[1499],{"type":424,"value":765},{"type":419,"tag":420,"props":1501,"children":1502},{},[1503],{"type":424,"value":1504},"这个问题“难”解决。我猜 80% 的 Element Plus 用户都不能在短时间内解决它。不过“难”并不意味着其涉及的技术有多晦涩，而是说有效信息比较分散，需要人工搜寻、甄别并连接有效信息的关键点。许多人可能不具备这种逐步筛选信息的思考方式。又比如在上面这段样式代码中，官网给出的示例是不正确的，需要修改后才能使用。换做新手的我很可能发现给出配置无效后便放弃解决问题了。",{"type":419,"tag":420,"props":1506,"children":1507},{},[1508],{"type":424,"value":1509},"总之，在这个例子里，使用 GPT 成功联通了有效信息，随后手动搜索关键配置，便找到了解决问题的正确方法。我认为只要问题够具体，便很容易通过“tell me more”这种重复提问的方式使 GPT 穷举出相关知识。再配合人工审查，便能得到有用的东西。以下用另一个例子展示简单的知识是可穷举的。",{"type":419,"tag":427,"props":1511,"children":1513},{"id":1512},"如何选取页面上某个具体的-dom-节点",[1514],{"type":424,"value":1515},"如何选取页面上某个具体的 DOM 节点？",{"type":419,"tag":420,"props":1517,"children":1518},{},[1519],{"type":424,"value":1520},"面试时，在正式开始提问前，我希望通过一道简单的题目让面试者放松并进入状态。一开始，我觉得“常见 CSS 垂直居中方法？”、“常见的获取 DOM 节点的方法？”这些记忆性的问题非常合适。",{"type":419,"tag":420,"props":1522,"children":1523},{},[1524],{"type":424,"value":1525},"以“常见的获取 DOM 节点的方法”这个问题举例，我敢说，包括我自己在内，几乎所有前端都没有对这个具体的问题做过总结。因为用不上。真的用不上。在 MVVM 框架大行其道的今天，较少存在需要手动处理 DOM 节点的场景。不过，作为热身题，它合适在简单。任何人都不会因为它阻塞的思路而陷入窘迫的地步。回答得越多，得分越高。",{"type":419,"tag":420,"props":1527,"children":1528},{},[1529],{"type":424,"value":1530},"在用过 GPT 后，我觉得这种问题过于机械化，不能激发思考，是对被试者的侮辱。在上一小节说到，在具体问题上 GPT 能穷举相关知识。放到这个问题，我用普通人的回答和 GPT 的回答做一个对比来进一步证实它在此方面的“异能”。",{"type":419,"tag":420,"props":1532,"children":1533},{},[1534],{"type":424,"value":1535},"普通人的回答可能是：“控制台的 $ 和 $$ 方法、document.querySelector、document.getElementBy 等方法”。接下来，让我们看看 GPT 的表现。",{"type":419,"tag":528,"props":1537,"children":1539},{"id":1538},"第一轮-1",[1540],{"type":424,"value":530},{"type":419,"tag":420,"props":1542,"children":1543},{},[1544],{"type":424,"value":1545},"问：“如何选取页面上某个具体的 DOM 节点？”。",{"type":419,"tag":544,"props":1547,"children":1548},{},[1549,1554],{"type":419,"tag":420,"props":1550,"children":1551},{},[1552],{"type":424,"value":1553},"要选取页面上的某个具体的 DOM 节点，可以使用 JavaScript 中的 DOM API。以下是选取 DOM 节点的几种常见方式：",{"type":419,"tag":478,"props":1555,"children":1556},{},[1557,1562,1567,1572],{"type":419,"tag":482,"props":1558,"children":1559},{},[1560],{"type":424,"value":1561},"getElementById，下略",{"type":419,"tag":482,"props":1563,"children":1564},{},[1565],{"type":424,"value":1566},"getElementsByClassName，下略",{"type":419,"tag":482,"props":1568,"children":1569},{},[1570],{"type":424,"value":1571},"querySelector，下略",{"type":419,"tag":482,"props":1573,"children":1574},{},[1575],{"type":424,"value":1576},"querySelectorAll，下略",{"type":419,"tag":528,"props":1578,"children":1580},{"id":1579},"第二轮-1",[1581],{"type":424,"value":567},{"type":419,"tag":420,"props":1583,"children":1584},{},[1585],{"type":424,"value":1586},"问：“告诉我“如何选取页面上某个具体的 DOM 节点”的更多方法，除了上面提到的 document.getElementXXX、document.querySelectorXXX 相关方法”。",{"type":419,"tag":544,"props":1588,"children":1589},{},[1590,1594],{"type":419,"tag":420,"props":1591,"children":1592},{},[1593],{"type":424,"value":1553},{"type":419,"tag":478,"props":1595,"children":1596},{},[1597,1602,1607],{"type":419,"tag":482,"props":1598,"children":1599},{},[1600],{"type":424,"value":1601},"parentElement 和 children 属性，下略",{"type":419,"tag":482,"props":1603,"children":1604},{},[1605],{"type":424,"value":1606},"document.all，下略",{"type":419,"tag":482,"props":1608,"children":1609},{},[1610],{"type":424,"value":1611},"getElementsByTagName，下略",{"type":419,"tag":528,"props":1613,"children":1615},{"id":1614},"第三轮-1",[1616],{"type":424,"value":585},{"type":419,"tag":420,"props":1618,"children":1619},{},[1620],{"type":424,"value":1621},"问：“告诉我“如何选取页面上某个具体的 DOM 节点”的更多方法，除了上面提到的 document.getElementXXX、document.querySelectorXXX、parent/children、getSelection、document.all 相关方法。”",{"type":419,"tag":544,"props":1623,"children":1624},{},[1625],{"type":419,"tag":478,"props":1626,"children":1627},{},[1628,1633,1638,1643],{"type":419,"tag":482,"props":1629,"children":1630},{},[1631],{"type":424,"value":1632},"nextSibling 和 previousSibling，下略",{"type":419,"tag":482,"props":1634,"children":1635},{},[1636],{"type":424,"value":1637},"firstChild 和 lastChild，下略",{"type":419,"tag":482,"props":1639,"children":1640},{},[1641],{"type":424,"value":1642},"document.evaluate，下略",{"type":419,"tag":482,"props":1644,"children":1645},{},[1646],{"type":424,"value":1647},"event.target，下略",{"type":419,"tag":420,"props":1649,"children":1650},{},[1651],{"type":424,"value":1652},"... 以下重复 N 轮，直到 GPT 开始说胡话。",{"type":419,"tag":420,"props":1654,"children":1655},{},[1656],{"type":424,"value":1657},"那么结果如何呢？",{"type":419,"tag":420,"props":1659,"children":1660},{},[1661],{"type":424,"value":1662},"以我最后的提问作为 GPT 在这轮上下文提及的关键字的参考：“告诉我“如何选取页面上某个具体的 DOM 节点”的更多方法，除了上面提到的 document.getElement*、document.querySelector*、parent/children、getSelection、document.all、nextSibling、firstChild、document.evaluate、event.target、matches、closest、getElementsBy*、activeElement、elementFromPoint、Range、createTreeWalker、all、XPath、MutationObserver、forms、images、links、head、body、defaultView、frames、form.elements、embeds、plugins、getElementsByTagName、getElementById、createDocumentFragment、anchors、styleSheets、scripts、scrollingElement、documentElement 以及多个选择器复用相关方法”。",{"type":419,"tag":420,"props":1664,"children":1665},{},[1666],{"type":424,"value":1667},"把 GPT 提到的关键词做一下分类，大致可以总结出以下“标准答案”：",{"type":419,"tag":1669,"props":1670,"children":1671},"ul",{},[1672,1705,1738,1756],{"type":419,"tag":482,"props":1673,"children":1674},{},[1675,1677],{"type":424,"value":1676},"选择器 API：\n",{"type":419,"tag":1669,"props":1678,"children":1679},{},[1680,1685,1690,1695,1700],{"type":419,"tag":482,"props":1681,"children":1682},{},[1683],{"type":424,"value":1684},"元素选择器：element.getElementBy*",{"type":419,"tag":482,"props":1686,"children":1687},{},[1688],{"type":424,"value":1689},"CSS 选择器：element.querySelector*、element.matches",{"type":419,"tag":482,"props":1691,"children":1692},{},[1693],{"type":424,"value":1694},"XPath 选择器：element.evaluate",{"type":419,"tag":482,"props":1696,"children":1697},{},[1698],{"type":424,"value":1699},"Selection：window.getSelection",{"type":419,"tag":482,"props":1701,"children":1702},{},[1703],{"type":424,"value":1704},"Range：document.createRange",{"type":419,"tag":482,"props":1706,"children":1707},{},[1708,1710],{"type":424,"value":1709},"能获取节点的实例属性：\n",{"type":419,"tag":1669,"props":1711,"children":1712},{},[1713,1718,1723,1728,1733],{"type":419,"tag":482,"props":1714,"children":1715},{},[1716],{"type":424,"value":1717},"document.x：document.all、document.images、document.styleSheets、...",{"type":419,"tag":482,"props":1719,"children":1720},{},[1721],{"type":424,"value":1722},"node.x：element.firstChild、element.parentNode、...",{"type":419,"tag":482,"props":1724,"children":1725},{},[1726],{"type":424,"value":1727},"element.x：element.children、...",{"type":419,"tag":482,"props":1729,"children":1730},{},[1731],{"type":424,"value":1732},"event.x：event.target、event.from、...",{"type":419,"tag":482,"props":1734,"children":1735},{},[1736],{"type":424,"value":1737},"mutaionRecord.x：mutaionRecord.nextSibling、...",{"type":419,"tag":482,"props":1739,"children":1740},{},[1741,1743],{"type":424,"value":1742},"能返回节点的实例方法：\n",{"type":419,"tag":1669,"props":1744,"children":1745},{},[1746,1751],{"type":419,"tag":482,"props":1747,"children":1748},{},[1749],{"type":424,"value":1750},"node api：element.getRootNode()、...",{"type":419,"tag":482,"props":1752,"children":1753},{},[1754],{"type":424,"value":1755},"treeWalker api：treeWalker.filter()、...",{"type":419,"tag":482,"props":1757,"children":1758},{},[1759,1761],{"type":424,"value":1760},"配合回调函数使用的方法：\n",{"type":419,"tag":1669,"props":1762,"children":1763},{},[1764,1769],{"type":419,"tag":482,"props":1765,"children":1766},{},[1767],{"type":424,"value":1768},"MutationObserver：mutationObserver.observe",{"type":419,"tag":482,"props":1770,"children":1771},{},[1772],{"type":424,"value":1773},"TreeWalker：createTreeWalker、",{"type":419,"tag":420,"props":1775,"children":1776},{},[1777],{"type":424,"value":1778},"这应该也只是现实的冰山一角。翻阅 MDN 文档能从 Permissions、ShadowRoot、SVG 相关关键字找到更多；另一方面，除了直接使用 DOM API 外，使用控制台，甚至使用框架比如 jQuery、Sizzle、Vue、React 都可以解决问题。他们提供了获取 DOM 节点的 API。",{"type":419,"tag":420,"props":1780,"children":1781},{},[1782],{"type":424,"value":1783},"总的来说，无论从更广泛还是更垂直的角度翻阅资料，都能找到更多相关知识。这个 GPT 问答的例子再次证明了简单的知识能被穷举，而这个工具真的可以帮助前端学习者从繁杂琐碎的知识点中解放，保留精力去做那些对他们而言更有意义的事情。",{"type":419,"tag":427,"props":1785,"children":1787},{"id":1786},"结论",[1788],{"type":424,"value":1786},{"type":419,"tag":420,"props":1790,"children":1791},{},[1792],{"type":424,"value":1793},"我得出的结论正如标题：在具体的问题上，简单的知识能被穷举，GPT 可以作为一个合格的互联网消息过滤器。正确的使用方法是在简单的问题上用 GPT 穷举关键字，并通过文档进一步学习；其次，同许多人提过的，复杂问题需要先拆解成适合的尺寸，再进一步用 GPT 处理。",{"type":419,"tag":420,"props":1795,"children":1796},{},[1797,1799,1812],{"type":424,"value":1798},"如果说得出了结论就应该有所行动的话，那就是我觉得“如何获取 DOM 节点”这种问题过于机械化，不能激发思考，是对被试者的侮辱，所以最终，我把面试题换成另一些有名的热身题，比如：“如何统计某个页面使用到的 HTML 标签的种类 ",{"type":419,"tag":1800,"props":1801,"children":1802},"sup",{},[1803],{"type":419,"tag":493,"props":1804,"children":1809},{"href":1805,"ariaDescribedBy":1806,"dataFootnoteRef":413,"id":1808},"#user-content-fn-question-1",[1807],"footnote-label","user-content-fnref-question-1",[1810],{"type":424,"value":1811},"1",{"type":424,"value":1813},"”。同样简单，但更有趣。",{"type":419,"tag":1815,"props":1816,"children":1819},"section",{"className":1817,"dataFootnotes":413},[1818],"footnotes",[1820,1828],{"type":419,"tag":1821,"props":1822,"children":1825},"h2",{"className":1823,"id":1807},[1824],"sr-only",[1826],{"type":424,"value":1827},"Footnotes",{"type":419,"tag":478,"props":1829,"children":1830},{},[1831],{"type":419,"tag":482,"props":1832,"children":1834},{"id":1833},"user-content-fn-question-1",[1835,1837,1845,1847],{"type":424,"value":1836},"源自贺老的 ",{"type":419,"tag":493,"props":1838,"children":1842},{"href":1839,"rel":1840},"https://www.zhihu.com/lives/778991567569440768",[1841],"nofollow",[1843],{"type":424,"value":1844},"知乎 Live",{"type":424,"value":1846}," 。 ",{"type":419,"tag":493,"props":1848,"children":1853},{"href":1849,"ariaLabel":1850,"className":1851,"dataFootnoteBackref":413},"#user-content-fnref-question-1","Back to reference 1",[1852],"data-footnote-backref",[1854],{"type":424,"value":1855},"↩",{"type":419,"tag":1385,"props":1857,"children":1858},{},[1859],{"type":424,"value":1860},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":413,"searchDepth":768,"depth":768,"links":1862},[1863,1864,1865,1866,1867],{"id":429,"depth":778,"text":429},{"id":449,"depth":778,"text":452},{"id":1512,"depth":778,"text":1515},{"id":1786,"depth":778,"text":1786},{"id":1807,"depth":768,"text":1827},"markdown","content:2.articles:1102.use-gpt-learn-complex-frontend.md","content","2.articles/1102.use-gpt-learn-complex-frontend.md","2.articles/1102.use-gpt-learn-complex-frontend","md",[1875,1877],{"_path":46,"title":45,"description":1876},"我的项目使用 micro-app 框架作为微前端框架。使用 micro-app 时，由于开启了样式隔离功能，子应用加载的 CSS 会被解析器解析，在选择器前增加一个子应用属性选择器前缀。我碰到的问题是，如果 CSS 源码中带嵌套语法那么解析就会失败。今天借这个问题给大家简单介绍一下 CSS Parser 的基本流程。",{"_path":52,"title":51,"description":1878},"如何自定义 antd-table、vxe-table 等复杂组件的滚动条？",1732808103708]