[{"data":1,"prerenderedAt":1942},["ShallowReactive",2],{"navigation":3,"/articles/use-gpt-learn-complex-frontend":389,"/articles/use-gpt-learn-complex-frontend-surround":1937},[4,32,83,99,126,132,138,372,378,384],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":42,"_path":43},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":45,"_path":46},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":48,"_path":49},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":51,"_path":52},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":54,"_path":55},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":57,"_path":58},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":60,"_path":61},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":63,"_path":64},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":66,"_path":67},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":69,"_path":70},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":72,"_path":73},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":75,"_path":76},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":78,"_path":79},"🚝 四十二篇系列","/articles/fourty-two",{"title":81,"_path":82},"📝 技术博客归档","/articles/fold",{"title":84,"_path":85,"children":86},"造物 / Make","/tools",[87,90,93,96],{"title":88,"_path":89},"🌐 AnySort","/tools/anysort",{"title":91,"_path":92},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":94,"_path":95},"👓 Crapto","/tools/crypto-inline",{"title":97,"_path":98},"🖨️ any-to-base64","/tools/any-to-base64",{"title":100,"_path":101,"children":102},"吉他剧场 / Music","/music",[103,105,108,111,114,117,120,123],{"title":104,"_path":101},"🎸 FingerStyle！",{"title":106,"_path":107},"🌬️ 等待的风","/music/wind",{"title":109,"_path":110},"💕 约定的海洋","/music/ocean",{"title":112,"_path":113},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":115,"_path":116},"🌏 残酷天使的行动纲领","/music/eva",{"title":118,"_path":119},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":121,"_path":122},"🍷 Wu Wei","/music/wu-wei",{"title":124,"_path":125},"🌅 无题","/music/untitled",{"title":127,"_path":128,"children":129},"画点什么 / Paint","/paint",[130],{"title":131,"_path":128},"🚧 正在施工",{"title":133,"_path":134,"children":135},"知识地图 / Maps","/maps",[136],{"title":137,"_path":134},"🏁 知识地图",{"title":139,"_path":140,"children":141},"零散的笔记 / Gists","/gists",[142,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369],{"title":143,"_path":140},"🧊 Gists",{"title":145,"_path":146},"网站的可访问性","/gists/accessibility",{"title":148,"_path":149},"Bit","/gists/bit",{"title":151,"_path":152},"图片模糊","/gists/blur",{"title":154,"_path":155},"渲染相关笔记","/gists/c4d",{"title":157,"_path":158},"CDN 问题记录","/gists/cdn",{"title":160,"_path":161},"消毒剂","/gists/cleaner",{"title":163,"_path":164},"Windows Command","/gists/cmd",{"title":166,"_path":167},"Command","/gists/command",{"title":169,"_path":170},"复杂科学","/gists/complexity-science",{"title":172,"_path":173},"宇宙","/gists/cosmos",{"title":175,"_path":176},"C++","/gists/cpp",{"title":178,"_path":179},"Data Structure","/gists/data-structure",{"title":181,"_path":182},"DEPRESSION","/gists/depression",{"title":184,"_path":185},"设计模式","/gists/design-patterns",{"title":187,"_path":188},"Developer Experience","/gists/developer-experience",{"title":190,"_path":191},"Device Metrics","/gists/device-metrix",{"title":193,"_path":194},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":196,"_path":197},"正则表达式","/gists/eegex",{"title":199,"_path":200},"Emoji","/gists/emoji",{"title":202,"_path":203},"工程","/gists/engineering",{"title":205,"_path":206},"熵","/gists/entropy",{"title":208,"_path":209},"Environment","/gists/environment",{"title":211,"_path":212},"Erlang","/gists/erlang",{"title":214,"_path":215},"逃离塔克夫","/gists/escape-from-tarkov",{"title":217,"_path":218},"ESNext (ES6-ES11)","/gists/esnext",{"title":220,"_path":221},"Eval！","/gists/eval",{"title":223,"_path":224},"Flutter","/gists/flutter",{"title":226,"_path":227},"字体","/gists/font",{"title":229,"_path":230},"JS 函数式编程","/gists/functional",{"title":232,"_path":233},"Google C++ Standard","/gists/google-cpp-standard",{"title":235,"_path":236},"双向链接完全体","/gists/graph",{"title":238,"_path":239},"Hardwares","/gists/hardwares",{"title":241,"_path":242},"哈希冲突","/gists/hash-collision",{"title":244,"_path":245},"信息设计","/gists/information-design",{"title":247,"_path":248},"InstantPage","/gists/instant.page",{"title":250,"_path":251},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":253,"_path":254},"KVStore","/gists/key-value-db",{"title":256,"_path":257},"Kubernetes","/gists/kubernetes",{"title":259,"_path":260},"Makefile","/gists/makefile",{"title":262,"_path":263},"Markdown Inline Style","/gists/markdown-nice",{"title":265,"_path":266},"小程序","/gists/miniapp",{"title":268,"_path":269},"减小页面快照体积","/gists/minify-html",{"title":271,"_path":272},"mklink","/gists/mklink",{"title":274,"_path":275},"Mock","/gists/mock",{"title":277,"_path":278},"多端应用","/gists/multy-end-app",{"title":280,"_path":281},"神经科学","/gists/neuroscience",{"title":283,"_path":284},"OO","/gists/oo",{"title":286,"_path":287},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":289,"_path":290},"人物","/gists/person",{"title":292,"_path":293},"PInvoke","/gists/pinvoke",{"title":295,"_path":296},"像素","/gists/pixel",{"title":298,"_path":299},"PowerShell","/gists/powershell",{"title":301,"_path":302},"量子","/gists/quantum",{"title":304,"_path":305},"保持好奇心","/gists/questions",{"title":307,"_path":308},"React Native","/gists/react-native",{"title":310,"_path":311},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":313,"_path":314},"SEO","/gists/seo",{"title":316,"_path":317},"Shader","/gists/shader",{"title":319,"_path":320},"Shape Up","/gists/shape-up",{"title":322,"_path":323},"睡觉","/gists/sleep",{"title":325,"_path":326},"States","/gists/states",{"title":328,"_path":329},"Storage","/gists/storage",{"title":331,"_path":332},"音视频流处理","/gists/stream-cli",{"title":334,"_path":335},"Symbol","/gists/symbol",{"title":337,"_path":338},"系统论","/gists/systems-theory",{"title":340,"_path":341},"Taro","/gists/taro",{"title":343,"_path":344},"任务切片","/gists/task-slice",{"title":346,"_path":347},"技术偏好","/gists/tech-dudge",{"title":349,"_path":350},"Untitled","/gists/untitled",{"title":352,"_path":353},"可变字体","/gists/variable-font",{"title":355,"_path":356},"视觉错觉","/gists/visual-illusion",{"title":358,"_path":359},"SS(SSR)","/gists/vpn",{"title":361,"_path":362},"VS Code 插件开发","/gists/vscode-plugin",{"title":364,"_path":365},"Web Components","/gists/web-components",{"title":367,"_path":368},"Windows","/gists/windows",{"title":370,"_path":371},"查缺补漏","/gists/wrong",{"title":373,"_path":374,"children":375},"代码笔记 / Gists","/source-code",[376],{"title":377,"_path":374},"🚄 代码笔记",{"title":379,"_path":380,"children":381},"我 / Abount","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"title":385,"_path":386,"children":387},"todo","/todo",[388],{"title":385,"_path":386},{"_path":49,"_dir":390,"_draft":391,"_partial":391,"_locale":392,"title":48,"description":393,"body":394,"_type":1932,"_id":1933,"_source":1934,"_file":1935,"_extension":1936},"articles",false,"","在两个纯知识面的问题上，受到了 GPT 的碾压",{"type":395,"children":396,"toc":1925},"root",[397,405,411,416,421,426,432,437,446,451,456,501,506,512,517,522,544,549,554,562,567,572,580,585,772,777,1564,1569,1574,1580,1585,1590,1595,1600,1605,1610,1641,1646,1651,1676,1681,1686,1712,1717,1722,1727,1732,1838,1843,1848,1853,1858,1878,1920],{"type":398,"tag":399,"props":400,"children":401},"element","p",{},[402],{"type":403,"value":404},"text","如何使用 GPT 辅助前端学习？我认为最重要的两步是，首先使用 GPT 咨询普遍性的、具体的问题获得关键字，然后翻阅相关文档进行具体地学习。因为在文中纯知识面的问题上，我感觉受到了 GPT 的碾压。",{"type":398,"tag":406,"props":407,"children":409},"h3",{"id":408},"应当咨询普遍性及具体的问题",[410],{"type":403,"value":408},{"type":398,"tag":399,"props":412,"children":413},{},[414],{"type":403,"value":415},"前端学习很难。首先是面对排山倒海的文字资料，如果没有掌握合适的方法，比如保持阅读文档和更新日志的习惯，很难在知识面上跟上具体框架的发展。另一方面，在细微的问题上有无数种解决方法（比如渐变边框的一百种画法），很少有方便学习的高质量的图书或稳定的聚合推荐。我觉得前端的难，以繁杂、琐碎的知识点带来的记忆难度为首，尤其当开发者入门后想建立起知识广度的积累时。",{"type":398,"tag":399,"props":417,"children":418},{},[419],{"type":403,"value":420},"ChatGPT 是一个好工具，很适合用作前端学习。但在工作中，我常看到同事错误的使用它。在一次帮忙排查 WebStorm 中 ESLint 插件失效时，同事反复将控制台报错信息粘贴进 GPT 中，期望获得有用的提示。但这次的报错并不是常见问题，所以直到最后，GPT 没有切中地给出解决问题的方法。它回复了万金油答案，就像是“问：升级 xxx 能带来什么？答：提高兼容性和性能”那样。",{"type":398,"tag":399,"props":422,"children":423},{},[424],{"type":403,"value":425},"我并不是说要通过系统地学习提示工程来引导 GPT 输出我们需要的回答，而是 GPT 工具本身在某些场景并不适合。目前许多 GPT 工具没有提供互联网连接，且知识库截至 2021 年。撇开提示技巧，我觉得应该在常见且具体的问题上咨询 GPT 的建议，最重要的两步是，首先使用 GPT 咨询普遍性的、具体的问题获得关键字，然后翻阅相关文档进行具体地学习。因为在以下两个问题，我感觉自己在纯知识面上受到了 GPT 的碾压。",{"type":398,"tag":406,"props":427,"children":429},{"id":428},"如何防止-element-plus-组件中的-popper-溢出容器",[430],{"type":403,"value":431},"如何防止 Element Plus 组件中的 Popper 溢出容器？",{"type":398,"tag":399,"props":433,"children":434},{},[435],{"type":403,"value":436},"第一个例子是关于防止 Popper 溢出容器的设置。",{"type":398,"tag":399,"props":438,"children":439},{},[440],{"type":398,"tag":441,"props":442,"children":445},"img",{"alt":443,"src":444},"el-tooltip example","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20230702125800.png",[],{"type":398,"tag":399,"props":447,"children":448},{},[449],{"type":403,"value":450},"B 端产品常将复杂性隐藏在 Dialog 或 Popup 中。我们公司的组件库基于 Element Plus，所以经常需要对弹窗的内容进行定制。这里有一个问题，Popper 的位置不好控制。当交互场景变得更复杂，比如当滚动弹窗内容要求 popper 不溢出弹窗容器时，你会发现问题开始变得难以解决。其一因为 Element Plus 的文档没有关于如何控制 popper 位置作更多说明，如果在 Element Plus 的文档中搜索“位置”，你只能找到 Popper 的 placement 和 offset 两种属性，而且都不是我们想要的答案；其二更重要，就算你在互联网搜索相关关键字，也很难从中汲取有效信息。你可以尝试搜索“element-plus+popper（或相关组件）+溢出弹窗 -'element-ui'”之类的关键词验证我的说法，这个问题过于垂直，所以网上没有具体的解决方法，或能搜出来的是关于 element-ui 的过时的资料。",{"type":398,"tag":399,"props":452,"children":453},{},[454],{"type":403,"value":455},"答案隐藏在 popper.js 的文档中，所以解决这个问题可能有以下几条通路：",{"type":398,"tag":457,"props":458,"children":459},"ol",{},[460,466,488],{"type":398,"tag":461,"props":462,"children":463},"li",{},[464],{"type":403,"value":465},"在 element-plus tooltip（或相关组件）文档漫游，通过不起眼的 popper.js 文档链接进入并搜寻，有概率能找到解决相关问题的 API",{"type":398,"tag":461,"props":467,"children":468},{},[469,471,478,480,486],{"type":403,"value":470},"在搜索引擎找到了其它用户在解决 ",{"type":398,"tag":472,"props":473,"children":475},"a",{"href":474},"mailto:element-ui+popper@1.x",[476],{"type":403,"value":477},"element-ui+popper@1.x",{"type":403,"value":479}," 位置控制方面的经验，于是自发搜索 ",{"type":398,"tag":472,"props":481,"children":483},{"href":482},"mailto:popper.js@2.x",[484],{"type":403,"value":485},"popper.js@2.x",{"type":403,"value":487}," 文档，并在文档中找到关键 API。",{"type":398,"tag":461,"props":489,"children":490},{},[491,493,499],{"type":403,"value":492},"在 github element-plus issues 中搜索 “popper+dialog”，能找到其它开发提供的提示，直接将你引向 ",{"type":398,"tag":472,"props":494,"children":496},{"href":495},"mailto:poppper.js@2.x",[497],{"type":403,"value":498},"poppper.js@2.x",{"type":403,"value":500}," 中解决相关问题的关键 API。",{"type":398,"tag":399,"props":502,"children":503},{},[504],{"type":403,"value":505},"只能说 HTML 不够 Hyper，所以搜索引擎在这种没有直接资料的场景中无能为力。不过，好消息是因为问题非常具体，所以 GPT 对这种问题通常答得很好，下面来看看 GPT 的回答：",{"type":398,"tag":507,"props":508,"children":510},"h4",{"id":509},"第一轮",[511],{"type":403,"value":509},{"type":398,"tag":399,"props":513,"children":514},{},[515],{"type":403,"value":516},"问：“你作为一个专业的前端工程师，请告诉我解决以下问题的思路：我在 el-dialog 中某个按钮上使用了 el-tooltip 组件，应当如何设置 el-tooltip 使其不超出 el-dialog 容器。”。",{"type":398,"tag":399,"props":518,"children":519},{},[520],{"type":403,"value":521},"GPT 答（下文的引用部分都作为 GPT 的回答）：",{"type":398,"tag":523,"props":524,"children":525},"blockquote",{},[526,531],{"type":398,"tag":399,"props":527,"children":528},{},[529],{"type":403,"value":530},"好的，以下是一个解决这个问题的思路：",{"type":398,"tag":457,"props":532,"children":533},{},[534,539],{"type":398,"tag":461,"props":535,"children":536},{},[537],{"type":403,"value":538},"使用插槽自定义内容，......",{"type":398,"tag":461,"props":540,"children":541},{},[542],{"type":403,"value":543},"使用 CSS 类名控制样式，......",{"type":398,"tag":507,"props":545,"children":547},{"id":546},"第二轮",[548],{"type":403,"value":546},{"type":398,"tag":399,"props":550,"children":551},{},[552],{"type":403,"value":553},"在第一轮得到了普通的回答，继续追问：“有没有其他方法用来控制 el-tooltip 不超出容器？”。",{"type":398,"tag":523,"props":555,"children":556},{},[557],{"type":398,"tag":399,"props":558,"children":559},{},[560],{"type":403,"value":561},"除了前面提到的两种方法外，还有一种方法可以用来控制 el-tooltip 不超出容器，那就是使用 CSS 中的 overflow: hidden 属性来控制容器的溢出，......",{"type":398,"tag":507,"props":563,"children":565},{"id":564},"第三轮",[566],{"type":403,"value":564},{"type":398,"tag":399,"props":568,"children":569},{},[570],{"type":403,"value":571},"在第二轮得到了超常但不好用的回答，重复提问：“有没有其他方法用来控制 el-tooltip 不超出容器？”。",{"type":398,"tag":523,"props":573,"children":574},{},[575],{"type":398,"tag":399,"props":576,"children":577},{},[578],{"type":403,"value":579},"除了前面提到的一种方法外，还有一种方法可以用来控制 el-tooltip 不超出容器，那就是使用 Popper.js 提供的 preventOverflow 选项来限制 el-tooltip 的位置，......",{"type":398,"tag":399,"props":581,"children":582},{},[583],{"type":403,"value":584},"经过三轮交流，GPT 给出了可参考的问题代码。通过搜索“popper-options”+“preventOverflow”关键词，能确定，这的确是能解决问题的关键 API。",{"type":398,"tag":586,"props":587,"children":591},"pre",{"className":588,"code":589,"language":590,"meta":392,"style":392},"language-vue shiki shiki-themes material-theme-lighter github-light github-dark monokai","\u003Cel-tooltip content=\"这是 el-tooltip 的内容\" placement=\"bottom\" :popper-options=\"{ preventOverflow: { boundariesElement: 'viewport' } }\">\n  \u003Cel-button>Hover Me\u003C/el-button>\n\u003C/el-tooltip>\n","vue",[592],{"type":398,"tag":593,"props":594,"children":595},"code",{"__ignoreMap":392},[596,745,755],{"type":398,"tag":597,"props":598,"children":601},"span",{"class":599,"line":600},"line",1,[602,608,614,620,625,631,637,641,646,650,654,659,663,668,673,677,682,687,693,698,703,708,712,717,722,727,732,736,740],{"type":398,"tag":597,"props":603,"children":605},{"style":604},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[606],{"type":403,"value":607},"\u003C",{"type":398,"tag":597,"props":609,"children":611},{"style":610},"--shiki-light:#E53935;--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672",[612],{"type":403,"value":613},"el-tooltip",{"type":398,"tag":597,"props":615,"children":617},{"style":616},"--shiki-light:#9C3EDA;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[618],{"type":403,"value":619}," content",{"type":398,"tag":597,"props":621,"children":622},{"style":604},[623],{"type":403,"value":624},"=",{"type":398,"tag":597,"props":626,"children":628},{"style":627},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[629],{"type":403,"value":630},"\"",{"type":398,"tag":597,"props":632,"children":634},{"style":633},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[635],{"type":403,"value":636},"这是 el-tooltip 的内容",{"type":398,"tag":597,"props":638,"children":639},{"style":627},[640],{"type":403,"value":630},{"type":398,"tag":597,"props":642,"children":643},{"style":616},[644],{"type":403,"value":645}," placement",{"type":398,"tag":597,"props":647,"children":648},{"style":604},[649],{"type":403,"value":624},{"type":398,"tag":597,"props":651,"children":652},{"style":627},[653],{"type":403,"value":630},{"type":398,"tag":597,"props":655,"children":656},{"style":633},[657],{"type":403,"value":658},"bottom",{"type":398,"tag":597,"props":660,"children":661},{"style":627},[662],{"type":403,"value":630},{"type":398,"tag":597,"props":664,"children":665},{"style":604},[666],{"type":403,"value":667}," :",{"type":398,"tag":597,"props":669,"children":670},{"style":616},[671],{"type":403,"value":672},"popper-options",{"type":398,"tag":597,"props":674,"children":675},{"style":604},[676],{"type":403,"value":624},{"type":398,"tag":597,"props":678,"children":680},{"style":679},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#F8F8F2",[681],{"type":403,"value":630},{"type":398,"tag":597,"props":683,"children":684},{"style":604},[685],{"type":403,"value":686},"{",{"type":398,"tag":597,"props":688,"children":690},{"style":689},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[691],{"type":403,"value":692}," preventOverflow",{"type":398,"tag":597,"props":694,"children":695},{"style":604},[696],{"type":403,"value":697},":",{"type":398,"tag":597,"props":699,"children":700},{"style":604},[701],{"type":403,"value":702}," {",{"type":398,"tag":597,"props":704,"children":705},{"style":689},[706],{"type":403,"value":707}," boundariesElement",{"type":398,"tag":597,"props":709,"children":710},{"style":604},[711],{"type":403,"value":697},{"type":398,"tag":597,"props":713,"children":714},{"style":627},[715],{"type":403,"value":716}," '",{"type":398,"tag":597,"props":718,"children":719},{"style":633},[720],{"type":403,"value":721},"viewport",{"type":398,"tag":597,"props":723,"children":724},{"style":627},[725],{"type":403,"value":726},"'",{"type":398,"tag":597,"props":728,"children":729},{"style":604},[730],{"type":403,"value":731}," }",{"type":398,"tag":597,"props":733,"children":734},{"style":604},[735],{"type":403,"value":731},{"type":398,"tag":597,"props":737,"children":738},{"style":679},[739],{"type":403,"value":630},{"type":398,"tag":597,"props":741,"children":742},{"style":604},[743],{"type":403,"value":744},">\n",{"type":398,"tag":597,"props":746,"children":748},{"class":599,"line":747},2,[749],{"type":398,"tag":597,"props":750,"children":752},{"style":751},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[753],{"type":403,"value":754},"  \u003Cel-button>Hover Me\u003C/el-button>\n",{"type":398,"tag":597,"props":756,"children":758},{"class":599,"line":757},3,[759,764,768],{"type":398,"tag":597,"props":760,"children":761},{"style":604},[762],{"type":403,"value":763},"\u003C/",{"type":398,"tag":597,"props":765,"children":766},{"style":610},[767],{"type":403,"value":613},{"type":398,"tag":597,"props":769,"children":770},{"style":604},[771],{"type":403,"value":744},{"type":398,"tag":399,"props":773,"children":774},{},[775],{"type":403,"value":776},"现实的问题对于 GPT 而言过于复杂，所以将其拆解为更小的更具体的问题是一个有效的提问手段。经过查阅文档进一步完善解决方法，总结出的“标准答案”如下：",{"type":398,"tag":586,"props":778,"children":780},{"className":588,"code":779,"language":590,"meta":392,"style":392},"\u003Ctemplate>\n  \u003Cel-tooltip\n    v-if=\"continaerElement\"\n    popper-class=\"test-popover\"\n    :popper-options=\"{\n      modifiers: [\n        // 通过 preventOverflow 插件防止 popper 超出某个容器\n        {\n          name: 'preventOverflow',\n          options: {\n            // 容器元素\n            boundary: continaerElement,\n            // popper 应当据容器的边距\n            padding: 12,\n            // 优先以“上下”方向计算 popper 和容器是否溢出，还是“左右”方向，\n            // 配置 altAxis 并配合 flip 插件，才能使“上下左右”四个方向都不发生溢出\n            altAxis: true,\n          },\n        },\n        {\n          name: 'flip',\n          options: {\n            // 容器元素\n            boundary: continaerElement,\n            // 当容器与 popper 发生碰撞时，使 popper 不会覆盖触发 popper 显示的 refference，\n            // 而是回退到其它方向显示\n            // more on https://popper.js.org/docs/v2/modifiers/flip/\n            fallbackPlacements: ['top', 'bottom', 'right', 'left'],\n          },\n        },\n      ],\n    }\"\n  />\n\u003C/template>\n\n\u003Cstyle lang=\"scss\">\n// 当 referrence 消失时，popper 应当立即消失，\n// 而不是移动到 （0，0）位置并等待动画结束再消失\n// more on https://popper.js.org/docs/v2/modifiers/hide/\n.test-popover[data-popper-reference-hidden='true'] {\n  visibility: hidden;\n  pointer-events: none;\n  opacity: 0;\n}\n\u003C/style>\n\n",[781],{"type":398,"tag":593,"props":782,"children":783},{"__ignoreMap":392},[784,800,813,840,866,892,906,916,925,957,971,980,1001,1010,1033,1042,1051,1074,1083,1092,1100,1129,1141,1149,1169,1178,1187,1196,1279,1287,1295,1304,1317,1326,1342,1352,1391,1400,1409,1418,1470,1495,1517,1539,1548],{"type":398,"tag":597,"props":785,"children":786},{"class":599,"line":600},[787,791,796],{"type":398,"tag":597,"props":788,"children":789},{"style":604},[790],{"type":403,"value":607},{"type":398,"tag":597,"props":792,"children":793},{"style":610},[794],{"type":403,"value":795},"template",{"type":398,"tag":597,"props":797,"children":798},{"style":604},[799],{"type":403,"value":744},{"type":398,"tag":597,"props":801,"children":802},{"class":599,"line":747},[803,808],{"type":398,"tag":597,"props":804,"children":805},{"style":604},[806],{"type":403,"value":807},"  \u003C",{"type":398,"tag":597,"props":809,"children":810},{"style":610},[811],{"type":403,"value":812},"el-tooltip\n",{"type":398,"tag":597,"props":814,"children":815},{"class":599,"line":757},[816,822,826,830,835],{"type":398,"tag":597,"props":817,"children":819},{"style":818},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[820],{"type":403,"value":821},"    v-if",{"type":398,"tag":597,"props":823,"children":824},{"style":604},[825],{"type":403,"value":624},{"type":398,"tag":597,"props":827,"children":828},{"style":679},[829],{"type":403,"value":630},{"type":398,"tag":597,"props":831,"children":832},{"style":751},[833],{"type":403,"value":834},"continaerElement",{"type":398,"tag":597,"props":836,"children":837},{"style":679},[838],{"type":403,"value":839},"\"\n",{"type":398,"tag":597,"props":841,"children":843},{"class":599,"line":842},4,[844,849,853,857,862],{"type":398,"tag":597,"props":845,"children":846},{"style":616},[847],{"type":403,"value":848},"    popper-class",{"type":398,"tag":597,"props":850,"children":851},{"style":604},[852],{"type":403,"value":624},{"type":398,"tag":597,"props":854,"children":855},{"style":627},[856],{"type":403,"value":630},{"type":398,"tag":597,"props":858,"children":859},{"style":633},[860],{"type":403,"value":861},"test-popover",{"type":398,"tag":597,"props":863,"children":864},{"style":627},[865],{"type":403,"value":839},{"type":398,"tag":597,"props":867,"children":869},{"class":599,"line":868},5,[870,875,879,883,887],{"type":398,"tag":597,"props":871,"children":872},{"style":604},[873],{"type":403,"value":874},"    :",{"type":398,"tag":597,"props":876,"children":877},{"style":616},[878],{"type":403,"value":672},{"type":398,"tag":597,"props":880,"children":881},{"style":604},[882],{"type":403,"value":624},{"type":398,"tag":597,"props":884,"children":885},{"style":679},[886],{"type":403,"value":630},{"type":398,"tag":597,"props":888,"children":889},{"style":604},[890],{"type":403,"value":891},"{\n",{"type":398,"tag":597,"props":893,"children":895},{"class":599,"line":894},6,[896,901],{"type":398,"tag":597,"props":897,"children":898},{"style":689},[899],{"type":403,"value":900},"      modifiers",{"type":398,"tag":597,"props":902,"children":903},{"style":604},[904],{"type":403,"value":905},": [\n",{"type":398,"tag":597,"props":907,"children":909},{"class":599,"line":908},7,[910],{"type":398,"tag":597,"props":911,"children":913},{"style":912},"--shiki-light:#90A4AE;--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[914],{"type":403,"value":915},"        // 通过 preventOverflow 插件防止 popper 超出某个容器\n",{"type":398,"tag":597,"props":917,"children":919},{"class":599,"line":918},8,[920],{"type":398,"tag":597,"props":921,"children":922},{"style":604},[923],{"type":403,"value":924},"        {\n",{"type":398,"tag":597,"props":926,"children":928},{"class":599,"line":927},9,[929,934,939,943,948,952],{"type":398,"tag":597,"props":930,"children":931},{"style":689},[932],{"type":403,"value":933},"          name",{"type":398,"tag":597,"props":935,"children":936},{"style":604},[937],{"type":403,"value":938},": ",{"type":398,"tag":597,"props":940,"children":941},{"style":627},[942],{"type":403,"value":726},{"type":398,"tag":597,"props":944,"children":945},{"style":633},[946],{"type":403,"value":947},"preventOverflow",{"type":398,"tag":597,"props":949,"children":950},{"style":627},[951],{"type":403,"value":726},{"type":398,"tag":597,"props":953,"children":954},{"style":604},[955],{"type":403,"value":956},",\n",{"type":398,"tag":597,"props":958,"children":960},{"class":599,"line":959},10,[961,966],{"type":398,"tag":597,"props":962,"children":963},{"style":689},[964],{"type":403,"value":965},"          options",{"type":398,"tag":597,"props":967,"children":968},{"style":604},[969],{"type":403,"value":970},": {\n",{"type":398,"tag":597,"props":972,"children":974},{"class":599,"line":973},11,[975],{"type":398,"tag":597,"props":976,"children":977},{"style":912},[978],{"type":403,"value":979},"            // 容器元素\n",{"type":398,"tag":597,"props":981,"children":983},{"class":599,"line":982},12,[984,989,993,997],{"type":398,"tag":597,"props":985,"children":986},{"style":689},[987],{"type":403,"value":988},"            boundary",{"type":398,"tag":597,"props":990,"children":991},{"style":604},[992],{"type":403,"value":938},{"type":398,"tag":597,"props":994,"children":995},{"style":751},[996],{"type":403,"value":834},{"type":398,"tag":597,"props":998,"children":999},{"style":604},[1000],{"type":403,"value":956},{"type":398,"tag":597,"props":1002,"children":1004},{"class":599,"line":1003},13,[1005],{"type":398,"tag":597,"props":1006,"children":1007},{"style":912},[1008],{"type":403,"value":1009},"            // popper 应当据容器的边距\n",{"type":398,"tag":597,"props":1011,"children":1013},{"class":599,"line":1012},14,[1014,1019,1023,1029],{"type":398,"tag":597,"props":1015,"children":1016},{"style":689},[1017],{"type":403,"value":1018},"            padding",{"type":398,"tag":597,"props":1020,"children":1021},{"style":604},[1022],{"type":403,"value":938},{"type":398,"tag":597,"props":1024,"children":1026},{"style":1025},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1027],{"type":403,"value":1028},"12",{"type":398,"tag":597,"props":1030,"children":1031},{"style":604},[1032],{"type":403,"value":956},{"type":398,"tag":597,"props":1034,"children":1036},{"class":599,"line":1035},15,[1037],{"type":398,"tag":597,"props":1038,"children":1039},{"style":912},[1040],{"type":403,"value":1041},"            // 优先以“上下”方向计算 popper 和容器是否溢出，还是“左右”方向，\n",{"type":398,"tag":597,"props":1043,"children":1045},{"class":599,"line":1044},16,[1046],{"type":398,"tag":597,"props":1047,"children":1048},{"style":912},[1049],{"type":403,"value":1050},"            // 配置 altAxis 并配合 flip 插件，才能使“上下左右”四个方向都不发生溢出\n",{"type":398,"tag":597,"props":1052,"children":1054},{"class":599,"line":1053},17,[1055,1060,1064,1070],{"type":398,"tag":597,"props":1056,"children":1057},{"style":689},[1058],{"type":403,"value":1059},"            altAxis",{"type":398,"tag":597,"props":1061,"children":1062},{"style":604},[1063],{"type":403,"value":938},{"type":398,"tag":597,"props":1065,"children":1067},{"style":1066},"--shiki-light:#FF5370;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1068],{"type":403,"value":1069},"true",{"type":398,"tag":597,"props":1071,"children":1072},{"style":604},[1073],{"type":403,"value":956},{"type":398,"tag":597,"props":1075,"children":1077},{"class":599,"line":1076},18,[1078],{"type":398,"tag":597,"props":1079,"children":1080},{"style":604},[1081],{"type":403,"value":1082},"          },\n",{"type":398,"tag":597,"props":1084,"children":1086},{"class":599,"line":1085},19,[1087],{"type":398,"tag":597,"props":1088,"children":1089},{"style":604},[1090],{"type":403,"value":1091},"        },\n",{"type":398,"tag":597,"props":1093,"children":1095},{"class":599,"line":1094},20,[1096],{"type":398,"tag":597,"props":1097,"children":1098},{"style":604},[1099],{"type":403,"value":924},{"type":398,"tag":597,"props":1101,"children":1103},{"class":599,"line":1102},21,[1104,1108,1112,1116,1121,1125],{"type":398,"tag":597,"props":1105,"children":1106},{"style":689},[1107],{"type":403,"value":933},{"type":398,"tag":597,"props":1109,"children":1110},{"style":604},[1111],{"type":403,"value":938},{"type":398,"tag":597,"props":1113,"children":1114},{"style":627},[1115],{"type":403,"value":726},{"type":398,"tag":597,"props":1117,"children":1118},{"style":633},[1119],{"type":403,"value":1120},"flip",{"type":398,"tag":597,"props":1122,"children":1123},{"style":627},[1124],{"type":403,"value":726},{"type":398,"tag":597,"props":1126,"children":1127},{"style":604},[1128],{"type":403,"value":956},{"type":398,"tag":597,"props":1130,"children":1132},{"class":599,"line":1131},22,[1133,1137],{"type":398,"tag":597,"props":1134,"children":1135},{"style":689},[1136],{"type":403,"value":965},{"type":398,"tag":597,"props":1138,"children":1139},{"style":604},[1140],{"type":403,"value":970},{"type":398,"tag":597,"props":1142,"children":1144},{"class":599,"line":1143},23,[1145],{"type":398,"tag":597,"props":1146,"children":1147},{"style":912},[1148],{"type":403,"value":979},{"type":398,"tag":597,"props":1150,"children":1152},{"class":599,"line":1151},24,[1153,1157,1161,1165],{"type":398,"tag":597,"props":1154,"children":1155},{"style":689},[1156],{"type":403,"value":988},{"type":398,"tag":597,"props":1158,"children":1159},{"style":604},[1160],{"type":403,"value":938},{"type":398,"tag":597,"props":1162,"children":1163},{"style":751},[1164],{"type":403,"value":834},{"type":398,"tag":597,"props":1166,"children":1167},{"style":604},[1168],{"type":403,"value":956},{"type":398,"tag":597,"props":1170,"children":1172},{"class":599,"line":1171},25,[1173],{"type":398,"tag":597,"props":1174,"children":1175},{"style":912},[1176],{"type":403,"value":1177},"            // 当容器与 popper 发生碰撞时，使 popper 不会覆盖触发 popper 显示的 refference，\n",{"type":398,"tag":597,"props":1179,"children":1181},{"class":599,"line":1180},26,[1182],{"type":398,"tag":597,"props":1183,"children":1184},{"style":912},[1185],{"type":403,"value":1186},"            // 而是回退到其它方向显示\n",{"type":398,"tag":597,"props":1188,"children":1190},{"class":599,"line":1189},27,[1191],{"type":398,"tag":597,"props":1192,"children":1193},{"style":912},[1194],{"type":403,"value":1195},"            // more on https://popper.js.org/docs/v2/modifiers/flip/\n",{"type":398,"tag":597,"props":1197,"children":1199},{"class":599,"line":1198},28,[1200,1205,1210,1214,1219,1223,1228,1232,1236,1240,1244,1248,1253,1257,1261,1265,1270,1274],{"type":398,"tag":597,"props":1201,"children":1202},{"style":689},[1203],{"type":403,"value":1204},"            fallbackPlacements",{"type":398,"tag":597,"props":1206,"children":1207},{"style":604},[1208],{"type":403,"value":1209},": [",{"type":398,"tag":597,"props":1211,"children":1212},{"style":627},[1213],{"type":403,"value":726},{"type":398,"tag":597,"props":1215,"children":1216},{"style":633},[1217],{"type":403,"value":1218},"top",{"type":398,"tag":597,"props":1220,"children":1221},{"style":627},[1222],{"type":403,"value":726},{"type":398,"tag":597,"props":1224,"children":1225},{"style":604},[1226],{"type":403,"value":1227},", ",{"type":398,"tag":597,"props":1229,"children":1230},{"style":627},[1231],{"type":403,"value":726},{"type":398,"tag":597,"props":1233,"children":1234},{"style":633},[1235],{"type":403,"value":658},{"type":398,"tag":597,"props":1237,"children":1238},{"style":627},[1239],{"type":403,"value":726},{"type":398,"tag":597,"props":1241,"children":1242},{"style":604},[1243],{"type":403,"value":1227},{"type":398,"tag":597,"props":1245,"children":1246},{"style":627},[1247],{"type":403,"value":726},{"type":398,"tag":597,"props":1249,"children":1250},{"style":633},[1251],{"type":403,"value":1252},"right",{"type":398,"tag":597,"props":1254,"children":1255},{"style":627},[1256],{"type":403,"value":726},{"type":398,"tag":597,"props":1258,"children":1259},{"style":604},[1260],{"type":403,"value":1227},{"type":398,"tag":597,"props":1262,"children":1263},{"style":627},[1264],{"type":403,"value":726},{"type":398,"tag":597,"props":1266,"children":1267},{"style":633},[1268],{"type":403,"value":1269},"left",{"type":398,"tag":597,"props":1271,"children":1272},{"style":627},[1273],{"type":403,"value":726},{"type":398,"tag":597,"props":1275,"children":1276},{"style":604},[1277],{"type":403,"value":1278},"],\n",{"type":398,"tag":597,"props":1280,"children":1282},{"class":599,"line":1281},29,[1283],{"type":398,"tag":597,"props":1284,"children":1285},{"style":604},[1286],{"type":403,"value":1082},{"type":398,"tag":597,"props":1288,"children":1290},{"class":599,"line":1289},30,[1291],{"type":398,"tag":597,"props":1292,"children":1293},{"style":604},[1294],{"type":403,"value":1091},{"type":398,"tag":597,"props":1296,"children":1298},{"class":599,"line":1297},31,[1299],{"type":398,"tag":597,"props":1300,"children":1301},{"style":604},[1302],{"type":403,"value":1303},"      ],\n",{"type":398,"tag":597,"props":1305,"children":1307},{"class":599,"line":1306},32,[1308,1313],{"type":398,"tag":597,"props":1309,"children":1310},{"style":604},[1311],{"type":403,"value":1312},"    }",{"type":398,"tag":597,"props":1314,"children":1315},{"style":679},[1316],{"type":403,"value":839},{"type":398,"tag":597,"props":1318,"children":1320},{"class":599,"line":1319},33,[1321],{"type":398,"tag":597,"props":1322,"children":1323},{"style":604},[1324],{"type":403,"value":1325},"  />\n",{"type":398,"tag":597,"props":1327,"children":1329},{"class":599,"line":1328},34,[1330,1334,1338],{"type":398,"tag":597,"props":1331,"children":1332},{"style":604},[1333],{"type":403,"value":763},{"type":398,"tag":597,"props":1335,"children":1336},{"style":610},[1337],{"type":403,"value":795},{"type":398,"tag":597,"props":1339,"children":1340},{"style":604},[1341],{"type":403,"value":744},{"type":398,"tag":597,"props":1343,"children":1345},{"class":599,"line":1344},35,[1346],{"type":398,"tag":597,"props":1347,"children":1349},{"emptyLinePlaceholder":1348},true,[1350],{"type":403,"value":1351},"\n",{"type":398,"tag":597,"props":1353,"children":1355},{"class":599,"line":1354},36,[1356,1360,1365,1370,1374,1378,1383,1387],{"type":398,"tag":597,"props":1357,"children":1358},{"style":604},[1359],{"type":403,"value":607},{"type":398,"tag":597,"props":1361,"children":1362},{"style":610},[1363],{"type":403,"value":1364},"style",{"type":398,"tag":597,"props":1366,"children":1367},{"style":616},[1368],{"type":403,"value":1369}," lang",{"type":398,"tag":597,"props":1371,"children":1372},{"style":604},[1373],{"type":403,"value":624},{"type":398,"tag":597,"props":1375,"children":1376},{"style":627},[1377],{"type":403,"value":630},{"type":398,"tag":597,"props":1379,"children":1380},{"style":633},[1381],{"type":403,"value":1382},"scss",{"type":398,"tag":597,"props":1384,"children":1385},{"style":627},[1386],{"type":403,"value":630},{"type":398,"tag":597,"props":1388,"children":1389},{"style":604},[1390],{"type":403,"value":744},{"type":398,"tag":597,"props":1392,"children":1394},{"class":599,"line":1393},37,[1395],{"type":398,"tag":597,"props":1396,"children":1397},{"style":912},[1398],{"type":403,"value":1399},"// 当 referrence 消失时，popper 应当立即消失，\n",{"type":398,"tag":597,"props":1401,"children":1403},{"class":599,"line":1402},38,[1404],{"type":398,"tag":597,"props":1405,"children":1406},{"style":912},[1407],{"type":403,"value":1408},"// 而不是移动到 （0，0）位置并等待动画结束再消失\n",{"type":398,"tag":597,"props":1410,"children":1412},{"class":599,"line":1411},39,[1413],{"type":398,"tag":597,"props":1414,"children":1415},{"style":912},[1416],{"type":403,"value":1417},"// more on https://popper.js.org/docs/v2/modifiers/hide/\n",{"type":398,"tag":597,"props":1419,"children":1421},{"class":599,"line":1420},40,[1422,1428,1433,1438,1443,1448,1452,1456,1460,1465],{"type":398,"tag":597,"props":1423,"children":1425},{"style":1424},"--shiki-light:#39ADB5;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1426],{"type":403,"value":1427},".",{"type":398,"tag":597,"props":1429,"children":1431},{"style":1430},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1432],{"type":403,"value":861},{"type":398,"tag":597,"props":1434,"children":1435},{"style":604},[1436],{"type":403,"value":1437},"[",{"type":398,"tag":597,"props":1439,"children":1440},{"style":616},[1441],{"type":403,"value":1442},"data-popper-reference-hidden",{"type":398,"tag":597,"props":1444,"children":1446},{"style":1445},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[1447],{"type":403,"value":624},{"type":398,"tag":597,"props":1449,"children":1450},{"style":627},[1451],{"type":403,"value":726},{"type":398,"tag":597,"props":1453,"children":1454},{"style":751},[1455],{"type":403,"value":1069},{"type":398,"tag":597,"props":1457,"children":1458},{"style":627},[1459],{"type":403,"value":726},{"type":398,"tag":597,"props":1461,"children":1462},{"style":604},[1463],{"type":403,"value":1464},"]",{"type":398,"tag":597,"props":1466,"children":1467},{"style":604},[1468],{"type":403,"value":1469}," {\n",{"type":398,"tag":597,"props":1471,"children":1473},{"class":599,"line":1472},41,[1474,1480,1484,1490],{"type":398,"tag":597,"props":1475,"children":1477},{"style":1476},"--shiki-light:#8796B0;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[1478],{"type":403,"value":1479},"  visibility",{"type":398,"tag":597,"props":1481,"children":1482},{"style":604},[1483],{"type":403,"value":697},{"type":398,"tag":597,"props":1485,"children":1487},{"style":1486},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF",[1488],{"type":403,"value":1489}," hidden",{"type":398,"tag":597,"props":1491,"children":1492},{"style":604},[1493],{"type":403,"value":1494},";\n",{"type":398,"tag":597,"props":1496,"children":1498},{"class":599,"line":1497},42,[1499,1504,1508,1513],{"type":398,"tag":597,"props":1500,"children":1501},{"style":1476},[1502],{"type":403,"value":1503},"  pointer-events",{"type":398,"tag":597,"props":1505,"children":1506},{"style":604},[1507],{"type":403,"value":697},{"type":398,"tag":597,"props":1509,"children":1510},{"style":1486},[1511],{"type":403,"value":1512}," none",{"type":398,"tag":597,"props":1514,"children":1515},{"style":604},[1516],{"type":403,"value":1494},{"type":398,"tag":597,"props":1518,"children":1520},{"class":599,"line":1519},43,[1521,1526,1530,1535],{"type":398,"tag":597,"props":1522,"children":1523},{"style":1476},[1524],{"type":403,"value":1525},"  opacity",{"type":398,"tag":597,"props":1527,"children":1528},{"style":604},[1529],{"type":403,"value":697},{"type":398,"tag":597,"props":1531,"children":1532},{"style":1025},[1533],{"type":403,"value":1534}," 0",{"type":398,"tag":597,"props":1536,"children":1537},{"style":604},[1538],{"type":403,"value":1494},{"type":398,"tag":597,"props":1540,"children":1542},{"class":599,"line":1541},44,[1543],{"type":398,"tag":597,"props":1544,"children":1545},{"style":604},[1546],{"type":403,"value":1547},"}\n",{"type":398,"tag":597,"props":1549,"children":1551},{"class":599,"line":1550},45,[1552,1556,1560],{"type":398,"tag":597,"props":1553,"children":1554},{"style":604},[1555],{"type":403,"value":763},{"type":398,"tag":597,"props":1557,"children":1558},{"style":610},[1559],{"type":403,"value":1364},{"type":398,"tag":597,"props":1561,"children":1562},{"style":604},[1563],{"type":403,"value":744},{"type":398,"tag":399,"props":1565,"children":1566},{},[1567],{"type":403,"value":1568},"这个问题“难”解决。我猜 80% 的 Element Plus 用户都不能在短时间内解决它。不过“难”并不意味着其涉及的技术有多晦涩，而是说有效信息比较分散，需要人工搜寻、甄别并连接有效信息的关键点。许多人可能不具备这种逐步筛选信息的思考方式。又比如在上面这段样式代码中，官网给出的示例是不正确的，需要修改后才能使用。换做新手的我很可能发现给出配置无效后便放弃解决问题了。",{"type":398,"tag":399,"props":1570,"children":1571},{},[1572],{"type":403,"value":1573},"总之，在这个例子里，使用 GPT 成功联通了有效信息，随后手动搜索关键配置，便找到了解决问题的正确方法。我认为只要问题够具体，便很容易通过“tell me more”这种重复提问的方式使 GPT 穷举出相关知识。再配合人工审查，便能得到有用的东西。以下用另一个例子展示简单的知识是可穷举的。",{"type":398,"tag":406,"props":1575,"children":1577},{"id":1576},"如何选取页面上某个具体的-dom-节点",[1578],{"type":403,"value":1579},"如何选取页面上某个具体的 DOM 节点？",{"type":398,"tag":399,"props":1581,"children":1582},{},[1583],{"type":403,"value":1584},"面试时，在正式开始提问前，我希望通过一道简单的题目让面试者放松并进入状态。一开始，我觉得“常见 CSS 垂直居中方法？”、“常见的获取 DOM 节点的方法？”这些记忆性的问题非常合适。",{"type":398,"tag":399,"props":1586,"children":1587},{},[1588],{"type":403,"value":1589},"以“常见的获取 DOM 节点的方法”这个问题举例，我敢说，包括我自己在内，几乎所有前端都没有对这个具体的问题做过总结。因为用不上。真的用不上。在 MVVM 框架大行其道的今天，较少存在需要手动处理 DOM 节点的场景。不过，作为热身题，它合适在简单。任何人都不会因为它阻塞的思路而陷入窘迫的地步。回答得越多，得分越高。",{"type":398,"tag":399,"props":1591,"children":1592},{},[1593],{"type":403,"value":1594},"在用过 GPT 后，我觉得这种问题过于机械化，不能激发思考，是对被试者的侮辱。在上一小节说到，在具体问题上 GPT 能穷举相关知识。放到这个问题，我用普通人的回答和 GPT 的回答做一个对比来进一步证实它在此方面的“异能”。",{"type":398,"tag":399,"props":1596,"children":1597},{},[1598],{"type":403,"value":1599},"普通人的回答可能是：“控制台的 $ 和 $$ 方法、document.querySelector、document.getElementBy 等方法”。接下来，让我们看看 GPT 的表现。",{"type":398,"tag":507,"props":1601,"children":1603},{"id":1602},"第一轮-1",[1604],{"type":403,"value":509},{"type":398,"tag":399,"props":1606,"children":1607},{},[1608],{"type":403,"value":1609},"问：“如何选取页面上某个具体的 DOM 节点？”。",{"type":398,"tag":523,"props":1611,"children":1612},{},[1613,1618],{"type":398,"tag":399,"props":1614,"children":1615},{},[1616],{"type":403,"value":1617},"要选取页面上的某个具体的 DOM 节点，可以使用 JavaScript 中的 DOM API。以下是选取 DOM 节点的几种常见方式：",{"type":398,"tag":457,"props":1619,"children":1620},{},[1621,1626,1631,1636],{"type":398,"tag":461,"props":1622,"children":1623},{},[1624],{"type":403,"value":1625},"getElementById，下略",{"type":398,"tag":461,"props":1627,"children":1628},{},[1629],{"type":403,"value":1630},"getElementsByClassName，下略",{"type":398,"tag":461,"props":1632,"children":1633},{},[1634],{"type":403,"value":1635},"querySelector，下略",{"type":398,"tag":461,"props":1637,"children":1638},{},[1639],{"type":403,"value":1640},"querySelectorAll，下略",{"type":398,"tag":507,"props":1642,"children":1644},{"id":1643},"第二轮-1",[1645],{"type":403,"value":546},{"type":398,"tag":399,"props":1647,"children":1648},{},[1649],{"type":403,"value":1650},"问：“告诉我“如何选取页面上某个具体的 DOM 节点”的更多方法，除了上面提到的 document.getElementXXX、document.querySelectorXXX 相关方法”。",{"type":398,"tag":523,"props":1652,"children":1653},{},[1654,1658],{"type":398,"tag":399,"props":1655,"children":1656},{},[1657],{"type":403,"value":1617},{"type":398,"tag":457,"props":1659,"children":1660},{},[1661,1666,1671],{"type":398,"tag":461,"props":1662,"children":1663},{},[1664],{"type":403,"value":1665},"parentElement 和 children 属性，下略",{"type":398,"tag":461,"props":1667,"children":1668},{},[1669],{"type":403,"value":1670},"document.all，下略",{"type":398,"tag":461,"props":1672,"children":1673},{},[1674],{"type":403,"value":1675},"getElementsByTagName，下略",{"type":398,"tag":507,"props":1677,"children":1679},{"id":1678},"第三轮-1",[1680],{"type":403,"value":564},{"type":398,"tag":399,"props":1682,"children":1683},{},[1684],{"type":403,"value":1685},"问：“告诉我“如何选取页面上某个具体的 DOM 节点”的更多方法，除了上面提到的 document.getElementXXX、document.querySelectorXXX、parent/children、getSelection、document.all 相关方法。”",{"type":398,"tag":523,"props":1687,"children":1688},{},[1689],{"type":398,"tag":457,"props":1690,"children":1691},{},[1692,1697,1702,1707],{"type":398,"tag":461,"props":1693,"children":1694},{},[1695],{"type":403,"value":1696},"nextSibling 和 previousSibling，下略",{"type":398,"tag":461,"props":1698,"children":1699},{},[1700],{"type":403,"value":1701},"firstChild 和 lastChild，下略",{"type":398,"tag":461,"props":1703,"children":1704},{},[1705],{"type":403,"value":1706},"document.evaluate，下略",{"type":398,"tag":461,"props":1708,"children":1709},{},[1710],{"type":403,"value":1711},"event.target，下略",{"type":398,"tag":399,"props":1713,"children":1714},{},[1715],{"type":403,"value":1716},"... 以下重复 N 轮，直到 GPT 开始说胡话。",{"type":398,"tag":399,"props":1718,"children":1719},{},[1720],{"type":403,"value":1721},"那么结果如何呢？",{"type":398,"tag":399,"props":1723,"children":1724},{},[1725],{"type":403,"value":1726},"以我最后的提问作为 GPT 在这轮上下文提及的关键字的参考：“告诉我“如何选取页面上某个具体的 DOM 节点”的更多方法，除了上面提到的 document.getElement*、document.querySelector*、parent/children、getSelection、document.all、nextSibling、firstChild、document.evaluate、event.target、matches、closest、getElementsBy*、activeElement、elementFromPoint、Range、createTreeWalker、all、XPath、MutationObserver、forms、images、links、head、body、defaultView、frames、form.elements、embeds、plugins、getElementsByTagName、getElementById、createDocumentFragment、anchors、styleSheets、scripts、scrollingElement、documentElement 以及多个选择器复用相关方法”。",{"type":398,"tag":399,"props":1728,"children":1729},{},[1730],{"type":403,"value":1731},"把 GPT 提到的关键词做一下分类，大致可以总结出以下“标准答案”：",{"type":398,"tag":1733,"props":1734,"children":1735},"ul",{},[1736,1769,1802,1820],{"type":398,"tag":461,"props":1737,"children":1738},{},[1739,1741],{"type":403,"value":1740},"选择器 API：\n",{"type":398,"tag":1733,"props":1742,"children":1743},{},[1744,1749,1754,1759,1764],{"type":398,"tag":461,"props":1745,"children":1746},{},[1747],{"type":403,"value":1748},"元素选择器：element.getElementBy*",{"type":398,"tag":461,"props":1750,"children":1751},{},[1752],{"type":403,"value":1753},"CSS 选择器：element.querySelector*、element.matches",{"type":398,"tag":461,"props":1755,"children":1756},{},[1757],{"type":403,"value":1758},"XPath 选择器：element.evaluate",{"type":398,"tag":461,"props":1760,"children":1761},{},[1762],{"type":403,"value":1763},"Selection：window.getSelection",{"type":398,"tag":461,"props":1765,"children":1766},{},[1767],{"type":403,"value":1768},"Range：document.createRange",{"type":398,"tag":461,"props":1770,"children":1771},{},[1772,1774],{"type":403,"value":1773},"能获取节点的实例属性：\n",{"type":398,"tag":1733,"props":1775,"children":1776},{},[1777,1782,1787,1792,1797],{"type":398,"tag":461,"props":1778,"children":1779},{},[1780],{"type":403,"value":1781},"document.x：document.all、document.images、document.styleSheets、...",{"type":398,"tag":461,"props":1783,"children":1784},{},[1785],{"type":403,"value":1786},"node.x：element.firstChild、element.parentNode、...",{"type":398,"tag":461,"props":1788,"children":1789},{},[1790],{"type":403,"value":1791},"element.x：element.children、...",{"type":398,"tag":461,"props":1793,"children":1794},{},[1795],{"type":403,"value":1796},"event.x：event.target、event.from、...",{"type":398,"tag":461,"props":1798,"children":1799},{},[1800],{"type":403,"value":1801},"mutaionRecord.x：mutaionRecord.nextSibling、...",{"type":398,"tag":461,"props":1803,"children":1804},{},[1805,1807],{"type":403,"value":1806},"能返回节点的实例方法：\n",{"type":398,"tag":1733,"props":1808,"children":1809},{},[1810,1815],{"type":398,"tag":461,"props":1811,"children":1812},{},[1813],{"type":403,"value":1814},"node api：element.getRootNode()、...",{"type":398,"tag":461,"props":1816,"children":1817},{},[1818],{"type":403,"value":1819},"treeWalker api：treeWalker.filter()、...",{"type":398,"tag":461,"props":1821,"children":1822},{},[1823,1825],{"type":403,"value":1824},"配合回调函数使用的方法：\n",{"type":398,"tag":1733,"props":1826,"children":1827},{},[1828,1833],{"type":398,"tag":461,"props":1829,"children":1830},{},[1831],{"type":403,"value":1832},"MutationObserver：mutationObserver.observe",{"type":398,"tag":461,"props":1834,"children":1835},{},[1836],{"type":403,"value":1837},"TreeWalker：createTreeWalker、",{"type":398,"tag":399,"props":1839,"children":1840},{},[1841],{"type":403,"value":1842},"这应该也只是现实的冰山一角。翻阅 MDN 文档能从 Permissions、ShadowRoot、SVG 相关关键字找到更多；另一方面，除了直接使用 DOM API 外，使用控制台，甚至使用框架比如 jQuery、Sizzle、Vue、React 都可以解决问题。他们提供了获取 DOM 节点的 API。",{"type":398,"tag":399,"props":1844,"children":1845},{},[1846],{"type":403,"value":1847},"总的来说，无论从更广泛还是更垂直的角度翻阅资料，都能找到更多相关知识。这个 GPT 问答的例子再次证明了简单的知识能被穷举，而这个工具真的可以帮助前端学习者从繁杂琐碎的知识点中解放，保留精力去做那些对他们而言更有意义的事情。",{"type":398,"tag":406,"props":1849,"children":1851},{"id":1850},"结论",[1852],{"type":403,"value":1850},{"type":398,"tag":399,"props":1854,"children":1855},{},[1856],{"type":403,"value":1857},"我得出的结论正如标题：在具体的问题上，简单的知识能被穷举，GPT 可以作为一个合格的互联网消息过滤器。正确的使用方法是在简单的问题上用 GPT 穷举关键字，并通过文档进一步学习；其次，同许多人提过的，复杂问题需要先拆解成适合的尺寸，再进一步用 GPT 处理。",{"type":398,"tag":399,"props":1859,"children":1860},{},[1861,1863,1876],{"type":403,"value":1862},"如果说得出了结论就应该有所行动的话，那就是我觉得“如何获取 DOM 节点”这种问题过于机械化，不能激发思考，是对被试者的侮辱，所以最终，我把面试题换成另一些有名的热身题，比如：“如何统计某个页面使用到的 HTML 标签的种类 ",{"type":398,"tag":1864,"props":1865,"children":1866},"sup",{},[1867],{"type":398,"tag":472,"props":1868,"children":1873},{"href":1869,"ariaDescribedBy":1870,"dataFootnoteRef":392,"id":1872},"#user-content-fn-question-1",[1871],"footnote-label","user-content-fnref-question-1",[1874],{"type":403,"value":1875},"1",{"type":403,"value":1877},"”。同样简单，但更有趣。",{"type":398,"tag":1879,"props":1880,"children":1883},"section",{"className":1881,"dataFootnotes":392},[1882],"footnotes",[1884,1892],{"type":398,"tag":1885,"props":1886,"children":1889},"h2",{"className":1887,"id":1871},[1888],"sr-only",[1890],{"type":403,"value":1891},"Footnotes",{"type":398,"tag":457,"props":1893,"children":1894},{},[1895],{"type":398,"tag":461,"props":1896,"children":1898},{"id":1897},"user-content-fn-question-1",[1899,1901,1909,1911],{"type":403,"value":1900},"源自贺老的 ",{"type":398,"tag":472,"props":1902,"children":1906},{"href":1903,"rel":1904},"https://www.zhihu.com/lives/778991567569440768",[1905],"nofollow",[1907],{"type":403,"value":1908},"知乎 Live",{"type":403,"value":1910}," 。 ",{"type":398,"tag":472,"props":1912,"children":1917},{"href":1913,"ariaLabel":1914,"className":1915,"dataFootnoteBackref":392},"#user-content-fnref-question-1","Back to reference 1",[1916],"data-footnote-backref",[1918],{"type":403,"value":1919},"↩",{"type":398,"tag":1364,"props":1921,"children":1922},{},[1923],{"type":403,"value":1924},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":392,"searchDepth":747,"depth":747,"links":1926},[1927,1928,1929,1930,1931],{"id":408,"depth":757,"text":408},{"id":428,"depth":757,"text":431},{"id":1576,"depth":757,"text":1579},{"id":1850,"depth":757,"text":1850},{"id":1871,"depth":747,"text":1891},"markdown","content:2.articles:1102.use-gpt-learn-complex-frontend.md","content","2.articles/1102.use-gpt-learn-complex-frontend.md","md",[1938,1940],{"_path":46,"title":45,"description":1939},"我的项目使用 micro-app 框架作为微前端框架。使用 micro-app 时，由于开启了样式隔离功能，子应用加载的 CSS 会被解析器解析，在选择器前增加一个子应用属性选择器前缀。我碰到的问题是，如果 CSS 源码中带嵌套语法那么解析就会失败。今天借这个问题给大家简单介绍一下 CSS Parser 的基本流程。",{"_path":52,"title":51,"description":1941},"如何自定义 antd-table、vxe-table 等复杂组件的滚动条？",1718301074492]