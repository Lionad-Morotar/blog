[{"data":1,"prerenderedAt":724},["ShallowReactive",2],{"navigation":3,"/_books/dear-ui":155,"/_books/dear-ui-surround":717},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":156,"_dir":157,"_draft":158,"_partial":159,"_locale":160,"title":161,"description":160,"body":162,"_type":711,"_id":712,"_source":713,"_file":714,"_stem":715,"_extension":716},"/_books/dear-ui","_books",false,true,"","亲爱的界面",{"type":163,"children":164,"toc":682},"root",[165,173,179,184,190,206,211,216,236,241,259,264,269,274,279,284,289,294,299,304,317,322,327,332,337,342,347,352,357,362,367,372,377,382,388,393,398,416,421,426,431,436,441,446,451,456,461,474,479,484,489,494,499,504,509,514,519,524,547,552,557,562,567,572,577,582,587,592,597,602,607,612,617,627,632,637,642,647,652,657,662,667,672,677],{"type":166,"tag":167,"props":168,"children":170},"element","h2",{"id":169},"杂谈",[171],{"type":172,"value":169},"text",{"type":166,"tag":174,"props":175,"children":176},"p",{},[177],{"type":172,"value":178},"作者认为产品的工作应该\"开发产品\"，而不是开发解决方案。所以开发产品应该始终是在调研、设计与实现这三个组成环状的目标中螺旋前行。",{"type":166,"tag":174,"props":180,"children":181},{},[182],{"type":172,"value":183},"做用户调研的目的是为了摸清自身、用户和市场之间的关系。设计则是依据方法创造出符合用户心智模型的可用、有反馈、有层次的界面。实现则是尽可能事实现模型和界面模型不干扰用户认知，并在产品完成后跟进测试，量化结果，完成产品开发流程的闭环。",{"type":166,"tag":185,"props":186,"children":188},"h3",{"id":187},"调研",[189],{"type":172,"value":187},{"type":166,"tag":174,"props":191,"children":192},{},[193,195,204],{"type":172,"value":194},"就像福特所谓的\"如果问我的客户他们需要什么，他们会说要更快的马车\"，尽管可以通过询问的方式从用户口中知道他们想要做什么，但这并不可靠，因为人们在",{"type":166,"tag":196,"props":197,"children":201},"a",{"href":198,"rel":199},"https://zh.warbletoncouncil.org/prediccion-afectiva-7389",[200],"nofollow",[202],{"type":172,"value":203},"情感预测",{"type":172,"value":205},"的准确性上非常不灵验。此外，你比用户更专业，应该知道从用户口中说出来的只是功能而不是需求，往往需要再多追问几个为什么才能挖掘出真正的需求。此时你会意识到，问题是网状结构而非点状结构。",{"type":166,"tag":174,"props":207,"children":208},{},[209],{"type":172,"value":210},"作者在书中推荐了\"工作影子及情形访谈\"这种用户调研方法。",{"type":166,"tag":174,"props":212,"children":213},{},[214],{"type":172,"value":215},"工作影子，顾名思义，在某人工作的时候跟随在他身后，观察他是如何工作的。如果没有跟随条件，可以观看录屏，或者使用邮寄录像机等替代方案。情形访谈则是在工作影子之后根据他们的工作内容做具体提问，比方：",{"type":166,"tag":217,"props":218,"children":219},"ul",{},[220,226,231],{"type":166,"tag":221,"props":222,"children":223},"li",{},[224],{"type":172,"value":225},"除了观察到的，他们还经常做哪些任务",{"type":166,"tag":221,"props":227,"children":228},{},[229],{"type":172,"value":230},"需要经常解决什么问题（以及用到了哪些权宜之计）",{"type":166,"tag":221,"props":232,"children":233},{},[234],{"type":172,"value":235},"经常和谁交流，如果交流的对象不在怎么办",{"type":166,"tag":174,"props":237,"children":238},{},[239],{"type":172,"value":240},"所有的调研，都是为了要明确以下问题：",{"type":166,"tag":217,"props":242,"children":243},{},[244,249,254],{"type":166,"tag":221,"props":245,"children":246},{},[247],{"type":172,"value":248},"用户现在在做什么",{"type":166,"tag":221,"props":250,"children":251},{},[252],{"type":172,"value":253},"有哪些是用户不想做却不得不做的",{"type":166,"tag":221,"props":255,"children":256},{},[257],{"type":172,"value":258},"用户想做什么",{"type":166,"tag":185,"props":260,"children":262},{"id":261},"设计",[263],{"type":172,"value":261},{"type":166,"tag":174,"props":265,"children":266},{},[267],{"type":172,"value":268},"类似用户调研，设计前也有一些概念需要理清。",{"type":166,"tag":174,"props":270,"children":271},{},[272],{"type":172,"value":273},"根据产品的不同，需要选择不同的设计导向。",{"type":166,"tag":174,"props":275,"children":276},{},[277],{"type":172,"value":278},"说起来可能会让人觉得不可思议：某些时候，以用户为中心比以活动为中心更不适合作为设计导向。比方说，鼠标最广泛的功能时能点击，而不是切换 DPI。以活动为中心做设计，用户会自然适应你的设计。",{"type":166,"tag":174,"props":280,"children":281},{},[282],{"type":172,"value":283},"如果你还是毫无头绪的话，可以从编写用户手册开始做设计，手册的形式多种多样，博客、案例、录屏或新闻稿都行。编写手册这能强迫你思考设计细节。好的手册是好产品的及格线。编写文档应该仔细，你要知道，当用户开始查看手册时，他们已经很恼火了。就算不从编写手册开始做设计，手册也是高优先级任务。",{"type":166,"tag":174,"props":285,"children":286},{},[287],{"type":172,"value":288},"无论知识水平如何，人们总是变得越来越不愿意\"阅读\"。其实人们不是不喜欢通过阅读吸收知识，只是他们不愿意阅读内容啰嗦或晦涩难懂的内容。为了做到编写出易读的用户手册，你可以尝试去学习如何写作，或者至少，学习如何进行技术写作。这样，能保证你的文字功力在平均水平之上。",{"type":166,"tag":174,"props":290,"children":291},{},[292],{"type":172,"value":293},"编写用户手册的同时，你可能会一边构想应用的界面。这时候的界面无需多花哨，只要层级结构正确就可以了。人们天生就有分层的抽象思维，层级结构正确是好产品的底限。",{"type":166,"tag":174,"props":295,"children":296},{},[297],{"type":172,"value":298},"好比大多数人西方人天然就觉得从上到下、从左到右的是正确的层级结构，大多数人也会认为在浏览器中，由于标签页的关闭按钮靠近标签页、刷新按钮靠近地址栏，所以关闭按钮只对一个标签有效，刷新按钮对所有页面有效是对的。",{"type":166,"tag":174,"props":300,"children":301},{},[302],{"type":172,"value":303},"最后，你需要对界面和内容做一些简单的可用性测试。",{"type":166,"tag":217,"props":305,"children":306},{},[307,312],{"type":166,"tag":221,"props":308,"children":309},{},[310],{"type":172,"value":311},"文字性的内容，如手册和文案，可以使用完形填空法",{"type":166,"tag":221,"props":313,"children":314},{},[315],{"type":172,"value":316},"层级结构，可以使用卡片分类法",{"type":166,"tag":167,"props":318,"children":320},{"id":319},"创建可用的层级结构",[321],{"type":172,"value":319},{"type":166,"tag":174,"props":323,"children":324},{},[325],{"type":172,"value":326},"也许你在想我们讨论的层级结构是一个固定的分类方法，但是我们使用的实际上是层级与标签相结合的方法，所以在某些情况下，一个类目出现在不同层级中是情有可原的。",{"type":166,"tag":174,"props":328,"children":329},{},[330],{"type":172,"value":331},"合理的层级结构 > 用户在层级结构中找到目标的点击次数，同时也不应该拘泥于“一次性仅提供七个以下的选项”，因为，人们扫视菜单时，喜欢选择第一个看起来像他们要找的目标的菜单。",{"type":166,"tag":174,"props":333,"children":334},{},[335],{"type":172,"value":336},"关机相同层级下子项的分组，可以遵循亲密性的原则，也可以使用方向、大小、形状、颜色等其它属性作区分。",{"type":166,"tag":167,"props":338,"children":340},{"id":339},"心智模型",[341],{"type":172,"value":339},{"type":166,"tag":174,"props":343,"children":344},{},[345],{"type":172,"value":346},"心智模型是用户对当前产品的全部认知，是现实逻辑的简化版本。比方说，说到“油门”，人们的心智模型很可能是“踩下油门，油箱的门打开，发动机进入更多油，汽车得以加速”。",{"type":166,"tag":174,"props":348,"children":349},{},[350],{"type":172,"value":351},"设计时应该以实际的心智模型为基础，创造出简单易懂、明确、有反馈的 UI 界面。UI 界面应该靠近心智模型而不是实现模型。",{"type":166,"tag":167,"props":353,"children":355},{"id":354},"保持开放的心态",[356],{"type":172,"value":354},{"type":166,"tag":174,"props":358,"children":359},{},[360],{"type":172,"value":361},"相比于汽车行业如今平稳发展的时代，软件行业目前属于给马车安上蒸汽机的黄金年代。我们应该保持开发的心态，迎接这种无限的可能，不断优化方案，解决问题，而不是陷入把蒸汽机安装到马车前面还是后面这种无意义的争论中。",{"type":166,"tag":174,"props":363,"children":364},{},[365],{"type":172,"value":366},"不要非黑即白地做判断，不要过早的确认方案，也要避免陷入沉没成本，需要谨记的是，用户界面始终有无限可能。",{"type":166,"tag":167,"props":368,"children":370},{"id":369},"写实主义",[371],{"type":172,"value":369},{"type":166,"tag":174,"props":373,"children":374},{},[375],{"type":172,"value":376},"写实主义有助于帮助用户快速建立正确的心智模型，前提是界面和现实是一致的，你不应该指望给用户展示一本写实的书还要他使用“上一页”和“下一页”进行翻页操作。",{"type":166,"tag":174,"props":378,"children":379},{},[380],{"type":172,"value":381},"微软的 Metro 设计语言开创了“扁平化”的设计潮流，消除了长期以来的一些不良设计隐喻，带来了许多积极的作用。不过还是那句话，应该保持开放心态，而不是固守规范。",{"type":166,"tag":167,"props":383,"children":385},{"id":384},"自然用户界面nui",[386],{"type":172,"value":387},"自然用户界面（NUI）",{"type":166,"tag":174,"props":389,"children":390},{},[391],{"type":172,"value":392},"NUI 是继 CLI、GUI 的衍生，主要依赖用户的摄像机、麦克风、手指、触控笔做交互。",{"type":166,"tag":174,"props":394,"children":395},{},[396],{"type":172,"value":397},"要做出符合自然的用户界面，有以下几点可参考：",{"type":166,"tag":217,"props":399,"children":400},{},[401,406,411],{"type":166,"tag":221,"props":402,"children":403},{},[404],{"type":172,"value":405},"用户可以直接操作元素，同时系统对用户地操作要及时反馈。在此之上保留容错和撤销等逻辑。",{"type":166,"tag":221,"props":407,"children":408},{},[409],{"type":172,"value":410},"不要逼迫用户学习精准和复杂的交互方式，那可能是 NUI 到 CLI 的一种演进的倒退。",{"type":166,"tag":221,"props":412,"children":413},{},[414],{"type":172,"value":415},"参考其它主流应用，因为用户可能习惯了某种用户界面。",{"type":166,"tag":167,"props":417,"children":419},{"id":418},"费茨法则",[420],{"type":172,"value":418},{"type":166,"tag":174,"props":422,"children":423},{},[424],{"type":172,"value":425},"费茨法则非常简单，即在桌面系统中，元素越大、离鼠标越近，那么越容易被点击，由此引出了一个计算元素点击难易度的公式。同时，由于鼠标一般不会超出屏幕，所以处于屏幕边缘，尤其是拐角处的元素可用性是非常高的。",{"type":166,"tag":174,"props":427,"children":428},{},[429],{"type":172,"value":430},"人们根据费茨法则，发明了点击上下文菜单和环形菜单这种交互方式。",{"type":166,"tag":167,"props":432,"children":434},{"id":433},"动画",[435],{"type":172,"value":433},{"type":166,"tag":174,"props":437,"children":438},{},[439],{"type":172,"value":440},"动画并不是仅仅为了华丽的外表，它应该被用来提示界面上状态的变化，辅助用户建立正确的心智模型。为此，我们可以参考卡通，学习把元素当作“固体”，适时做出形变、加速度、模糊等夸张的效果。",{"type":166,"tag":167,"props":442,"children":444},{"id":443},"一致性",[445],{"type":172,"value":443},{"type":166,"tag":174,"props":447,"children":448},{},[449],{"type":172,"value":450},"人们识别界面元素（类别）的能力很强，所以不用担心你把界面元素设计成了不同的样式。相比关兴界面样式的一致性问题，你更需要担心的是，如何确保“行为不同的元素，外观也不相同”。",{"type":166,"tag":167,"props":452,"children":454},{"id":453},"可发现性",[455],{"type":172,"value":453},{"type":166,"tag":174,"props":457,"children":458},{},[459],{"type":172,"value":460},"屏幕空间有限，所以不要期望把所有元素都塞进有限的屏幕中。你可以依据元素的重要性，给这些属性的优先级进行排序：",{"type":166,"tag":217,"props":462,"children":463},{},[464,469],{"type":166,"tag":221,"props":465,"children":466},{},[467],{"type":172,"value":468},"某些元素在某些阶段可以隐藏（如选中图片后才能展示旋转按钮）",{"type":166,"tag":221,"props":470,"children":471},{},[472],{"type":172,"value":473},"利用动画及元素的空间属性如尺寸、颜色、形状等增强或弱化元素的优先级",{"type":166,"tag":167,"props":475,"children":477},{"id":476},"不要打断用户",[478],{"type":172,"value":476},{"type":166,"tag":174,"props":480,"children":481},{},[482],{"type":172,"value":483},"从打断中恢复是需要时间的，所以打断用户是一种不明智也鲁莽的操作。系统在可能的情况下可以替用户做出操作，除非没有选择，在需要做出重大决策时再询问用户的意见。当然，最好是能一次性问完。",{"type":166,"tag":167,"props":485,"children":487},{"id":486},"使用撤销代替打断",[488],{"type":172,"value":486},{"type":166,"tag":174,"props":490,"children":491},{},[492],{"type":172,"value":493},"我们几乎已经快被“您确定要...”这种弹窗烦死了，从这类弹窗中，几乎不能再得到有意义的警告。不过可以使用撤销和延迟决定这种策略减少这类弹窗的出现次数。当用户习惯后，我们的系统就能重新找回弹窗的警示作用。",{"type":166,"tag":167,"props":495,"children":497},{"id":496},"模式",[498],{"type":172,"value":496},{"type":166,"tag":174,"props":500,"children":501},{},[502],{"type":172,"value":503},"模式标记着应用程序进入某种特定的状态，用户界面发生了变化。合理使用模式可以减少用户界面的复杂度。",{"type":166,"tag":174,"props":505,"children":506},{},[507],{"type":172,"value":508},"不过模式也经常出问题，如“隐式模式”，用户往往难以察觉程序进入了某种模式；“意外的模式”，界面某种元素可能偷取交互焦点；“粘性模式”，按某个按钮就会持续一段时间的模式，用户往往不知道应该怎么退出模式。",{"type":166,"tag":174,"props":510,"children":511},{},[512],{"type":172,"value":513},"为了解决模式的问题，我们可以充分利用视动觉或是听觉提醒用户，或是采用“准模式”这种办法，只有在用户持续操作时，模式才持续存在。",{"type":166,"tag":167,"props":515,"children":517},{"id":516},"避免使用首选项",[518],{"type":172,"value":516},{"type":166,"tag":174,"props":520,"children":521},{},[522],{"type":172,"value":523},"首先得区分设置、配置、首选项、个性化这四个词的含义：",{"type":166,"tag":217,"props":525,"children":526},{},[527,532,537,542],{"type":166,"tag":221,"props":528,"children":529},{},[530],{"type":172,"value":531},"设置：用户对应用程序做出的全局性质的功能或配置上的修改",{"type":166,"tag":221,"props":533,"children":534},{},[535],{"type":172,"value":536},"配置：应用程序运行所不能缺失的一些设置",{"type":166,"tag":221,"props":538,"children":539},{},[540],{"type":172,"value":541},"个性化：仅仅是一些视觉变化",{"type":166,"tag":221,"props":543,"children":544},{},[545],{"type":172,"value":546},"首选项：不影响应用程序运行的功能性改变",{"type":166,"tag":174,"props":548,"children":549},{},[550],{"type":172,"value":551},"避免使用首选项是因为“你比用户更专业”。大部分情况下，你应该明白自己在创造什么产品，提用户做出决定。",{"type":166,"tag":167,"props":553,"children":555},{"id":554},"层级结构",[556],{"type":172,"value":554},{"type":166,"tag":174,"props":558,"children":559},{},[560],{"type":172,"value":561},"相比层级结构，我们通常更擅长使用时间和空间推理组织数据。",{"type":166,"tag":174,"props":563,"children":564},{},[565],{"type":172,"value":566},"或者，你可以提供层级结构的优化方案，比如：减少或限制层级结构嵌套、支持在多处存放同一个文件、支持元信息编辑（打标签）、结合时间或空间推理或设置数据访问的备选方案（如搜索）。",{"type":166,"tag":167,"props":568,"children":570},{"id":569},"速度",[571],{"type":172,"value":569},{"type":166,"tag":174,"props":573,"children":574},{},[575],{"type":172,"value":576},"应用程序不能运行得太快（点币机），但肯定也不能太慢。如果你想让一个操作看起来“瞬间完成”，通常应该让它们在 0.1 秒内返回结果。",{"type":166,"tag":174,"props":578,"children":579},{},[580],{"type":172,"value":581},"相比精确计时，我们更关心用户的感知速度，因为有许多小技巧可以减轻用户等待时的焦虑。",{"type":166,"tag":167,"props":583,"children":585},{"id":584},"避免加入过多新功能",[586],{"type":172,"value":584},{"type":166,"tag":174,"props":588,"children":589},{},[590],{"type":172,"value":591},"用户总是提一切奇怪的、可能只有他自己会用到的功能，这部分功能对其他用户来说几乎毫无益处。当然，这个得看你怎么看待用户了，比如有些公司就喜欢“如果能让一些用户季度热爱我们的产品，我们愿意失去一些用户”。",{"type":166,"tag":174,"props":593,"children":594},{},[595],{"type":172,"value":596},"面对用户要求加入新功能时，可以尝试多问几个为什么，挖掘出需求背后的需求。这样你也许有机会通过优化现有功能、替换旧功能等方式达到完成需求的目的。",{"type":166,"tag":167,"props":598,"children":600},{"id":599},"移除功能",[601],{"type":172,"value":599},{"type":166,"tag":174,"props":603,"children":604},{},[605],{"type":172,"value":606},"人们总是厌恶损失，即便他们从未拥有（或使用）过某件东西，所以移除功能处理得不好的话，这会是一个很让用户沮丧的决定。如果你决定要移除一个功能，最好提供该功能的备选方案。你也可以尝试从用户数据中分析功能的使用情况以确定是否要移除一个功能。需要额外提及的是，使用率低并不意味着不重要，比如说手机搬家功能。",{"type":166,"tag":167,"props":608,"children":610},{"id":609},"向电子游戏学习",[611],{"type":172,"value":609},{"type":166,"tag":174,"props":613,"children":614},{},[615],{"type":172,"value":616},"根据心流理论，当满足以下三个条件时，人们会感到愉悦：",{"type":166,"tag":618,"props":619,"children":621},"pre",{"code":620},"1.  面临有意义的挑战\n2.  有方法估测是否离完成挑战越来越近\n3.  具备完成挑战的能力\n",[622],{"type":166,"tag":623,"props":624,"children":625},"code",{"__ignoreMap":160},[626],{"type":172,"value":620},{"type":166,"tag":174,"props":628,"children":629},{},[630],{"type":172,"value":631},"在某些方面，产品可以像游戏一样，提供合理的反馈，以向用户展示进度；提供不同层次的深度，或徽章、成就等内容，以鼓励用户探索新内容（需要警惕过度辩护效应）。但和游戏不同的是，你不需要为用户提供任务和挑战，因为往往他们使用应用就是为了处理任务，如果技能熟练的话，他们会尝试去处理更高级的任务。",{"type":166,"tag":167,"props":633,"children":635},{"id":634},"后端设计",[636],{"type":172,"value":634},{"type":166,"tag":174,"props":638,"children":639},{},[640],{"type":172,"value":641},"后端是对人们在电子世界中对所认知事物的一种数字实现，前端则尝试用数字实现复现该认知体验，UI 是前端和后端的桥梁，站在用户的角度设计出容易被理解的界面。",{"type":166,"tag":174,"props":643,"children":644},{},[645],{"type":172,"value":646},"通常来说，后端设计的数据结构会对前端造成重大影响，而且并不是所有诡异的逻辑都能在后端被隐藏，所以 UI 设计师参与到后端设计中来是有必要的，这能让实现模型和用户的心智模型保持一致。",{"type":166,"tag":174,"props":648,"children":649},{},[650],{"type":172,"value":651},"UI 设计师可以尝试学习数据库设计，以理解开发是如何完成需求的。比方说在球队管理系统，教练可以创建球队，增加球员，联络其他球队进行比赛以排名，这个需求的心智模型是非常简单的。但如果球员同时效力多个球队，球员可能被调换到其他队伍，此时历史球队得分以及比赛信息要如何处理？可以看到，这个需求的实现模型是要比心智模型复杂得多的。",{"type":166,"tag":167,"props":653,"children":655},{"id":654},"用户错误即设计错误",[656],{"type":172,"value":654},{"type":166,"tag":174,"props":658,"children":659},{},[660],{"type":172,"value":661},"当用户没有按预期操作软件而出发错误时，设计师与其撇清责任，不如修复问题。请勿责备用户；最好是能解释出错的原因，并提供可能的解决方式。",{"type":166,"tag":174,"props":663,"children":664},{},[665],{"type":172,"value":666},"当然，最好的做法还是避免问题的出现，比方说减少模式或优化模式的使用以避免模式错误、提示或阻止非法输入以避免输入错误。",{"type":166,"tag":167,"props":668,"children":670},{"id":669},"不好的地方",[671],{"type":172,"value":669},{"type":166,"tag":174,"props":673,"children":674},{},[675],{"type":172,"value":676},"前言差点把我劝退。",{"type":166,"tag":174,"props":678,"children":679},{},[680],{"type":172,"value":681},"前言，理念类章节小节，作者尝试使用论文《强制实施自行车头盔法案对健康的影响》中描述的现象：自行车头盔法案强制实施后讨厌带头盔的人可能会选择其他交通方式，以举证“设计的改版经常并未如你所愿，有时甚至与你的预期完全相反”。这本身没错，但他的解释太糟糕了，原文引用如下：“这些法案是避免了一些伤害，但是对于那些完全放弃使用自行车（取而代之开汽车）的人来说，他们所遭受的健康影响全然是负面的。” 啥，健康影响还能是负面的？难倒开汽车会比骑自行车安全么？我 Get 不到。",{"title":160,"searchDepth":683,"depth":683,"links":684},2,[685,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710],{"id":169,"depth":683,"text":169,"children":686},[687,689],{"id":187,"depth":688,"text":187},3,{"id":261,"depth":688,"text":261},{"id":319,"depth":683,"text":319},{"id":339,"depth":683,"text":339},{"id":354,"depth":683,"text":354},{"id":369,"depth":683,"text":369},{"id":384,"depth":683,"text":387},{"id":418,"depth":683,"text":418},{"id":433,"depth":683,"text":433},{"id":443,"depth":683,"text":443},{"id":453,"depth":683,"text":453},{"id":476,"depth":683,"text":476},{"id":486,"depth":683,"text":486},{"id":496,"depth":683,"text":496},{"id":516,"depth":683,"text":516},{"id":554,"depth":683,"text":554},{"id":569,"depth":683,"text":569},{"id":584,"depth":683,"text":584},{"id":599,"depth":683,"text":599},{"id":609,"depth":683,"text":609},{"id":634,"depth":683,"text":634},{"id":654,"depth":683,"text":654},{"id":669,"depth":683,"text":669},"markdown","content:_books:dear-ui.md","content","_books/dear-ui.md","_books/dear-ui","md",[718,721],{"_path":719,"title":720,"description":160},"/_books/9787535792006","打开黑箱——通过36部经典电影解密脑科学",{"_path":722,"title":723,"description":160},"/_books/ecma-262","ECMAScript Standard",1742745243362]