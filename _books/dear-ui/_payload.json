[{"data":1,"prerenderedAt":727},["ShallowReactive",2],{"navigation":3,"/_books/dear-ui":158,"/_books/dear-ui-surround":720},[4,35,89,95,122,128,152],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":45,"_path":46},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":48,"_path":49},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":51,"_path":52},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":54,"_path":55},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":57,"_path":58},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":60,"_path":61},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":63,"_path":64},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":66,"_path":67},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":69,"_path":70},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":72,"_path":73},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":75,"_path":76},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":78,"_path":79},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":81,"_path":82},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":84,"_path":85},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":87,"_path":88},"📝 技术博客归档","/articles/archive",{"title":90,"_path":91,"children":92},"读书笔记 / Notes","/books",[93],{"title":94,"_path":91},"📕 读书笔记",{"title":96,"_path":97,"children":98},"吉他剧场 / Music","/music",[99,101,104,107,110,113,116,119],{"title":100,"_path":97},"🎸 FingerStyle！",{"title":102,"_path":103},"🌬️ 等待的风","/music/wind",{"title":105,"_path":106},"💕 约定的海洋","/music/ocean",{"title":108,"_path":109},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":111,"_path":112},"🌏 残酷天使的行动纲领","/music/eva",{"title":114,"_path":115},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":117,"_path":118},"🍷 Wu Wei","/music/wu-wei",{"title":120,"_path":121},"🌅 无题","/music/untitled",{"title":123,"_path":124,"children":125},"知识地图 / Maps","/maps",[126],{"title":127,"_path":124},"🏁 知识地图",{"title":129,"_path":130,"children":131},"造物 / Make","/tools",[132,134,137,140,143,146,149],{"title":133,"_path":130},"🧰 工具收集",{"title":135,"_path":136},"📕 博客","/tools/blog",{"title":138,"_path":139},"🥥 Coconut","/tools/coconut",{"title":141,"_path":142},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":144,"_path":145},"🌐 AnySort","/tools/anysort",{"title":147,"_path":148},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":150,"_path":151},"👓 Crapto","/tools/crypto-inline",{"title":153,"_path":154,"children":155},"我 / About","/hire",[156],{"title":157,"_path":154},"📬 技术简历",{"_path":159,"_dir":160,"_draft":161,"_partial":162,"_locale":163,"title":164,"description":163,"body":165,"_type":714,"_id":715,"_source":716,"_file":717,"_stem":718,"_extension":719},"/_books/dear-ui","_books",false,true,"","亲爱的界面",{"type":166,"children":167,"toc":685},"root",[168,176,182,187,193,209,214,219,239,244,262,267,272,277,282,287,292,297,302,307,320,325,330,335,340,345,350,355,360,365,370,375,380,385,391,396,401,419,424,429,434,439,444,449,454,459,464,477,482,487,492,497,502,507,512,517,522,527,550,555,560,565,570,575,580,585,590,595,600,605,610,615,620,630,635,640,645,650,655,660,665,670,675,680],{"type":169,"tag":170,"props":171,"children":173},"element","h2",{"id":172},"杂谈",[174],{"type":175,"value":172},"text",{"type":169,"tag":177,"props":178,"children":179},"p",{},[180],{"type":175,"value":181},"作者认为产品的工作应该\"开发产品\"，而不是开发解决方案。所以开发产品应该始终是在调研、设计与实现这三个组成环状的目标中螺旋前行。",{"type":169,"tag":177,"props":183,"children":184},{},[185],{"type":175,"value":186},"做用户调研的目的是为了摸清自身、用户和市场之间的关系。设计则是依据方法创造出符合用户心智模型的可用、有反馈、有层次的界面。实现则是尽可能事实现模型和界面模型不干扰用户认知，并在产品完成后跟进测试，量化结果，完成产品开发流程的闭环。",{"type":169,"tag":188,"props":189,"children":191},"h3",{"id":190},"调研",[192],{"type":175,"value":190},{"type":169,"tag":177,"props":194,"children":195},{},[196,198,207],{"type":175,"value":197},"就像福特所谓的\"如果问我的客户他们需要什么，他们会说要更快的马车\"，尽管可以通过询问的方式从用户口中知道他们想要做什么，但这并不可靠，因为人们在",{"type":169,"tag":199,"props":200,"children":204},"a",{"href":201,"rel":202},"https://zh.warbletoncouncil.org/prediccion-afectiva-7389",[203],"nofollow",[205],{"type":175,"value":206},"情感预测",{"type":175,"value":208},"的准确性上非常不灵验。此外，你比用户更专业，应该知道从用户口中说出来的只是功能而不是需求，往往需要再多追问几个为什么才能挖掘出真正的需求。此时你会意识到，问题是网状结构而非点状结构。",{"type":169,"tag":177,"props":210,"children":211},{},[212],{"type":175,"value":213},"作者在书中推荐了\"工作影子及情形访谈\"这种用户调研方法。",{"type":169,"tag":177,"props":215,"children":216},{},[217],{"type":175,"value":218},"工作影子，顾名思义，在某人工作的时候跟随在他身后，观察他是如何工作的。如果没有跟随条件，可以观看录屏，或者使用邮寄录像机等替代方案。情形访谈则是在工作影子之后根据他们的工作内容做具体提问，比方：",{"type":169,"tag":220,"props":221,"children":222},"ul",{},[223,229,234],{"type":169,"tag":224,"props":225,"children":226},"li",{},[227],{"type":175,"value":228},"除了观察到的，他们还经常做哪些任务",{"type":169,"tag":224,"props":230,"children":231},{},[232],{"type":175,"value":233},"需要经常解决什么问题（以及用到了哪些权宜之计）",{"type":169,"tag":224,"props":235,"children":236},{},[237],{"type":175,"value":238},"经常和谁交流，如果交流的对象不在怎么办",{"type":169,"tag":177,"props":240,"children":241},{},[242],{"type":175,"value":243},"所有的调研，都是为了要明确以下问题：",{"type":169,"tag":220,"props":245,"children":246},{},[247,252,257],{"type":169,"tag":224,"props":248,"children":249},{},[250],{"type":175,"value":251},"用户现在在做什么",{"type":169,"tag":224,"props":253,"children":254},{},[255],{"type":175,"value":256},"有哪些是用户不想做却不得不做的",{"type":169,"tag":224,"props":258,"children":259},{},[260],{"type":175,"value":261},"用户想做什么",{"type":169,"tag":188,"props":263,"children":265},{"id":264},"设计",[266],{"type":175,"value":264},{"type":169,"tag":177,"props":268,"children":269},{},[270],{"type":175,"value":271},"类似用户调研，设计前也有一些概念需要理清。",{"type":169,"tag":177,"props":273,"children":274},{},[275],{"type":175,"value":276},"根据产品的不同，需要选择不同的设计导向。",{"type":169,"tag":177,"props":278,"children":279},{},[280],{"type":175,"value":281},"说起来可能会让人觉得不可思议：某些时候，以用户为中心比以活动为中心更不适合作为设计导向。比方说，鼠标最广泛的功能时能点击，而不是切换 DPI。以活动为中心做设计，用户会自然适应你的设计。",{"type":169,"tag":177,"props":283,"children":284},{},[285],{"type":175,"value":286},"如果你还是毫无头绪的话，可以从编写用户手册开始做设计，手册的形式多种多样，博客、案例、录屏或新闻稿都行。编写手册这能强迫你思考设计细节。好的手册是好产品的及格线。编写文档应该仔细，你要知道，当用户开始查看手册时，他们已经很恼火了。就算不从编写手册开始做设计，手册也是高优先级任务。",{"type":169,"tag":177,"props":288,"children":289},{},[290],{"type":175,"value":291},"无论知识水平如何，人们总是变得越来越不愿意\"阅读\"。其实人们不是不喜欢通过阅读吸收知识，只是他们不愿意阅读内容啰嗦或晦涩难懂的内容。为了做到编写出易读的用户手册，你可以尝试去学习如何写作，或者至少，学习如何进行技术写作。这样，能保证你的文字功力在平均水平之上。",{"type":169,"tag":177,"props":293,"children":294},{},[295],{"type":175,"value":296},"编写用户手册的同时，你可能会一边构想应用的界面。这时候的界面无需多花哨，只要层级结构正确就可以了。人们天生就有分层的抽象思维，层级结构正确是好产品的底限。",{"type":169,"tag":177,"props":298,"children":299},{},[300],{"type":175,"value":301},"好比大多数人西方人天然就觉得从上到下、从左到右的是正确的层级结构，大多数人也会认为在浏览器中，由于标签页的关闭按钮靠近标签页、刷新按钮靠近地址栏，所以关闭按钮只对一个标签有效，刷新按钮对所有页面有效是对的。",{"type":169,"tag":177,"props":303,"children":304},{},[305],{"type":175,"value":306},"最后，你需要对界面和内容做一些简单的可用性测试。",{"type":169,"tag":220,"props":308,"children":309},{},[310,315],{"type":169,"tag":224,"props":311,"children":312},{},[313],{"type":175,"value":314},"文字性的内容，如手册和文案，可以使用完形填空法",{"type":169,"tag":224,"props":316,"children":317},{},[318],{"type":175,"value":319},"层级结构，可以使用卡片分类法",{"type":169,"tag":170,"props":321,"children":323},{"id":322},"创建可用的层级结构",[324],{"type":175,"value":322},{"type":169,"tag":177,"props":326,"children":327},{},[328],{"type":175,"value":329},"也许你在想我们讨论的层级结构是一个固定的分类方法，但是我们使用的实际上是层级与标签相结合的方法，所以在某些情况下，一个类目出现在不同层级中是情有可原的。",{"type":169,"tag":177,"props":331,"children":332},{},[333],{"type":175,"value":334},"合理的层级结构 > 用户在层级结构中找到目标的点击次数，同时也不应该拘泥于“一次性仅提供七个以下的选项”，因为，人们扫视菜单时，喜欢选择第一个看起来像他们要找的目标的菜单。",{"type":169,"tag":177,"props":336,"children":337},{},[338],{"type":175,"value":339},"关机相同层级下子项的分组，可以遵循亲密性的原则，也可以使用方向、大小、形状、颜色等其它属性作区分。",{"type":169,"tag":170,"props":341,"children":343},{"id":342},"心智模型",[344],{"type":175,"value":342},{"type":169,"tag":177,"props":346,"children":347},{},[348],{"type":175,"value":349},"心智模型是用户对当前产品的全部认知，是现实逻辑的简化版本。比方说，说到“油门”，人们的心智模型很可能是“踩下油门，油箱的门打开，发动机进入更多油，汽车得以加速”。",{"type":169,"tag":177,"props":351,"children":352},{},[353],{"type":175,"value":354},"设计时应该以实际的心智模型为基础，创造出简单易懂、明确、有反馈的 UI 界面。UI 界面应该靠近心智模型而不是实现模型。",{"type":169,"tag":170,"props":356,"children":358},{"id":357},"保持开放的心态",[359],{"type":175,"value":357},{"type":169,"tag":177,"props":361,"children":362},{},[363],{"type":175,"value":364},"相比于汽车行业如今平稳发展的时代，软件行业目前属于给马车安上蒸汽机的黄金年代。我们应该保持开发的心态，迎接这种无限的可能，不断优化方案，解决问题，而不是陷入把蒸汽机安装到马车前面还是后面这种无意义的争论中。",{"type":169,"tag":177,"props":366,"children":367},{},[368],{"type":175,"value":369},"不要非黑即白地做判断，不要过早的确认方案，也要避免陷入沉没成本，需要谨记的是，用户界面始终有无限可能。",{"type":169,"tag":170,"props":371,"children":373},{"id":372},"写实主义",[374],{"type":175,"value":372},{"type":169,"tag":177,"props":376,"children":377},{},[378],{"type":175,"value":379},"写实主义有助于帮助用户快速建立正确的心智模型，前提是界面和现实是一致的，你不应该指望给用户展示一本写实的书还要他使用“上一页”和“下一页”进行翻页操作。",{"type":169,"tag":177,"props":381,"children":382},{},[383],{"type":175,"value":384},"微软的 Metro 设计语言开创了“扁平化”的设计潮流，消除了长期以来的一些不良设计隐喻，带来了许多积极的作用。不过还是那句话，应该保持开放心态，而不是固守规范。",{"type":169,"tag":170,"props":386,"children":388},{"id":387},"自然用户界面nui",[389],{"type":175,"value":390},"自然用户界面（NUI）",{"type":169,"tag":177,"props":392,"children":393},{},[394],{"type":175,"value":395},"NUI 是继 CLI、GUI 的衍生，主要依赖用户的摄像机、麦克风、手指、触控笔做交互。",{"type":169,"tag":177,"props":397,"children":398},{},[399],{"type":175,"value":400},"要做出符合自然的用户界面，有以下几点可参考：",{"type":169,"tag":220,"props":402,"children":403},{},[404,409,414],{"type":169,"tag":224,"props":405,"children":406},{},[407],{"type":175,"value":408},"用户可以直接操作元素，同时系统对用户地操作要及时反馈。在此之上保留容错和撤销等逻辑。",{"type":169,"tag":224,"props":410,"children":411},{},[412],{"type":175,"value":413},"不要逼迫用户学习精准和复杂的交互方式，那可能是 NUI 到 CLI 的一种演进的倒退。",{"type":169,"tag":224,"props":415,"children":416},{},[417],{"type":175,"value":418},"参考其它主流应用，因为用户可能习惯了某种用户界面。",{"type":169,"tag":170,"props":420,"children":422},{"id":421},"费茨法则",[423],{"type":175,"value":421},{"type":169,"tag":177,"props":425,"children":426},{},[427],{"type":175,"value":428},"费茨法则非常简单，即在桌面系统中，元素越大、离鼠标越近，那么越容易被点击，由此引出了一个计算元素点击难易度的公式。同时，由于鼠标一般不会超出屏幕，所以处于屏幕边缘，尤其是拐角处的元素可用性是非常高的。",{"type":169,"tag":177,"props":430,"children":431},{},[432],{"type":175,"value":433},"人们根据费茨法则，发明了点击上下文菜单和环形菜单这种交互方式。",{"type":169,"tag":170,"props":435,"children":437},{"id":436},"动画",[438],{"type":175,"value":436},{"type":169,"tag":177,"props":440,"children":441},{},[442],{"type":175,"value":443},"动画并不是仅仅为了华丽的外表，它应该被用来提示界面上状态的变化，辅助用户建立正确的心智模型。为此，我们可以参考卡通，学习把元素当作“固体”，适时做出形变、加速度、模糊等夸张的效果。",{"type":169,"tag":170,"props":445,"children":447},{"id":446},"一致性",[448],{"type":175,"value":446},{"type":169,"tag":177,"props":450,"children":451},{},[452],{"type":175,"value":453},"人们识别界面元素（类别）的能力很强，所以不用担心你把界面元素设计成了不同的样式。相比关兴界面样式的一致性问题，你更需要担心的是，如何确保“行为不同的元素，外观也不相同”。",{"type":169,"tag":170,"props":455,"children":457},{"id":456},"可发现性",[458],{"type":175,"value":456},{"type":169,"tag":177,"props":460,"children":461},{},[462],{"type":175,"value":463},"屏幕空间有限，所以不要期望把所有元素都塞进有限的屏幕中。你可以依据元素的重要性，给这些属性的优先级进行排序：",{"type":169,"tag":220,"props":465,"children":466},{},[467,472],{"type":169,"tag":224,"props":468,"children":469},{},[470],{"type":175,"value":471},"某些元素在某些阶段可以隐藏（如选中图片后才能展示旋转按钮）",{"type":169,"tag":224,"props":473,"children":474},{},[475],{"type":175,"value":476},"利用动画及元素的空间属性如尺寸、颜色、形状等增强或弱化元素的优先级",{"type":169,"tag":170,"props":478,"children":480},{"id":479},"不要打断用户",[481],{"type":175,"value":479},{"type":169,"tag":177,"props":483,"children":484},{},[485],{"type":175,"value":486},"从打断中恢复是需要时间的，所以打断用户是一种不明智也鲁莽的操作。系统在可能的情况下可以替用户做出操作，除非没有选择，在需要做出重大决策时再询问用户的意见。当然，最好是能一次性问完。",{"type":169,"tag":170,"props":488,"children":490},{"id":489},"使用撤销代替打断",[491],{"type":175,"value":489},{"type":169,"tag":177,"props":493,"children":494},{},[495],{"type":175,"value":496},"我们几乎已经快被“您确定要...”这种弹窗烦死了，从这类弹窗中，几乎不能再得到有意义的警告。不过可以使用撤销和延迟决定这种策略减少这类弹窗的出现次数。当用户习惯后，我们的系统就能重新找回弹窗的警示作用。",{"type":169,"tag":170,"props":498,"children":500},{"id":499},"模式",[501],{"type":175,"value":499},{"type":169,"tag":177,"props":503,"children":504},{},[505],{"type":175,"value":506},"模式标记着应用程序进入某种特定的状态，用户界面发生了变化。合理使用模式可以减少用户界面的复杂度。",{"type":169,"tag":177,"props":508,"children":509},{},[510],{"type":175,"value":511},"不过模式也经常出问题，如“隐式模式”，用户往往难以察觉程序进入了某种模式；“意外的模式”，界面某种元素可能偷取交互焦点；“粘性模式”，按某个按钮就会持续一段时间的模式，用户往往不知道应该怎么退出模式。",{"type":169,"tag":177,"props":513,"children":514},{},[515],{"type":175,"value":516},"为了解决模式的问题，我们可以充分利用视动觉或是听觉提醒用户，或是采用“准模式”这种办法，只有在用户持续操作时，模式才持续存在。",{"type":169,"tag":170,"props":518,"children":520},{"id":519},"避免使用首选项",[521],{"type":175,"value":519},{"type":169,"tag":177,"props":523,"children":524},{},[525],{"type":175,"value":526},"首先得区分设置、配置、首选项、个性化这四个词的含义：",{"type":169,"tag":220,"props":528,"children":529},{},[530,535,540,545],{"type":169,"tag":224,"props":531,"children":532},{},[533],{"type":175,"value":534},"设置：用户对应用程序做出的全局性质的功能或配置上的修改",{"type":169,"tag":224,"props":536,"children":537},{},[538],{"type":175,"value":539},"配置：应用程序运行所不能缺失的一些设置",{"type":169,"tag":224,"props":541,"children":542},{},[543],{"type":175,"value":544},"个性化：仅仅是一些视觉变化",{"type":169,"tag":224,"props":546,"children":547},{},[548],{"type":175,"value":549},"首选项：不影响应用程序运行的功能性改变",{"type":169,"tag":177,"props":551,"children":552},{},[553],{"type":175,"value":554},"避免使用首选项是因为“你比用户更专业”。大部分情况下，你应该明白自己在创造什么产品，提用户做出决定。",{"type":169,"tag":170,"props":556,"children":558},{"id":557},"层级结构",[559],{"type":175,"value":557},{"type":169,"tag":177,"props":561,"children":562},{},[563],{"type":175,"value":564},"相比层级结构，我们通常更擅长使用时间和空间推理组织数据。",{"type":169,"tag":177,"props":566,"children":567},{},[568],{"type":175,"value":569},"或者，你可以提供层级结构的优化方案，比如：减少或限制层级结构嵌套、支持在多处存放同一个文件、支持元信息编辑（打标签）、结合时间或空间推理或设置数据访问的备选方案（如搜索）。",{"type":169,"tag":170,"props":571,"children":573},{"id":572},"速度",[574],{"type":175,"value":572},{"type":169,"tag":177,"props":576,"children":577},{},[578],{"type":175,"value":579},"应用程序不能运行得太快（点币机），但肯定也不能太慢。如果你想让一个操作看起来“瞬间完成”，通常应该让它们在 0.1 秒内返回结果。",{"type":169,"tag":177,"props":581,"children":582},{},[583],{"type":175,"value":584},"相比精确计时，我们更关心用户的感知速度，因为有许多小技巧可以减轻用户等待时的焦虑。",{"type":169,"tag":170,"props":586,"children":588},{"id":587},"避免加入过多新功能",[589],{"type":175,"value":587},{"type":169,"tag":177,"props":591,"children":592},{},[593],{"type":175,"value":594},"用户总是提一切奇怪的、可能只有他自己会用到的功能，这部分功能对其他用户来说几乎毫无益处。当然，这个得看你怎么看待用户了，比如有些公司就喜欢“如果能让一些用户季度热爱我们的产品，我们愿意失去一些用户”。",{"type":169,"tag":177,"props":596,"children":597},{},[598],{"type":175,"value":599},"面对用户要求加入新功能时，可以尝试多问几个为什么，挖掘出需求背后的需求。这样你也许有机会通过优化现有功能、替换旧功能等方式达到完成需求的目的。",{"type":169,"tag":170,"props":601,"children":603},{"id":602},"移除功能",[604],{"type":175,"value":602},{"type":169,"tag":177,"props":606,"children":607},{},[608],{"type":175,"value":609},"人们总是厌恶损失，即便他们从未拥有（或使用）过某件东西，所以移除功能处理得不好的话，这会是一个很让用户沮丧的决定。如果你决定要移除一个功能，最好提供该功能的备选方案。你也可以尝试从用户数据中分析功能的使用情况以确定是否要移除一个功能。需要额外提及的是，使用率低并不意味着不重要，比如说手机搬家功能。",{"type":169,"tag":170,"props":611,"children":613},{"id":612},"向电子游戏学习",[614],{"type":175,"value":612},{"type":169,"tag":177,"props":616,"children":617},{},[618],{"type":175,"value":619},"根据心流理论，当满足以下三个条件时，人们会感到愉悦：",{"type":169,"tag":621,"props":622,"children":624},"pre",{"code":623},"1.  面临有意义的挑战\n2.  有方法估测是否离完成挑战越来越近\n3.  具备完成挑战的能力\n",[625],{"type":169,"tag":626,"props":627,"children":628},"code",{"__ignoreMap":163},[629],{"type":175,"value":623},{"type":169,"tag":177,"props":631,"children":632},{},[633],{"type":175,"value":634},"在某些方面，产品可以像游戏一样，提供合理的反馈，以向用户展示进度；提供不同层次的深度，或徽章、成就等内容，以鼓励用户探索新内容（需要警惕过度辩护效应）。但和游戏不同的是，你不需要为用户提供任务和挑战，因为往往他们使用应用就是为了处理任务，如果技能熟练的话，他们会尝试去处理更高级的任务。",{"type":169,"tag":170,"props":636,"children":638},{"id":637},"后端设计",[639],{"type":175,"value":637},{"type":169,"tag":177,"props":641,"children":642},{},[643],{"type":175,"value":644},"后端是对人们在电子世界中对所认知事物的一种数字实现，前端则尝试用数字实现复现该认知体验，UI 是前端和后端的桥梁，站在用户的角度设计出容易被理解的界面。",{"type":169,"tag":177,"props":646,"children":647},{},[648],{"type":175,"value":649},"通常来说，后端设计的数据结构会对前端造成重大影响，而且并不是所有诡异的逻辑都能在后端被隐藏，所以 UI 设计师参与到后端设计中来是有必要的，这能让实现模型和用户的心智模型保持一致。",{"type":169,"tag":177,"props":651,"children":652},{},[653],{"type":175,"value":654},"UI 设计师可以尝试学习数据库设计，以理解开发是如何完成需求的。比方说在球队管理系统，教练可以创建球队，增加球员，联络其他球队进行比赛以排名，这个需求的心智模型是非常简单的。但如果球员同时效力多个球队，球员可能被调换到其他队伍，此时历史球队得分以及比赛信息要如何处理？可以看到，这个需求的实现模型是要比心智模型复杂得多的。",{"type":169,"tag":170,"props":656,"children":658},{"id":657},"用户错误即设计错误",[659],{"type":175,"value":657},{"type":169,"tag":177,"props":661,"children":662},{},[663],{"type":175,"value":664},"当用户没有按预期操作软件而出发错误时，设计师与其撇清责任，不如修复问题。请勿责备用户；最好是能解释出错的原因，并提供可能的解决方式。",{"type":169,"tag":177,"props":666,"children":667},{},[668],{"type":175,"value":669},"当然，最好的做法还是避免问题的出现，比方说减少模式或优化模式的使用以避免模式错误、提示或阻止非法输入以避免输入错误。",{"type":169,"tag":170,"props":671,"children":673},{"id":672},"不好的地方",[674],{"type":175,"value":672},{"type":169,"tag":177,"props":676,"children":677},{},[678],{"type":175,"value":679},"前言差点把我劝退。",{"type":169,"tag":177,"props":681,"children":682},{},[683],{"type":175,"value":684},"前言，理念类章节小节，作者尝试使用论文《强制实施自行车头盔法案对健康的影响》中描述的现象：自行车头盔法案强制实施后讨厌带头盔的人可能会选择其他交通方式，以举证“设计的改版经常并未如你所愿，有时甚至与你的预期完全相反”。这本身没错，但他的解释太糟糕了，原文引用如下：“这些法案是避免了一些伤害，但是对于那些完全放弃使用自行车（取而代之开汽车）的人来说，他们所遭受的健康影响全然是负面的。” 啥，健康影响还能是负面的？难倒开汽车会比骑自行车安全么？我 Get 不到。",{"title":163,"searchDepth":686,"depth":686,"links":687},2,[688,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713],{"id":172,"depth":686,"text":172,"children":689},[690,692],{"id":190,"depth":691,"text":190},3,{"id":264,"depth":691,"text":264},{"id":322,"depth":686,"text":322},{"id":342,"depth":686,"text":342},{"id":357,"depth":686,"text":357},{"id":372,"depth":686,"text":372},{"id":387,"depth":686,"text":390},{"id":421,"depth":686,"text":421},{"id":436,"depth":686,"text":436},{"id":446,"depth":686,"text":446},{"id":456,"depth":686,"text":456},{"id":479,"depth":686,"text":479},{"id":489,"depth":686,"text":489},{"id":499,"depth":686,"text":499},{"id":519,"depth":686,"text":519},{"id":557,"depth":686,"text":557},{"id":572,"depth":686,"text":572},{"id":587,"depth":686,"text":587},{"id":602,"depth":686,"text":602},{"id":612,"depth":686,"text":612},{"id":637,"depth":686,"text":637},{"id":657,"depth":686,"text":657},{"id":672,"depth":686,"text":672},"markdown","content:_books:dear-ui.md","content","_books/dear-ui.md","_books/dear-ui","md",[721,724],{"_path":722,"title":723,"description":163},"/_books/9787535792006","打开黑箱——通过36部经典电影解密脑科学",{"_path":725,"title":726,"description":163},"/_books/ecma-262","ECMAScript Standard",1748756309415]