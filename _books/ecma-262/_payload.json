[{"data":1,"prerenderedAt":1557},["ShallowReactive",2],{"navigation":3,"/_books/ecma-262":416,"/_books/ecma-262-surround":1550},[4,32,86,108,135,141,147,153,399,405,411],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🗂️ 使你的 Git Graph 变得清晰易懂","/articles/clean-git-tree",{"title":42,"_path":43},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":45,"_path":46},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":48,"_path":49},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":51,"_path":52},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":54,"_path":55},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":57,"_path":58},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":60,"_path":61},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":63,"_path":64},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":66,"_path":67},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":69,"_path":70},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":72,"_path":73},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":75,"_path":76},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":78,"_path":79},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":81,"_path":82},"🚝 四十二篇系列","/articles/fourty-two",{"title":84,"_path":85},"📝 技术博客归档","/articles/fold",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102,105],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107},"🖨️ any-to-base64","/tools/any-to-base64",{"title":109,"_path":110,"children":111},"吉他剧场 / Music","/music",[112,114,117,120,123,126,129,132],{"title":113,"_path":110},"🎸 FingerStyle！",{"title":115,"_path":116},"🌬️ 等待的风","/music/wind",{"title":118,"_path":119},"💕 约定的海洋","/music/ocean",{"title":121,"_path":122},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":124,"_path":125},"🌏 残酷天使的行动纲领","/music/eva",{"title":127,"_path":128},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":130,"_path":131},"🍷 Wu Wei","/music/wu-wei",{"title":133,"_path":134},"🌅 无题","/music/untitled",{"title":136,"_path":137,"children":138},"画点什么 / Paint","/paint",[139],{"title":140,"_path":137},"🚧 正在施工",{"title":142,"_path":143,"children":144},"读书笔记 / Notes","/books",[145],{"title":146,"_path":143},"📕 读书笔记",{"title":148,"_path":149,"children":150},"知识地图 / Maps","/maps",[151],{"title":152,"_path":149},"🏁 知识地图",{"title":154,"_path":155,"children":156},"零散的笔记 / Gists","/gists",[157,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":158,"_path":155},"🧊 Gists",{"title":160,"_path":161},"网站的可访问性","/gists/accessibility",{"title":163,"_path":164},"Bit","/gists/bit",{"title":166,"_path":167},"图片模糊","/gists/blur",{"title":169,"_path":170},"渲染相关笔记","/gists/c4d",{"title":172,"_path":173},"CDN 问题记录","/gists/cdn",{"title":175,"_path":176},"消毒剂","/gists/cleaner",{"title":178,"_path":179},"Windows Command","/gists/cmd",{"title":181,"_path":182},"Command","/gists/command",{"title":184,"_path":185},"复杂科学","/gists/complexity-science",{"title":187,"_path":188},"GitHub Copilot","/gists/copilot",{"title":190,"_path":191},"宇宙","/gists/cosmos",{"title":193,"_path":194},"C++","/gists/cpp",{"title":196,"_path":197},"Data Structure","/gists/data-structure",{"title":199,"_path":200},"DEPRESSION","/gists/depression",{"title":202,"_path":203},"设计模式","/gists/design-patterns",{"title":205,"_path":206},"Developer Experience","/gists/developer-experience",{"title":208,"_path":209},"Device Metrics","/gists/device-metrix",{"title":211,"_path":212},"数字化转型","/gists/digital-transformation",{"title":214,"_path":215},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":217,"_path":218},"正则表达式","/gists/eegex",{"title":220,"_path":221},"Emoji","/gists/emoji",{"title":223,"_path":224},"工程","/gists/engineering",{"title":226,"_path":227},"熵","/gists/entropy",{"title":229,"_path":230},"Environment","/gists/environment",{"title":232,"_path":233},"Erlang","/gists/erlang",{"title":235,"_path":236},"逃离塔克夫","/gists/escape-from-tarkov",{"title":238,"_path":239},"ESNext (ES6-ES11)","/gists/esnext",{"title":241,"_path":242},"Eval！","/gists/eval",{"title":244,"_path":245},"Flutter","/gists/flutter",{"title":247,"_path":248},"字体","/gists/font",{"title":250,"_path":251},"JS 函数式编程","/gists/functional",{"title":253,"_path":254},"游戏化","/gists/gamification",{"title":256,"_path":257},"Google C++ Standard","/gists/google-cpp-standard",{"title":259,"_path":260},"双向链接完全体","/gists/graph",{"title":262,"_path":263},"Hardwares","/gists/hardwares",{"title":265,"_path":266},"哈希冲突","/gists/hash-collision",{"title":268,"_path":269},"信息设计","/gists/information-design",{"title":271,"_path":272},"InstantPage","/gists/instant.page",{"title":274,"_path":275},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":277,"_path":278},"KVStore","/gists/key-value-db",{"title":280,"_path":281},"Kubernetes","/gists/kubernetes",{"title":283,"_path":284},"Makefile","/gists/makefile",{"title":286,"_path":287},"Markdown Inline Style","/gists/markdown-nice",{"title":289,"_path":290},"小程序","/gists/miniapp",{"title":292,"_path":293},"减小页面快照体积","/gists/minify-html",{"title":295,"_path":296},"mklink","/gists/mklink",{"title":298,"_path":299},"Mock","/gists/mock",{"title":301,"_path":302},"多人协作系统","/gists/multiplayer",{"title":304,"_path":305},"多端应用","/gists/multy-end-app",{"title":307,"_path":308},"神经科学","/gists/neuroscience",{"title":310,"_path":311},"OO","/gists/oo",{"title":313,"_path":314},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":316,"_path":317},"PInvoke","/gists/pinvoke",{"title":319,"_path":320},"像素","/gists/pixel",{"title":322,"_path":323},"PowerShell","/gists/powershell",{"title":325,"_path":326},"量子","/gists/quantum",{"title":328,"_path":329},"保持好奇心","/gists/questions",{"title":331,"_path":332},"React Native","/gists/react-native",{"title":334,"_path":335},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":337,"_path":338},"SEO","/gists/seo",{"title":340,"_path":341},"Shader","/gists/shader",{"title":343,"_path":344},"Shape Up","/gists/shape-up",{"title":346,"_path":347},"睡觉","/gists/sleep",{"title":349,"_path":350},"记录奇怪的问题","/gists/solved",{"title":352,"_path":353},"States","/gists/states",{"title":355,"_path":356},"Storage","/gists/storage",{"title":358,"_path":359},"音视频流处理","/gists/stream-cli",{"title":361,"_path":362},"Symbol","/gists/symbol",{"title":364,"_path":365},"系统论","/gists/systems-theory",{"title":367,"_path":368},"Taro","/gists/taro",{"title":370,"_path":371},"任务切片","/gists/task-slice",{"title":373,"_path":374},"技术偏好","/gists/tech-dudge",{"title":376,"_path":377},"Untitled","/gists/untitled",{"title":379,"_path":380},"可变字体","/gists/variable-font",{"title":382,"_path":383},"视觉错觉","/gists/visual-illusion",{"title":385,"_path":386},"SS(SSR)","/gists/vpn",{"title":388,"_path":389},"VS Code 插件开发","/gists/vscode-plugin",{"title":391,"_path":392},"Web Components","/gists/web-components",{"title":394,"_path":395},"Windows","/gists/windows",{"title":397,"_path":398},"查缺补漏","/gists/wrong",{"title":400,"_path":401,"children":402},"代码笔记 / Gists","/source-code",[403],{"title":404,"_path":401},"🚄 代码笔记",{"title":406,"_path":407,"children":408},"我 / Abount","/hire",[409],{"title":410,"_path":407},"📬 技术简历",{"title":412,"_path":413,"children":414},"todo","/todo",[415],{"title":412,"_path":413},{"_path":417,"_dir":418,"_draft":419,"_partial":420,"_locale":421,"title":422,"description":421,"body":423,"_type":1544,"_id":1545,"_source":1546,"_file":1547,"_stem":1548,"_extension":1549},"/_books/ecma-262","_books",false,true,"","ECMAScript Standard",{"type":424,"children":425,"toc":1528},"root",[426,434,440,509,515,521,533,635,645,760,765,770,775,784,804,809,837,842,847,852,857,862,867,880,884,889,925,930,935,953,958,963,968,973,978,1459,1522],{"type":427,"tag":428,"props":429,"children":431},"element","h2",{"id":430},"资料",[432],{"type":433,"value":430},"text",{"type":427,"tag":435,"props":436,"children":437},"p",{},[438],{"type":433,"value":439},"一些极其有用的前置参考资料，有助于甄别与理解规范里各种概念，不至于被绕晕。",{"type":427,"tag":441,"props":442,"children":443},"ul",{},[444,463,478,496],{"type":427,"tag":445,"props":446,"children":447},"li",{},[448,461],{"type":427,"tag":449,"props":450,"children":454},"a",{"href":451,"rel":452},"https://timothygu.me/es-howto/",[453],"nofollow",[455],{"type":427,"tag":456,"props":457,"children":458},"i",{},[459],{"type":433,"value":460},"How to Read the ECMAScript Specification",{"type":433,"value":462},"，这个资料简要介绍了一些阅读规范时需要知悉且有助于你理解规范的前置概念并予例说明，比如说抽象操作、内部槽以及内部方法、完成记录、变异对象等。",{"type":427,"tag":445,"props":464,"children":465},{},[466,476],{"type":427,"tag":449,"props":467,"children":470},{"href":468,"rel":469},"https://v8.dev/blog/tags/understanding-ecmascript",[453],[471],{"type":427,"tag":456,"props":472,"children":473},{},[474],{"type":433,"value":475},"Understanding ECMAScript",{"type":433,"value":477},"，V8 团队写的 ECMAScript 阅读指南文章系列，一共四篇，很有参考价值。",{"type":427,"tag":445,"props":479,"children":480},{},[481,488,490,494],{"type":427,"tag":449,"props":482,"children":485},{"href":483,"rel":484},"https://juejin.cn/post/6944587399418609701",[453],[486],{"type":433,"value":487},"《ECMAScript 阅读指南》",{"type":433,"value":489},"，",{"type":427,"tag":456,"props":491,"children":492},{},[493],{"type":433,"value":475},{"type":433,"value":495}," 的翻译版本。",{"type":427,"tag":445,"props":497,"children":498},{},[499],{"type":427,"tag":449,"props":500,"children":503},{"href":501,"rel":502},"https://stackoverflow.com/questions/912479/what-is-the-difference-between-javascript-and-ecmascript",[453],[504],{"type":427,"tag":456,"props":505,"children":506},{},[507],{"type":433,"value":508},"What is the difference between JavaScript and ECMAScript?",{"type":427,"tag":510,"props":511,"children":513},"h3",{"id":512},"快速入门",[514],{"type":433,"value":512},{"type":427,"tag":516,"props":517,"children":519},"h4",{"id":518},"问号和感叹号简写标记",[520],{"type":433,"value":518},{"type":427,"tag":435,"props":522,"children":523},{},[524,531],{"type":427,"tag":525,"props":526,"children":528},"code",{"className":527},[],[529],{"type":433,"value":530},"Let val be ! Foo()",{"type":433,"value":532}," 等同于：",{"type":427,"tag":534,"props":535,"children":539},"pre",{"className":536,"code":537,"language":538,"meta":421,"style":421},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","1. Let val be Foo().\n2. Assert: val is not an abrupt completion.\n3. Set val to val.[[Value]].\n","js",[540],{"type":427,"tag":525,"props":541,"children":542},{"__ignoreMap":421},[543,578,607],{"type":427,"tag":544,"props":545,"children":548},"span",{"class":546,"line":547},"line",1,[549,555,561,567,572],{"type":427,"tag":544,"props":550,"children":552},{"style":551},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[553],{"type":433,"value":554},"1.",{"type":427,"tag":544,"props":556,"children":558},{"style":557},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[559],{"type":433,"value":560}," Let val be ",{"type":427,"tag":544,"props":562,"children":564},{"style":563},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[565],{"type":433,"value":566},"Foo",{"type":427,"tag":544,"props":568,"children":569},{"style":557},[570],{"type":433,"value":571},"()",{"type":427,"tag":544,"props":573,"children":575},{"style":574},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[576],{"type":433,"value":577},".\n",{"type":427,"tag":544,"props":579,"children":581},{"class":546,"line":580},2,[582,587,593,598,603],{"type":427,"tag":544,"props":583,"children":584},{"style":551},[585],{"type":433,"value":586},"2.",{"type":427,"tag":544,"props":588,"children":590},{"style":589},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#F8F8F2",[591],{"type":433,"value":592}," Assert",{"type":427,"tag":544,"props":594,"children":595},{"style":574},[596],{"type":433,"value":597},":",{"type":427,"tag":544,"props":599,"children":600},{"style":557},[601],{"type":433,"value":602}," val is not an abrupt completion",{"type":427,"tag":544,"props":604,"children":605},{"style":574},[606],{"type":433,"value":577},{"type":427,"tag":544,"props":608,"children":610},{"class":546,"line":609},3,[611,616,621,626,631],{"type":427,"tag":544,"props":612,"children":613},{"style":551},[614],{"type":433,"value":615},"3.",{"type":427,"tag":544,"props":617,"children":618},{"style":557},[619],{"type":433,"value":620}," Set val to val",{"type":427,"tag":544,"props":622,"children":623},{"style":574},[624],{"type":433,"value":625},".",{"type":427,"tag":544,"props":627,"children":628},{"style":557},[629],{"type":433,"value":630},"[[Value]]",{"type":427,"tag":544,"props":632,"children":633},{"style":574},[634],{"type":433,"value":577},{"type":427,"tag":435,"props":636,"children":637},{},[638,644],{"type":427,"tag":525,"props":639,"children":641},{"className":640},[],[642],{"type":433,"value":643},"Return ? Foo()",{"type":433,"value":532},{"type":427,"tag":534,"props":646,"children":648},{"className":536,"code":647,"language":538,"meta":421,"style":421},"1. Let temp be Foo().\n2. If temp is an abrupt completion, return temp.\n3. Set temp to temp.[[Value]].\n4. Return NormalCompletion(temp).\n",[649],{"type":427,"tag":525,"props":650,"children":651},{"__ignoreMap":421},[652,676,708,732],{"type":427,"tag":544,"props":653,"children":654},{"class":546,"line":547},[655,659,664,668,672],{"type":427,"tag":544,"props":656,"children":657},{"style":551},[658],{"type":433,"value":554},{"type":427,"tag":544,"props":660,"children":661},{"style":557},[662],{"type":433,"value":663}," Let temp be ",{"type":427,"tag":544,"props":665,"children":666},{"style":563},[667],{"type":433,"value":566},{"type":427,"tag":544,"props":669,"children":670},{"style":557},[671],{"type":433,"value":571},{"type":427,"tag":544,"props":673,"children":674},{"style":574},[675],{"type":433,"value":577},{"type":427,"tag":544,"props":677,"children":678},{"class":546,"line":580},[679,683,688,693,699,704],{"type":427,"tag":544,"props":680,"children":681},{"style":551},[682],{"type":433,"value":586},{"type":427,"tag":544,"props":684,"children":685},{"style":557},[686],{"type":433,"value":687}," If temp is an abrupt completion",{"type":427,"tag":544,"props":689,"children":690},{"style":574},[691],{"type":433,"value":692},",",{"type":427,"tag":544,"props":694,"children":696},{"style":695},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[697],{"type":433,"value":698}," return",{"type":427,"tag":544,"props":700,"children":701},{"style":557},[702],{"type":433,"value":703}," temp",{"type":427,"tag":544,"props":705,"children":706},{"style":574},[707],{"type":433,"value":577},{"type":427,"tag":544,"props":709,"children":710},{"class":546,"line":609},[711,715,720,724,728],{"type":427,"tag":544,"props":712,"children":713},{"style":551},[714],{"type":433,"value":615},{"type":427,"tag":544,"props":716,"children":717},{"style":557},[718],{"type":433,"value":719}," Set temp to temp",{"type":427,"tag":544,"props":721,"children":722},{"style":574},[723],{"type":433,"value":625},{"type":427,"tag":544,"props":725,"children":726},{"style":557},[727],{"type":433,"value":630},{"type":427,"tag":544,"props":729,"children":730},{"style":574},[731],{"type":433,"value":577},{"type":427,"tag":544,"props":733,"children":735},{"class":546,"line":734},4,[736,741,746,751,756],{"type":427,"tag":544,"props":737,"children":738},{"style":551},[739],{"type":433,"value":740},"4.",{"type":427,"tag":544,"props":742,"children":743},{"style":557},[744],{"type":433,"value":745}," Return ",{"type":427,"tag":544,"props":747,"children":748},{"style":563},[749],{"type":433,"value":750},"NormalCompletion",{"type":427,"tag":544,"props":752,"children":753},{"style":557},[754],{"type":433,"value":755},"(temp)",{"type":427,"tag":544,"props":757,"children":758},{"style":574},[759],{"type":433,"value":577},{"type":427,"tag":428,"props":761,"children":763},{"id":762},"规范综述",[764],{"type":433,"value":762},{"type":427,"tag":510,"props":766,"children":768},{"id":767},"语言组成",[769],{"type":433,"value":767},{"type":427,"tag":435,"props":771,"children":772},{},[773],{"type":433,"value":774},"常常能听到：“对象的本质就是实现了规范所要求的内部插槽的结构”，其实该观点源于这张图：",{"type":427,"tag":435,"props":776,"children":777},{},[778],{"type":427,"tag":779,"props":780,"children":783},"img",{"alt":781,"src":782},"对象的本质","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/timothygu.me_es-howto_object-uml.svg.png",[],{"type":427,"tag":435,"props":785,"children":786},{},[787,789,802],{"type":433,"value":788},"ECMAScript 是一种基于对象的基本语言，其基础设置主要依赖宿主提供的对象。基于此概念，可以把 ECMAScript 程序看作一组相互通讯的对象集合。按照规范，对象的精确描述其实应该是：“一个具有零或多个被属性描述符决定的属性的集合",{"type":427,"tag":790,"props":791,"children":792},"sup",{},[793],{"type":427,"tag":449,"props":794,"children":799},{"href":795,"ariaDescribedBy":796,"dataFootnoteRef":421,"id":798},"#user-content-fn-object-definition",[797],"footnote-label","user-content-fnref-object-definition",[800],{"type":433,"value":801},"1",{"type":433,"value":803},"”。对象的属性能持有其它值，包括规范定义的原始值：Undefined、Null、Boolean、Number、BigInt、String、Symbol 和 Object。这里说的 Object 还包括可执行对象，callable object，也就是函数。而由对象内属性持有的函数，叫做方法。",{"type":427,"tag":435,"props":805,"children":806},{},[807],{"type":433,"value":808},"按照上图，规范定义了包括全局对象、Object、Function 等对象以及操作这些对象所需要用到的操作符。除此之外，还定义了用于组织程序的模块，以及行文所需要用到的静态语法。组织方式如下：",{"type":427,"tag":441,"props":810,"children":811},{},[812,817,822,827,832],{"type":427,"tag":445,"props":813,"children":814},{},[815],{"type":433,"value":816},"章节 5 定义了规范所使用的符号约定。",{"type":427,"tag":445,"props":818,"children":819},{},[820],{"type":433,"value":821},"章节 6 至章节 10 定义了语言的运行环境。",{"type":427,"tag":445,"props":823,"children":824},{},[825],{"type":433,"value":826},"章节 11 至章节 17 定义了包括语法、语义在内的所有语言功能。",{"type":427,"tag":445,"props":828,"children":829},{},[830],{"type":433,"value":831},"章节 18 至章节 28 定义了语言依赖的标准库。",{"type":427,"tag":445,"props":833,"children":834},{},[835],{"type":433,"value":836},"章节 29 描述了支持 SharedArrayBuffer 以及 Atomics 对象方法访问的内存一致性模型。",{"type":427,"tag":510,"props":838,"children":840},{"id":839},"语言风格",[841],{"type":433,"value":839},{"type":427,"tag":435,"props":843,"children":844},{},[845],{"type":433,"value":846},"ECMAScript 基于对象，这和 C++、Java 不同的本质区别在于创建对象的方式以及属性共享思路的不同：ECMAScript 支持多种方式创建对象：构造器、字面量或 Object.create，而属性共享则是使用原型。使用原型意味着尽管 ECMAScript 支持类继承，但是是通过原型继承隐式实现的：每一个构造器函数都有一个原型属性，属性名为 prototype。以该构造器创建的实例会携带一个隐式的指向其构造器的原型的引用（称为实例的原型）。而构造器函数也是一个对象实例，所以也会有对应的原型。ECMAScript 依赖这条由对象原型组成的链条式的关系，即原型链，来共享属性。而在经典面向对象语言中，总的来说，属性（也就是状态）是直接挂载在实例上的，只有方法挂载在类上，这也就意味着类继承只约束了继承结构和对象的行为，没有约束对象的状态。此外，由于 ECMAScript 支持动态重写对象，这使得你可以在运行时去创建一个动态的继承结构。",{"type":427,"tag":435,"props":848,"children":849},{},[850],{"type":433,"value":851},"ECMAScript 被故意地设计成类 Java 的语法，这是历史原因。另一方面，其语法被考虑设计成尽可能简单的。规范对语言的具体描述是一种“通用编程语言”，并不是指代语言性质，如“脚本语言”，或是具体实现，如“JavaScript”。有不少其它语言也完整实现了规范，如微软早期的 JScript 和用于 Flash 的 ActionScript。从这个角度来看，JavaScript 应该看作 ECMAScript 的一种方言。",{"type":427,"tag":435,"props":853,"children":854},{},[855],{"type":433,"value":856},"如果从历史的角度来看，ECAMAScript 和 JavaScript 的关系会发生变化。JavaScript 是网景公司在宣发时使用的名称，这个语言一开始叫做 Mocha，而后又叫做 LiveScript。微软在 IE 中也做了一种实现，但由于版权问题卡喉咙，不能叫做 JavaScript，所以改为了 JScript。在网景公司没落前，他们起草了 ECMAScript 标准，用来规划 JavaScript 的发展路线。尽管网景没了，但规范则一直在更新，比如被人们熟知的 ES6，指代 ECMAScript 2015 6th Edition。ECMAScript 和 JavaScript 也就不仅仅应当被理解成标准和实现，它们还属于共生共荣的关系。",{"type":427,"tag":510,"props":858,"children":860},{"id":859},"宿主系统",[861],{"type":433,"value":859},{"type":427,"tag":435,"props":863,"children":864},{},[865],{"type":433,"value":866},"脚本语言是设计给包括非职业开发人员使用的语言，没有必要拥有主程序入口。所以脚本语言通常寄生于特定系统，依赖宿主提供的设施以完善语言功能，使用终端进行操作，以便人员操控程序或自动化流程。规范原本想设计一款 Web 脚本语言，用于客户端以响应用户在界面上的操作，使 Web 页面能够执行逻辑。但随着越来越广泛的使用，功能逐渐完善，ECMAScript 演变成为了通用程序语言。",{"type":427,"tag":435,"props":868,"children":869},{},[870,872,878],{"type":433,"value":871},"每一个支持 ECMAScript 的浏览器或者服务器端都拥有一个对应的宿主系统用于执行脚本。宿主系统的实现需要按照规范，不过规范对某些特征只描述了特定行为而没有给出具体算法。这些具体算法通常会由其它规范来实现，比如说 HTML 规范中定义的宏任务和微任务或 Math.exp 这种特定算法。总而言之，只要宿主系统和规范是一致的（见",{"type":427,"tag":449,"props":873,"children":875},{"href":874},"#%E4%B8%80%E8%87%B4%E6%80%A7",[876],{"type":433,"value":877},"一致性",{"type":433,"value":879},"）并实现了特定的行为如 Host Hooks、Host-defined Fileds、Host-defined Objects、Running Jobs、Internal Methods of Exotic Objects 和 Built-in Objects and Methods，就算是一个完整的 ECMAScript 宿主系统，就能正确地和规范进行交互。",{"type":427,"tag":510,"props":881,"children":882},{"id":877},[883],{"type":433,"value":877},{"type":427,"tag":435,"props":885,"children":886},{},[887],{"type":433,"value":888},"一致性是指，实现了 ECMAScript 规范（以下简称规范）的语言必须满足以下标准：",{"type":427,"tag":441,"props":890,"children":891},{},[892,910,915,920],{"type":427,"tag":445,"props":893,"children":894},{},[895,897,908],{"type":433,"value":896},"规范描述：类型系统、值、对象、属性、函数、语法、语义、严格模式",{"type":427,"tag":790,"props":898,"children":899},{},[900],{"type":427,"tag":449,"props":901,"children":905},{"href":902,"ariaDescribedBy":903,"dataFootnoteRef":421,"id":904},"#user-content-fn-strict-mode",[797],"user-content-fnref-strict-mode",[906],{"type":433,"value":907},"2",{"type":433,"value":909},"。",{"type":427,"tag":445,"props":911,"children":912},{},[913],{"type":433,"value":914},"编码标准：最新的 Unicode 标准以及 USC 标准。",{"type":427,"tag":445,"props":916,"children":917},{},[918],{"type":433,"value":919},"ECMA-402：ECMAScript 的国际化接口标准，即 Intl 相关规范。",{"type":427,"tag":445,"props":921,"children":922},{},[923],{"type":433,"value":924},"可选规范：可选规范要么全部不实现，要么全部都实现。目前在文档中只找到相关 WeakRef.prototype.constructor 初始值必须为 %WeakRef% 的可选规范。",{"type":427,"tag":435,"props":926,"children":927},{},[928],{"type":433,"value":929},"规范允许某些实现了规范的具体语言可以提供超出规范描述的内容，包括类型、值、对象...语法或是保留字的实现。",{"type":427,"tag":435,"props":931,"children":932},{},[933],{"type":433,"value":934},"另外，以下规范和 ECMAScript 相关，但不要求 ECMAScript 的宿主系统实现：",{"type":427,"tag":441,"props":936,"children":937},{},[938,943,948],{"type":427,"tag":445,"props":939,"children":940},{},[941],{"type":433,"value":942},"ISO/IEC 10646：UCS 规范。",{"type":427,"tag":445,"props":944,"children":945},{},[946],{"type":433,"value":947},"ECMA-402：国际化接口规范。",{"type":427,"tag":445,"props":949,"children":950},{},[951],{"type":433,"value":952},"ECMA-404：JSON 规范。",{"type":427,"tag":428,"props":954,"children":956},{"id":955},"规范类型和语言类型",[957],{"type":433,"value":955},{"type":427,"tag":435,"props":959,"children":960},{},[961],{"type":433,"value":962},"为什么要区分语言类型和规范类型呢？顾名思义，语言类型是 JavaScript 所使用的一种类型系统，包含比如 Null、Undefined、Object 等类型，但由于 JavaScript 需要由其它引擎实现，也就是说规范所描述的算法逻辑中携带的基本类型不是 JavaScript 语言中的基本类型，而更可能是诸如 C++ 中的数据类型。",{"type":427,"tag":428,"props":964,"children":966},{"id":965},"其它",[967],{"type":433,"value":965},{"type":427,"tag":510,"props":969,"children":971},{"id":970},"词汇表",[972],{"type":433,"value":970},{"type":427,"tag":435,"props":974,"children":975},{},[976],{"type":433,"value":977},"术语表及本文中相关中英翻译的集合。",{"type":427,"tag":979,"props":980,"children":981},"table",{},[982,1006],{"type":427,"tag":983,"props":984,"children":985},"thead",{},[986],{"type":427,"tag":987,"props":988,"children":989},"tr",{},[990,996,1001],{"type":427,"tag":991,"props":992,"children":993},"th",{},[994],{"type":433,"value":995},"Source",{"type":427,"tag":991,"props":997,"children":998},{},[999],{"type":433,"value":1000},"Chinese",{"type":427,"tag":991,"props":1002,"children":1003},{},[1004],{"type":433,"value":1005},"Meaning",{"type":427,"tag":1007,"props":1008,"children":1009},"tbody",{},[1010,1029,1047,1065,1083,1100,1121,1139,1164,1182,1200,1218,1236,1254,1271,1295,1312,1330,1348,1366,1384,1401,1423,1441],{"type":427,"tag":987,"props":1011,"children":1012},{},[1013,1019,1024],{"type":427,"tag":1014,"props":1015,"children":1016},"td",{},[1017],{"type":433,"value":1018},"attribute",{"type":427,"tag":1014,"props":1020,"children":1021},{},[1022],{"type":433,"value":1023},"属性",{"type":427,"tag":1014,"props":1025,"children":1026},{},[1027],{"type":433,"value":1028},"用来定义属性特性的内部值，比方说 [[Writable]]",{"type":427,"tag":987,"props":1030,"children":1031},{},[1032,1037,1042],{"type":427,"tag":1014,"props":1033,"children":1034},{},[1035],{"type":433,"value":1036},"arbitrary-precision",{"type":427,"tag":1014,"props":1038,"children":1039},{},[1040],{"type":433,"value":1041},"任意精度的",{"type":427,"tag":1014,"props":1043,"children":1044},{},[1045],{"type":433,"value":1046},"略",{"type":427,"tag":987,"props":1048,"children":1049},{},[1050,1055,1060],{"type":427,"tag":1014,"props":1051,"children":1052},{},[1053],{"type":433,"value":1054},"built-in function",{"type":427,"tag":1014,"props":1056,"children":1057},{},[1058],{"type":433,"value":1059},"内置对象",{"type":427,"tag":1014,"props":1061,"children":1062},{},[1063],{"type":433,"value":1064},"作为函数的内置对象",{"type":427,"tag":987,"props":1066,"children":1067},{},[1068,1073,1078],{"type":427,"tag":1014,"props":1069,"children":1070},{},[1071],{"type":433,"value":1072},"built-in method",{"type":427,"tag":1014,"props":1074,"children":1075},{},[1076],{"type":433,"value":1077},"内置方法",{"type":427,"tag":1014,"props":1079,"children":1080},{},[1081],{"type":433,"value":1082},"作为方法的内置函数",{"type":427,"tag":987,"props":1084,"children":1085},{},[1086,1091,1095],{"type":427,"tag":1014,"props":1087,"children":1088},{},[1089],{"type":433,"value":1090},"built-in object",{"type":427,"tag":1014,"props":1092,"children":1093},{},[1094],{"type":433,"value":1059},{"type":427,"tag":1014,"props":1096,"children":1097},{},[1098],{"type":433,"value":1099},"由规范定义（定义了具体实现）的对象",{"type":427,"tag":987,"props":1101,"children":1102},{},[1103,1108,1112],{"type":427,"tag":1014,"props":1104,"children":1105},{},[1106],{"type":433,"value":1107},"conformance",{"type":427,"tag":1014,"props":1109,"children":1110},{},[1111],{"type":433,"value":877},{"type":427,"tag":1014,"props":1113,"children":1114},{},[1115,1117],{"type":433,"value":1116},"见",{"type":427,"tag":449,"props":1118,"children":1119},{"href":874},[1120],{"type":433,"value":877},{"type":427,"tag":987,"props":1122,"children":1123},{},[1124,1129,1134],{"type":427,"tag":1014,"props":1125,"children":1126},{},[1127],{"type":433,"value":1128},"constructor",{"type":427,"tag":1014,"props":1130,"children":1131},{},[1132],{"type":433,"value":1133},"构造函数",{"type":427,"tag":1014,"props":1135,"children":1136},{},[1137],{"type":433,"value":1138},"用于创建和初始化对象用的函数",{"type":427,"tag":987,"props":1140,"children":1141},{},[1142,1147,1152],{"type":427,"tag":1014,"props":1143,"children":1144},{},[1145],{"type":433,"value":1146},"general-purpose programming language",{"type":427,"tag":1014,"props":1148,"children":1149},{},[1150],{"type":433,"value":1151},"通用编程语言",{"type":427,"tag":1014,"props":1153,"children":1154},{},[1155,1157],{"type":433,"value":1156},"被设计为可在各个应用领域使用的语言，见 ",{"type":427,"tag":449,"props":1158,"children":1161},{"href":1159,"rel":1160},"https://en.wikipedia.org/wiki/Special:Search/General-purpose_programming_language",[453],[1162],{"type":433,"value":1163},"General-purpose programming language",{"type":427,"tag":987,"props":1165,"children":1166},{},[1167,1172,1177],{"type":427,"tag":1014,"props":1168,"children":1169},{},[1170],{"type":433,"value":1171},"host-defined",{"type":427,"tag":1014,"props":1173,"children":1174},{},[1175],{"type":433,"value":1176},"宿主实现",{"type":427,"tag":1014,"props":1178,"children":1179},{},[1180],{"type":433,"value":1181},"同 implementation-defined",{"type":427,"tag":987,"props":1183,"children":1184},{},[1185,1190,1195],{"type":427,"tag":1014,"props":1186,"children":1187},{},[1188],{"type":433,"value":1189},"implementation-approximated",{"type":427,"tag":1014,"props":1191,"children":1192},{},[1193],{"type":433,"value":1194},"近似实现",{"type":427,"tag":1014,"props":1196,"children":1197},{},[1198],{"type":433,"value":1199},"规范依赖某些外部实现，而在规范内假设这种实现是“完美的”",{"type":427,"tag":987,"props":1201,"children":1202},{},[1203,1208,1213],{"type":427,"tag":1014,"props":1204,"children":1205},{},[1206],{"type":433,"value":1207},"implementation-defined",{"type":427,"tag":1014,"props":1209,"children":1210},{},[1211],{"type":433,"value":1212},"定义实现",{"type":427,"tag":1014,"props":1214,"children":1215},{},[1216],{"type":433,"value":1217},"规范依赖某些外部实现，外部实现的行为需要与规范描述的一致",{"type":427,"tag":987,"props":1219,"children":1220},{},[1221,1226,1231],{"type":427,"tag":1014,"props":1222,"children":1223},{},[1224],{"type":433,"value":1225},"inherited property",{"type":427,"tag":1014,"props":1227,"children":1228},{},[1229],{"type":433,"value":1230},"继承属性",{"type":427,"tag":1014,"props":1232,"children":1233},{},[1234],{"type":433,"value":1235},"对象内由原型继承的来的属性",{"type":427,"tag":987,"props":1237,"children":1238},{},[1239,1244,1249],{"type":427,"tag":1014,"props":1240,"children":1241},{},[1242],{"type":433,"value":1243},"method",{"type":427,"tag":1014,"props":1245,"children":1246},{},[1247],{"type":433,"value":1248},"方法",{"type":427,"tag":1014,"props":1250,"children":1251},{},[1252],{"type":433,"value":1253},"作为属性值的函数",{"type":427,"tag":987,"props":1255,"children":1256},{},[1257,1262,1267],{"type":427,"tag":1014,"props":1258,"children":1259},{},[1260],{"type":433,"value":1261},"module",{"type":427,"tag":1014,"props":1263,"children":1264},{},[1265],{"type":433,"value":1266},"模块",{"type":427,"tag":1014,"props":1268,"children":1269},{},[1270],{"type":433,"value":1046},{"type":427,"tag":987,"props":1272,"children":1273},{},[1274,1279,1283],{"type":427,"tag":1014,"props":1275,"children":1276},{},[1277],{"type":433,"value":1278},"NaN",{"type":427,"tag":1014,"props":1280,"children":1281},{},[1282],{"type":433,"value":1278},{"type":427,"tag":1014,"props":1284,"children":1285},{},[1286,1293],{"type":427,"tag":449,"props":1287,"children":1290},{"href":1288,"rel":1289},"https://ieeexplore.ieee.org/document/8766229",[453],[1291],{"type":433,"value":1292},"IEEE 754-2019",{"type":433,"value":1294}," 标准定义的“不是一个数字”的数值",{"type":427,"tag":987,"props":1296,"children":1297},{},[1298,1303,1308],{"type":427,"tag":1014,"props":1299,"children":1300},{},[1301],{"type":433,"value":1302},"normative optional",{"type":427,"tag":1014,"props":1304,"children":1305},{},[1306],{"type":433,"value":1307},"可选规范",{"type":427,"tag":1014,"props":1309,"children":1310},{},[1311],{"type":433,"value":1046},{"type":427,"tag":987,"props":1313,"children":1314},{},[1315,1320,1325],{"type":427,"tag":1014,"props":1316,"children":1317},{},[1318],{"type":433,"value":1319},"null value",{"type":427,"tag":1014,"props":1321,"children":1322},{},[1323],{"type":433,"value":1324},"空值",{"type":427,"tag":1014,"props":1326,"children":1327},{},[1328],{"type":433,"value":1329},"表示对象的值的某种刻意缺失",{"type":427,"tag":987,"props":1331,"children":1332},{},[1333,1338,1343],{"type":427,"tag":1014,"props":1334,"children":1335},{},[1336],{"type":433,"value":1337},"ordinary object",{"type":427,"tag":1014,"props":1339,"children":1340},{},[1341],{"type":433,"value":1342},"普通对象",{"type":427,"tag":1014,"props":1344,"children":1345},{},[1346],{"type":433,"value":1347},"实现了所有基本内部槽的默认功能的对象",{"type":427,"tag":987,"props":1349,"children":1350},{},[1351,1356,1361],{"type":427,"tag":1014,"props":1352,"children":1353},{},[1354],{"type":433,"value":1355},"own property",{"type":427,"tag":1014,"props":1357,"children":1358},{},[1359],{"type":433,"value":1360},"自有属性",{"type":427,"tag":1014,"props":1362,"children":1363},{},[1364],{"type":433,"value":1365},"作为该对象拥有的而不是通过原型继承获得的属性就叫该对象的自有属性",{"type":427,"tag":987,"props":1367,"children":1368},{},[1369,1374,1379],{"type":427,"tag":1014,"props":1370,"children":1371},{},[1372],{"type":433,"value":1373},"primitive value",{"type":427,"tag":1014,"props":1375,"children":1376},{},[1377],{"type":433,"value":1378},"原始值",{"type":427,"tag":1014,"props":1380,"children":1381},{},[1382],{"type":433,"value":1383},"不可再分的数据，Undefined, Null, Boolean, Number, BigInt, Symbol, String 中的一种",{"type":427,"tag":987,"props":1385,"children":1386},{},[1387,1392,1396],{"type":427,"tag":1014,"props":1388,"children":1389},{},[1390],{"type":433,"value":1391},"property",{"type":427,"tag":1014,"props":1393,"children":1394},{},[1395],{"type":433,"value":1023},{"type":427,"tag":1014,"props":1397,"children":1398},{},[1399],{"type":433,"value":1400},"组成对象的基本部分，包含键和对应的值",{"type":427,"tag":987,"props":1402,"children":1403},{},[1404,1409,1414],{"type":427,"tag":1014,"props":1405,"children":1406},{},[1407],{"type":433,"value":1408},"prototype",{"type":427,"tag":1014,"props":1410,"children":1411},{},[1412],{"type":433,"value":1413},"原型",{"type":427,"tag":1014,"props":1415,"children":1416},{},[1417,1418],{"type":433,"value":1116},{"type":427,"tag":449,"props":1419,"children":1421},{"href":1420},"#%E8%AF%AD%E8%A8%80%E9%A3%8E%E6%A0%BC",[1422],{"type":433,"value":839},{"type":427,"tag":987,"props":1424,"children":1425},{},[1426,1431,1436],{"type":427,"tag":1014,"props":1427,"children":1428},{},[1429],{"type":433,"value":1430},"standard object",{"type":427,"tag":1014,"props":1432,"children":1433},{},[1434],{"type":433,"value":1435},"标准对象",{"type":427,"tag":1014,"props":1437,"children":1438},{},[1439],{"type":433,"value":1440},"行为（语义）和规范一致的对象",{"type":427,"tag":987,"props":1442,"children":1443},{},[1444,1449,1454],{"type":427,"tag":1014,"props":1445,"children":1446},{},[1447],{"type":433,"value":1448},"undefined value",{"type":427,"tag":1014,"props":1450,"children":1451},{},[1452],{"type":433,"value":1453},"未定义值",{"type":427,"tag":1014,"props":1455,"children":1456},{},[1457],{"type":433,"value":1458},"表示变量初始化成功但未赋值",{"type":427,"tag":1460,"props":1461,"children":1464},"section",{"className":1462,"dataFootnotes":421},[1463],"footnotes",[1465,1472],{"type":427,"tag":428,"props":1466,"children":1469},{"className":1467,"id":797},[1468],"sr-only",[1470],{"type":433,"value":1471},"Footnotes",{"type":427,"tag":1473,"props":1474,"children":1475},"ol",{},[1476,1500],{"type":427,"tag":445,"props":1477,"children":1479},{"id":1478},"user-content-fn-object-definition",[1480,1482,1489,1491],{"type":433,"value":1481},"定义见 ",{"type":427,"tag":449,"props":1483,"children":1486},{"href":1484,"rel":1485},"https://262.ecma-international.org/12.0/#sec-terms-and-definitions-object",[453],[1487],{"type":433,"value":1488}," Terms and Definitions - object",{"type":433,"value":1490}," ",{"type":427,"tag":449,"props":1492,"children":1497},{"href":1493,"ariaLabel":1494,"className":1495,"dataFootnoteBackref":421},"#user-content-fnref-object-definition","Back to reference 1",[1496],"data-footnote-backref",[1498],{"type":433,"value":1499},"↩",{"type":427,"tag":445,"props":1501,"children":1503},{"id":1502},"user-content-fn-strict-mode",[1504,1506,1513,1515],{"type":433,"value":1505},"必须支持严格模式和非严格模式，并且能在一个符合程序中同时运行严格模式和非严格模式的代码，见 ",{"type":427,"tag":449,"props":1507,"children":1510},{"href":1508,"rel":1509},"https://262.ecma-international.org/12.0/#sec-strict-variant-of-ecmascript",[453],[1511],{"type":433,"value":1512},"The Strict Variant of ECMAScript",{"type":433,"value":1514},"。 ",{"type":427,"tag":449,"props":1516,"children":1520},{"href":1517,"ariaLabel":1518,"className":1519,"dataFootnoteBackref":421},"#user-content-fnref-strict-mode","Back to reference 2",[1496],[1521],{"type":433,"value":1499},{"type":427,"tag":1523,"props":1524,"children":1525},"style",{},[1526],{"type":433,"value":1527},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":421,"searchDepth":580,"depth":580,"links":1529},[1530,1533,1539,1540,1543],{"id":430,"depth":580,"text":430,"children":1531},[1532],{"id":512,"depth":609,"text":512},{"id":762,"depth":580,"text":762,"children":1534},[1535,1536,1537,1538],{"id":767,"depth":609,"text":767},{"id":839,"depth":609,"text":839},{"id":859,"depth":609,"text":859},{"id":877,"depth":609,"text":877},{"id":955,"depth":580,"text":955},{"id":965,"depth":580,"text":965,"children":1541},[1542],{"id":970,"depth":609,"text":970},{"id":797,"depth":580,"text":1471},"markdown","content:_books:ecma-262.md","content","_books/ecma-262.md","_books/ecma-262","md",[1551,1554],{"_path":1552,"title":1553,"description":421},"/_books/dear-ui","亲爱的界面",{"_path":1555,"title":1556,"description":421},"/_books","图书分类参考",1735922162831]