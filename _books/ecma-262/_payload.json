[{"data":1,"prerenderedAt":1525},["Reactive",2],{"navigation":3,"/_books/ecma-262":383,"/_books/ecma-262-surround":1518},[4,32,80,96,123,129,135,366,372,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"图片模糊","/gists/blur",{"title":148,"_path":149},"渲染相关笔记","/gists/c4d",{"title":151,"_path":152},"CDN 问题记录","/gists/cdn",{"title":154,"_path":155},"消毒剂","/gists/cleaner",{"title":157,"_path":158},"Windows Command","/gists/cmd",{"title":160,"_path":161},"Command","/gists/command",{"title":163,"_path":164},"复杂科学","/gists/complexity-science",{"title":166,"_path":167},"宇宙","/gists/cosmos",{"title":169,"_path":170},"C++","/gists/cpp",{"title":172,"_path":173},"Data Structure","/gists/data-structure",{"title":175,"_path":176},"DEPRESSION","/gists/depression",{"title":178,"_path":179},"设计模式","/gists/design-patterns",{"title":181,"_path":182},"Developer Experience","/gists/developer-experience",{"title":184,"_path":185},"Device Metrics","/gists/device-metrix",{"title":187,"_path":188},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":190,"_path":191},"正则表达式","/gists/eegex",{"title":193,"_path":194},"Emoji","/gists/emoji",{"title":196,"_path":197},"工程","/gists/engineering",{"title":199,"_path":200},"熵","/gists/entropy",{"title":202,"_path":203},"Environment","/gists/environment",{"title":205,"_path":206},"Erlang","/gists/erlang",{"title":208,"_path":209},"逃离塔克夫","/gists/escape-from-tarkov",{"title":211,"_path":212},"ESNext (ES6-ES11)","/gists/esnext",{"title":214,"_path":215},"Eval！","/gists/eval",{"title":217,"_path":218},"Flutter","/gists/flutter",{"title":220,"_path":221},"字体","/gists/font",{"title":223,"_path":224},"JS 函数式编程","/gists/functional",{"title":226,"_path":227},"Google C++ Standard","/gists/google-cpp-standard",{"title":229,"_path":230},"双向链接完全体","/gists/graph",{"title":232,"_path":233},"Hardwares","/gists/hardwares",{"title":235,"_path":236},"哈希冲突","/gists/hash-collision",{"title":238,"_path":239},"信息设计","/gists/information-design",{"title":241,"_path":242},"InstantPage","/gists/instant.page",{"title":244,"_path":245},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":247,"_path":248},"KVStore","/gists/key-value-db",{"title":250,"_path":251},"Kubernetes","/gists/kubernetes",{"title":253,"_path":254},"Makefile","/gists/makefile",{"title":256,"_path":257},"Markdown Inline Style","/gists/markdown-nice",{"title":259,"_path":260},"小程序","/gists/miniapp",{"title":262,"_path":263},"减小页面快照体积","/gists/minify-html",{"title":265,"_path":266},"mklink","/gists/mklink",{"title":268,"_path":269},"Mock","/gists/mock",{"title":271,"_path":272},"多端应用","/gists/multy-end-app",{"title":274,"_path":275},"神经科学","/gists/neuroscience",{"title":277,"_path":278},"OO","/gists/oo",{"title":280,"_path":281},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":283,"_path":284},"人物","/gists/person",{"title":286,"_path":287},"PInvoke","/gists/pinvoke",{"title":289,"_path":290},"像素","/gists/pixel",{"title":292,"_path":293},"PowerShell","/gists/powershell",{"title":295,"_path":296},"量子","/gists/quantum",{"title":298,"_path":299},"保持好奇心","/gists/questions",{"title":301,"_path":302},"React Native","/gists/react-native",{"title":304,"_path":305},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":307,"_path":308},"SEO","/gists/seo",{"title":310,"_path":311},"Shader","/gists/shader",{"title":313,"_path":314},"Shape Up","/gists/shape-up",{"title":316,"_path":317},"睡觉","/gists/sleep",{"title":319,"_path":320},"States","/gists/states",{"title":322,"_path":323},"Storage","/gists/storage",{"title":325,"_path":326},"音视频流处理","/gists/stream-cli",{"title":328,"_path":329},"Symbol","/gists/symbol",{"title":331,"_path":332},"系统论","/gists/systems-theory",{"title":334,"_path":335},"Taro","/gists/taro",{"title":337,"_path":338},"任务切片","/gists/task-slice",{"title":340,"_path":341},"技术偏好","/gists/tech-dudge",{"title":343,"_path":344},"Untitled","/gists/untitled",{"title":346,"_path":347},"可变字体","/gists/variable-font",{"title":349,"_path":350},"视觉错觉","/gists/visual-illusion",{"title":352,"_path":353},"SS(SSR)","/gists/vpn",{"title":355,"_path":356},"VS Code 插件开发","/gists/vscode-plugin",{"title":358,"_path":359},"Web Components","/gists/web-components",{"title":361,"_path":362},"Windows","/gists/windows",{"title":364,"_path":365},"查缺补漏","/gists/wrong",{"title":367,"_path":368,"children":369},"代码笔记 / Gists","/source-code",[370],{"title":371,"_path":368},"🚄 代码笔记",{"title":373,"_path":374,"children":375},"我 / Abount","/hire",[376],{"title":377,"_path":374},"📬 技术简历",{"title":379,"_path":380,"children":381},"todo","/todo",[382],{"title":379,"_path":380},{"_path":384,"_dir":385,"_draft":386,"_partial":387,"_locale":388,"title":389,"description":388,"body":390,"_type":1513,"_id":1514,"_source":1515,"_file":1516,"_extension":1517},"/_books/ecma-262","_books",false,true,"","ECMAScript Standard",{"type":391,"children":392,"toc":1497},"root",[393,401,407,476,482,488,500,602,612,727,732,737,742,751,771,776,804,809,814,819,824,829,834,847,851,856,892,897,902,920,925,930,935,940,945,947,1428,1491],{"type":394,"tag":395,"props":396,"children":398},"element","h2",{"id":397},"资料",[399],{"type":400,"value":397},"text",{"type":394,"tag":402,"props":403,"children":404},"p",{},[405],{"type":400,"value":406},"一些极其有用的前置参考资料，有助于甄别与理解规范里各种概念，不至于被绕晕。",{"type":394,"tag":408,"props":409,"children":410},"ul",{},[411,430,445,463],{"type":394,"tag":412,"props":413,"children":414},"li",{},[415,428],{"type":394,"tag":416,"props":417,"children":421},"a",{"href":418,"rel":419},"https://timothygu.me/es-howto/",[420],"nofollow",[422],{"type":394,"tag":423,"props":424,"children":425},"i",{},[426],{"type":400,"value":427},"How to Read the ECMAScript Specification",{"type":400,"value":429},"，这个资料简要介绍了一些阅读规范时需要知悉且有助于你理解规范的前置概念并予例说明，比如说抽象操作、内部槽以及内部方法、完成记录、变异对象等。",{"type":394,"tag":412,"props":431,"children":432},{},[433,443],{"type":394,"tag":416,"props":434,"children":437},{"href":435,"rel":436},"https://v8.dev/blog/tags/understanding-ecmascript",[420],[438],{"type":394,"tag":423,"props":439,"children":440},{},[441],{"type":400,"value":442},"Understanding ECMAScript",{"type":400,"value":444},"，V8 团队写的 ECMAScript 阅读指南文章系列，一共四篇，很有参考价值。",{"type":394,"tag":412,"props":446,"children":447},{},[448,455,457,461],{"type":394,"tag":416,"props":449,"children":452},{"href":450,"rel":451},"https://juejin.cn/post/6944587399418609701",[420],[453],{"type":400,"value":454},"《ECMAScript 阅读指南》",{"type":400,"value":456},"，",{"type":394,"tag":423,"props":458,"children":459},{},[460],{"type":400,"value":442},{"type":400,"value":462}," 的翻译版本。",{"type":394,"tag":412,"props":464,"children":465},{},[466],{"type":394,"tag":416,"props":467,"children":470},{"href":468,"rel":469},"https://stackoverflow.com/questions/912479/what-is-the-difference-between-javascript-and-ecmascript",[420],[471],{"type":394,"tag":423,"props":472,"children":473},{},[474],{"type":400,"value":475},"What is the difference between JavaScript and ECMAScript?",{"type":394,"tag":477,"props":478,"children":480},"h3",{"id":479},"快速入门",[481],{"type":400,"value":479},{"type":394,"tag":483,"props":484,"children":486},"h4",{"id":485},"问号和感叹号简写标记",[487],{"type":400,"value":485},{"type":394,"tag":402,"props":489,"children":490},{},[491,498],{"type":394,"tag":492,"props":493,"children":495},"code",{"className":494},[],[496],{"type":400,"value":497},"Let val be ! Foo()",{"type":400,"value":499}," 等同于：",{"type":394,"tag":501,"props":502,"children":506},"pre",{"className":503,"code":504,"language":505,"meta":388,"style":388},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","1. Let val be Foo().\n2. Assert: val is not an abrupt completion.\n3. Set val to val.[[Value]].\n","js",[507],{"type":394,"tag":492,"props":508,"children":509},{"__ignoreMap":388},[510,545,574],{"type":394,"tag":511,"props":512,"children":515},"span",{"class":513,"line":514},"line",1,[516,522,528,534,539],{"type":394,"tag":511,"props":517,"children":519},{"style":518},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[520],{"type":400,"value":521},"1.",{"type":394,"tag":511,"props":523,"children":525},{"style":524},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[526],{"type":400,"value":527}," Let val be ",{"type":394,"tag":511,"props":529,"children":531},{"style":530},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[532],{"type":400,"value":533},"Foo",{"type":394,"tag":511,"props":535,"children":536},{"style":524},[537],{"type":400,"value":538},"()",{"type":394,"tag":511,"props":540,"children":542},{"style":541},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[543],{"type":400,"value":544},".\n",{"type":394,"tag":511,"props":546,"children":548},{"class":513,"line":547},2,[549,554,560,565,570],{"type":394,"tag":511,"props":550,"children":551},{"style":518},[552],{"type":400,"value":553},"2.",{"type":394,"tag":511,"props":555,"children":557},{"style":556},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#F8F8F2",[558],{"type":400,"value":559}," Assert",{"type":394,"tag":511,"props":561,"children":562},{"style":541},[563],{"type":400,"value":564},":",{"type":394,"tag":511,"props":566,"children":567},{"style":524},[568],{"type":400,"value":569}," val is not an abrupt completion",{"type":394,"tag":511,"props":571,"children":572},{"style":541},[573],{"type":400,"value":544},{"type":394,"tag":511,"props":575,"children":577},{"class":513,"line":576},3,[578,583,588,593,598],{"type":394,"tag":511,"props":579,"children":580},{"style":518},[581],{"type":400,"value":582},"3.",{"type":394,"tag":511,"props":584,"children":585},{"style":524},[586],{"type":400,"value":587}," Set val to val",{"type":394,"tag":511,"props":589,"children":590},{"style":541},[591],{"type":400,"value":592},".",{"type":394,"tag":511,"props":594,"children":595},{"style":524},[596],{"type":400,"value":597},"[[Value]]",{"type":394,"tag":511,"props":599,"children":600},{"style":541},[601],{"type":400,"value":544},{"type":394,"tag":402,"props":603,"children":604},{},[605,611],{"type":394,"tag":492,"props":606,"children":608},{"className":607},[],[609],{"type":400,"value":610},"Return ? Foo()",{"type":400,"value":499},{"type":394,"tag":501,"props":613,"children":615},{"className":503,"code":614,"language":505,"meta":388,"style":388},"1. Let temp be Foo().\n2. If temp is an abrupt completion, return temp.\n3. Set temp to temp.[[Value]].\n4. Return NormalCompletion(temp).\n",[616],{"type":394,"tag":492,"props":617,"children":618},{"__ignoreMap":388},[619,643,675,699],{"type":394,"tag":511,"props":620,"children":621},{"class":513,"line":514},[622,626,631,635,639],{"type":394,"tag":511,"props":623,"children":624},{"style":518},[625],{"type":400,"value":521},{"type":394,"tag":511,"props":627,"children":628},{"style":524},[629],{"type":400,"value":630}," Let temp be ",{"type":394,"tag":511,"props":632,"children":633},{"style":530},[634],{"type":400,"value":533},{"type":394,"tag":511,"props":636,"children":637},{"style":524},[638],{"type":400,"value":538},{"type":394,"tag":511,"props":640,"children":641},{"style":541},[642],{"type":400,"value":544},{"type":394,"tag":511,"props":644,"children":645},{"class":513,"line":547},[646,650,655,660,666,671],{"type":394,"tag":511,"props":647,"children":648},{"style":518},[649],{"type":400,"value":553},{"type":394,"tag":511,"props":651,"children":652},{"style":524},[653],{"type":400,"value":654}," If temp is an abrupt completion",{"type":394,"tag":511,"props":656,"children":657},{"style":541},[658],{"type":400,"value":659},",",{"type":394,"tag":511,"props":661,"children":663},{"style":662},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[664],{"type":400,"value":665}," return",{"type":394,"tag":511,"props":667,"children":668},{"style":524},[669],{"type":400,"value":670}," temp",{"type":394,"tag":511,"props":672,"children":673},{"style":541},[674],{"type":400,"value":544},{"type":394,"tag":511,"props":676,"children":677},{"class":513,"line":576},[678,682,687,691,695],{"type":394,"tag":511,"props":679,"children":680},{"style":518},[681],{"type":400,"value":582},{"type":394,"tag":511,"props":683,"children":684},{"style":524},[685],{"type":400,"value":686}," Set temp to temp",{"type":394,"tag":511,"props":688,"children":689},{"style":541},[690],{"type":400,"value":592},{"type":394,"tag":511,"props":692,"children":693},{"style":524},[694],{"type":400,"value":597},{"type":394,"tag":511,"props":696,"children":697},{"style":541},[698],{"type":400,"value":544},{"type":394,"tag":511,"props":700,"children":702},{"class":513,"line":701},4,[703,708,713,718,723],{"type":394,"tag":511,"props":704,"children":705},{"style":518},[706],{"type":400,"value":707},"4.",{"type":394,"tag":511,"props":709,"children":710},{"style":524},[711],{"type":400,"value":712}," Return ",{"type":394,"tag":511,"props":714,"children":715},{"style":530},[716],{"type":400,"value":717},"NormalCompletion",{"type":394,"tag":511,"props":719,"children":720},{"style":524},[721],{"type":400,"value":722},"(temp)",{"type":394,"tag":511,"props":724,"children":725},{"style":541},[726],{"type":400,"value":544},{"type":394,"tag":395,"props":728,"children":730},{"id":729},"规范综述",[731],{"type":400,"value":729},{"type":394,"tag":477,"props":733,"children":735},{"id":734},"语言组成",[736],{"type":400,"value":734},{"type":394,"tag":402,"props":738,"children":739},{},[740],{"type":400,"value":741},"常常能听到：“对象的本质就是实现了规范所要求的内部插槽的结构”，其实该观点源于这张图：",{"type":394,"tag":402,"props":743,"children":744},{},[745],{"type":394,"tag":746,"props":747,"children":750},"img",{"alt":748,"src":749},"对象的本质","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/timothygu.me_es-howto_object-uml.svg.png",[],{"type":394,"tag":402,"props":752,"children":753},{},[754,756,769],{"type":400,"value":755},"ECMAScript 是一种基于对象的基本语言，其基础设置主要依赖宿主提供的对象。基于此概念，可以把 ECMAScript 程序看作一组相互通讯的对象集合。按照规范，对象的精确描述其实应该是：“一个具有零或多个被属性描述符决定的属性的集合",{"type":394,"tag":757,"props":758,"children":759},"sup",{},[760],{"type":394,"tag":416,"props":761,"children":766},{"href":762,"ariaDescribedBy":763,"dataFootnoteRef":388,"id":765},"#user-content-fn-object-definition",[764],"footnote-label","user-content-fnref-object-definition",[767],{"type":400,"value":768},"1",{"type":400,"value":770},"”。对象的属性能持有其它值，包括规范定义的原始值：Undefined、Null、Boolean、Number、BigInt、String、Symbol 和 Object。这里说的 Object 还包括可执行对象，callable object，也就是函数。而由对象内属性持有的函数，叫做方法。",{"type":394,"tag":402,"props":772,"children":773},{},[774],{"type":400,"value":775},"按照上图，规范定义了包括全局对象、Object、Function 等对象以及操作这些对象所需要用到的操作符。除此之外，还定义了用于组织程序的模块，以及行文所需要用到的静态语法。组织方式如下：",{"type":394,"tag":408,"props":777,"children":778},{},[779,784,789,794,799],{"type":394,"tag":412,"props":780,"children":781},{},[782],{"type":400,"value":783},"章节 5 定义了规范所使用的符号约定。",{"type":394,"tag":412,"props":785,"children":786},{},[787],{"type":400,"value":788},"章节 6 至章节 10 定义了语言的运行环境。",{"type":394,"tag":412,"props":790,"children":791},{},[792],{"type":400,"value":793},"章节 11 至章节 17 定义了包括语法、语义在内的所有语言功能。",{"type":394,"tag":412,"props":795,"children":796},{},[797],{"type":400,"value":798},"章节 18 至章节 28 定义了语言依赖的标准库。",{"type":394,"tag":412,"props":800,"children":801},{},[802],{"type":400,"value":803},"章节 29 描述了支持 SharedArrayBuffer 以及 Atomics 对象方法访问的内存一致性模型。",{"type":394,"tag":477,"props":805,"children":807},{"id":806},"语言风格",[808],{"type":400,"value":806},{"type":394,"tag":402,"props":810,"children":811},{},[812],{"type":400,"value":813},"ECMAScript 基于对象，这和 C++、Java 不同的本质区别在于创建对象的方式以及属性共享思路的不同：ECMAScript 支持多种方式创建对象：构造器、字面量或 Object.create，而属性共享则是使用原型。使用原型意味着尽管 ECMAScript 支持类继承，但是是通过原型继承隐式实现的：每一个构造器函数都有一个原型属性，属性名为 prototype。以该构造器创建的实例会携带一个隐式的指向其构造器的原型的引用（称为实例的原型）。而构造器函数也是一个对象实例，所以也会有对应的原型。ECMAScript 依赖这条由对象原型组成的链条式的关系，即原型链，来共享属性。而在经典面向对象语言中，总的来说，属性（也就是状态）是直接挂载在实例上的，只有方法挂载在类上，这也就意味着类继承只约束了继承结构和对象的行为，没有约束对象的状态。此外，由于 ECMAScript 支持动态重写对象，这使得你可以在运行时去创建一个动态的继承结构。",{"type":394,"tag":402,"props":815,"children":816},{},[817],{"type":400,"value":818},"ECMAScript 被故意地设计成类 Java 的语法，这是历史原因。另一方面，其语法被考虑设计成尽可能简单的。规范对语言的具体描述是一种“通用编程语言”，并不是指代语言性质，如“脚本语言”，或是具体实现，如“JavaScript”。有不少其它语言也完整实现了规范，如微软早期的 JScript 和用于 Flash 的 ActionScript。从这个角度来看，JavaScript 应该看作 ECMAScript 的一种方言。",{"type":394,"tag":402,"props":820,"children":821},{},[822],{"type":400,"value":823},"如果从历史的角度来看，ECAMAScript 和 JavaScript 的关系会发生变化。JavaScript 是网景公司在宣发时使用的名称，这个语言一开始叫做 Mocha，而后又叫做 LiveScript。微软在 IE 中也做了一种实现，但由于版权问题卡喉咙，不能叫做 JavaScript，所以改为了 JScript。在网景公司没落前，他们起草了 ECMAScript 标准，用来规划 JavaScript 的发展路线。尽管网景没了，但规范则一直在更新，比如被人们熟知的 ES6，指代 ECMAScript 2015 6th Edition。ECMAScript 和 JavaScript 也就不仅仅应当被理解成标准和实现，它们还属于共生共荣的关系。",{"type":394,"tag":477,"props":825,"children":827},{"id":826},"宿主系统",[828],{"type":400,"value":826},{"type":394,"tag":402,"props":830,"children":831},{},[832],{"type":400,"value":833},"脚本语言是设计给包括非职业开发人员使用的语言，没有必要拥有主程序入口。所以脚本语言通常寄生于特定系统，依赖宿主提供的设施以完善语言功能，使用终端进行操作，以便人员操控程序或自动化流程。规范原本想设计一款 Web 脚本语言，用于客户端以响应用户在界面上的操作，使 Web 页面能够执行逻辑。但随着越来越广泛的使用，功能逐渐完善，ECMAScript 演变成为了通用程序语言。",{"type":394,"tag":402,"props":835,"children":836},{},[837,839,845],{"type":400,"value":838},"每一个支持 ECMAScript 的浏览器或者服务器端都拥有一个对应的宿主系统用于执行脚本。宿主系统的实现需要按照规范，不过规范对某些特征只描述了特定行为而没有给出具体算法。这些具体算法通常会由其它规范来实现，比如说 HTML 规范中定义的宏任务和微任务或 Math.exp 这种特定算法。总而言之，只要宿主系统和规范是一致的（见",{"type":394,"tag":416,"props":840,"children":842},{"href":841},"#%E4%B8%80%E8%87%B4%E6%80%A7",[843],{"type":400,"value":844},"一致性",{"type":400,"value":846},"）并实现了特定的行为如 Host Hooks、Host-defined Fileds、Host-defined Objects、Running Jobs、Internal Methods of Exotic Objects 和 Built-in Objects and Methods，就算是一个完整的 ECMAScript 宿主系统，就能正确地和规范进行交互。",{"type":394,"tag":477,"props":848,"children":849},{"id":844},[850],{"type":400,"value":844},{"type":394,"tag":402,"props":852,"children":853},{},[854],{"type":400,"value":855},"一致性是指，实现了 ECMAScript 规范（以下简称规范）的语言必须满足以下标准：",{"type":394,"tag":408,"props":857,"children":858},{},[859,877,882,887],{"type":394,"tag":412,"props":860,"children":861},{},[862,864,875],{"type":400,"value":863},"规范描述：类型系统、值、对象、属性、函数、语法、语义、严格模式",{"type":394,"tag":757,"props":865,"children":866},{},[867],{"type":394,"tag":416,"props":868,"children":872},{"href":869,"ariaDescribedBy":870,"dataFootnoteRef":388,"id":871},"#user-content-fn-strict-mode",[764],"user-content-fnref-strict-mode",[873],{"type":400,"value":874},"2",{"type":400,"value":876},"。",{"type":394,"tag":412,"props":878,"children":879},{},[880],{"type":400,"value":881},"编码标准：最新的 Unicode 标准以及 USC 标准。",{"type":394,"tag":412,"props":883,"children":884},{},[885],{"type":400,"value":886},"ECMA-402：ECMAScript 的国际化接口标准，即 Intl 相关规范。",{"type":394,"tag":412,"props":888,"children":889},{},[890],{"type":400,"value":891},"可选规范：可选规范要么全部不实现，要么全部都实现。目前在文档中只找到相关 WeakRef.prototype.constructor 初始值必须为 %WeakRef% 的可选规范。",{"type":394,"tag":402,"props":893,"children":894},{},[895],{"type":400,"value":896},"规范允许某些实现了规范的具体语言可以提供超出规范描述的内容，包括类型、值、对象...语法或是保留字的实现。",{"type":394,"tag":402,"props":898,"children":899},{},[900],{"type":400,"value":901},"另外，以下规范和 ECMAScript 相关，但不要求 ECMAScript 的宿主系统实现：",{"type":394,"tag":408,"props":903,"children":904},{},[905,910,915],{"type":394,"tag":412,"props":906,"children":907},{},[908],{"type":400,"value":909},"ISO/IEC 10646：UCS 规范。",{"type":394,"tag":412,"props":911,"children":912},{},[913],{"type":400,"value":914},"ECMA-402：国际化接口规范。",{"type":394,"tag":412,"props":916,"children":917},{},[918],{"type":400,"value":919},"ECMA-404：JSON 规范。",{"type":394,"tag":395,"props":921,"children":923},{"id":922},"规范类型和语言类型",[924],{"type":400,"value":922},{"type":394,"tag":402,"props":926,"children":927},{},[928],{"type":400,"value":929},"为什么要区分语言类型和规范类型呢？顾名思义，语言类型是 JavaScript 所使用的一种类型系统，包含比如 Null、Undefined、Object 等类型，但由于 JavaScript 需要由其它引擎实现，也就是说规范所描述的算法逻辑中携带的基本类型不是 JavaScript 语言中的基本类型，而更可能是诸如 C++ 中的数据类型。",{"type":394,"tag":395,"props":931,"children":933},{"id":932},"其它",[934],{"type":400,"value":932},{"type":394,"tag":477,"props":936,"children":938},{"id":937},"词汇表",[939],{"type":400,"value":937},{"type":394,"tag":402,"props":941,"children":942},{},[943],{"type":400,"value":944},"术语表及本文中相关中英翻译的集合。",{"type":400,"value":946},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":394,"tag":948,"props":949,"children":950},"table",{},[951,975],{"type":394,"tag":952,"props":953,"children":954},"thead",{},[955],{"type":394,"tag":956,"props":957,"children":958},"tr",{},[959,965,970],{"type":394,"tag":960,"props":961,"children":962},"th",{},[963],{"type":400,"value":964},"Source",{"type":394,"tag":960,"props":966,"children":967},{},[968],{"type":400,"value":969},"Chinese",{"type":394,"tag":960,"props":971,"children":972},{},[973],{"type":400,"value":974},"Meaning",{"type":394,"tag":976,"props":977,"children":978},"tbody",{},[979,998,1016,1034,1052,1069,1090,1108,1133,1151,1169,1187,1205,1223,1240,1264,1281,1299,1317,1335,1353,1370,1392,1410],{"type":394,"tag":956,"props":980,"children":981},{},[982,988,993],{"type":394,"tag":983,"props":984,"children":985},"td",{},[986],{"type":400,"value":987},"attribute",{"type":394,"tag":983,"props":989,"children":990},{},[991],{"type":400,"value":992},"属性",{"type":394,"tag":983,"props":994,"children":995},{},[996],{"type":400,"value":997},"用来定义属性特性的内部值，比方说 [[Writable]]",{"type":394,"tag":956,"props":999,"children":1000},{},[1001,1006,1011],{"type":394,"tag":983,"props":1002,"children":1003},{},[1004],{"type":400,"value":1005},"arbitrary-precision",{"type":394,"tag":983,"props":1007,"children":1008},{},[1009],{"type":400,"value":1010},"任意精度的",{"type":394,"tag":983,"props":1012,"children":1013},{},[1014],{"type":400,"value":1015},"略",{"type":394,"tag":956,"props":1017,"children":1018},{},[1019,1024,1029],{"type":394,"tag":983,"props":1020,"children":1021},{},[1022],{"type":400,"value":1023},"built-in function",{"type":394,"tag":983,"props":1025,"children":1026},{},[1027],{"type":400,"value":1028},"内置对象",{"type":394,"tag":983,"props":1030,"children":1031},{},[1032],{"type":400,"value":1033},"作为函数的内置对象",{"type":394,"tag":956,"props":1035,"children":1036},{},[1037,1042,1047],{"type":394,"tag":983,"props":1038,"children":1039},{},[1040],{"type":400,"value":1041},"built-in method",{"type":394,"tag":983,"props":1043,"children":1044},{},[1045],{"type":400,"value":1046},"内置方法",{"type":394,"tag":983,"props":1048,"children":1049},{},[1050],{"type":400,"value":1051},"作为方法的内置函数",{"type":394,"tag":956,"props":1053,"children":1054},{},[1055,1060,1064],{"type":394,"tag":983,"props":1056,"children":1057},{},[1058],{"type":400,"value":1059},"built-in object",{"type":394,"tag":983,"props":1061,"children":1062},{},[1063],{"type":400,"value":1028},{"type":394,"tag":983,"props":1065,"children":1066},{},[1067],{"type":400,"value":1068},"由规范定义（定义了具体实现）的对象",{"type":394,"tag":956,"props":1070,"children":1071},{},[1072,1077,1081],{"type":394,"tag":983,"props":1073,"children":1074},{},[1075],{"type":400,"value":1076},"conformance",{"type":394,"tag":983,"props":1078,"children":1079},{},[1080],{"type":400,"value":844},{"type":394,"tag":983,"props":1082,"children":1083},{},[1084,1086],{"type":400,"value":1085},"见",{"type":394,"tag":416,"props":1087,"children":1088},{"href":841},[1089],{"type":400,"value":844},{"type":394,"tag":956,"props":1091,"children":1092},{},[1093,1098,1103],{"type":394,"tag":983,"props":1094,"children":1095},{},[1096],{"type":400,"value":1097},"constructor",{"type":394,"tag":983,"props":1099,"children":1100},{},[1101],{"type":400,"value":1102},"构造函数",{"type":394,"tag":983,"props":1104,"children":1105},{},[1106],{"type":400,"value":1107},"用于创建和初始化对象用的函数",{"type":394,"tag":956,"props":1109,"children":1110},{},[1111,1116,1121],{"type":394,"tag":983,"props":1112,"children":1113},{},[1114],{"type":400,"value":1115},"general-purpose programming language",{"type":394,"tag":983,"props":1117,"children":1118},{},[1119],{"type":400,"value":1120},"通用编程语言",{"type":394,"tag":983,"props":1122,"children":1123},{},[1124,1126],{"type":400,"value":1125},"被设计为可在各个应用领域使用的语言，见 ",{"type":394,"tag":416,"props":1127,"children":1130},{"href":1128,"rel":1129},"https://en.wikipedia.org/wiki/Special:Search/General-purpose_programming_language",[420],[1131],{"type":400,"value":1132},"General-purpose programming language",{"type":394,"tag":956,"props":1134,"children":1135},{},[1136,1141,1146],{"type":394,"tag":983,"props":1137,"children":1138},{},[1139],{"type":400,"value":1140},"host-defined",{"type":394,"tag":983,"props":1142,"children":1143},{},[1144],{"type":400,"value":1145},"宿主实现",{"type":394,"tag":983,"props":1147,"children":1148},{},[1149],{"type":400,"value":1150},"同 implementation-defined",{"type":394,"tag":956,"props":1152,"children":1153},{},[1154,1159,1164],{"type":394,"tag":983,"props":1155,"children":1156},{},[1157],{"type":400,"value":1158},"implementation-approximated",{"type":394,"tag":983,"props":1160,"children":1161},{},[1162],{"type":400,"value":1163},"近似实现",{"type":394,"tag":983,"props":1165,"children":1166},{},[1167],{"type":400,"value":1168},"规范依赖某些外部实现，而在规范内假设这种实现是“完美的”",{"type":394,"tag":956,"props":1170,"children":1171},{},[1172,1177,1182],{"type":394,"tag":983,"props":1173,"children":1174},{},[1175],{"type":400,"value":1176},"implementation-defined",{"type":394,"tag":983,"props":1178,"children":1179},{},[1180],{"type":400,"value":1181},"定义实现",{"type":394,"tag":983,"props":1183,"children":1184},{},[1185],{"type":400,"value":1186},"规范依赖某些外部实现，外部实现的行为需要与规范描述的一致",{"type":394,"tag":956,"props":1188,"children":1189},{},[1190,1195,1200],{"type":394,"tag":983,"props":1191,"children":1192},{},[1193],{"type":400,"value":1194},"inherited property",{"type":394,"tag":983,"props":1196,"children":1197},{},[1198],{"type":400,"value":1199},"继承属性",{"type":394,"tag":983,"props":1201,"children":1202},{},[1203],{"type":400,"value":1204},"对象内由原型继承的来的属性",{"type":394,"tag":956,"props":1206,"children":1207},{},[1208,1213,1218],{"type":394,"tag":983,"props":1209,"children":1210},{},[1211],{"type":400,"value":1212},"method",{"type":394,"tag":983,"props":1214,"children":1215},{},[1216],{"type":400,"value":1217},"方法",{"type":394,"tag":983,"props":1219,"children":1220},{},[1221],{"type":400,"value":1222},"作为属性值的函数",{"type":394,"tag":956,"props":1224,"children":1225},{},[1226,1231,1236],{"type":394,"tag":983,"props":1227,"children":1228},{},[1229],{"type":400,"value":1230},"module",{"type":394,"tag":983,"props":1232,"children":1233},{},[1234],{"type":400,"value":1235},"模块",{"type":394,"tag":983,"props":1237,"children":1238},{},[1239],{"type":400,"value":1015},{"type":394,"tag":956,"props":1241,"children":1242},{},[1243,1248,1252],{"type":394,"tag":983,"props":1244,"children":1245},{},[1246],{"type":400,"value":1247},"NaN",{"type":394,"tag":983,"props":1249,"children":1250},{},[1251],{"type":400,"value":1247},{"type":394,"tag":983,"props":1253,"children":1254},{},[1255,1262],{"type":394,"tag":416,"props":1256,"children":1259},{"href":1257,"rel":1258},"https://ieeexplore.ieee.org/document/8766229",[420],[1260],{"type":400,"value":1261},"IEEE 754-2019",{"type":400,"value":1263}," 标准定义的“不是一个数字”的数值",{"type":394,"tag":956,"props":1265,"children":1266},{},[1267,1272,1277],{"type":394,"tag":983,"props":1268,"children":1269},{},[1270],{"type":400,"value":1271},"normative optional",{"type":394,"tag":983,"props":1273,"children":1274},{},[1275],{"type":400,"value":1276},"可选规范",{"type":394,"tag":983,"props":1278,"children":1279},{},[1280],{"type":400,"value":1015},{"type":394,"tag":956,"props":1282,"children":1283},{},[1284,1289,1294],{"type":394,"tag":983,"props":1285,"children":1286},{},[1287],{"type":400,"value":1288},"null value",{"type":394,"tag":983,"props":1290,"children":1291},{},[1292],{"type":400,"value":1293},"空值",{"type":394,"tag":983,"props":1295,"children":1296},{},[1297],{"type":400,"value":1298},"表示对象的值的某种刻意缺失",{"type":394,"tag":956,"props":1300,"children":1301},{},[1302,1307,1312],{"type":394,"tag":983,"props":1303,"children":1304},{},[1305],{"type":400,"value":1306},"ordinary object",{"type":394,"tag":983,"props":1308,"children":1309},{},[1310],{"type":400,"value":1311},"普通对象",{"type":394,"tag":983,"props":1313,"children":1314},{},[1315],{"type":400,"value":1316},"实现了所有基本内部槽的默认功能的对象",{"type":394,"tag":956,"props":1318,"children":1319},{},[1320,1325,1330],{"type":394,"tag":983,"props":1321,"children":1322},{},[1323],{"type":400,"value":1324},"own property",{"type":394,"tag":983,"props":1326,"children":1327},{},[1328],{"type":400,"value":1329},"自有属性",{"type":394,"tag":983,"props":1331,"children":1332},{},[1333],{"type":400,"value":1334},"作为该对象拥有的而不是通过原型继承获得的属性就叫该对象的自有属性",{"type":394,"tag":956,"props":1336,"children":1337},{},[1338,1343,1348],{"type":394,"tag":983,"props":1339,"children":1340},{},[1341],{"type":400,"value":1342},"primitive value",{"type":394,"tag":983,"props":1344,"children":1345},{},[1346],{"type":400,"value":1347},"原始值",{"type":394,"tag":983,"props":1349,"children":1350},{},[1351],{"type":400,"value":1352},"不可再分的数据，Undefined, Null, Boolean, Number, BigInt, Symbol, String 中的一种",{"type":394,"tag":956,"props":1354,"children":1355},{},[1356,1361,1365],{"type":394,"tag":983,"props":1357,"children":1358},{},[1359],{"type":400,"value":1360},"property",{"type":394,"tag":983,"props":1362,"children":1363},{},[1364],{"type":400,"value":992},{"type":394,"tag":983,"props":1366,"children":1367},{},[1368],{"type":400,"value":1369},"组成对象的基本部分，包含键和对应的值",{"type":394,"tag":956,"props":1371,"children":1372},{},[1373,1378,1383],{"type":394,"tag":983,"props":1374,"children":1375},{},[1376],{"type":400,"value":1377},"prototype",{"type":394,"tag":983,"props":1379,"children":1380},{},[1381],{"type":400,"value":1382},"原型",{"type":394,"tag":983,"props":1384,"children":1385},{},[1386,1387],{"type":400,"value":1085},{"type":394,"tag":416,"props":1388,"children":1390},{"href":1389},"#%E8%AF%AD%E8%A8%80%E9%A3%8E%E6%A0%BC",[1391],{"type":400,"value":806},{"type":394,"tag":956,"props":1393,"children":1394},{},[1395,1400,1405],{"type":394,"tag":983,"props":1396,"children":1397},{},[1398],{"type":400,"value":1399},"standard object",{"type":394,"tag":983,"props":1401,"children":1402},{},[1403],{"type":400,"value":1404},"标准对象",{"type":394,"tag":983,"props":1406,"children":1407},{},[1408],{"type":400,"value":1409},"行为（语义）和规范一致的对象",{"type":394,"tag":956,"props":1411,"children":1412},{},[1413,1418,1423],{"type":394,"tag":983,"props":1414,"children":1415},{},[1416],{"type":400,"value":1417},"undefined value",{"type":394,"tag":983,"props":1419,"children":1420},{},[1421],{"type":400,"value":1422},"未定义值",{"type":394,"tag":983,"props":1424,"children":1425},{},[1426],{"type":400,"value":1427},"表示变量初始化成功但未赋值",{"type":394,"tag":1429,"props":1430,"children":1433},"section",{"className":1431,"dataFootnotes":388},[1432],"footnotes",[1434,1441],{"type":394,"tag":395,"props":1435,"children":1438},{"className":1436,"id":764},[1437],"sr-only",[1439],{"type":400,"value":1440},"Footnotes",{"type":394,"tag":1442,"props":1443,"children":1444},"ol",{},[1445,1469],{"type":394,"tag":412,"props":1446,"children":1448},{"id":1447},"user-content-fn-object-definition",[1449,1451,1458,1460],{"type":400,"value":1450},"定义见 ",{"type":394,"tag":416,"props":1452,"children":1455},{"href":1453,"rel":1454},"https://262.ecma-international.org/12.0/#sec-terms-and-definitions-object",[420],[1456],{"type":400,"value":1457}," Terms and Definitions - object",{"type":400,"value":1459}," ",{"type":394,"tag":416,"props":1461,"children":1466},{"href":1462,"ariaLabel":1463,"className":1464,"dataFootnoteBackref":388},"#user-content-fnref-object-definition","Back to reference 1",[1465],"data-footnote-backref",[1467],{"type":400,"value":1468},"↩",{"type":394,"tag":412,"props":1470,"children":1472},{"id":1471},"user-content-fn-strict-mode",[1473,1475,1482,1484],{"type":400,"value":1474},"必须支持严格模式和非严格模式，并且能在一个符合程序中同时运行严格模式和非严格模式的代码，见 ",{"type":394,"tag":416,"props":1476,"children":1479},{"href":1477,"rel":1478},"https://262.ecma-international.org/12.0/#sec-strict-variant-of-ecmascript",[420],[1480],{"type":400,"value":1481},"The Strict Variant of ECMAScript",{"type":400,"value":1483},"。 ",{"type":394,"tag":416,"props":1485,"children":1489},{"href":1486,"ariaLabel":1487,"className":1488,"dataFootnoteBackref":388},"#user-content-fnref-strict-mode","Back to reference 2",[1465],[1490],{"type":400,"value":1468},{"type":394,"tag":1492,"props":1493,"children":1494},"style",{},[1495],{"type":400,"value":1496},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":388,"searchDepth":547,"depth":547,"links":1498},[1499,1502,1508,1509,1512],{"id":397,"depth":547,"text":397,"children":1500},[1501],{"id":479,"depth":576,"text":479},{"id":729,"depth":547,"text":729,"children":1503},[1504,1505,1506,1507],{"id":734,"depth":576,"text":734},{"id":806,"depth":576,"text":806},{"id":826,"depth":576,"text":826},{"id":844,"depth":576,"text":844},{"id":922,"depth":547,"text":922},{"id":932,"depth":547,"text":932,"children":1510},[1511],{"id":937,"depth":576,"text":937},{"id":764,"depth":547,"text":1440},"markdown","content:_books:ecma-262.md","content","_books/ecma-262.md","md",[1519,1522],{"_path":1520,"title":1521,"description":388},"/_books/dear-ui","亲爱的界面",{"_path":1523,"title":1524,"description":388},"/_books","图书分类参考",1708107581664]