[{"data":1,"prerenderedAt":1528},["Reactive",2],{"navigation":3,"/_books/ecma-262":386,"/_books/ecma-262-surround":1521},[4,32,80,96,123,129,135,369,375,381],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"Bit","/gists/bit",{"title":148,"_path":149},"图片模糊","/gists/blur",{"title":151,"_path":152},"渲染相关笔记","/gists/c4d",{"title":154,"_path":155},"CDN 问题记录","/gists/cdn",{"title":157,"_path":158},"消毒剂","/gists/cleaner",{"title":160,"_path":161},"Windows Command","/gists/cmd",{"title":163,"_path":164},"Command","/gists/command",{"title":166,"_path":167},"复杂科学","/gists/complexity-science",{"title":169,"_path":170},"宇宙","/gists/cosmos",{"title":172,"_path":173},"C++","/gists/cpp",{"title":175,"_path":176},"Data Structure","/gists/data-structure",{"title":178,"_path":179},"DEPRESSION","/gists/depression",{"title":181,"_path":182},"设计模式","/gists/design-patterns",{"title":184,"_path":185},"Developer Experience","/gists/developer-experience",{"title":187,"_path":188},"Device Metrics","/gists/device-metrix",{"title":190,"_path":191},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":193,"_path":194},"正则表达式","/gists/eegex",{"title":196,"_path":197},"Emoji","/gists/emoji",{"title":199,"_path":200},"工程","/gists/engineering",{"title":202,"_path":203},"熵","/gists/entropy",{"title":205,"_path":206},"Environment","/gists/environment",{"title":208,"_path":209},"Erlang","/gists/erlang",{"title":211,"_path":212},"逃离塔克夫","/gists/escape-from-tarkov",{"title":214,"_path":215},"ESNext (ES6-ES11)","/gists/esnext",{"title":217,"_path":218},"Eval！","/gists/eval",{"title":220,"_path":221},"Flutter","/gists/flutter",{"title":223,"_path":224},"字体","/gists/font",{"title":226,"_path":227},"JS 函数式编程","/gists/functional",{"title":229,"_path":230},"Google C++ Standard","/gists/google-cpp-standard",{"title":232,"_path":233},"双向链接完全体","/gists/graph",{"title":235,"_path":236},"Hardwares","/gists/hardwares",{"title":238,"_path":239},"哈希冲突","/gists/hash-collision",{"title":241,"_path":242},"信息设计","/gists/information-design",{"title":244,"_path":245},"InstantPage","/gists/instant.page",{"title":247,"_path":248},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":250,"_path":251},"KVStore","/gists/key-value-db",{"title":253,"_path":254},"Kubernetes","/gists/kubernetes",{"title":256,"_path":257},"Makefile","/gists/makefile",{"title":259,"_path":260},"Markdown Inline Style","/gists/markdown-nice",{"title":262,"_path":263},"小程序","/gists/miniapp",{"title":265,"_path":266},"减小页面快照体积","/gists/minify-html",{"title":268,"_path":269},"mklink","/gists/mklink",{"title":271,"_path":272},"Mock","/gists/mock",{"title":274,"_path":275},"多端应用","/gists/multy-end-app",{"title":277,"_path":278},"神经科学","/gists/neuroscience",{"title":280,"_path":281},"OO","/gists/oo",{"title":283,"_path":284},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":286,"_path":287},"人物","/gists/person",{"title":289,"_path":290},"PInvoke","/gists/pinvoke",{"title":292,"_path":293},"像素","/gists/pixel",{"title":295,"_path":296},"PowerShell","/gists/powershell",{"title":298,"_path":299},"量子","/gists/quantum",{"title":301,"_path":302},"保持好奇心","/gists/questions",{"title":304,"_path":305},"React Native","/gists/react-native",{"title":307,"_path":308},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":310,"_path":311},"SEO","/gists/seo",{"title":313,"_path":314},"Shader","/gists/shader",{"title":316,"_path":317},"Shape Up","/gists/shape-up",{"title":319,"_path":320},"睡觉","/gists/sleep",{"title":322,"_path":323},"States","/gists/states",{"title":325,"_path":326},"Storage","/gists/storage",{"title":328,"_path":329},"音视频流处理","/gists/stream-cli",{"title":331,"_path":332},"Symbol","/gists/symbol",{"title":334,"_path":335},"系统论","/gists/systems-theory",{"title":337,"_path":338},"Taro","/gists/taro",{"title":340,"_path":341},"任务切片","/gists/task-slice",{"title":343,"_path":344},"技术偏好","/gists/tech-dudge",{"title":346,"_path":347},"Untitled","/gists/untitled",{"title":349,"_path":350},"可变字体","/gists/variable-font",{"title":352,"_path":353},"视觉错觉","/gists/visual-illusion",{"title":355,"_path":356},"SS(SSR)","/gists/vpn",{"title":358,"_path":359},"VS Code 插件开发","/gists/vscode-plugin",{"title":361,"_path":362},"Web Components","/gists/web-components",{"title":364,"_path":365},"Windows","/gists/windows",{"title":367,"_path":368},"查缺补漏","/gists/wrong",{"title":370,"_path":371,"children":372},"代码笔记 / Gists","/source-code",[373],{"title":374,"_path":371},"🚄 代码笔记",{"title":376,"_path":377,"children":378},"我 / Abount","/hire",[379],{"title":380,"_path":377},"📬 技术简历",{"title":382,"_path":383,"children":384},"todo","/todo",[385],{"title":382,"_path":383},{"_path":387,"_dir":388,"_draft":389,"_partial":390,"_locale":391,"title":392,"description":391,"body":393,"_type":1516,"_id":1517,"_source":1518,"_file":1519,"_extension":1520},"/_books/ecma-262","_books",false,true,"","ECMAScript Standard",{"type":394,"children":395,"toc":1500},"root",[396,404,410,479,485,491,503,605,615,730,735,740,745,754,774,779,807,812,817,822,827,832,837,850,854,859,895,900,905,923,928,933,938,943,948,950,1431,1494],{"type":397,"tag":398,"props":399,"children":401},"element","h2",{"id":400},"资料",[402],{"type":403,"value":400},"text",{"type":397,"tag":405,"props":406,"children":407},"p",{},[408],{"type":403,"value":409},"一些极其有用的前置参考资料，有助于甄别与理解规范里各种概念，不至于被绕晕。",{"type":397,"tag":411,"props":412,"children":413},"ul",{},[414,433,448,466],{"type":397,"tag":415,"props":416,"children":417},"li",{},[418,431],{"type":397,"tag":419,"props":420,"children":424},"a",{"href":421,"rel":422},"https://timothygu.me/es-howto/",[423],"nofollow",[425],{"type":397,"tag":426,"props":427,"children":428},"i",{},[429],{"type":403,"value":430},"How to Read the ECMAScript Specification",{"type":403,"value":432},"，这个资料简要介绍了一些阅读规范时需要知悉且有助于你理解规范的前置概念并予例说明，比如说抽象操作、内部槽以及内部方法、完成记录、变异对象等。",{"type":397,"tag":415,"props":434,"children":435},{},[436,446],{"type":397,"tag":419,"props":437,"children":440},{"href":438,"rel":439},"https://v8.dev/blog/tags/understanding-ecmascript",[423],[441],{"type":397,"tag":426,"props":442,"children":443},{},[444],{"type":403,"value":445},"Understanding ECMAScript",{"type":403,"value":447},"，V8 团队写的 ECMAScript 阅读指南文章系列，一共四篇，很有参考价值。",{"type":397,"tag":415,"props":449,"children":450},{},[451,458,460,464],{"type":397,"tag":419,"props":452,"children":455},{"href":453,"rel":454},"https://juejin.cn/post/6944587399418609701",[423],[456],{"type":403,"value":457},"《ECMAScript 阅读指南》",{"type":403,"value":459},"，",{"type":397,"tag":426,"props":461,"children":462},{},[463],{"type":403,"value":445},{"type":403,"value":465}," 的翻译版本。",{"type":397,"tag":415,"props":467,"children":468},{},[469],{"type":397,"tag":419,"props":470,"children":473},{"href":471,"rel":472},"https://stackoverflow.com/questions/912479/what-is-the-difference-between-javascript-and-ecmascript",[423],[474],{"type":397,"tag":426,"props":475,"children":476},{},[477],{"type":403,"value":478},"What is the difference between JavaScript and ECMAScript?",{"type":397,"tag":480,"props":481,"children":483},"h3",{"id":482},"快速入门",[484],{"type":403,"value":482},{"type":397,"tag":486,"props":487,"children":489},"h4",{"id":488},"问号和感叹号简写标记",[490],{"type":403,"value":488},{"type":397,"tag":405,"props":492,"children":493},{},[494,501],{"type":397,"tag":495,"props":496,"children":498},"code",{"className":497},[],[499],{"type":403,"value":500},"Let val be ! Foo()",{"type":403,"value":502}," 等同于：",{"type":397,"tag":504,"props":505,"children":509},"pre",{"className":506,"code":507,"language":508,"meta":391,"style":391},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","1. Let val be Foo().\n2. Assert: val is not an abrupt completion.\n3. Set val to val.[[Value]].\n","js",[510],{"type":397,"tag":495,"props":511,"children":512},{"__ignoreMap":391},[513,548,577],{"type":397,"tag":514,"props":515,"children":518},"span",{"class":516,"line":517},"line",1,[519,525,531,537,542],{"type":397,"tag":514,"props":520,"children":522},{"style":521},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[523],{"type":403,"value":524},"1.",{"type":397,"tag":514,"props":526,"children":528},{"style":527},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[529],{"type":403,"value":530}," Let val be ",{"type":397,"tag":514,"props":532,"children":534},{"style":533},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[535],{"type":403,"value":536},"Foo",{"type":397,"tag":514,"props":538,"children":539},{"style":527},[540],{"type":403,"value":541},"()",{"type":397,"tag":514,"props":543,"children":545},{"style":544},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[546],{"type":403,"value":547},".\n",{"type":397,"tag":514,"props":549,"children":551},{"class":516,"line":550},2,[552,557,563,568,573],{"type":397,"tag":514,"props":553,"children":554},{"style":521},[555],{"type":403,"value":556},"2.",{"type":397,"tag":514,"props":558,"children":560},{"style":559},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#F8F8F2",[561],{"type":403,"value":562}," Assert",{"type":397,"tag":514,"props":564,"children":565},{"style":544},[566],{"type":403,"value":567},":",{"type":397,"tag":514,"props":569,"children":570},{"style":527},[571],{"type":403,"value":572}," val is not an abrupt completion",{"type":397,"tag":514,"props":574,"children":575},{"style":544},[576],{"type":403,"value":547},{"type":397,"tag":514,"props":578,"children":580},{"class":516,"line":579},3,[581,586,591,596,601],{"type":397,"tag":514,"props":582,"children":583},{"style":521},[584],{"type":403,"value":585},"3.",{"type":397,"tag":514,"props":587,"children":588},{"style":527},[589],{"type":403,"value":590}," Set val to val",{"type":397,"tag":514,"props":592,"children":593},{"style":544},[594],{"type":403,"value":595},".",{"type":397,"tag":514,"props":597,"children":598},{"style":527},[599],{"type":403,"value":600},"[[Value]]",{"type":397,"tag":514,"props":602,"children":603},{"style":544},[604],{"type":403,"value":547},{"type":397,"tag":405,"props":606,"children":607},{},[608,614],{"type":397,"tag":495,"props":609,"children":611},{"className":610},[],[612],{"type":403,"value":613},"Return ? Foo()",{"type":403,"value":502},{"type":397,"tag":504,"props":616,"children":618},{"className":506,"code":617,"language":508,"meta":391,"style":391},"1. Let temp be Foo().\n2. If temp is an abrupt completion, return temp.\n3. Set temp to temp.[[Value]].\n4. Return NormalCompletion(temp).\n",[619],{"type":397,"tag":495,"props":620,"children":621},{"__ignoreMap":391},[622,646,678,702],{"type":397,"tag":514,"props":623,"children":624},{"class":516,"line":517},[625,629,634,638,642],{"type":397,"tag":514,"props":626,"children":627},{"style":521},[628],{"type":403,"value":524},{"type":397,"tag":514,"props":630,"children":631},{"style":527},[632],{"type":403,"value":633}," Let temp be ",{"type":397,"tag":514,"props":635,"children":636},{"style":533},[637],{"type":403,"value":536},{"type":397,"tag":514,"props":639,"children":640},{"style":527},[641],{"type":403,"value":541},{"type":397,"tag":514,"props":643,"children":644},{"style":544},[645],{"type":403,"value":547},{"type":397,"tag":514,"props":647,"children":648},{"class":516,"line":550},[649,653,658,663,669,674],{"type":397,"tag":514,"props":650,"children":651},{"style":521},[652],{"type":403,"value":556},{"type":397,"tag":514,"props":654,"children":655},{"style":527},[656],{"type":403,"value":657}," If temp is an abrupt completion",{"type":397,"tag":514,"props":659,"children":660},{"style":544},[661],{"type":403,"value":662},",",{"type":397,"tag":514,"props":664,"children":666},{"style":665},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit",[667],{"type":403,"value":668}," return",{"type":397,"tag":514,"props":670,"children":671},{"style":527},[672],{"type":403,"value":673}," temp",{"type":397,"tag":514,"props":675,"children":676},{"style":544},[677],{"type":403,"value":547},{"type":397,"tag":514,"props":679,"children":680},{"class":516,"line":579},[681,685,690,694,698],{"type":397,"tag":514,"props":682,"children":683},{"style":521},[684],{"type":403,"value":585},{"type":397,"tag":514,"props":686,"children":687},{"style":527},[688],{"type":403,"value":689}," Set temp to temp",{"type":397,"tag":514,"props":691,"children":692},{"style":544},[693],{"type":403,"value":595},{"type":397,"tag":514,"props":695,"children":696},{"style":527},[697],{"type":403,"value":600},{"type":397,"tag":514,"props":699,"children":700},{"style":544},[701],{"type":403,"value":547},{"type":397,"tag":514,"props":703,"children":705},{"class":516,"line":704},4,[706,711,716,721,726],{"type":397,"tag":514,"props":707,"children":708},{"style":521},[709],{"type":403,"value":710},"4.",{"type":397,"tag":514,"props":712,"children":713},{"style":527},[714],{"type":403,"value":715}," Return ",{"type":397,"tag":514,"props":717,"children":718},{"style":533},[719],{"type":403,"value":720},"NormalCompletion",{"type":397,"tag":514,"props":722,"children":723},{"style":527},[724],{"type":403,"value":725},"(temp)",{"type":397,"tag":514,"props":727,"children":728},{"style":544},[729],{"type":403,"value":547},{"type":397,"tag":398,"props":731,"children":733},{"id":732},"规范综述",[734],{"type":403,"value":732},{"type":397,"tag":480,"props":736,"children":738},{"id":737},"语言组成",[739],{"type":403,"value":737},{"type":397,"tag":405,"props":741,"children":742},{},[743],{"type":403,"value":744},"常常能听到：“对象的本质就是实现了规范所要求的内部插槽的结构”，其实该观点源于这张图：",{"type":397,"tag":405,"props":746,"children":747},{},[748],{"type":397,"tag":749,"props":750,"children":753},"img",{"alt":751,"src":752},"对象的本质","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/timothygu.me_es-howto_object-uml.svg.png",[],{"type":397,"tag":405,"props":755,"children":756},{},[757,759,772],{"type":403,"value":758},"ECMAScript 是一种基于对象的基本语言，其基础设置主要依赖宿主提供的对象。基于此概念，可以把 ECMAScript 程序看作一组相互通讯的对象集合。按照规范，对象的精确描述其实应该是：“一个具有零或多个被属性描述符决定的属性的集合",{"type":397,"tag":760,"props":761,"children":762},"sup",{},[763],{"type":397,"tag":419,"props":764,"children":769},{"href":765,"ariaDescribedBy":766,"dataFootnoteRef":391,"id":768},"#user-content-fn-object-definition",[767],"footnote-label","user-content-fnref-object-definition",[770],{"type":403,"value":771},"1",{"type":403,"value":773},"”。对象的属性能持有其它值，包括规范定义的原始值：Undefined、Null、Boolean、Number、BigInt、String、Symbol 和 Object。这里说的 Object 还包括可执行对象，callable object，也就是函数。而由对象内属性持有的函数，叫做方法。",{"type":397,"tag":405,"props":775,"children":776},{},[777],{"type":403,"value":778},"按照上图，规范定义了包括全局对象、Object、Function 等对象以及操作这些对象所需要用到的操作符。除此之外，还定义了用于组织程序的模块，以及行文所需要用到的静态语法。组织方式如下：",{"type":397,"tag":411,"props":780,"children":781},{},[782,787,792,797,802],{"type":397,"tag":415,"props":783,"children":784},{},[785],{"type":403,"value":786},"章节 5 定义了规范所使用的符号约定。",{"type":397,"tag":415,"props":788,"children":789},{},[790],{"type":403,"value":791},"章节 6 至章节 10 定义了语言的运行环境。",{"type":397,"tag":415,"props":793,"children":794},{},[795],{"type":403,"value":796},"章节 11 至章节 17 定义了包括语法、语义在内的所有语言功能。",{"type":397,"tag":415,"props":798,"children":799},{},[800],{"type":403,"value":801},"章节 18 至章节 28 定义了语言依赖的标准库。",{"type":397,"tag":415,"props":803,"children":804},{},[805],{"type":403,"value":806},"章节 29 描述了支持 SharedArrayBuffer 以及 Atomics 对象方法访问的内存一致性模型。",{"type":397,"tag":480,"props":808,"children":810},{"id":809},"语言风格",[811],{"type":403,"value":809},{"type":397,"tag":405,"props":813,"children":814},{},[815],{"type":403,"value":816},"ECMAScript 基于对象，这和 C++、Java 不同的本质区别在于创建对象的方式以及属性共享思路的不同：ECMAScript 支持多种方式创建对象：构造器、字面量或 Object.create，而属性共享则是使用原型。使用原型意味着尽管 ECMAScript 支持类继承，但是是通过原型继承隐式实现的：每一个构造器函数都有一个原型属性，属性名为 prototype。以该构造器创建的实例会携带一个隐式的指向其构造器的原型的引用（称为实例的原型）。而构造器函数也是一个对象实例，所以也会有对应的原型。ECMAScript 依赖这条由对象原型组成的链条式的关系，即原型链，来共享属性。而在经典面向对象语言中，总的来说，属性（也就是状态）是直接挂载在实例上的，只有方法挂载在类上，这也就意味着类继承只约束了继承结构和对象的行为，没有约束对象的状态。此外，由于 ECMAScript 支持动态重写对象，这使得你可以在运行时去创建一个动态的继承结构。",{"type":397,"tag":405,"props":818,"children":819},{},[820],{"type":403,"value":821},"ECMAScript 被故意地设计成类 Java 的语法，这是历史原因。另一方面，其语法被考虑设计成尽可能简单的。规范对语言的具体描述是一种“通用编程语言”，并不是指代语言性质，如“脚本语言”，或是具体实现，如“JavaScript”。有不少其它语言也完整实现了规范，如微软早期的 JScript 和用于 Flash 的 ActionScript。从这个角度来看，JavaScript 应该看作 ECMAScript 的一种方言。",{"type":397,"tag":405,"props":823,"children":824},{},[825],{"type":403,"value":826},"如果从历史的角度来看，ECAMAScript 和 JavaScript 的关系会发生变化。JavaScript 是网景公司在宣发时使用的名称，这个语言一开始叫做 Mocha，而后又叫做 LiveScript。微软在 IE 中也做了一种实现，但由于版权问题卡喉咙，不能叫做 JavaScript，所以改为了 JScript。在网景公司没落前，他们起草了 ECMAScript 标准，用来规划 JavaScript 的发展路线。尽管网景没了，但规范则一直在更新，比如被人们熟知的 ES6，指代 ECMAScript 2015 6th Edition。ECMAScript 和 JavaScript 也就不仅仅应当被理解成标准和实现，它们还属于共生共荣的关系。",{"type":397,"tag":480,"props":828,"children":830},{"id":829},"宿主系统",[831],{"type":403,"value":829},{"type":397,"tag":405,"props":833,"children":834},{},[835],{"type":403,"value":836},"脚本语言是设计给包括非职业开发人员使用的语言，没有必要拥有主程序入口。所以脚本语言通常寄生于特定系统，依赖宿主提供的设施以完善语言功能，使用终端进行操作，以便人员操控程序或自动化流程。规范原本想设计一款 Web 脚本语言，用于客户端以响应用户在界面上的操作，使 Web 页面能够执行逻辑。但随着越来越广泛的使用，功能逐渐完善，ECMAScript 演变成为了通用程序语言。",{"type":397,"tag":405,"props":838,"children":839},{},[840,842,848],{"type":403,"value":841},"每一个支持 ECMAScript 的浏览器或者服务器端都拥有一个对应的宿主系统用于执行脚本。宿主系统的实现需要按照规范，不过规范对某些特征只描述了特定行为而没有给出具体算法。这些具体算法通常会由其它规范来实现，比如说 HTML 规范中定义的宏任务和微任务或 Math.exp 这种特定算法。总而言之，只要宿主系统和规范是一致的（见",{"type":397,"tag":419,"props":843,"children":845},{"href":844},"#%E4%B8%80%E8%87%B4%E6%80%A7",[846],{"type":403,"value":847},"一致性",{"type":403,"value":849},"）并实现了特定的行为如 Host Hooks、Host-defined Fileds、Host-defined Objects、Running Jobs、Internal Methods of Exotic Objects 和 Built-in Objects and Methods，就算是一个完整的 ECMAScript 宿主系统，就能正确地和规范进行交互。",{"type":397,"tag":480,"props":851,"children":852},{"id":847},[853],{"type":403,"value":847},{"type":397,"tag":405,"props":855,"children":856},{},[857],{"type":403,"value":858},"一致性是指，实现了 ECMAScript 规范（以下简称规范）的语言必须满足以下标准：",{"type":397,"tag":411,"props":860,"children":861},{},[862,880,885,890],{"type":397,"tag":415,"props":863,"children":864},{},[865,867,878],{"type":403,"value":866},"规范描述：类型系统、值、对象、属性、函数、语法、语义、严格模式",{"type":397,"tag":760,"props":868,"children":869},{},[870],{"type":397,"tag":419,"props":871,"children":875},{"href":872,"ariaDescribedBy":873,"dataFootnoteRef":391,"id":874},"#user-content-fn-strict-mode",[767],"user-content-fnref-strict-mode",[876],{"type":403,"value":877},"2",{"type":403,"value":879},"。",{"type":397,"tag":415,"props":881,"children":882},{},[883],{"type":403,"value":884},"编码标准：最新的 Unicode 标准以及 USC 标准。",{"type":397,"tag":415,"props":886,"children":887},{},[888],{"type":403,"value":889},"ECMA-402：ECMAScript 的国际化接口标准，即 Intl 相关规范。",{"type":397,"tag":415,"props":891,"children":892},{},[893],{"type":403,"value":894},"可选规范：可选规范要么全部不实现，要么全部都实现。目前在文档中只找到相关 WeakRef.prototype.constructor 初始值必须为 %WeakRef% 的可选规范。",{"type":397,"tag":405,"props":896,"children":897},{},[898],{"type":403,"value":899},"规范允许某些实现了规范的具体语言可以提供超出规范描述的内容，包括类型、值、对象...语法或是保留字的实现。",{"type":397,"tag":405,"props":901,"children":902},{},[903],{"type":403,"value":904},"另外，以下规范和 ECMAScript 相关，但不要求 ECMAScript 的宿主系统实现：",{"type":397,"tag":411,"props":906,"children":907},{},[908,913,918],{"type":397,"tag":415,"props":909,"children":910},{},[911],{"type":403,"value":912},"ISO/IEC 10646：UCS 规范。",{"type":397,"tag":415,"props":914,"children":915},{},[916],{"type":403,"value":917},"ECMA-402：国际化接口规范。",{"type":397,"tag":415,"props":919,"children":920},{},[921],{"type":403,"value":922},"ECMA-404：JSON 规范。",{"type":397,"tag":398,"props":924,"children":926},{"id":925},"规范类型和语言类型",[927],{"type":403,"value":925},{"type":397,"tag":405,"props":929,"children":930},{},[931],{"type":403,"value":932},"为什么要区分语言类型和规范类型呢？顾名思义，语言类型是 JavaScript 所使用的一种类型系统，包含比如 Null、Undefined、Object 等类型，但由于 JavaScript 需要由其它引擎实现，也就是说规范所描述的算法逻辑中携带的基本类型不是 JavaScript 语言中的基本类型，而更可能是诸如 C++ 中的数据类型。",{"type":397,"tag":398,"props":934,"children":936},{"id":935},"其它",[937],{"type":403,"value":935},{"type":397,"tag":480,"props":939,"children":941},{"id":940},"词汇表",[942],{"type":403,"value":940},{"type":397,"tag":405,"props":944,"children":945},{},[946],{"type":403,"value":947},"术语表及本文中相关中英翻译的集合。",{"type":403,"value":949},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":397,"tag":951,"props":952,"children":953},"table",{},[954,978],{"type":397,"tag":955,"props":956,"children":957},"thead",{},[958],{"type":397,"tag":959,"props":960,"children":961},"tr",{},[962,968,973],{"type":397,"tag":963,"props":964,"children":965},"th",{},[966],{"type":403,"value":967},"Source",{"type":397,"tag":963,"props":969,"children":970},{},[971],{"type":403,"value":972},"Chinese",{"type":397,"tag":963,"props":974,"children":975},{},[976],{"type":403,"value":977},"Meaning",{"type":397,"tag":979,"props":980,"children":981},"tbody",{},[982,1001,1019,1037,1055,1072,1093,1111,1136,1154,1172,1190,1208,1226,1243,1267,1284,1302,1320,1338,1356,1373,1395,1413],{"type":397,"tag":959,"props":983,"children":984},{},[985,991,996],{"type":397,"tag":986,"props":987,"children":988},"td",{},[989],{"type":403,"value":990},"attribute",{"type":397,"tag":986,"props":992,"children":993},{},[994],{"type":403,"value":995},"属性",{"type":397,"tag":986,"props":997,"children":998},{},[999],{"type":403,"value":1000},"用来定义属性特性的内部值，比方说 [[Writable]]",{"type":397,"tag":959,"props":1002,"children":1003},{},[1004,1009,1014],{"type":397,"tag":986,"props":1005,"children":1006},{},[1007],{"type":403,"value":1008},"arbitrary-precision",{"type":397,"tag":986,"props":1010,"children":1011},{},[1012],{"type":403,"value":1013},"任意精度的",{"type":397,"tag":986,"props":1015,"children":1016},{},[1017],{"type":403,"value":1018},"略",{"type":397,"tag":959,"props":1020,"children":1021},{},[1022,1027,1032],{"type":397,"tag":986,"props":1023,"children":1024},{},[1025],{"type":403,"value":1026},"built-in function",{"type":397,"tag":986,"props":1028,"children":1029},{},[1030],{"type":403,"value":1031},"内置对象",{"type":397,"tag":986,"props":1033,"children":1034},{},[1035],{"type":403,"value":1036},"作为函数的内置对象",{"type":397,"tag":959,"props":1038,"children":1039},{},[1040,1045,1050],{"type":397,"tag":986,"props":1041,"children":1042},{},[1043],{"type":403,"value":1044},"built-in method",{"type":397,"tag":986,"props":1046,"children":1047},{},[1048],{"type":403,"value":1049},"内置方法",{"type":397,"tag":986,"props":1051,"children":1052},{},[1053],{"type":403,"value":1054},"作为方法的内置函数",{"type":397,"tag":959,"props":1056,"children":1057},{},[1058,1063,1067],{"type":397,"tag":986,"props":1059,"children":1060},{},[1061],{"type":403,"value":1062},"built-in object",{"type":397,"tag":986,"props":1064,"children":1065},{},[1066],{"type":403,"value":1031},{"type":397,"tag":986,"props":1068,"children":1069},{},[1070],{"type":403,"value":1071},"由规范定义（定义了具体实现）的对象",{"type":397,"tag":959,"props":1073,"children":1074},{},[1075,1080,1084],{"type":397,"tag":986,"props":1076,"children":1077},{},[1078],{"type":403,"value":1079},"conformance",{"type":397,"tag":986,"props":1081,"children":1082},{},[1083],{"type":403,"value":847},{"type":397,"tag":986,"props":1085,"children":1086},{},[1087,1089],{"type":403,"value":1088},"见",{"type":397,"tag":419,"props":1090,"children":1091},{"href":844},[1092],{"type":403,"value":847},{"type":397,"tag":959,"props":1094,"children":1095},{},[1096,1101,1106],{"type":397,"tag":986,"props":1097,"children":1098},{},[1099],{"type":403,"value":1100},"constructor",{"type":397,"tag":986,"props":1102,"children":1103},{},[1104],{"type":403,"value":1105},"构造函数",{"type":397,"tag":986,"props":1107,"children":1108},{},[1109],{"type":403,"value":1110},"用于创建和初始化对象用的函数",{"type":397,"tag":959,"props":1112,"children":1113},{},[1114,1119,1124],{"type":397,"tag":986,"props":1115,"children":1116},{},[1117],{"type":403,"value":1118},"general-purpose programming language",{"type":397,"tag":986,"props":1120,"children":1121},{},[1122],{"type":403,"value":1123},"通用编程语言",{"type":397,"tag":986,"props":1125,"children":1126},{},[1127,1129],{"type":403,"value":1128},"被设计为可在各个应用领域使用的语言，见 ",{"type":397,"tag":419,"props":1130,"children":1133},{"href":1131,"rel":1132},"https://en.wikipedia.org/wiki/Special:Search/General-purpose_programming_language",[423],[1134],{"type":403,"value":1135},"General-purpose programming language",{"type":397,"tag":959,"props":1137,"children":1138},{},[1139,1144,1149],{"type":397,"tag":986,"props":1140,"children":1141},{},[1142],{"type":403,"value":1143},"host-defined",{"type":397,"tag":986,"props":1145,"children":1146},{},[1147],{"type":403,"value":1148},"宿主实现",{"type":397,"tag":986,"props":1150,"children":1151},{},[1152],{"type":403,"value":1153},"同 implementation-defined",{"type":397,"tag":959,"props":1155,"children":1156},{},[1157,1162,1167],{"type":397,"tag":986,"props":1158,"children":1159},{},[1160],{"type":403,"value":1161},"implementation-approximated",{"type":397,"tag":986,"props":1163,"children":1164},{},[1165],{"type":403,"value":1166},"近似实现",{"type":397,"tag":986,"props":1168,"children":1169},{},[1170],{"type":403,"value":1171},"规范依赖某些外部实现，而在规范内假设这种实现是“完美的”",{"type":397,"tag":959,"props":1173,"children":1174},{},[1175,1180,1185],{"type":397,"tag":986,"props":1176,"children":1177},{},[1178],{"type":403,"value":1179},"implementation-defined",{"type":397,"tag":986,"props":1181,"children":1182},{},[1183],{"type":403,"value":1184},"定义实现",{"type":397,"tag":986,"props":1186,"children":1187},{},[1188],{"type":403,"value":1189},"规范依赖某些外部实现，外部实现的行为需要与规范描述的一致",{"type":397,"tag":959,"props":1191,"children":1192},{},[1193,1198,1203],{"type":397,"tag":986,"props":1194,"children":1195},{},[1196],{"type":403,"value":1197},"inherited property",{"type":397,"tag":986,"props":1199,"children":1200},{},[1201],{"type":403,"value":1202},"继承属性",{"type":397,"tag":986,"props":1204,"children":1205},{},[1206],{"type":403,"value":1207},"对象内由原型继承的来的属性",{"type":397,"tag":959,"props":1209,"children":1210},{},[1211,1216,1221],{"type":397,"tag":986,"props":1212,"children":1213},{},[1214],{"type":403,"value":1215},"method",{"type":397,"tag":986,"props":1217,"children":1218},{},[1219],{"type":403,"value":1220},"方法",{"type":397,"tag":986,"props":1222,"children":1223},{},[1224],{"type":403,"value":1225},"作为属性值的函数",{"type":397,"tag":959,"props":1227,"children":1228},{},[1229,1234,1239],{"type":397,"tag":986,"props":1230,"children":1231},{},[1232],{"type":403,"value":1233},"module",{"type":397,"tag":986,"props":1235,"children":1236},{},[1237],{"type":403,"value":1238},"模块",{"type":397,"tag":986,"props":1240,"children":1241},{},[1242],{"type":403,"value":1018},{"type":397,"tag":959,"props":1244,"children":1245},{},[1246,1251,1255],{"type":397,"tag":986,"props":1247,"children":1248},{},[1249],{"type":403,"value":1250},"NaN",{"type":397,"tag":986,"props":1252,"children":1253},{},[1254],{"type":403,"value":1250},{"type":397,"tag":986,"props":1256,"children":1257},{},[1258,1265],{"type":397,"tag":419,"props":1259,"children":1262},{"href":1260,"rel":1261},"https://ieeexplore.ieee.org/document/8766229",[423],[1263],{"type":403,"value":1264},"IEEE 754-2019",{"type":403,"value":1266}," 标准定义的“不是一个数字”的数值",{"type":397,"tag":959,"props":1268,"children":1269},{},[1270,1275,1280],{"type":397,"tag":986,"props":1271,"children":1272},{},[1273],{"type":403,"value":1274},"normative optional",{"type":397,"tag":986,"props":1276,"children":1277},{},[1278],{"type":403,"value":1279},"可选规范",{"type":397,"tag":986,"props":1281,"children":1282},{},[1283],{"type":403,"value":1018},{"type":397,"tag":959,"props":1285,"children":1286},{},[1287,1292,1297],{"type":397,"tag":986,"props":1288,"children":1289},{},[1290],{"type":403,"value":1291},"null value",{"type":397,"tag":986,"props":1293,"children":1294},{},[1295],{"type":403,"value":1296},"空值",{"type":397,"tag":986,"props":1298,"children":1299},{},[1300],{"type":403,"value":1301},"表示对象的值的某种刻意缺失",{"type":397,"tag":959,"props":1303,"children":1304},{},[1305,1310,1315],{"type":397,"tag":986,"props":1306,"children":1307},{},[1308],{"type":403,"value":1309},"ordinary object",{"type":397,"tag":986,"props":1311,"children":1312},{},[1313],{"type":403,"value":1314},"普通对象",{"type":397,"tag":986,"props":1316,"children":1317},{},[1318],{"type":403,"value":1319},"实现了所有基本内部槽的默认功能的对象",{"type":397,"tag":959,"props":1321,"children":1322},{},[1323,1328,1333],{"type":397,"tag":986,"props":1324,"children":1325},{},[1326],{"type":403,"value":1327},"own property",{"type":397,"tag":986,"props":1329,"children":1330},{},[1331],{"type":403,"value":1332},"自有属性",{"type":397,"tag":986,"props":1334,"children":1335},{},[1336],{"type":403,"value":1337},"作为该对象拥有的而不是通过原型继承获得的属性就叫该对象的自有属性",{"type":397,"tag":959,"props":1339,"children":1340},{},[1341,1346,1351],{"type":397,"tag":986,"props":1342,"children":1343},{},[1344],{"type":403,"value":1345},"primitive value",{"type":397,"tag":986,"props":1347,"children":1348},{},[1349],{"type":403,"value":1350},"原始值",{"type":397,"tag":986,"props":1352,"children":1353},{},[1354],{"type":403,"value":1355},"不可再分的数据，Undefined, Null, Boolean, Number, BigInt, Symbol, String 中的一种",{"type":397,"tag":959,"props":1357,"children":1358},{},[1359,1364,1368],{"type":397,"tag":986,"props":1360,"children":1361},{},[1362],{"type":403,"value":1363},"property",{"type":397,"tag":986,"props":1365,"children":1366},{},[1367],{"type":403,"value":995},{"type":397,"tag":986,"props":1369,"children":1370},{},[1371],{"type":403,"value":1372},"组成对象的基本部分，包含键和对应的值",{"type":397,"tag":959,"props":1374,"children":1375},{},[1376,1381,1386],{"type":397,"tag":986,"props":1377,"children":1378},{},[1379],{"type":403,"value":1380},"prototype",{"type":397,"tag":986,"props":1382,"children":1383},{},[1384],{"type":403,"value":1385},"原型",{"type":397,"tag":986,"props":1387,"children":1388},{},[1389,1390],{"type":403,"value":1088},{"type":397,"tag":419,"props":1391,"children":1393},{"href":1392},"#%E8%AF%AD%E8%A8%80%E9%A3%8E%E6%A0%BC",[1394],{"type":403,"value":809},{"type":397,"tag":959,"props":1396,"children":1397},{},[1398,1403,1408],{"type":397,"tag":986,"props":1399,"children":1400},{},[1401],{"type":403,"value":1402},"standard object",{"type":397,"tag":986,"props":1404,"children":1405},{},[1406],{"type":403,"value":1407},"标准对象",{"type":397,"tag":986,"props":1409,"children":1410},{},[1411],{"type":403,"value":1412},"行为（语义）和规范一致的对象",{"type":397,"tag":959,"props":1414,"children":1415},{},[1416,1421,1426],{"type":397,"tag":986,"props":1417,"children":1418},{},[1419],{"type":403,"value":1420},"undefined value",{"type":397,"tag":986,"props":1422,"children":1423},{},[1424],{"type":403,"value":1425},"未定义值",{"type":397,"tag":986,"props":1427,"children":1428},{},[1429],{"type":403,"value":1430},"表示变量初始化成功但未赋值",{"type":397,"tag":1432,"props":1433,"children":1436},"section",{"className":1434,"dataFootnotes":391},[1435],"footnotes",[1437,1444],{"type":397,"tag":398,"props":1438,"children":1441},{"className":1439,"id":767},[1440],"sr-only",[1442],{"type":403,"value":1443},"Footnotes",{"type":397,"tag":1445,"props":1446,"children":1447},"ol",{},[1448,1472],{"type":397,"tag":415,"props":1449,"children":1451},{"id":1450},"user-content-fn-object-definition",[1452,1454,1461,1463],{"type":403,"value":1453},"定义见 ",{"type":397,"tag":419,"props":1455,"children":1458},{"href":1456,"rel":1457},"https://262.ecma-international.org/12.0/#sec-terms-and-definitions-object",[423],[1459],{"type":403,"value":1460}," Terms and Definitions - object",{"type":403,"value":1462}," ",{"type":397,"tag":419,"props":1464,"children":1469},{"href":1465,"ariaLabel":1466,"className":1467,"dataFootnoteBackref":391},"#user-content-fnref-object-definition","Back to reference 1",[1468],"data-footnote-backref",[1470],{"type":403,"value":1471},"↩",{"type":397,"tag":415,"props":1473,"children":1475},{"id":1474},"user-content-fn-strict-mode",[1476,1478,1485,1487],{"type":403,"value":1477},"必须支持严格模式和非严格模式，并且能在一个符合程序中同时运行严格模式和非严格模式的代码，见 ",{"type":397,"tag":419,"props":1479,"children":1482},{"href":1480,"rel":1481},"https://262.ecma-international.org/12.0/#sec-strict-variant-of-ecmascript",[423],[1483],{"type":403,"value":1484},"The Strict Variant of ECMAScript",{"type":403,"value":1486},"。 ",{"type":397,"tag":419,"props":1488,"children":1492},{"href":1489,"ariaLabel":1490,"className":1491,"dataFootnoteBackref":391},"#user-content-fnref-strict-mode","Back to reference 2",[1468],[1493],{"type":403,"value":1471},{"type":397,"tag":1495,"props":1496,"children":1497},"style",{},[1498],{"type":403,"value":1499},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":391,"searchDepth":550,"depth":550,"links":1501},[1502,1505,1511,1512,1515],{"id":400,"depth":550,"text":400,"children":1503},[1504],{"id":482,"depth":579,"text":482},{"id":732,"depth":550,"text":732,"children":1506},[1507,1508,1509,1510],{"id":737,"depth":579,"text":737},{"id":809,"depth":579,"text":809},{"id":829,"depth":579,"text":829},{"id":847,"depth":579,"text":847},{"id":925,"depth":550,"text":925},{"id":935,"depth":550,"text":935,"children":1513},[1514],{"id":940,"depth":579,"text":940},{"id":767,"depth":550,"text":1443},"markdown","content:_books:ecma-262.md","content","_books/ecma-262.md","md",[1522,1525],{"_path":1523,"title":1524,"description":391},"/_books/dear-ui","亲爱的界面",{"_path":1526,"title":1527,"description":391},"/_books","图书分类参考",1710257729545]