[{"data":1,"prerenderedAt":1525},["ShallowReactive",2],{"navigation":3,"/_books/ecma-262":384,"/_books/ecma-262-surround":1518},[4,35,86,105,132,138,144,150,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":205,"_path":206},"正则表达式","/gists/eegex",{"title":208,"_path":209},"Emoji","/gists/emoji",{"title":211,"_path":212},"工程","/gists/engineering",{"title":214,"_path":215},"熵","/gists/entropy",{"title":217,"_path":218},"Environment","/gists/environment",{"title":220,"_path":221},"Erlang","/gists/erlang",{"title":223,"_path":224},"逃离塔克夫","/gists/escape-from-tarkov",{"title":226,"_path":227},"ESNext (ES6-ES11)","/gists/esnext",{"title":229,"_path":230},"Eval！","/gists/eval",{"title":232,"_path":233},"Flutter","/gists/flutter",{"title":235,"_path":236},"字体","/gists/font",{"title":238,"_path":239},"JS 函数式编程","/gists/functional",{"title":241,"_path":242},"游戏化","/gists/gamification",{"title":244,"_path":245},"Google C++ Standard","/gists/google-cpp-standard",{"title":247,"_path":248},"双向链接完全体","/gists/graph",{"title":250,"_path":251},"Hardwares","/gists/hardwares",{"title":253,"_path":254},"哈希冲突","/gists/hash-collision",{"title":256,"_path":257},"信息设计","/gists/information-design",{"title":259,"_path":260},"InstantPage","/gists/instant.page",{"title":262,"_path":263},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":265,"_path":266},"KVStore","/gists/key-value-db",{"title":268,"_path":269},"Kubernetes","/gists/kubernetes",{"title":271,"_path":272},"Makefile","/gists/makefile",{"title":274,"_path":275},"Markdown Inline Style","/gists/markdown-nice",{"title":277,"_path":278},"减小页面快照体积","/gists/minify-html",{"title":280,"_path":281},"mklink","/gists/mklink",{"title":283,"_path":284},"Mock","/gists/mock",{"title":286,"_path":287},"多人协作系统","/gists/multiplayer",{"title":289,"_path":290},"多端应用","/gists/multy-end-app",{"title":292,"_path":293},"神经科学","/gists/neuroscience",{"title":295,"_path":296},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":298,"_path":299},"PInvoke","/gists/pinvoke",{"title":301,"_path":302},"像素","/gists/pixel",{"title":304,"_path":305},"PowerShell","/gists/powershell",{"title":307,"_path":308},"量子","/gists/quantum",{"title":310,"_path":311},"保持好奇心","/gists/questions",{"title":313,"_path":314},"React Native","/gists/react-native",{"title":316,"_path":317},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":319,"_path":320},"SEO","/gists/seo",{"title":322,"_path":323},"Shader","/gists/shader",{"title":325,"_path":326},"Shape Up","/gists/shape-up",{"title":328,"_path":329},"睡觉","/gists/sleep",{"title":331,"_path":332},"记录奇怪的问题","/gists/solved",{"title":334,"_path":335},"States","/gists/states",{"title":337,"_path":338},"Storage","/gists/storage",{"title":340,"_path":341},"音视频流处理","/gists/stream-cli",{"title":343,"_path":344},"Symbol","/gists/symbol",{"title":346,"_path":347},"系统论","/gists/systems-theory",{"title":349,"_path":350},"任务切片","/gists/task-slice",{"title":352,"_path":353},"技术偏好","/gists/tech-dudge",{"title":355,"_path":356},"Untitled","/gists/untitled",{"title":358,"_path":359},"可变字体","/gists/variable-font",{"title":361,"_path":362},"视觉错觉","/gists/visual-illusion",{"title":364,"_path":365},"SS(SSR)","/gists/vpn",{"title":367,"_path":368},"VS Code 插件开发","/gists/vscode-plugin",{"title":370,"_path":371},"Web Components","/gists/web-components",{"title":373,"_path":374},"Windows","/gists/windows",{"title":376,"_path":377},"查缺补漏","/gists/wrong",{"title":379,"_path":380,"children":381},"我 / About","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"_path":385,"_dir":386,"_draft":387,"_partial":388,"_locale":389,"title":390,"description":389,"body":391,"_type":1512,"_id":1513,"_source":1514,"_file":1515,"_stem":1516,"_extension":1517},"/_books/ecma-262","_books",false,true,"","ECMAScript Standard",{"type":392,"children":393,"toc":1496},"root",[394,402,408,477,483,489,501,603,613,728,733,738,743,752,772,777,805,810,815,820,825,830,835,848,852,857,893,898,903,921,926,931,936,941,946,1427,1490],{"type":395,"tag":396,"props":397,"children":399},"element","h2",{"id":398},"资料",[400],{"type":401,"value":398},"text",{"type":395,"tag":403,"props":404,"children":405},"p",{},[406],{"type":401,"value":407},"一些极其有用的前置参考资料，有助于甄别与理解规范里各种概念，不至于被绕晕。",{"type":395,"tag":409,"props":410,"children":411},"ul",{},[412,431,446,464],{"type":395,"tag":413,"props":414,"children":415},"li",{},[416,429],{"type":395,"tag":417,"props":418,"children":422},"a",{"href":419,"rel":420},"https://timothygu.me/es-howto/",[421],"nofollow",[423],{"type":395,"tag":424,"props":425,"children":426},"i",{},[427],{"type":401,"value":428},"How to Read the ECMAScript Specification",{"type":401,"value":430},"，这个资料简要介绍了一些阅读规范时需要知悉且有助于你理解规范的前置概念并予例说明，比如说抽象操作、内部槽以及内部方法、完成记录、变异对象等。",{"type":395,"tag":413,"props":432,"children":433},{},[434,444],{"type":395,"tag":417,"props":435,"children":438},{"href":436,"rel":437},"https://v8.dev/blog/tags/understanding-ecmascript",[421],[439],{"type":395,"tag":424,"props":440,"children":441},{},[442],{"type":401,"value":443},"Understanding ECMAScript",{"type":401,"value":445},"，V8 团队写的 ECMAScript 阅读指南文章系列，一共四篇，很有参考价值。",{"type":395,"tag":413,"props":447,"children":448},{},[449,456,458,462],{"type":395,"tag":417,"props":450,"children":453},{"href":451,"rel":452},"https://juejin.cn/post/6944587399418609701",[421],[454],{"type":401,"value":455},"《ECMAScript 阅读指南》",{"type":401,"value":457},"，",{"type":395,"tag":424,"props":459,"children":460},{},[461],{"type":401,"value":443},{"type":401,"value":463}," 的翻译版本。",{"type":395,"tag":413,"props":465,"children":466},{},[467],{"type":395,"tag":417,"props":468,"children":471},{"href":469,"rel":470},"https://stackoverflow.com/questions/912479/what-is-the-difference-between-javascript-and-ecmascript",[421],[472],{"type":395,"tag":424,"props":473,"children":474},{},[475],{"type":401,"value":476},"What is the difference between JavaScript and ECMAScript?",{"type":395,"tag":478,"props":479,"children":481},"h3",{"id":480},"快速入门",[482],{"type":401,"value":480},{"type":395,"tag":484,"props":485,"children":487},"h4",{"id":486},"问号和感叹号简写标记",[488],{"type":401,"value":486},{"type":395,"tag":403,"props":490,"children":491},{},[492,499],{"type":395,"tag":493,"props":494,"children":496},"code",{"className":495},[],[497],{"type":401,"value":498},"Let val be ! Foo()",{"type":401,"value":500}," 等同于：",{"type":395,"tag":502,"props":503,"children":507},"pre",{"className":504,"code":505,"language":506,"meta":389,"style":389},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","1. Let val be Foo().\n2. Assert: val is not an abrupt completion.\n3. Set val to val.[[Value]].\n","js",[508],{"type":395,"tag":493,"props":509,"children":510},{"__ignoreMap":389},[511,546,575],{"type":395,"tag":512,"props":513,"children":516},"span",{"class":514,"line":515},"line",1,[517,523,529,535,540],{"type":395,"tag":512,"props":518,"children":520},{"style":519},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[521],{"type":401,"value":522},"1.",{"type":395,"tag":512,"props":524,"children":526},{"style":525},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[527],{"type":401,"value":528}," Let val be ",{"type":395,"tag":512,"props":530,"children":532},{"style":531},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[533],{"type":401,"value":534},"Foo",{"type":395,"tag":512,"props":536,"children":537},{"style":525},[538],{"type":401,"value":539},"()",{"type":395,"tag":512,"props":541,"children":543},{"style":542},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[544],{"type":401,"value":545},".\n",{"type":395,"tag":512,"props":547,"children":549},{"class":514,"line":548},2,[550,555,561,566,571],{"type":395,"tag":512,"props":551,"children":552},{"style":519},[553],{"type":401,"value":554},"2.",{"type":395,"tag":512,"props":556,"children":558},{"style":557},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#F8F8F2",[559],{"type":401,"value":560}," Assert",{"type":395,"tag":512,"props":562,"children":563},{"style":542},[564],{"type":401,"value":565},":",{"type":395,"tag":512,"props":567,"children":568},{"style":525},[569],{"type":401,"value":570}," val is not an abrupt completion",{"type":395,"tag":512,"props":572,"children":573},{"style":542},[574],{"type":401,"value":545},{"type":395,"tag":512,"props":576,"children":578},{"class":514,"line":577},3,[579,584,589,594,599],{"type":395,"tag":512,"props":580,"children":581},{"style":519},[582],{"type":401,"value":583},"3.",{"type":395,"tag":512,"props":585,"children":586},{"style":525},[587],{"type":401,"value":588}," Set val to val",{"type":395,"tag":512,"props":590,"children":591},{"style":542},[592],{"type":401,"value":593},".",{"type":395,"tag":512,"props":595,"children":596},{"style":525},[597],{"type":401,"value":598},"[[Value]]",{"type":395,"tag":512,"props":600,"children":601},{"style":542},[602],{"type":401,"value":545},{"type":395,"tag":403,"props":604,"children":605},{},[606,612],{"type":395,"tag":493,"props":607,"children":609},{"className":608},[],[610],{"type":401,"value":611},"Return ? Foo()",{"type":401,"value":500},{"type":395,"tag":502,"props":614,"children":616},{"className":504,"code":615,"language":506,"meta":389,"style":389},"1. Let temp be Foo().\n2. If temp is an abrupt completion, return temp.\n3. Set temp to temp.[[Value]].\n4. Return NormalCompletion(temp).\n",[617],{"type":395,"tag":493,"props":618,"children":619},{"__ignoreMap":389},[620,644,676,700],{"type":395,"tag":512,"props":621,"children":622},{"class":514,"line":515},[623,627,632,636,640],{"type":395,"tag":512,"props":624,"children":625},{"style":519},[626],{"type":401,"value":522},{"type":395,"tag":512,"props":628,"children":629},{"style":525},[630],{"type":401,"value":631}," Let temp be ",{"type":395,"tag":512,"props":633,"children":634},{"style":531},[635],{"type":401,"value":534},{"type":395,"tag":512,"props":637,"children":638},{"style":525},[639],{"type":401,"value":539},{"type":395,"tag":512,"props":641,"children":642},{"style":542},[643],{"type":401,"value":545},{"type":395,"tag":512,"props":645,"children":646},{"class":514,"line":548},[647,651,656,661,667,672],{"type":395,"tag":512,"props":648,"children":649},{"style":519},[650],{"type":401,"value":554},{"type":395,"tag":512,"props":652,"children":653},{"style":525},[654],{"type":401,"value":655}," If temp is an abrupt completion",{"type":395,"tag":512,"props":657,"children":658},{"style":542},[659],{"type":401,"value":660},",",{"type":395,"tag":512,"props":662,"children":664},{"style":663},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[665],{"type":401,"value":666}," return",{"type":395,"tag":512,"props":668,"children":669},{"style":525},[670],{"type":401,"value":671}," temp",{"type":395,"tag":512,"props":673,"children":674},{"style":542},[675],{"type":401,"value":545},{"type":395,"tag":512,"props":677,"children":678},{"class":514,"line":577},[679,683,688,692,696],{"type":395,"tag":512,"props":680,"children":681},{"style":519},[682],{"type":401,"value":583},{"type":395,"tag":512,"props":684,"children":685},{"style":525},[686],{"type":401,"value":687}," Set temp to temp",{"type":395,"tag":512,"props":689,"children":690},{"style":542},[691],{"type":401,"value":593},{"type":395,"tag":512,"props":693,"children":694},{"style":525},[695],{"type":401,"value":598},{"type":395,"tag":512,"props":697,"children":698},{"style":542},[699],{"type":401,"value":545},{"type":395,"tag":512,"props":701,"children":703},{"class":514,"line":702},4,[704,709,714,719,724],{"type":395,"tag":512,"props":705,"children":706},{"style":519},[707],{"type":401,"value":708},"4.",{"type":395,"tag":512,"props":710,"children":711},{"style":525},[712],{"type":401,"value":713}," Return ",{"type":395,"tag":512,"props":715,"children":716},{"style":531},[717],{"type":401,"value":718},"NormalCompletion",{"type":395,"tag":512,"props":720,"children":721},{"style":525},[722],{"type":401,"value":723},"(temp)",{"type":395,"tag":512,"props":725,"children":726},{"style":542},[727],{"type":401,"value":545},{"type":395,"tag":396,"props":729,"children":731},{"id":730},"规范综述",[732],{"type":401,"value":730},{"type":395,"tag":478,"props":734,"children":736},{"id":735},"语言组成",[737],{"type":401,"value":735},{"type":395,"tag":403,"props":739,"children":740},{},[741],{"type":401,"value":742},"常常能听到：“对象的本质就是实现了规范所要求的内部插槽的结构”，其实该观点源于这张图：",{"type":395,"tag":403,"props":744,"children":745},{},[746],{"type":395,"tag":747,"props":748,"children":751},"img",{"alt":749,"src":750},"对象的本质","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/timothygu.me_es-howto_object-uml.svg.png",[],{"type":395,"tag":403,"props":753,"children":754},{},[755,757,770],{"type":401,"value":756},"ECMAScript 是一种基于对象的基本语言，其基础设置主要依赖宿主提供的对象。基于此概念，可以把 ECMAScript 程序看作一组相互通讯的对象集合。按照规范，对象的精确描述其实应该是：“一个具有零或多个被属性描述符决定的属性的集合",{"type":395,"tag":758,"props":759,"children":760},"sup",{},[761],{"type":395,"tag":417,"props":762,"children":767},{"href":763,"ariaDescribedBy":764,"dataFootnoteRef":389,"id":766},"#user-content-fn-object-definition",[765],"footnote-label","user-content-fnref-object-definition",[768],{"type":401,"value":769},"1",{"type":401,"value":771},"”。对象的属性能持有其它值，包括规范定义的原始值：Undefined、Null、Boolean、Number、BigInt、String、Symbol 和 Object。这里说的 Object 还包括可执行对象，callable object，也就是函数。而由对象内属性持有的函数，叫做方法。",{"type":395,"tag":403,"props":773,"children":774},{},[775],{"type":401,"value":776},"按照上图，规范定义了包括全局对象、Object、Function 等对象以及操作这些对象所需要用到的操作符。除此之外，还定义了用于组织程序的模块，以及行文所需要用到的静态语法。组织方式如下：",{"type":395,"tag":409,"props":778,"children":779},{},[780,785,790,795,800],{"type":395,"tag":413,"props":781,"children":782},{},[783],{"type":401,"value":784},"章节 5 定义了规范所使用的符号约定。",{"type":395,"tag":413,"props":786,"children":787},{},[788],{"type":401,"value":789},"章节 6 至章节 10 定义了语言的运行环境。",{"type":395,"tag":413,"props":791,"children":792},{},[793],{"type":401,"value":794},"章节 11 至章节 17 定义了包括语法、语义在内的所有语言功能。",{"type":395,"tag":413,"props":796,"children":797},{},[798],{"type":401,"value":799},"章节 18 至章节 28 定义了语言依赖的标准库。",{"type":395,"tag":413,"props":801,"children":802},{},[803],{"type":401,"value":804},"章节 29 描述了支持 SharedArrayBuffer 以及 Atomics 对象方法访问的内存一致性模型。",{"type":395,"tag":478,"props":806,"children":808},{"id":807},"语言风格",[809],{"type":401,"value":807},{"type":395,"tag":403,"props":811,"children":812},{},[813],{"type":401,"value":814},"ECMAScript 基于对象，这和 C++、Java 不同的本质区别在于创建对象的方式以及属性共享思路的不同：ECMAScript 支持多种方式创建对象：构造器、字面量或 Object.create，而属性共享则是使用原型。使用原型意味着尽管 ECMAScript 支持类继承，但是是通过原型继承隐式实现的：每一个构造器函数都有一个原型属性，属性名为 prototype。以该构造器创建的实例会携带一个隐式的指向其构造器的原型的引用（称为实例的原型）。而构造器函数也是一个对象实例，所以也会有对应的原型。ECMAScript 依赖这条由对象原型组成的链条式的关系，即原型链，来共享属性。而在经典面向对象语言中，总的来说，属性（也就是状态）是直接挂载在实例上的，只有方法挂载在类上，这也就意味着类继承只约束了继承结构和对象的行为，没有约束对象的状态。此外，由于 ECMAScript 支持动态重写对象，这使得你可以在运行时去创建一个动态的继承结构。",{"type":395,"tag":403,"props":816,"children":817},{},[818],{"type":401,"value":819},"ECMAScript 被故意地设计成类 Java 的语法，这是历史原因。另一方面，其语法被考虑设计成尽可能简单的。规范对语言的具体描述是一种“通用编程语言”，并不是指代语言性质，如“脚本语言”，或是具体实现，如“JavaScript”。有不少其它语言也完整实现了规范，如微软早期的 JScript 和用于 Flash 的 ActionScript。从这个角度来看，JavaScript 应该看作 ECMAScript 的一种方言。",{"type":395,"tag":403,"props":821,"children":822},{},[823],{"type":401,"value":824},"如果从历史的角度来看，ECAMAScript 和 JavaScript 的关系会发生变化。JavaScript 是网景公司在宣发时使用的名称，这个语言一开始叫做 Mocha，而后又叫做 LiveScript。微软在 IE 中也做了一种实现，但由于版权问题卡喉咙，不能叫做 JavaScript，所以改为了 JScript。在网景公司没落前，他们起草了 ECMAScript 标准，用来规划 JavaScript 的发展路线。尽管网景没了，但规范则一直在更新，比如被人们熟知的 ES6，指代 ECMAScript 2015 6th Edition。ECMAScript 和 JavaScript 也就不仅仅应当被理解成标准和实现，它们还属于共生共荣的关系。",{"type":395,"tag":478,"props":826,"children":828},{"id":827},"宿主系统",[829],{"type":401,"value":827},{"type":395,"tag":403,"props":831,"children":832},{},[833],{"type":401,"value":834},"脚本语言是设计给包括非职业开发人员使用的语言，没有必要拥有主程序入口。所以脚本语言通常寄生于特定系统，依赖宿主提供的设施以完善语言功能，使用终端进行操作，以便人员操控程序或自动化流程。规范原本想设计一款 Web 脚本语言，用于客户端以响应用户在界面上的操作，使 Web 页面能够执行逻辑。但随着越来越广泛的使用，功能逐渐完善，ECMAScript 演变成为了通用程序语言。",{"type":395,"tag":403,"props":836,"children":837},{},[838,840,846],{"type":401,"value":839},"每一个支持 ECMAScript 的浏览器或者服务器端都拥有一个对应的宿主系统用于执行脚本。宿主系统的实现需要按照规范，不过规范对某些特征只描述了特定行为而没有给出具体算法。这些具体算法通常会由其它规范来实现，比如说 HTML 规范中定义的宏任务和微任务或 Math.exp 这种特定算法。总而言之，只要宿主系统和规范是一致的（见",{"type":395,"tag":417,"props":841,"children":843},{"href":842},"#%E4%B8%80%E8%87%B4%E6%80%A7",[844],{"type":401,"value":845},"一致性",{"type":401,"value":847},"）并实现了特定的行为如 Host Hooks、Host-defined Fileds、Host-defined Objects、Running Jobs、Internal Methods of Exotic Objects 和 Built-in Objects and Methods，就算是一个完整的 ECMAScript 宿主系统，就能正确地和规范进行交互。",{"type":395,"tag":478,"props":849,"children":850},{"id":845},[851],{"type":401,"value":845},{"type":395,"tag":403,"props":853,"children":854},{},[855],{"type":401,"value":856},"一致性是指，实现了 ECMAScript 规范（以下简称规范）的语言必须满足以下标准：",{"type":395,"tag":409,"props":858,"children":859},{},[860,878,883,888],{"type":395,"tag":413,"props":861,"children":862},{},[863,865,876],{"type":401,"value":864},"规范描述：类型系统、值、对象、属性、函数、语法、语义、严格模式",{"type":395,"tag":758,"props":866,"children":867},{},[868],{"type":395,"tag":417,"props":869,"children":873},{"href":870,"ariaDescribedBy":871,"dataFootnoteRef":389,"id":872},"#user-content-fn-strict-mode",[765],"user-content-fnref-strict-mode",[874],{"type":401,"value":875},"2",{"type":401,"value":877},"。",{"type":395,"tag":413,"props":879,"children":880},{},[881],{"type":401,"value":882},"编码标准：最新的 Unicode 标准以及 USC 标准。",{"type":395,"tag":413,"props":884,"children":885},{},[886],{"type":401,"value":887},"ECMA-402：ECMAScript 的国际化接口标准，即 Intl 相关规范。",{"type":395,"tag":413,"props":889,"children":890},{},[891],{"type":401,"value":892},"可选规范：可选规范要么全部不实现，要么全部都实现。目前在文档中只找到相关 WeakRef.prototype.constructor 初始值必须为 %WeakRef% 的可选规范。",{"type":395,"tag":403,"props":894,"children":895},{},[896],{"type":401,"value":897},"规范允许某些实现了规范的具体语言可以提供超出规范描述的内容，包括类型、值、对象...语法或是保留字的实现。",{"type":395,"tag":403,"props":899,"children":900},{},[901],{"type":401,"value":902},"另外，以下规范和 ECMAScript 相关，但不要求 ECMAScript 的宿主系统实现：",{"type":395,"tag":409,"props":904,"children":905},{},[906,911,916],{"type":395,"tag":413,"props":907,"children":908},{},[909],{"type":401,"value":910},"ISO/IEC 10646：UCS 规范。",{"type":395,"tag":413,"props":912,"children":913},{},[914],{"type":401,"value":915},"ECMA-402：国际化接口规范。",{"type":395,"tag":413,"props":917,"children":918},{},[919],{"type":401,"value":920},"ECMA-404：JSON 规范。",{"type":395,"tag":396,"props":922,"children":924},{"id":923},"规范类型和语言类型",[925],{"type":401,"value":923},{"type":395,"tag":403,"props":927,"children":928},{},[929],{"type":401,"value":930},"为什么要区分语言类型和规范类型呢？顾名思义，语言类型是 JavaScript 所使用的一种类型系统，包含比如 Null、Undefined、Object 等类型，但由于 JavaScript 需要由其它引擎实现，也就是说规范所描述的算法逻辑中携带的基本类型不是 JavaScript 语言中的基本类型，而更可能是诸如 C++ 中的数据类型。",{"type":395,"tag":396,"props":932,"children":934},{"id":933},"其它",[935],{"type":401,"value":933},{"type":395,"tag":478,"props":937,"children":939},{"id":938},"词汇表",[940],{"type":401,"value":938},{"type":395,"tag":403,"props":942,"children":943},{},[944],{"type":401,"value":945},"术语表及本文中相关中英翻译的集合。",{"type":395,"tag":947,"props":948,"children":949},"table",{},[950,974],{"type":395,"tag":951,"props":952,"children":953},"thead",{},[954],{"type":395,"tag":955,"props":956,"children":957},"tr",{},[958,964,969],{"type":395,"tag":959,"props":960,"children":961},"th",{},[962],{"type":401,"value":963},"Source",{"type":395,"tag":959,"props":965,"children":966},{},[967],{"type":401,"value":968},"Chinese",{"type":395,"tag":959,"props":970,"children":971},{},[972],{"type":401,"value":973},"Meaning",{"type":395,"tag":975,"props":976,"children":977},"tbody",{},[978,997,1015,1033,1051,1068,1089,1107,1132,1150,1168,1186,1204,1222,1239,1263,1280,1298,1316,1334,1352,1369,1391,1409],{"type":395,"tag":955,"props":979,"children":980},{},[981,987,992],{"type":395,"tag":982,"props":983,"children":984},"td",{},[985],{"type":401,"value":986},"attribute",{"type":395,"tag":982,"props":988,"children":989},{},[990],{"type":401,"value":991},"属性",{"type":395,"tag":982,"props":993,"children":994},{},[995],{"type":401,"value":996},"用来定义属性特性的内部值，比方说 [[Writable]]",{"type":395,"tag":955,"props":998,"children":999},{},[1000,1005,1010],{"type":395,"tag":982,"props":1001,"children":1002},{},[1003],{"type":401,"value":1004},"arbitrary-precision",{"type":395,"tag":982,"props":1006,"children":1007},{},[1008],{"type":401,"value":1009},"任意精度的",{"type":395,"tag":982,"props":1011,"children":1012},{},[1013],{"type":401,"value":1014},"略",{"type":395,"tag":955,"props":1016,"children":1017},{},[1018,1023,1028],{"type":395,"tag":982,"props":1019,"children":1020},{},[1021],{"type":401,"value":1022},"built-in function",{"type":395,"tag":982,"props":1024,"children":1025},{},[1026],{"type":401,"value":1027},"内置对象",{"type":395,"tag":982,"props":1029,"children":1030},{},[1031],{"type":401,"value":1032},"作为函数的内置对象",{"type":395,"tag":955,"props":1034,"children":1035},{},[1036,1041,1046],{"type":395,"tag":982,"props":1037,"children":1038},{},[1039],{"type":401,"value":1040},"built-in method",{"type":395,"tag":982,"props":1042,"children":1043},{},[1044],{"type":401,"value":1045},"内置方法",{"type":395,"tag":982,"props":1047,"children":1048},{},[1049],{"type":401,"value":1050},"作为方法的内置函数",{"type":395,"tag":955,"props":1052,"children":1053},{},[1054,1059,1063],{"type":395,"tag":982,"props":1055,"children":1056},{},[1057],{"type":401,"value":1058},"built-in object",{"type":395,"tag":982,"props":1060,"children":1061},{},[1062],{"type":401,"value":1027},{"type":395,"tag":982,"props":1064,"children":1065},{},[1066],{"type":401,"value":1067},"由规范定义（定义了具体实现）的对象",{"type":395,"tag":955,"props":1069,"children":1070},{},[1071,1076,1080],{"type":395,"tag":982,"props":1072,"children":1073},{},[1074],{"type":401,"value":1075},"conformance",{"type":395,"tag":982,"props":1077,"children":1078},{},[1079],{"type":401,"value":845},{"type":395,"tag":982,"props":1081,"children":1082},{},[1083,1085],{"type":401,"value":1084},"见",{"type":395,"tag":417,"props":1086,"children":1087},{"href":842},[1088],{"type":401,"value":845},{"type":395,"tag":955,"props":1090,"children":1091},{},[1092,1097,1102],{"type":395,"tag":982,"props":1093,"children":1094},{},[1095],{"type":401,"value":1096},"constructor",{"type":395,"tag":982,"props":1098,"children":1099},{},[1100],{"type":401,"value":1101},"构造函数",{"type":395,"tag":982,"props":1103,"children":1104},{},[1105],{"type":401,"value":1106},"用于创建和初始化对象用的函数",{"type":395,"tag":955,"props":1108,"children":1109},{},[1110,1115,1120],{"type":395,"tag":982,"props":1111,"children":1112},{},[1113],{"type":401,"value":1114},"general-purpose programming language",{"type":395,"tag":982,"props":1116,"children":1117},{},[1118],{"type":401,"value":1119},"通用编程语言",{"type":395,"tag":982,"props":1121,"children":1122},{},[1123,1125],{"type":401,"value":1124},"被设计为可在各个应用领域使用的语言，见 ",{"type":395,"tag":417,"props":1126,"children":1129},{"href":1127,"rel":1128},"https://en.wikipedia.org/wiki/Special:Search/General-purpose_programming_language",[421],[1130],{"type":401,"value":1131},"General-purpose programming language",{"type":395,"tag":955,"props":1133,"children":1134},{},[1135,1140,1145],{"type":395,"tag":982,"props":1136,"children":1137},{},[1138],{"type":401,"value":1139},"host-defined",{"type":395,"tag":982,"props":1141,"children":1142},{},[1143],{"type":401,"value":1144},"宿主实现",{"type":395,"tag":982,"props":1146,"children":1147},{},[1148],{"type":401,"value":1149},"同 implementation-defined",{"type":395,"tag":955,"props":1151,"children":1152},{},[1153,1158,1163],{"type":395,"tag":982,"props":1154,"children":1155},{},[1156],{"type":401,"value":1157},"implementation-approximated",{"type":395,"tag":982,"props":1159,"children":1160},{},[1161],{"type":401,"value":1162},"近似实现",{"type":395,"tag":982,"props":1164,"children":1165},{},[1166],{"type":401,"value":1167},"规范依赖某些外部实现，而在规范内假设这种实现是“完美的”",{"type":395,"tag":955,"props":1169,"children":1170},{},[1171,1176,1181],{"type":395,"tag":982,"props":1172,"children":1173},{},[1174],{"type":401,"value":1175},"implementation-defined",{"type":395,"tag":982,"props":1177,"children":1178},{},[1179],{"type":401,"value":1180},"定义实现",{"type":395,"tag":982,"props":1182,"children":1183},{},[1184],{"type":401,"value":1185},"规范依赖某些外部实现，外部实现的行为需要与规范描述的一致",{"type":395,"tag":955,"props":1187,"children":1188},{},[1189,1194,1199],{"type":395,"tag":982,"props":1190,"children":1191},{},[1192],{"type":401,"value":1193},"inherited property",{"type":395,"tag":982,"props":1195,"children":1196},{},[1197],{"type":401,"value":1198},"继承属性",{"type":395,"tag":982,"props":1200,"children":1201},{},[1202],{"type":401,"value":1203},"对象内由原型继承的来的属性",{"type":395,"tag":955,"props":1205,"children":1206},{},[1207,1212,1217],{"type":395,"tag":982,"props":1208,"children":1209},{},[1210],{"type":401,"value":1211},"method",{"type":395,"tag":982,"props":1213,"children":1214},{},[1215],{"type":401,"value":1216},"方法",{"type":395,"tag":982,"props":1218,"children":1219},{},[1220],{"type":401,"value":1221},"作为属性值的函数",{"type":395,"tag":955,"props":1223,"children":1224},{},[1225,1230,1235],{"type":395,"tag":982,"props":1226,"children":1227},{},[1228],{"type":401,"value":1229},"module",{"type":395,"tag":982,"props":1231,"children":1232},{},[1233],{"type":401,"value":1234},"模块",{"type":395,"tag":982,"props":1236,"children":1237},{},[1238],{"type":401,"value":1014},{"type":395,"tag":955,"props":1240,"children":1241},{},[1242,1247,1251],{"type":395,"tag":982,"props":1243,"children":1244},{},[1245],{"type":401,"value":1246},"NaN",{"type":395,"tag":982,"props":1248,"children":1249},{},[1250],{"type":401,"value":1246},{"type":395,"tag":982,"props":1252,"children":1253},{},[1254,1261],{"type":395,"tag":417,"props":1255,"children":1258},{"href":1256,"rel":1257},"https://ieeexplore.ieee.org/document/8766229",[421],[1259],{"type":401,"value":1260},"IEEE 754-2019",{"type":401,"value":1262}," 标准定义的“不是一个数字”的数值",{"type":395,"tag":955,"props":1264,"children":1265},{},[1266,1271,1276],{"type":395,"tag":982,"props":1267,"children":1268},{},[1269],{"type":401,"value":1270},"normative optional",{"type":395,"tag":982,"props":1272,"children":1273},{},[1274],{"type":401,"value":1275},"可选规范",{"type":395,"tag":982,"props":1277,"children":1278},{},[1279],{"type":401,"value":1014},{"type":395,"tag":955,"props":1281,"children":1282},{},[1283,1288,1293],{"type":395,"tag":982,"props":1284,"children":1285},{},[1286],{"type":401,"value":1287},"null value",{"type":395,"tag":982,"props":1289,"children":1290},{},[1291],{"type":401,"value":1292},"空值",{"type":395,"tag":982,"props":1294,"children":1295},{},[1296],{"type":401,"value":1297},"表示对象的值的某种刻意缺失",{"type":395,"tag":955,"props":1299,"children":1300},{},[1301,1306,1311],{"type":395,"tag":982,"props":1302,"children":1303},{},[1304],{"type":401,"value":1305},"ordinary object",{"type":395,"tag":982,"props":1307,"children":1308},{},[1309],{"type":401,"value":1310},"普通对象",{"type":395,"tag":982,"props":1312,"children":1313},{},[1314],{"type":401,"value":1315},"实现了所有基本内部槽的默认功能的对象",{"type":395,"tag":955,"props":1317,"children":1318},{},[1319,1324,1329],{"type":395,"tag":982,"props":1320,"children":1321},{},[1322],{"type":401,"value":1323},"own property",{"type":395,"tag":982,"props":1325,"children":1326},{},[1327],{"type":401,"value":1328},"自有属性",{"type":395,"tag":982,"props":1330,"children":1331},{},[1332],{"type":401,"value":1333},"作为该对象拥有的而不是通过原型继承获得的属性就叫该对象的自有属性",{"type":395,"tag":955,"props":1335,"children":1336},{},[1337,1342,1347],{"type":395,"tag":982,"props":1338,"children":1339},{},[1340],{"type":401,"value":1341},"primitive value",{"type":395,"tag":982,"props":1343,"children":1344},{},[1345],{"type":401,"value":1346},"原始值",{"type":395,"tag":982,"props":1348,"children":1349},{},[1350],{"type":401,"value":1351},"不可再分的数据，Undefined, Null, Boolean, Number, BigInt, Symbol, String 中的一种",{"type":395,"tag":955,"props":1353,"children":1354},{},[1355,1360,1364],{"type":395,"tag":982,"props":1356,"children":1357},{},[1358],{"type":401,"value":1359},"property",{"type":395,"tag":982,"props":1361,"children":1362},{},[1363],{"type":401,"value":991},{"type":395,"tag":982,"props":1365,"children":1366},{},[1367],{"type":401,"value":1368},"组成对象的基本部分，包含键和对应的值",{"type":395,"tag":955,"props":1370,"children":1371},{},[1372,1377,1382],{"type":395,"tag":982,"props":1373,"children":1374},{},[1375],{"type":401,"value":1376},"prototype",{"type":395,"tag":982,"props":1378,"children":1379},{},[1380],{"type":401,"value":1381},"原型",{"type":395,"tag":982,"props":1383,"children":1384},{},[1385,1386],{"type":401,"value":1084},{"type":395,"tag":417,"props":1387,"children":1389},{"href":1388},"#%E8%AF%AD%E8%A8%80%E9%A3%8E%E6%A0%BC",[1390],{"type":401,"value":807},{"type":395,"tag":955,"props":1392,"children":1393},{},[1394,1399,1404],{"type":395,"tag":982,"props":1395,"children":1396},{},[1397],{"type":401,"value":1398},"standard object",{"type":395,"tag":982,"props":1400,"children":1401},{},[1402],{"type":401,"value":1403},"标准对象",{"type":395,"tag":982,"props":1405,"children":1406},{},[1407],{"type":401,"value":1408},"行为（语义）和规范一致的对象",{"type":395,"tag":955,"props":1410,"children":1411},{},[1412,1417,1422],{"type":395,"tag":982,"props":1413,"children":1414},{},[1415],{"type":401,"value":1416},"undefined value",{"type":395,"tag":982,"props":1418,"children":1419},{},[1420],{"type":401,"value":1421},"未定义值",{"type":395,"tag":982,"props":1423,"children":1424},{},[1425],{"type":401,"value":1426},"表示变量初始化成功但未赋值",{"type":395,"tag":1428,"props":1429,"children":1432},"section",{"className":1430,"dataFootnotes":389},[1431],"footnotes",[1433,1440],{"type":395,"tag":396,"props":1434,"children":1437},{"className":1435,"id":765},[1436],"sr-only",[1438],{"type":401,"value":1439},"Footnotes",{"type":395,"tag":1441,"props":1442,"children":1443},"ol",{},[1444,1468],{"type":395,"tag":413,"props":1445,"children":1447},{"id":1446},"user-content-fn-object-definition",[1448,1450,1457,1459],{"type":401,"value":1449},"定义见 ",{"type":395,"tag":417,"props":1451,"children":1454},{"href":1452,"rel":1453},"https://262.ecma-international.org/12.0/#sec-terms-and-definitions-object",[421],[1455],{"type":401,"value":1456}," Terms and Definitions - object",{"type":401,"value":1458}," ",{"type":395,"tag":417,"props":1460,"children":1465},{"href":1461,"ariaLabel":1462,"className":1463,"dataFootnoteBackref":389},"#user-content-fnref-object-definition","Back to reference 1",[1464],"data-footnote-backref",[1466],{"type":401,"value":1467},"↩",{"type":395,"tag":413,"props":1469,"children":1471},{"id":1470},"user-content-fn-strict-mode",[1472,1474,1481,1483],{"type":401,"value":1473},"必须支持严格模式和非严格模式，并且能在一个符合程序中同时运行严格模式和非严格模式的代码，见 ",{"type":395,"tag":417,"props":1475,"children":1478},{"href":1476,"rel":1477},"https://262.ecma-international.org/12.0/#sec-strict-variant-of-ecmascript",[421],[1479],{"type":401,"value":1480},"The Strict Variant of ECMAScript",{"type":401,"value":1482},"。 ",{"type":395,"tag":417,"props":1484,"children":1488},{"href":1485,"ariaLabel":1486,"className":1487,"dataFootnoteBackref":389},"#user-content-fnref-strict-mode","Back to reference 2",[1464],[1489],{"type":401,"value":1467},{"type":395,"tag":1491,"props":1492,"children":1493},"style",{},[1494],{"type":401,"value":1495},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":389,"searchDepth":548,"depth":548,"links":1497},[1498,1501,1507,1508,1511],{"id":398,"depth":548,"text":398,"children":1499},[1500],{"id":480,"depth":577,"text":480},{"id":730,"depth":548,"text":730,"children":1502},[1503,1504,1505,1506],{"id":735,"depth":577,"text":735},{"id":807,"depth":577,"text":807},{"id":827,"depth":577,"text":827},{"id":845,"depth":577,"text":845},{"id":923,"depth":548,"text":923},{"id":933,"depth":548,"text":933,"children":1509},[1510],{"id":938,"depth":577,"text":938},{"id":765,"depth":548,"text":1439},"markdown","content:_books:ecma-262.md","content","_books/ecma-262.md","_books/ecma-262","md",[1519,1522],{"_path":1520,"title":1521,"description":389},"/_books/dear-ui","亲爱的界面",{"_path":1523,"title":1524,"description":389},"/_books","图书分类参考",1742040627957]