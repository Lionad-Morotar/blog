{"_path":"/maps/_devops/docker","_dir":"_devops","_draft":false,"_partial":true,"_locale":"","title":"Docker","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"docker"},"children":[{"type":"text","value":"Docker"}]},{"type":"element","tag":"h2","props":{"id":"简介"},"children":[{"type":"text","value":"简介"}]},{"type":"element","tag":"h4","props":{"id":"docker-是什么"},"children":[{"type":"text","value":"Docker 是什么？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Docker 本身不是容器，而是容器的一种实现以及容器管理工具。"}]},{"type":"element","tag":"h4","props":{"id":"容器是什么"},"children":[{"type":"text","value":"容器是什么？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"容器是一种软件打包的技术。通过对系统资源的控制与隔离，把软件、软件运行时、系统工具、系统库和配置打包到一个镜像中，运行在有有独立命名空间的容器进程内，可以使软件的所有依赖都标准化。所以使用容器技术能方便地将软件打包成标准单元。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TODO"}]},{"type":"element","tag":"h2","props":{"id":"原理"},"children":[{"type":"text","value":"原理"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Docker 和虚拟机都希望能提供一个虚拟、完整、独立的运行时环境，通过提高虚拟环境的隔离型，以便管理。一般来说，虚拟机的原理是模拟硬件环境，所以需要安装客户端操作系统"},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6","ariaDescribedBy":["footnote-label"],"dataFootnoteRef":"","id":"user-content-fnref-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6"},"children":[{"type":"text","value":"1"}]}]},{"type":"text","value":"，而 Docker 并不需要这层客户端操作系统，所以 Docker 更加轻量，硬件利用率也更高。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"虚拟机使用 Hypervisor 实现操作系统级别的模拟，而 Docker 通过操作系统的文件系统、命名空间、控制组实现进程级别的模拟。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"命名空间：所有 Linux 的进程都从 init 进程 fork 派生。Linux 容器的一个主要组件是新的命名空间下的一个 init 进程，所以我们有能力去创建一个不影响外界的进程树出来。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"控制组：通过控制组，我们能限制进程对 CPU、磁盘、内存的使用。"}]},{"type":"element","tag":"h2","props":{"id":"概念"},"children":[{"type":"text","value":"概念"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"隔离环境：虚拟文件系统；POSIX API；文件的只读和屏蔽；命名空间、环境变量等；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"生命周期：created、running、pausing、paused、stopped；可以通过 update 动态调整硬件资源使用率"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"数据卷：数据卷由自己的独立的生命周期"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"网络：独立的网络命名空间、共享其他实例的网络命名空间、共享主机的网络命名空间"}]}]},{"type":"element","tag":"h2","props":{"id":"架构"},"children":[{"type":"text","value":"架构"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Docker 引擎实际上由 Dockerd、Containerd、RunC 等组件构成"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Dockerd：容器管理 -> 编排管理和集群管理。它接受来自外部的 HTTP 请求并作为 API 调用执行，对内与 Containerd 进行通讯。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Containerd：对镜像、容器的管理提供了一个更进一步的抽象，提供了内容、快照、差异、容器、镜像、任务等更加细粒度的概念。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Container 包含 Containerd-shim，用于正确处理由操作系统发送过来的信号。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"RunC：Containerd 提供的容器管理等 API 的执行者是 RunC。"}]},{"type":"element","tag":"h2","props":{"id":"常见指令"},"children":[{"type":"text","value":"常见指令"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Build：打包镜像，如 docker build -t test . -f Dockerfile；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Exec：执行容器指令，如 docker exec -it xxx bash；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Run：运行镜像，如 docker run -it test；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ps：列表，如 docker ps；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Copy：复制文件到 Docker 中，如 docker cp d://test dockerID:dockerPath"}]}]},{"type":"element","tag":"h2","props":{"id":"调试流程"},"children":[{"type":"text","value":"调试流程"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"拉远端镜像：docker pull registry.gitlab.baixing.cn/fenlei/midway-fe:75150"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"启动容器：docker run -p 8081:7001 -it 5d0c03824600 sleep 999m"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"进入并调试：docker exec -it name /bin/bash"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"-p 8081:7001"}]},{"type":"text","value":"，把本机的 8081 端口绑定到 Container 的 7001 端口。"}]},{"type":"element","tag":"h2","props":{"id":"常见问题"},"children":[{"type":"text","value":"常见问题"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"关闭 Hyper-V："},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"bcdedit /set hypervisorlaunchtype off"}]}]},{"type":"element","tag":"section","props":{"className":["footnotes"],"dataFootnotes":""},"children":[{"type":"element","tag":"h2","props":{"className":["sr-only"],"id":"footnote-label"},"children":[{"type":"text","value":"Footnotes"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{"id":"user-content-fn-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6"},"children":[{"type":"text","value":"虚拟机一般有三种模拟方式，裸机型（硬件 + 虚拟 OS + 虚拟 APP）、托管型（OS + Hypervisor + 虚拟 OS + 虚拟 APP）和操作系统虚拟化（OS + 容器 + 虚拟 APP）。 "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6","ariaLabel":"Back to reference 1","className":["data-footnote-backref"],"dataFootnoteBackref":""},"children":[{"type":"text","value":"↩"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"简介","depth":2,"text":"简介"},{"id":"原理","depth":2,"text":"原理"},{"id":"概念","depth":2,"text":"概念"},{"id":"架构","depth":2,"text":"架构"},{"id":"常见指令","depth":2,"text":"常见指令"},{"id":"调试流程","depth":2,"text":"调试流程"},{"id":"常见问题","depth":2,"text":"常见问题"},{"id":"footnote-label","depth":2,"text":"Footnotes"}]}},"_type":"markdown","_id":"content:6.maps:_devops:docker.md","_source":"content","_file":"6.maps/_devops/docker.md","_extension":"md"}