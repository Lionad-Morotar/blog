{"_path":"/gists/pinvoke","_dir":"gists","_draft":false,"_partial":false,"_locale":"","title":"PInvoke","description":"PInvoke 既 Platform Invocation Services 平台调用服务，允许你使用 C# 之类的语言调用外部函数。比如，许多硬件中，其驱动是用 C/C++ 写的，而用 C# 在外面再套一层壳子来管理界面（WPF/Winform）。这时，可以使用 PInvoke 方法让 C# 去调用动态链接库中的函数。","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"pinvoke"},"children":[{"type":"text","value":"PInvoke"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"PInvoke 既 Platform Invocation Services 平台调用服务，允许你使用 C# 之类的语言调用外部函数。比如，许多硬件中，其驱动是用 C/C++ 写的，而用 C# 在外面再套一层壳子来管理界面（WPF/Winform）。这时，可以使用 PInvoke 方法让 C# 去调用动态链接库中的函数。"}]},{"type":"element","tag":"h5","props":{"id":"手把手教你pinvoke"},"children":[{"type":"element","tag":"link","props":{"type":"h5","to":"https://mgear-file.oss-cn-shanghai.aliyuncs.com/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0PInvoke_%E9%BB%84%E8%85%BE%E9%9C%84%E7%9A%84%E5%8D%9A%E5%AE%A2_CSDN%E5%8D%9A%E5%AE%A2.html","source":"https://blog.csdn.net/htxhtx123/article/details/104323450"},"children":[]},{"type":"text","value":"《手把手教你PInvoke》"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"可以在 C# 中使用 DLLImport 标记链接库并引入其中函数。"}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes material-theme-lighter github-light github-dark monokai","code":"public class Win32\n{\n    [DllImport(\"user32.dll\")]\n    public static extern IntPtr MessageBox(\n      int hWnd,\n      String text,\n      String caption,\n      uint type\n    );\n}\nclass Program\n{\n    static void Main(string[] args)\n    {\n        Win32.MessageBox(0, \"Hello, World\", \"Hi~\", 0);\n        Console.ReadLine();\n    }\n}\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"public class Win32\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"{\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    [DllImport(\"user32.dll\")]\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    public static extern IntPtr MessageBox(\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"      int hWnd,\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"      String text,\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"      String caption,\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"      uint type\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    );\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"}\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"class Program\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"{\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    static void Main(string[] args)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        Win32.MessageBox(0, \"Hello, World\", \"Hi~\", 0);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        Console.ReadLine();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":17},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    }\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":18},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"}\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果不知道有什么方法可以用、方法对应哪个动态链接库以及参数是啥，都可以上官方文档中找，里面有函数作用及签名等详细的说明。也可以到 pinvoke.net 找到已经汇总好的代码。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.microsoft.com/en-us/windows/win32/api/","rel":["nofollow"]},"children":[{"type":"text","value":"Programming reference for the Win32 API"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://pinvoke.net/index.aspx","rel":["nofollow"]},"children":[{"type":"text","value":"PInvoke.net"}]}]}]},{"type":"element","tag":"h5","props":{"id":"使用pinvoke互操作让c和c愉快的交互优势互补"},"children":[{"type":"element","tag":"link","props":{"type":"h5","to":"https://mgear-file.oss-cn-shanghai.aliyuncs.com/%E4%BD%BF%E7%94%A8PInvoke%E4%BA%92%E6%93%8D%E4%BD%9C%EF%BC%8C%E8%AE%A9C%23%E5%92%8CC_%E6%84%89%E5%BF%AB%E7%9A%84%E4%BA%A4%E4%BA%92%E4%BC%98%E5%8A%BF%E4%BA%92%E8%A1%A5_%E6%85%95%E8%AF%BE%E6%89%8B%E8%AE%B0.html","source":"https://www.imooc.com/article/305247"},"children":[]},{"type":"text","value":"《使用PInvoke互操作，让C#和C++愉快的交互优势互补》"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"介绍了如何使用 Visual Studio 创建一个 C++ 动态链接库并在 C# 中调用。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"要了解托管代码和非托管代码的函数签名的类型转换，可以查阅官方文档。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.microsoft.com/zh-cn/dotnet/standard/native-interop/type-marshaling","rel":["nofollow"]},"children":[{"type":"text","value":"类型封送"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果碰到复杂类型，可以使用 PInvoke Interop Assistant 工具自动转换代码。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/jaredpar/pinvoke-interop-assistant","rel":["nofollow"]},"children":[{"type":"text","value":"PInvoke Interop Assistant"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此外，在 C++ 中，可以通过函数指针直接接受来自 C# 的委托函数，十分令人愉快。"}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:7.gists:pinvoke.md","_source":"content","_file":"7.gists/pinvoke.md","_extension":"md"}