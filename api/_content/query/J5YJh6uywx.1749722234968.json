{"_path":"/maps/_fe-framework/fe-framework","_dir":"_fe-framework","_draft":false,"_partial":true,"_locale":"","title":"前端框架","description":"前端框架是在前端开发不同阶段，用以简化开发的工具集合。它们提供了一种组织代码的方式，使得开发者可以专注于业务逻辑，而不是底层的技术细节。","body":{"type":"root","children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/maps/_fe-framework/ui/vue"},"children":[{"type":"text","value":"Vue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/maps/_fe-framework/ui/react"},"children":[{"type":"text","value":"React"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/maps/_fe-framework/ui/angular"},"children":[{"type":"text","value":"Angular"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/maps/_fe-framework/nuxt/nuxt"},"children":[{"type":"text","value":"Nuxt"}]}]}]},{"type":"element","tag":"h2","props":{"id":"隔离方案"},"children":[{"type":"text","value":"隔离方案"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/maps/_fe-framework/micro-fe"},"children":[{"type":"text","value":"Micro FrontEnd"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/maps/_fe-framework/web-components"},"children":[{"type":"text","value":"Web Components"}]}]}]},{"type":"element","tag":"h4","props":{"id":"sharing-state-with-islands-architecture"},"children":[{"type":"element","tag":"a","props":{"href":"https://frontendatscale.com/blog/islands-architecture-state/","rel":["nofollow"]},"children":[{"type":"text","value":"Sharing State with Islands Architecture"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MAXI FERREIRA 阐述的在岛模式组件中管理状态的思路也可以用于低代码场景。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"q","props":{},"children":[{"type":"text","value":"We have several options for choosing a store. Astro recommends the "},{"type":"element","tag":"a","props":{"href":"https://github.com/nanostores/nanostores","rel":["nofollow"]},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nanostores"}]}]},{"type":"text","value":" library in their documentation, which is what we’ll use for our example, but several UI frameworks already come with a built-in solution—Svelte has "},{"type":"element","tag":"a","props":{"href":"https://svelte.dev/docs/svelte-store","rel":["nofollow"]},"children":[{"type":"text","value":"Stores"}]},{"type":"text","value":", Preact has "},{"type":"element","tag":"a","props":{"href":"https://preactjs.com/guide/v10/signals/","rel":["nofollow"]},"children":[{"type":"text","value":"Signals"}]},{"type":"text","value":" (as does "},{"type":"element","tag":"a","props":{"href":"https://www.solidjs.com/docs/latest#basic-reactivity","rel":["nofollow"]},"children":[{"type":"text","value":"Solid"}]},{"type":"text","value":"), and Vue has the "},{"type":"element","tag":"a","props":{"href":"https://vuejs.org/guide/scaling-up/state-management.html#simple-state-management-with-reactivity-api","rel":["nofollow"]},"children":[{"type":"text","value":"Reactivity API"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"第一次见到有人在公开场合说 Vue 的 Reactive API 是可以用于管理状态的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20231010125234.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"新的状态管理办法结合了事件通知和统一的状态管理库。一种替代的版本是使用回调函数。"}]},{"type":"element","tag":"h2","props":{"id":"框架类库"},"children":[{"type":"text","value":"框架类库"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/maps/_fe-framework/assets/iconify"},"children":[{"type":"text","value":"Iconify"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/maps/_fe-framework/schema/zod"},"children":[{"type":"text","value":"Zod"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/maps/_fe-framework/motion/blockies-animation"},"children":[{"type":"text","value":"Blockies Animate"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"隔离方案","depth":2,"text":"隔离方案"},{"id":"框架类库","depth":2,"text":"框架类库"}]}},"_type":"markdown","_id":"content:6.maps:_fe-framework:fe-framework.md","_source":"content","_file":"6.maps/_fe-framework/fe-framework.md","_stem":"6.maps/_fe-framework/fe-framework","_extension":"md"}