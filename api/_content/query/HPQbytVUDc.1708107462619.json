{"_path":"/maps/_hire/intern","_dir":"_hire","_draft":false,"_partial":true,"_locale":"","title":"面试题题库","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"面试题题库"},"children":[{"type":"text","value":"面试题题库"}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"\n  h4 a {\n    text-decoration: underline !important;\n    text-decoration-color: #b2b2b2 !important;\n  }\n  h4 a:hover {\n    text-decoration-color: #c62222 !important;\n  }\n"}]},{"type":"element","tag":"h2","props":{"id":"算法题"},"children":[{"type":"text","value":"算法题"}]},{"type":"element","tag":"h4","props":{"id":"简单-斐波那契数列"},"children":[{"type":"element","tag":"a","props":{"href":"https://leetcode.cn/problems/fibonacci-number/","rel":["nofollow"]},"children":[{"type":"text","value":"简单-斐波那契数列"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"斐波那契数列指以 0、1、1、2、3、5、8... 之后每一项都是前面两项数字之和这种规律排列的数组。给定 n，计算数列第 n 项的值。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"后续提问方向："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://leetcode.cn/problems/fibonacci-number/solution/fei-bo-na-qi-shu-by-leetcode-solution-o4ze/#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92","rel":["nofollow"]},"children":[{"type":"text","value":"简单-非递归解法（递推）"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简单-时间复杂度最小的解法（枚举）"}]}]},{"type":"element","tag":"h4","props":{"id":"简单-合并有序链表"},"children":[{"type":"element","tag":"a","props":{"href":"https://leetcode.cn/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/","rel":["nofollow"]},"children":[{"type":"text","value":"简单-合并有序链表"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"输入两个有序的链表的头节点，返回合并好的链表的头节点。如输入 1->2->4 和 1->3->4，输出 1->1->2->3->4->4"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"后续提问方向："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://leetcode.cn/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/solution/he-bing-liang-ge-pai-xu-de-lian-biao-by-g3z6g/#%E6%96%B9%E6%B3%95%E4%BA%8C%EF%BC%9A%E8%BF%AD%E4%BB%A3","rel":["nofollow"]},"children":[{"type":"text","value":"简单-空间复杂度最小的解法（迭代）"}]}]}]},{"type":"element","tag":"h4","props":{"id":"简单-反转链表"},"children":[{"type":"element","tag":"a","props":{"href":"https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/submissions/","rel":["nofollow"]},"children":[{"type":"text","value":"简单-反转链表"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"输入一个链表的头节点，输出该链表反转后的头节点。如输入 1->2->3，输出 3->2->1"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"后续提问方向："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/solution/fan-zhuan-lian-biao-by-leetcode-solution-jvs5/#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A%E8%BF%AD%E4%BB%A3","rel":["nofollow"]},"children":[{"type":"text","value":"简单-空间复杂度最小的解法（迭代）"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"中等-环形链表或包含环的链表的反转"}]}]},{"type":"element","tag":"h4","props":{"id":"中等-有效的括号字符串"},"children":[{"type":"element","tag":"a","props":{"href":"https://leetcode.cn/problems/valid-parenthesis-string/","rel":["nofollow"]},"children":[{"type":"text","value":"中等-有效的括号字符串"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"给定由 '('、')'、两种字符的字符串，验证左右括号是否配对。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\")(()))\"          =>  false"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"\"(())((()())())\"  =>  true"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"后续提问方向："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"困难-增加星号字符，\"*\"，可作为单个左括号或单个右括号或空字符串使用，测试用例“(((((())*)))()))(()((*()*(*)))(*)()”"}]}]},{"type":"element","tag":"h4","props":{"id":"中等-数组第k个最大元素"},"children":[{"type":"element","tag":"a","props":{"href":"https://leetcode.cn/problems/kth-largest-element-in-an-array/","rel":["nofollow"]},"children":[{"type":"text","value":"中等-数组第K个最大元素"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"后续提问方向："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"困难-使用时间复杂度为 O(n) 的解法。"}]}]},{"type":"element","tag":"h4","props":{"id":"中等-二叉树的层序遍历"},"children":[{"type":"element","tag":"a","props":{"href":"https://leetcode.cn/problems/binary-tree-level-order-traversal/","rel":["nofollow"]},"children":[{"type":"text","value":"中等-二叉树的层序遍历"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"给定二叉树的根节点 root，返回树的层序遍历的结果。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220812013637.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"输入：如上图所示。输出：[[3],"},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"9,20"}]},{"type":"text","value":","},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"15,7"}]},{"type":"text","value":"]"}]},{"type":"element","tag":"h2","props":{"id":"编程题"},"children":[{"type":"text","value":"编程题"}]},{"type":"element","tag":"h4","props":{"id":"简单-bind"},"children":[{"type":"text","value":"简单-bind"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"用例"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    const a = {\n      name: 'a',\n      say() {\n        console.log(this.name)\n      },\n    }\n    const c = {\n      name: 'c',\n    }\n    a.say.bind(c)() // \"c\"\n  "}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    Function.prototype.bind = function bind(context = globalThis) {\n      const fn = this\n      context.fn = fn\n      return (...args) => {\n        const res = context.fn(...args)\n        delete context.fn\n        return res\n      }\n    }\n  "}]}]},{"type":"element","tag":"h4","props":{"id":"中等-instanceof"},"children":[{"type":"text","value":"中等-instanceof"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"instanceof 运算符先通过检测类的 Symbol.hasInstance 来判断对象是否是类实例，如果没有相应方法则检测构造器的原型在不在对象的原型链上。"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    function _instanceof (val, fn) {\n      const hasInstance = fn[Symbol.hasInstance]\n      if (hasInstance) {\n        return fn[Symbol.hasInstance](val)\n      }\n      const proto = fn.prototype\n      while ((val = Object.getPrototypeOf(val))) {\n        if (val === proto) {\n          return true\n        }\n      }\n      return false\n    }\n  "}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"后续提问方向："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"困难-有哪些判断类型的方法？各有什么优缺点？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"偏门-创造一个类 God 使得 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"null instanceof God"}]},{"type":"text","value":" 为真"}]}]},{"type":"element","tag":"h4","props":{"id":"中等-深拷贝函数"},"children":[{"type":"text","value":"中等-深拷贝函数"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    function cloneDeep (obj) {\n      if (typeof obj !== 'object') {\n        return obj\n      }\n      if (obj instanceof Array) {\n        return obj.map(cloneDeep)\n      }\n      return Object.entries(obj).reduce((h, [k, v]) => {\n        h[k] = cloneDeep(v)\n        return h\n      }, {})\n    }\n  "}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"后续提问方向："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"中等-如何支持多种类型，如 Function、Symbol、Undefined、RegExp、Math"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"中等-如何处理对象间循环引用"}]}]},{"type":"element","tag":"h4","props":{"id":"中等-柯里化函数"},"children":[{"type":"text","value":"中等-柯里化函数"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"用例"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    const add = curry(function (a, b) {  return a + b })\n    const add5 = add(5)\n    add5(6) // 11\n  "}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    const curry = (fn, ...args) => {\n      if (args.length >= fn.length) {\n        return fn.apply(null, args)\n      } else {\n        const newFn = (...extraArgs) => curry(fn, ...args, ...extraArgs)\n        Object.defineProperty(newFn, 'length', { value: fn.length - args.length })\n        return newFn\n      }\n    }\n  "}]}]},{"type":"element","tag":"h4","props":{"id":"中等-列表数据转树结构"},"children":[{"type":"text","value":"中等-列表数据转树结构"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"用例"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    // 输入\n    [\n      {\n        id: \"1\",\n        name: \"page\",\n      },\n      {\n        name: \"page-name\",\n        id: \"2\",\n        parent: \"1\",\n      },\n      {\n        name: \"text\",\n        id: \"3\",\n        parent: \"2\",\n      },\n      {\n        name: \"text\",\n        id: \"4\",\n        parent: \"2\",\n      }\n    ]\n    // 输出\n    [\n      {\n        \"id\": \"1\",\n        \"name\": \"page\",\n        \"components\": [\n          {\n            \"name\": \"page-name\",\n            \"id\": \"2\",\n            \"parent\": \"1\",\n            \"components\": [\n              {\n                \"name\": \"text\",\n                \"id\": \"3\",\n                \"parent\": \"2\",\n              },\n              {\n                \"name\": \"text\",\n                \"id\": \"4\",\n                \"parent\": \"2\",\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  "}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    function toTree (data) {\n      data = data || []\n      const map = {}\n      const roots = []\n      data.map(x => map[x.id] = x)\n      data.map(x => {\n        if (map[x.parent]) {\n          map[x.parent].components = map[x.parent].components || []\n          map[x.parent].components.push(x)\n        } else {\n          roots.push(x)\n        }\n      })\n      return roots\n    }\n  "}]}]},{"type":"element","tag":"h4","props":{"id":"中等-promisemapseries"},"children":[{"type":"element","tag":"a","props":{"href":"http://bluebirdjs.com/docs/api/promise.mapseries.html","rel":["nofollow"]},"children":[{"type":"text","value":"中等-Promise.mapSeries"}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"用例"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n  const fileNames = [\"1.txt\", Promise.resolve(\"2.txt\"), \"3.txt\"]\n  Promise.mapSeries(fileNames, function(fileName, index, arrayLength) {\n      return fs.readFileAsync(fileName).then(function() {\n          return fileName + \"!\"\n      });\n  }).then(function(result) {\n      console.log(result)\n      // [\"1.txt!\", \"2.txt!\", \"3.txt!\"]\n  })\n  "}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    Promise.mapSeries = (arr, fn) => {\n      if (!Array.isArray(arr)) {\n        throw new TypeError(`Promise.mapSeries requires array, but got ${typeof arr}`)\n      }\n      return new Promise(async (resolve) => {\n        const results = []\n        for (let i = 0; i < arr.length; i++) {\n          const val = await Promise.resolve(arr[i])\n          results[i] = await fn(val, i, arr.length)\n        }\n        resolve(results)\n      })\n    }\n  "}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"后续提问方向："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"困难-给实现加上类型（TypeScript）"}]}]},{"type":"element","tag":"h2","props":{"id":"综合题"},"children":[{"type":"text","value":"综合题"}]},{"type":"element","tag":"h4","props":{"id":"简单-统计当前页面用到的所有html标签的种类"},"children":[{"type":"text","value":"简单-统计当前页面用到的所有HTML标签的种类"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    [...new Set([...document.querySelectorAll('*')].map(x => x.tagName))]\n    // ['HTML', 'DIV', 'SPAN', ...]\n  "}]}]},{"type":"element","tag":"h4","props":{"id":"中等-商品排序"},"children":[{"type":"text","value":"中等-商品排序"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"设计一个支持扩展的排序函数。使得给定的食物列表按照价格升序、评分降序的顺序排列。"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"用例"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    const food = [\n      { name: \"Suger\", price: 1, rating: 3 },\n      { name: \"Chocolate\", price: 3, rating: 4 },\n      { name: \"Burger\", price: 3, rating: 2 },\n      { name: \"Cola\", price: 1, rating: 5 },\n      { name: \"Pizza\", price: 5, rating: 3 },\n    ]\n    food.sort(yourSortFunction)\n    // [{\"name\": \"Cola\",\"price\": 1,\"rating\": 5},\n    //  {\"name\": \"Suger\",\"price\": 1,\"rating\": 3},\n    //  {\"name\": \"Chocolate\",\"price\": 3,\"rating\": 4},\n    //  {\"name\": \"Burger\",\"price\": 3,\"rating\": 2},\n    //  {\"name\": \"Pizza\",\"price\": 5,\"rating\": 3}]\n  "}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    const sort = map => compareFn => (a, b) => compareFn(map(a), map(b))\n    const flipComparison = fn => (a, b) => -fn(a, b)\n    const byValue = (a, b) => a - b\n    const byPrice = sort(e => e.price)(byValue)\n    const byRating = sort(e => e.rating)(flipComparison(byValue))\n    const sortFlattend = sortFns => (a, b) => sortFns.reduce((sortResult, fn) => sortResult || fn(a,b), 0)\n    const byPriceThenRating = sortFlattend([byPrice, byRating])\n    // food.sort(byPriceThenRating)\n  "}]}]},{"type":"element","tag":"h4","props":{"id":"困难-给定以下递归函数提问"},"children":[{"type":"text","value":"困难-给定以下递归函数提问"}]},{"type":"element","tag":"pre","props":{"className":"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","code":"function recur(n) {\n    if (n === 0) console.log(n)\n    else recur(n - 1)\n}\nrecur(500000)\n// >>> RangeError: Maximum call stack size exceeded\n","language":"js","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#66D9EF;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic"},"children":[{"type":"text","value":"function"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E"},"children":[{"type":"text","value":" recur"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#90A4AE;--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#FD971F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic"},"children":[{"type":"text","value":"n"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":")"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit"},"children":[{"type":"text","value":"    if"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" ("}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"n"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672"},"children":[{"type":"text","value":" ==="}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF"},"children":[{"type":"text","value":" 0"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":") "}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"console"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E"},"children":[{"type":"text","value":"log"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"n"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":")\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit"},"children":[{"type":"text","value":"    else"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E"},"children":[{"type":"text","value":" recur"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"n"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672"},"children":[{"type":"text","value":" -"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF"},"children":[{"type":"text","value":" 1"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":")\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"}\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E"},"children":[{"type":"text","value":"recur"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF"},"children":[{"type":"text","value":"500000"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":")\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-light:#90A4AE;--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F;--shiki-light-font-style:italic;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:inherit"},"children":[{"type":"text","value":"// >>> RangeError: Maximum call stack size exceeded\n"}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简单-将该函数转换为循环的写法避免栈溢出"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"困难-使用任意循环以外的方法改写函数避免栈溢出"}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    function recur(n) {\n      if (n === 0) console.log(n)\n      else return () => recur(n - 1)\n    }\n    function trampoline(fn) {\n      let res = () => fn()\n      while (res instanceof Function) {\n          res = res()\n      }\n      return res\n    }\n    trampoline(recur(50000000)) // 0\n  "}]}]},{"type":"element","tag":"h4","props":{"id":"困难-商品全排列"},"children":[{"type":"text","value":"困难-商品全排列"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"任意技术栈。给定商品的规格信息以及库存列表，实现商品的全排列表格。表格行首有 checkbox，表格能多选，但如果库存中没有此行的商品规格则此行不能被选中。"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"基础代码及用例"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220812105700.png"},"children":[]},{"type":"text","value":"\n    代码地址："},{"type":"element","tag":"a","props":{"href":"https://element-plus.run/#eyJBcHAudnVlIjoiPHRlbXBsYXRlPlxuICA8ZWwtdGFibGUgOmRhdGE9XCJ0YWJsZURhdGFcIiBzdHlsZT1cIndpZHRoOiAxMDAlXCI+XG4gICAgPGVsLXRhYmxlLWNvbHVtbiB0eXBlPVwic2VsZWN0aW9uXCIgd2lkdGg9XCI1NVwiIC8+XG4gICAgPGVsLXRhYmxlLWNvbHVtbiBwcm9wPVwibmFtZVwiIGxhYmVsPVwi5ZCN56ewXCIgd2lkdGg9XCIxODBcIiAvPlxuICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD1cImNvbG9yXCIgbGFiZWw9XCLpopzoibJcIiAvPlxuICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD1cInNhbGVzZXRcIiBsYWJlbD1cIuWll+mkkFwiIC8+XG4gICAgPGVsLXRhYmxlLWNvbHVtbiBwcm9wPVwic2l6ZVwiIGxhYmVsPVwi5YaF5a2YXCIgLz5cbiAgPC9lbC10YWJsZT5cbjwvdGVtcGxhdGU+XG48c2NyaXB0IGxhbmc9XCJ0c1wiIHNldHVwPlxuICAvLyDllYblk4HlsZ7mgKfmmI7nu4ZcbiAgY29uc3Qgc3BlY0xpc3QgPSBbXG4gICAgeyB0aXRsZTogXCLpopzoibJcIiwga2V5OiAnY29sb3InLCBsaXN0OiBbXCLnuqLoibJcIiwgXCLntKvoibJcIiwgXCLnmb3oibJcIiwgXCLpu5HoibJcIl0gfSxcbiAgICB7IHRpdGxlOiBcIuWll+mkkFwiLCBrZXk6ICdzYWxlc2V0JywgbGlzdDogW1wi5aWX6aSQ5LiAXCIsIFwi5aWX6aSQ5LqMXCIsIFwi5aWX6aSQ5LiJXCJdIH0sXG4gICAgeyB0aXRsZTogXCLlhoXlrZhcIiwga2V5OiAnc2l6ZScsIGxpc3Q6IFtcIjY0R1wiLCBcIjEyOEdcIiwgXCIyNTZHXCJdIH1cbiAgXVxuICAvLyDliankvZnlupPlrZjliJfooahcbiAgY29uc3Qgc3RvcmFnZSA9IFtcbiAgICB7IGlkOiBcIjFcIiwgc3BlY3M6IFtcIue0q+iJslwiLCBcIuWll+mkkOS4gFwiLCBcIjY0R1wiXSB9LFxuICAgIHsgaWQ6IFwiMlwiLCBzcGVjczogW1wi57Sr6ImyXCIsIFwi5aWX6aSQ5LiAXCIsIFwiMTI4R1wiXSB9LFxuICAgIHsgaWQ6IFwiM1wiLCBzcGVjczogW1wi57Sr6ImyXCIsIFwi5aWX6aSQ5LqMXCIsIFwiMTI4R1wiXSB9LFxuICAgIHsgaWQ6IFwiNFwiLCBzcGVjczogW1wi6buR6ImyXCIsIFwi5aWX6aSQ5LiJXCIsIFwiMjU2R1wiXSB9XG4gIF1cbiAgY29uc3QgdGFibGVEYXRhID0gW11cbjwvc2NyaXB0PlxuIiwiaW1wb3J0X21hcC5qc29uIjoie1xuICBcImltcG9ydHNcIjoge31cbn0iLCJfbyI6e319","rel":["noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"Element Plus Playground"}]},{"type":"text","value":"\n  "}]}]},{"type":"element","tag":"h2","props":{"id":"类型编程"},"children":[{"type":"text","value":"类型编程"}]},{"type":"element","tag":"h4","props":{"id":"简单-omit"},"children":[{"type":"text","value":"简单-Omit"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"用例"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    interface Todo {\n      title: string\n      description: string\n      completed: boolean\n    }\n    type TodoPreview = MyOmit<Todo, 'description' | 'title'>\n    const todo: TodoPreview = {\n      completed: false,\n    }\n  "}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    type MyOmit<T, K extends keyof T> = {\n      [P in Exclude<keyof T, K>]: T[P]\n    }\n  "}]}]},{"type":"element","tag":"h4","props":{"id":"简单-trim"},"children":[{"type":"text","value":"简单-Trim"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"用例"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    // trimed expected to be 'Hello World'\n    type trimed = Trim<'  Hello World  '>\n  "}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    type Trim<S extends string> = S extends\n      | `${' ' | '\\t' | '\\n'}${infer Rest}`\n      | `${infer Rest}${' ' | '\\t' | '\\n'}`\n      ? Trim<Rest>\n      : S\n  "}]}]},{"type":"element","tag":"h4","props":{"id":"中等-deepreadonly"},"children":[{"type":"text","value":"中等-DeepReadonly"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"用例"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    type X = { \n      x: { \n        a: 1\n        b: 'hi'\n      }\n      y: 'hey'\n    }\n    type Expected = { \n      readonly x: { \n        readonly a: 1\n        readonly b: 'hi'\n      }\n      readonly y: 'hey' \n    }\n    type Todo = DeepReadonly<X> // should be same as `Expected`\n  "}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"参考实现"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"highlight","props":{},"children":[{"type":"text","value":"\n    type DeepReadonly<T extends any> = {\n      readonly [P in keyof T]: T[P] extends (...args: any[]) => any\n        ? T[P]\n        : DeepReadonly<T[P]>\n    }\n  "}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"算法题","depth":2,"text":"算法题"},{"id":"编程题","depth":2,"text":"编程题"},{"id":"综合题","depth":2,"text":"综合题"},{"id":"类型编程","depth":2,"text":"类型编程"}]}},"_type":"markdown","_id":"content:6.maps:_hire:intern.md","_source":"content","_file":"6.maps/_hire/intern.md","_extension":"md"}