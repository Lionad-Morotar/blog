{"_path":"/articles/clean-git-tree","_dir":"articles","_draft":false,"_partial":false,"_locale":"","title":"🗂️ 使你的 Git Graph 变得清晰易懂","description":"本文介绍了如何使用 Git 命令和工具，使你的 Git Graph 变得清晰易懂。","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Git 在代码项目中的应用非常广泛，主要能让多人协作变得更加容易。当团队成员增多，项目也变得庞大的同时，管理员可能会采用一些新工具或方法论来规范 Git 的使用，比如使用 Gitlab、结合 Git Flow 等方法论。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"表面来看，Git Graph 是由分支和一个个提交组成的，这些工具通过规范成员的合作方式来提高效率。但写代码的时候，为了溯源和方便其他人梳理文件内容，会更多关注文件内容的作者及最后修改时间，而不是代码的分支。也就是说，"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"这些工具或多或少能提高团队的协作效率，但并不是总能让你的 Git Graph 变得清晰易懂。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以下介绍了一些我数年来关于让 Git 使用更加清晰易懂的思考和实践，供大家参考。"}]},{"type":"element","tag":"h2","props":{"id":""},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"前言","depth":2,"text":"前言"},{"id":"","depth":2,"text":""}]}},"_type":"markdown","_id":"content:2.articles:1097.clean-git-tree.md","_source":"content","_file":"2.articles/1097.clean-git-tree.md","_stem":"2.articles/1097.clean-git-tree","_extension":"md"}