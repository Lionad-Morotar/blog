[{"data":1,"prerenderedAt":593},["ShallowReactive",2],{"navigation":3,"/maps/_cpp/makefile":158,"/maps/_cpp/makefile-surround":584},[4,35,89,95,122,128,152],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":45,"_path":46},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":48,"_path":49},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":51,"_path":52},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":54,"_path":55},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":57,"_path":58},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":60,"_path":61},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":63,"_path":64},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":66,"_path":67},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":69,"_path":70},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":72,"_path":73},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":75,"_path":76},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":78,"_path":79},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":81,"_path":82},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":84,"_path":85},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":87,"_path":88},"📝 技术博客归档","/articles/archive",{"title":90,"_path":91,"children":92},"读书笔记 / Notes","/books",[93],{"title":94,"_path":91},"📕 读书笔记",{"title":96,"_path":97,"children":98},"吉他剧场 / Music","/music",[99,101,104,107,110,113,116,119],{"title":100,"_path":97},"🎸 FingerStyle！",{"title":102,"_path":103},"🌬️ 等待的风","/music/wind",{"title":105,"_path":106},"💕 约定的海洋","/music/ocean",{"title":108,"_path":109},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":111,"_path":112},"🌏 残酷天使的行动纲领","/music/eva",{"title":114,"_path":115},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":117,"_path":118},"🍷 Wu Wei","/music/wu-wei",{"title":120,"_path":121},"🌅 无题","/music/untitled",{"title":123,"_path":124,"children":125},"知识地图 / Maps","/maps",[126],{"title":127,"_path":124},"🏁 知识地图",{"title":129,"_path":130,"children":131},"造物 / Make","/tools",[132,134,137,140,143,146,149],{"title":133,"_path":130},"🧰 工具收集",{"title":135,"_path":136},"📕 博客","/tools/blog",{"title":138,"_path":139},"🥥 Coconut","/tools/coconut",{"title":141,"_path":142},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":144,"_path":145},"🌐 AnySort","/tools/anysort",{"title":147,"_path":148},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":150,"_path":151},"👓 Crapto","/tools/crypto-inline",{"title":153,"_path":154,"children":155},"我 / About","/hire",[156],{"title":157,"_path":154},"📬 技术简历",{"_path":159,"_dir":160,"_draft":161,"_partial":162,"_locale":163,"title":164,"description":165,"body":166,"_type":578,"_id":579,"_source":580,"_file":581,"_stem":582,"_extension":583},"/maps/_cpp/makefile","_cpp",false,true,"","Makefile","Makefile 构建工具基础教程。",{"type":167,"children":168,"toc":574},"root",[169,177,183,188,193,237,242,247,252,257,319,324,345,350,355,360,514,526,531,568],{"type":170,"tag":171,"props":172,"children":173},"element","p",{},[174],{"type":175,"value":176},"text","之前看 ElementUI 的时候有了解一点 Makefile 的语法，现在正在看 C++，恰好是更细致学习一下的好机会。",{"type":170,"tag":178,"props":179,"children":181},"h2",{"id":180},"概述",[182],{"type":175,"value":180},{"type":170,"tag":171,"props":184,"children":185},{},[186],{"type":175,"value":187},"Make（GNU Make）是一个自动化工具，它的特色在于有基本逻辑能力，可以跟踪特定文件。这样一来，诸如按需编译这种任务就可以高效完成。",{"type":170,"tag":171,"props":189,"children":190},{},[191],{"type":175,"value":192},"它最主要的语法结构如下代码所示。",{"type":170,"tag":194,"props":195,"children":199},"pre",{"className":196,"code":197,"language":198,"meta":163,"style":163},"language-makefile shiki shiki-themes material-theme-lighter github-light github-dark monokai","target: dependencies\n        commands\n","makefile",[200],{"type":170,"tag":201,"props":202,"children":203},"code",{"__ignoreMap":163},[204,228],{"type":170,"tag":205,"props":206,"children":209},"span",{"class":207,"line":208},"line",1,[210,216,222],{"type":170,"tag":205,"props":211,"children":213},{"style":212},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[214],{"type":175,"value":215},"target",{"type":170,"tag":205,"props":217,"children":219},{"style":218},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[220],{"type":175,"value":221},":",{"type":170,"tag":205,"props":223,"children":225},{"style":224},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[226],{"type":175,"value":227}," dependencies\n",{"type":170,"tag":205,"props":229,"children":231},{"class":207,"line":230},2,[232],{"type":170,"tag":205,"props":233,"children":234},{"style":224},[235],{"type":175,"value":236},"        commands\n",{"type":170,"tag":171,"props":238,"children":239},{},[240],{"type":175,"value":241},"这意味着：构建目标（target） = 依赖（dependencies） + 执行命令（commands）。",{"type":170,"tag":171,"props":243,"children":244},{},[245],{"type":175,"value":246},"就语法来说，依赖可以不存在，这就表示某个目标意味着直接执行对应的指令。这有点像是定义了一个命令名，或者是一个快捷入口之类的。比如，你可以定义一个 help 目标，以便执行 make help 时，在控制台输出一串帮助文本。",{"type":170,"tag":171,"props":248,"children":249},{},[250],{"type":175,"value":251},"执行时，直接使用 make \u003Ctarget> 就可以了。如果构建目标的修改日期比依赖更新的话，显而易见就不需要再执行对应的指令；如果依赖不存在，那么会自动回溯执行依赖作为目标时的指令，如此一层一层递归下去，直到所有的 target 及 dependencies 的关系被确认。",{"type":170,"tag":171,"props":253,"children":254},{},[255],{"type":175,"value":256},"由于 Make 不会像解析编程语言一样去细致解析 Makefile，所以其语法能力还是稍弱。不会鉴于其隐含的终极目标只是说明各个文件的依赖关系时顺带执行指令，所以也就可以理解为什么 Makefile 中变量只是类似 C 语言中宏一样的字符串替换了。",{"type":170,"tag":194,"props":258,"children":260},{"className":196,"code":259,"language":198,"meta":163,"style":163},"# define my variable\nvar = strings\ntarget: $(var)\n",[261],{"type":170,"tag":201,"props":262,"children":263},{"__ignoreMap":163},[264,273,291],{"type":170,"tag":205,"props":265,"children":266},{"class":207,"line":208},[267],{"type":170,"tag":205,"props":268,"children":270},{"style":269},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[271],{"type":175,"value":272},"# define my variable\n",{"type":170,"tag":205,"props":274,"children":275},{"class":207,"line":230},[276,281,286],{"type":170,"tag":205,"props":277,"children":278},{"style":224},[279],{"type":175,"value":280},"var ",{"type":170,"tag":205,"props":282,"children":283},{"style":218},[284],{"type":175,"value":285},"=",{"type":170,"tag":205,"props":287,"children":288},{"style":224},[289],{"type":175,"value":290}," strings\n",{"type":170,"tag":205,"props":292,"children":294},{"class":207,"line":293},3,[295,299,303,309,314],{"type":170,"tag":205,"props":296,"children":297},{"style":212},[298],{"type":175,"value":215},{"type":170,"tag":205,"props":300,"children":301},{"style":218},[302],{"type":175,"value":221},{"type":170,"tag":205,"props":304,"children":306},{"style":305},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[307],{"type":175,"value":308}," $(",{"type":170,"tag":205,"props":310,"children":311},{"style":224},[312],{"type":175,"value":313},"var",{"type":170,"tag":205,"props":315,"children":316},{"style":305},[317],{"type":175,"value":318},")\n",{"type":170,"tag":171,"props":320,"children":321},{},[322],{"type":175,"value":323},"Make 和 C/C++ 确实是一对儿。Make 在识别 .o 文件时，能自动把 .c 添加为依赖关系。这功能叫做自动推导（或隐私推导）。除了隐私推导，他还支持类似 C 的 Include，把别的 Makefile 整个包含进来。",{"type":170,"tag":194,"props":325,"children":327},{"className":196,"code":326,"language":198,"meta":163,"style":163},"include foo.make a.mk b.mk\n",[328],{"type":170,"tag":201,"props":329,"children":330},{"__ignoreMap":163},[331],{"type":170,"tag":205,"props":332,"children":333},{"class":207,"line":208},[334,340],{"type":170,"tag":205,"props":335,"children":337},{"style":336},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[338],{"type":175,"value":339},"include",{"type":170,"tag":205,"props":341,"children":342},{"style":224},[343],{"type":175,"value":344}," foo.make a.mk b.mk\n",{"type":170,"tag":171,"props":346,"children":347},{},[348],{"type":175,"value":349},"可以发现，Make 和字符串要打非常多交道，所以它支持各种通配符也就不令人意外了。如同 SHELL 中的通配符，* 和 ⁓ 分别代表任意长度字符串和用户主目录。不知道你用过正则没有，通配符就用作匹配及确认，再返回 true 或 false。这时候有人要问了，既然 Makefile 和字符串打交道，通配符返回布尔有啥用啊，它没办法表示列表哇！",{"type":170,"tag":171,"props":351,"children":352},{},[353],{"type":175,"value":354},"这就要说到 Makefile 的关键字了，wildcard，它是扩展关键字，可以把通配符匹配到的所有东西“扩展”为“列表”。列表当然是想象中的列表，其实际产物还是字符串的啦。不过为了更方便操作列表，还有辅助用的其它关键字，比如 patsubst，它是类似正则中的 replaceAll 那种效果。",{"type":170,"tag":171,"props":356,"children":357},{},[358],{"type":175,"value":359},"下面用一个例子来说明吧，把目录下所有 C 文件找出来，替换为 .o 后缀，这样一来，就可以用 gcc 全部编译了。",{"type":170,"tag":194,"props":361,"children":363},{"className":196,"code":362,"language":198,"meta":163,"style":163},"cfiles := $(wildcard *.c)\nofiles := $(patsubst %.c, %.o, %(cfiles))\ncompile: $(ofiles)\n         gcc -o $(ofiles)\n",[364],{"type":170,"tag":201,"props":365,"children":366},{"__ignoreMap":163},[367,406,467,492],{"type":170,"tag":205,"props":368,"children":369},{"class":207,"line":208},[370,375,380,384,390,396,402],{"type":170,"tag":205,"props":371,"children":372},{"style":224},[373],{"type":175,"value":374},"cfiles ",{"type":170,"tag":205,"props":376,"children":377},{"style":218},[378],{"type":175,"value":379},":=",{"type":170,"tag":205,"props":381,"children":382},{"style":305},[383],{"type":175,"value":308},{"type":170,"tag":205,"props":385,"children":387},{"style":386},"--shiki-light:#6182B8;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#66D9EF",[388],{"type":175,"value":389},"wildcard",{"type":170,"tag":205,"props":391,"children":393},{"style":392},"--shiki-light:#E53935;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[394],{"type":175,"value":395}," *",{"type":170,"tag":205,"props":397,"children":399},{"style":398},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[400],{"type":175,"value":401},".c",{"type":170,"tag":205,"props":403,"children":404},{"style":305},[405],{"type":175,"value":318},{"type":170,"tag":205,"props":407,"children":408},{"class":207,"line":230},[409,414,418,422,427,432,436,441,445,450,454,458,463],{"type":170,"tag":205,"props":410,"children":411},{"style":224},[412],{"type":175,"value":413},"ofiles ",{"type":170,"tag":205,"props":415,"children":416},{"style":218},[417],{"type":175,"value":379},{"type":170,"tag":205,"props":419,"children":420},{"style":305},[421],{"type":175,"value":308},{"type":170,"tag":205,"props":423,"children":424},{"style":386},[425],{"type":175,"value":426},"patsubst",{"type":170,"tag":205,"props":428,"children":429},{"style":392},[430],{"type":175,"value":431}," %",{"type":170,"tag":205,"props":433,"children":434},{"style":398},[435],{"type":175,"value":401},{"type":170,"tag":205,"props":437,"children":438},{"style":305},[439],{"type":175,"value":440},",",{"type":170,"tag":205,"props":442,"children":443},{"style":392},[444],{"type":175,"value":431},{"type":170,"tag":205,"props":446,"children":447},{"style":398},[448],{"type":175,"value":449},".o",{"type":170,"tag":205,"props":451,"children":452},{"style":305},[453],{"type":175,"value":440},{"type":170,"tag":205,"props":455,"children":456},{"style":392},[457],{"type":175,"value":431},{"type":170,"tag":205,"props":459,"children":460},{"style":398},[461],{"type":175,"value":462},"(cfiles)",{"type":170,"tag":205,"props":464,"children":465},{"style":305},[466],{"type":175,"value":318},{"type":170,"tag":205,"props":468,"children":469},{"class":207,"line":293},[470,475,479,483,488],{"type":170,"tag":205,"props":471,"children":472},{"style":212},[473],{"type":175,"value":474},"compile",{"type":170,"tag":205,"props":476,"children":477},{"style":218},[478],{"type":175,"value":221},{"type":170,"tag":205,"props":480,"children":481},{"style":305},[482],{"type":175,"value":308},{"type":170,"tag":205,"props":484,"children":485},{"style":224},[486],{"type":175,"value":487},"ofiles",{"type":170,"tag":205,"props":489,"children":490},{"style":305},[491],{"type":175,"value":318},{"type":170,"tag":205,"props":493,"children":495},{"class":207,"line":494},4,[496,501,506,510],{"type":170,"tag":205,"props":497,"children":498},{"style":224},[499],{"type":175,"value":500},"         gcc -o ",{"type":170,"tag":205,"props":502,"children":503},{"style":305},[504],{"type":175,"value":505},"$(",{"type":170,"tag":205,"props":507,"children":508},{"style":224},[509],{"type":175,"value":487},{"type":170,"tag":205,"props":511,"children":512},{"style":305},[513],{"type":175,"value":318},{"type":170,"tag":171,"props":515,"children":516},{},[517],{"type":170,"tag":518,"props":519,"children":523},"a",{"href":520,"rel":521},"https://seisman.github.io/how-to-write-makefile/rules.html#id5",[522],"nofollow",[524],{"type":175,"value":525},"TODO continue",{"type":170,"tag":178,"props":527,"children":529},{"id":528},"相关",[530],{"type":175,"value":528},{"type":170,"tag":532,"props":533,"children":534},"ul",{},[535,548,558],{"type":170,"tag":536,"props":537,"children":538},"li",{},[539,546],{"type":170,"tag":518,"props":540,"children":543},{"href":541,"rel":542},"https://github.com/seisman/how-to-write-makefile",[522],[544],{"type":175,"value":545},"跟我一起写 Makefile",{"type":175,"value":547},"，陈皓老师在 2004 年写的博客。非常易读，适合入门学习。",{"type":170,"tag":536,"props":549,"children":550},{},[551],{"type":170,"tag":518,"props":552,"children":555},{"href":553,"rel":554},"https://blog.csdn.net/qq_31811537/article/details/82892128",[522],[556],{"type":175,"value":557},"Makefile 中的 wildcard 用法",{"type":170,"tag":536,"props":559,"children":560},{},[561],{"type":170,"tag":518,"props":562,"children":565},{"href":563,"rel":564},"https://coolshell.cn/articles/3790.html",[522],[566],{"type":175,"value":567},"如何调试 MAKEFILE 变量",{"type":170,"tag":569,"props":570,"children":571},"style",{},[572],{"type":175,"value":573},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":163,"searchDepth":230,"depth":230,"links":575},[576,577],{"id":180,"depth":230,"text":180},{"id":528,"depth":230,"text":528},"markdown","content:6.maps:_cpp:makefile.md","content","6.maps/_cpp/makefile.md","6.maps/_cpp/makefile","md",[585,589],{"_path":586,"title":587,"description":588},"/maps/_cpp/king-db","King Database","A simple key-value store database",{"_path":590,"title":591,"description":592},"/maps/_cross-platform/device-metrics","Device Metrics","Understand how device pixels, points, and scale factor work together.",1748756320865]