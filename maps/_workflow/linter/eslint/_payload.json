[{"data":1,"prerenderedAt":448},["ShallowReactive",2],{"navigation":3,"/maps/_workflow/linter/eslint":155,"/maps/_workflow/linter/eslint-surround":440},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":156,"_dir":157,"_draft":158,"_partial":159,"_locale":160,"title":161,"description":162,"body":163,"_type":434,"_id":435,"_source":436,"_file":437,"_stem":438,"_extension":439},"/maps/_workflow/linter/eslint","linter",false,true,"","ESLint","https://github.com/sudongyuer/learn-eslint",{"type":164,"children":165,"toc":430},"root",[166,174,185,192,197,203,209,234,246,252,334,340,353,359,372,378,403,408,419,425],{"type":167,"tag":168,"props":169,"children":171},"element","h1",{"id":170},"eslint",[172],{"type":173,"value":161},"text",{"type":167,"tag":175,"props":176,"children":177},"p",{},[178],{"type":167,"tag":179,"props":180,"children":183},"a",{"href":162,"rel":181},[182],"nofollow",[184],{"type":173,"value":162},{"type":167,"tag":186,"props":187,"children":189},"h4",{"id":188},"prettier-和-eslint-的区别是",[190],{"type":173,"value":191},"Prettier 和 ESLint 的区别是？",{"type":167,"tag":175,"props":193,"children":194},{},[195],{"type":173,"value":196},"Prettier 是代码格式化工具，而 ESLint 则是 JS/TS 等代码的校验工具，只不过也有格式化这个功能。通过安装 ESLint 插件，可以使项目中的 ESLint 兼容 Prettier 的规则。再配置好 husky，就可以很方便的给暂存区代码进行格式化校验了。",{"type":167,"tag":198,"props":199,"children":201},"h2",{"id":200},"配置",[202],{"type":173,"value":200},{"type":167,"tag":186,"props":204,"children":206},{"id":205},"eslint-支持哪些类型的配置",[207],{"type":173,"value":208},"ESLint 支持哪些类型的配置？",{"type":167,"tag":210,"props":211,"children":212},"ul",{},[213,219,224,229],{"type":167,"tag":214,"props":215,"children":216},"li",{},[217],{"type":173,"value":218},"package.json 中的 eslintConfig 字段",{"type":167,"tag":214,"props":220,"children":221},{},[222],{"type":173,"value":223},"eslintrc 文件，包括 js、cjs、yaml、yml、json 文件格式，不支持 mjs",{"type":167,"tag":214,"props":225,"children":226},{},[227],{"type":173,"value":228},"文件内联配置",{"type":167,"tag":214,"props":230,"children":231},{},[232],{"type":173,"value":233},"CLI 参数",{"type":167,"tag":175,"props":235,"children":236},{},[237,239],{"type":173,"value":238},"见：",{"type":167,"tag":179,"props":240,"children":243},{"href":241,"rel":242},"https://zh-hans.eslint.org/docs/latest/use/configure/configuration-files#-1",[182],[244],{"type":173,"value":245},"ESLint Configure Files",{"type":167,"tag":186,"props":247,"children":249},{"id":248},"eslint-配置的优先级和覆盖规则是怎样的",[250],{"type":173,"value":251},"ESLint 配置的优先级和覆盖规则是怎样的？",{"type":167,"tag":210,"props":253,"children":254},{},[255,289,321],{"type":167,"tag":214,"props":256,"children":257},{},[258,260,267,269,275,276,282,283],{"type":173,"value":259},"文件内联配置：",{"type":167,"tag":261,"props":262,"children":264},"code",{"className":263},[],[265],{"type":173,"value":266},"/* eslint-disabled */",{"type":173,"value":268},"、",{"type":167,"tag":261,"props":270,"children":272},{"className":271},[],[273],{"type":173,"value":274},"/* global */",{"type":173,"value":268},{"type":167,"tag":261,"props":277,"children":279},{"className":278},[],[280],{"type":173,"value":281},"/* eslint xxx: \"off\" */",{"type":173,"value":268},{"type":167,"tag":261,"props":284,"children":286},{"className":285},[],[287],{"type":173,"value":288},"/* eslint-env node */",{"type":167,"tag":214,"props":290,"children":291},{},[292,294,300,301,307,308,314,315],{"type":173,"value":293},"命令行选项：",{"type":167,"tag":261,"props":295,"children":297},{"className":296},[],[298],{"type":173,"value":299},"--global",{"type":173,"value":268},{"type":167,"tag":261,"props":302,"children":304},{"className":303},[],[305],{"type":173,"value":306},"--rule",{"type":173,"value":268},{"type":167,"tag":261,"props":309,"children":311},{"className":310},[],[312],{"type":173,"value":313},"--env",{"type":173,"value":268},{"type":167,"tag":261,"props":316,"children":318},{"className":317},[],[319],{"type":173,"value":320},"--config",{"type":167,"tag":214,"props":322,"children":323},{},[324,326,332],{"type":173,"value":325},"文件配置：首先寻找和校验文件同目录的文件配置和 package.json eslintConfig 配置，没找到则向上级目录寻找，直到根目录，或找到包括 ",{"type":167,"tag":261,"props":327,"children":329},{"className":328},[],[330],{"type":173,"value":331},"root: true",{"type":173,"value":333}," 的配置",{"type":167,"tag":186,"props":335,"children":337},{"id":336},"eslint-相对-glob-模式的坑",[338],{"type":173,"value":339},"ESLint 相对 glob 模式的坑？",{"type":167,"tag":175,"props":341,"children":342},{},[343,345,351],{"type":173,"value":344},"使用相对 glob 模式如 ",{"type":167,"tag":261,"props":346,"children":348},{"className":347},[],[349],{"type":173,"value":350},"**/*.js",{"type":173,"value":352}," 时，如果使用配置文件模式，那么相对路径是相对于配置文件所在目录；如果使用 CLI 传入配置（--config）那么相对路径是相对命令执行的工作目录。",{"type":167,"tag":186,"props":354,"children":356},{"id":355},"为什么-eslint8-废弃了个人配置文件",[357],{"type":173,"value":358},"为什么 ESLint@8 废弃了个人配置文件？",{"type":167,"tag":175,"props":360,"children":361},{},[362,364,370],{"type":173,"value":363},"个人配置文件指 ",{"type":167,"tag":261,"props":365,"children":367},{"className":366},[],[368],{"type":173,"value":369},"~",{"type":173,"value":371}," 目录（用户主目录）下的配置文件，如果 ESLint 在项目中找不到配置文件，那么将自动搜寻用户主目录下的配置文件。但是配置文件这种形式难以共享和修改（因为它从用户主目录下 node_modules 加载共享配置和解析器，而在项目目录加载插件），所以在 ESLint@8 被废弃。",{"type":167,"tag":186,"props":373,"children":375},{"id":374},"如何配置全局变量",[376],{"type":173,"value":377},"如何配置全局变量？",{"type":167,"tag":210,"props":379,"children":380},{},[381,398],{"type":167,"tag":214,"props":382,"children":383},{},[384,385,391,392],{"type":173,"value":259},{"type":167,"tag":261,"props":386,"children":388},{"className":387},[],[389],{"type":173,"value":390},"/* global x1, x2:writable */",{"type":173,"value":268},{"type":167,"tag":261,"props":393,"children":395},{"className":394},[],[396],{"type":173,"value":397},"/* eslint-env es2022, node, mocha */",{"type":167,"tag":214,"props":399,"children":400},{},[401],{"type":173,"value":402},"使用配置文件或 eslintConfig 中的 env 字段",{"type":167,"tag":175,"props":404,"children":405},{},[406],{"type":173,"value":407},"如果直接更改 parserOptions 的 ecmaVersion 而不更改 env 配置，是不会支持对应版本 ES 规范的全局变量的。",{"type":167,"tag":175,"props":409,"children":410},{},[411,412],{"type":173,"value":238},{"type":167,"tag":179,"props":413,"children":416},{"href":414,"rel":415},"https://zh-hans.eslint.org/docs/latest/use/configure/language-options#-7",[182],[417],{"type":173,"value":418},"ESLint parserOptions",{"type":167,"tag":186,"props":420,"children":422},{"id":421},"eslint-文件注释内联配置如何支持说明文本",[423],{"type":173,"value":424},"ESLint 文件注释内联配置如何支持说明文本？",{"type":167,"tag":175,"props":426,"children":427},{},[428],{"type":173,"value":429},"说明可以跟在两个或多个短横线符号之后。",{"title":160,"searchDepth":431,"depth":431,"links":432},2,[433],{"id":200,"depth":431,"text":200},"markdown","content:6.maps:_workflow:linter:eslint.md","content","6.maps/_workflow/linter/eslint.md","6.maps/_workflow/linter/eslint","md",[441,445],{"_path":442,"title":443,"description":444},"/maps/_workflow/compiler","Compiler","编译器原理与实践，重点介绍 Babel 等前端编译工具的工作原理和使用方法。",{"_path":446,"title":447,"description":160},"/maps/_workflow/linter/linter","Linter",1742745248507]