[{"data":1,"prerenderedAt":454},["ShallowReactive",2],{"navigation":3,"/maps/_workflow/linter/eslint":161,"/maps/_workflow/linter/eslint-surround":446},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":440,"_id":441,"_source":442,"_file":443,"_stem":444,"_extension":445},"/maps/_workflow/linter/eslint","linter",false,true,"","ESLint","https://github.com/sudongyuer/learn-eslint",{"type":170,"children":171,"toc":436},"root",[172,180,191,198,203,209,215,240,252,258,340,346,359,365,378,384,409,414,425,431],{"type":173,"tag":174,"props":175,"children":177},"element","h1",{"id":176},"eslint",[178],{"type":179,"value":167},"text",{"type":173,"tag":181,"props":182,"children":183},"p",{},[184],{"type":173,"tag":185,"props":186,"children":189},"a",{"href":168,"rel":187},[188],"nofollow",[190],{"type":179,"value":168},{"type":173,"tag":192,"props":193,"children":195},"h4",{"id":194},"prettier-和-eslint-的区别是",[196],{"type":179,"value":197},"Prettier 和 ESLint 的区别是？",{"type":173,"tag":181,"props":199,"children":200},{},[201],{"type":179,"value":202},"Prettier 是代码格式化工具，而 ESLint 则是 JS/TS 等代码的校验工具，只不过也有格式化这个功能。通过安装 ESLint 插件，可以使项目中的 ESLint 兼容 Prettier 的规则。再配置好 husky，就可以很方便的给暂存区代码进行格式化校验了。",{"type":173,"tag":204,"props":205,"children":207},"h2",{"id":206},"配置",[208],{"type":179,"value":206},{"type":173,"tag":192,"props":210,"children":212},{"id":211},"eslint-支持哪些类型的配置",[213],{"type":179,"value":214},"ESLint 支持哪些类型的配置？",{"type":173,"tag":216,"props":217,"children":218},"ul",{},[219,225,230,235],{"type":173,"tag":220,"props":221,"children":222},"li",{},[223],{"type":179,"value":224},"package.json 中的 eslintConfig 字段",{"type":173,"tag":220,"props":226,"children":227},{},[228],{"type":179,"value":229},"eslintrc 文件，包括 js、cjs、yaml、yml、json 文件格式，不支持 mjs",{"type":173,"tag":220,"props":231,"children":232},{},[233],{"type":179,"value":234},"文件内联配置",{"type":173,"tag":220,"props":236,"children":237},{},[238],{"type":179,"value":239},"CLI 参数",{"type":173,"tag":181,"props":241,"children":242},{},[243,245],{"type":179,"value":244},"见：",{"type":173,"tag":185,"props":246,"children":249},{"href":247,"rel":248},"https://zh-hans.eslint.org/docs/latest/use/configure/configuration-files#-1",[188],[250],{"type":179,"value":251},"ESLint Configure Files",{"type":173,"tag":192,"props":253,"children":255},{"id":254},"eslint-配置的优先级和覆盖规则是怎样的",[256],{"type":179,"value":257},"ESLint 配置的优先级和覆盖规则是怎样的？",{"type":173,"tag":216,"props":259,"children":260},{},[261,295,327],{"type":173,"tag":220,"props":262,"children":263},{},[264,266,273,275,281,282,288,289],{"type":179,"value":265},"文件内联配置：",{"type":173,"tag":267,"props":268,"children":270},"code",{"className":269},[],[271],{"type":179,"value":272},"/* eslint-disabled */",{"type":179,"value":274},"、",{"type":173,"tag":267,"props":276,"children":278},{"className":277},[],[279],{"type":179,"value":280},"/* global */",{"type":179,"value":274},{"type":173,"tag":267,"props":283,"children":285},{"className":284},[],[286],{"type":179,"value":287},"/* eslint xxx: \"off\" */",{"type":179,"value":274},{"type":173,"tag":267,"props":290,"children":292},{"className":291},[],[293],{"type":179,"value":294},"/* eslint-env node */",{"type":173,"tag":220,"props":296,"children":297},{},[298,300,306,307,313,314,320,321],{"type":179,"value":299},"命令行选项：",{"type":173,"tag":267,"props":301,"children":303},{"className":302},[],[304],{"type":179,"value":305},"--global",{"type":179,"value":274},{"type":173,"tag":267,"props":308,"children":310},{"className":309},[],[311],{"type":179,"value":312},"--rule",{"type":179,"value":274},{"type":173,"tag":267,"props":315,"children":317},{"className":316},[],[318],{"type":179,"value":319},"--env",{"type":179,"value":274},{"type":173,"tag":267,"props":322,"children":324},{"className":323},[],[325],{"type":179,"value":326},"--config",{"type":173,"tag":220,"props":328,"children":329},{},[330,332,338],{"type":179,"value":331},"文件配置：首先寻找和校验文件同目录的文件配置和 package.json eslintConfig 配置，没找到则向上级目录寻找，直到根目录，或找到包括 ",{"type":173,"tag":267,"props":333,"children":335},{"className":334},[],[336],{"type":179,"value":337},"root: true",{"type":179,"value":339}," 的配置",{"type":173,"tag":192,"props":341,"children":343},{"id":342},"eslint-相对-glob-模式的坑",[344],{"type":179,"value":345},"ESLint 相对 glob 模式的坑？",{"type":173,"tag":181,"props":347,"children":348},{},[349,351,357],{"type":179,"value":350},"使用相对 glob 模式如 ",{"type":173,"tag":267,"props":352,"children":354},{"className":353},[],[355],{"type":179,"value":356},"**/*.js",{"type":179,"value":358}," 时，如果使用配置文件模式，那么相对路径是相对于配置文件所在目录；如果使用 CLI 传入配置（--config）那么相对路径是相对命令执行的工作目录。",{"type":173,"tag":192,"props":360,"children":362},{"id":361},"为什么-eslint8-废弃了个人配置文件",[363],{"type":179,"value":364},"为什么 ESLint@8 废弃了个人配置文件？",{"type":173,"tag":181,"props":366,"children":367},{},[368,370,376],{"type":179,"value":369},"个人配置文件指 ",{"type":173,"tag":267,"props":371,"children":373},{"className":372},[],[374],{"type":179,"value":375},"~",{"type":179,"value":377}," 目录（用户主目录）下的配置文件，如果 ESLint 在项目中找不到配置文件，那么将自动搜寻用户主目录下的配置文件。但是配置文件这种形式难以共享和修改（因为它从用户主目录下 node_modules 加载共享配置和解析器，而在项目目录加载插件），所以在 ESLint@8 被废弃。",{"type":173,"tag":192,"props":379,"children":381},{"id":380},"如何配置全局变量",[382],{"type":179,"value":383},"如何配置全局变量？",{"type":173,"tag":216,"props":385,"children":386},{},[387,404],{"type":173,"tag":220,"props":388,"children":389},{},[390,391,397,398],{"type":179,"value":265},{"type":173,"tag":267,"props":392,"children":394},{"className":393},[],[395],{"type":179,"value":396},"/* global x1, x2:writable */",{"type":179,"value":274},{"type":173,"tag":267,"props":399,"children":401},{"className":400},[],[402],{"type":179,"value":403},"/* eslint-env es2022, node, mocha */",{"type":173,"tag":220,"props":405,"children":406},{},[407],{"type":179,"value":408},"使用配置文件或 eslintConfig 中的 env 字段",{"type":173,"tag":181,"props":410,"children":411},{},[412],{"type":179,"value":413},"如果直接更改 parserOptions 的 ecmaVersion 而不更改 env 配置，是不会支持对应版本 ES 规范的全局变量的。",{"type":173,"tag":181,"props":415,"children":416},{},[417,418],{"type":179,"value":244},{"type":173,"tag":185,"props":419,"children":422},{"href":420,"rel":421},"https://zh-hans.eslint.org/docs/latest/use/configure/language-options#-7",[188],[423],{"type":179,"value":424},"ESLint parserOptions",{"type":173,"tag":192,"props":426,"children":428},{"id":427},"eslint-文件注释内联配置如何支持说明文本",[429],{"type":179,"value":430},"ESLint 文件注释内联配置如何支持说明文本？",{"type":173,"tag":181,"props":432,"children":433},{},[434],{"type":179,"value":435},"说明可以跟在两个或多个短横线符号之后。",{"title":166,"searchDepth":437,"depth":437,"links":438},2,[439],{"id":206,"depth":437,"text":206},"markdown","content:6.maps:_workflow:linter:eslint.md","content","6.maps/_workflow/linter/eslint.md","6.maps/_workflow/linter/eslint","md",[447,451],{"_path":448,"title":449,"description":450},"/maps/_workflow/compiler","Compiler","编译器原理与实践，重点介绍 Babel 等前端编译工具的工作原理和使用方法。",{"_path":452,"title":453,"description":166},"/maps/_workflow/linter/linter","Linter",1749721439814]