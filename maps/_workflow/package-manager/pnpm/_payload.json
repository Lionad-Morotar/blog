[{"data":1,"prerenderedAt":1987},["ShallowReactive",2],{"navigation":3,"/maps/_workflow/package-manager/pnpm":416,"/maps/_workflow/package-manager/pnpm-surround":1980},[4,32,86,108,135,141,147,153,399,405,411],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":42,"_path":43},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":45,"_path":46},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":48,"_path":49},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":51,"_path":52},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":54,"_path":55},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":57,"_path":58},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":60,"_path":61},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":63,"_path":64},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":66,"_path":67},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":69,"_path":70},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":72,"_path":73},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":75,"_path":76},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":78,"_path":79},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":81,"_path":82},"🚝 四十二篇系列","/articles/fourty-two",{"title":84,"_path":85},"📝 技术博客归档","/articles/fold",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102,105],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107},"🖨️ any-to-base64","/tools/any-to-base64",{"title":109,"_path":110,"children":111},"吉他剧场 / Music","/music",[112,114,117,120,123,126,129,132],{"title":113,"_path":110},"🎸 FingerStyle！",{"title":115,"_path":116},"🌬️ 等待的风","/music/wind",{"title":118,"_path":119},"💕 约定的海洋","/music/ocean",{"title":121,"_path":122},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":124,"_path":125},"🌏 残酷天使的行动纲领","/music/eva",{"title":127,"_path":128},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":130,"_path":131},"🍷 Wu Wei","/music/wu-wei",{"title":133,"_path":134},"🌅 无题","/music/untitled",{"title":136,"_path":137,"children":138},"画点什么 / Paint","/paint",[139],{"title":140,"_path":137},"🚧 正在施工",{"title":142,"_path":143,"children":144},"读书笔记 / Notes","/books",[145],{"title":146,"_path":143},"📕 读书笔记",{"title":148,"_path":149,"children":150},"知识地图 / Maps","/maps",[151],{"title":152,"_path":149},"🏁 知识地图",{"title":154,"_path":155,"children":156},"零散的笔记 / Gists","/gists",[157,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":158,"_path":155},"🧊 Gists",{"title":160,"_path":161},"网站的可访问性","/gists/accessibility",{"title":163,"_path":164},"Bit","/gists/bit",{"title":166,"_path":167},"图片模糊","/gists/blur",{"title":169,"_path":170},"渲染相关笔记","/gists/c4d",{"title":172,"_path":173},"CDN 问题记录","/gists/cdn",{"title":175,"_path":176},"消毒剂","/gists/cleaner",{"title":178,"_path":179},"Windows Command","/gists/cmd",{"title":181,"_path":182},"Command","/gists/command",{"title":184,"_path":185},"复杂科学","/gists/complexity-science",{"title":187,"_path":188},"GitHub Copilot","/gists/copilot",{"title":190,"_path":191},"宇宙","/gists/cosmos",{"title":193,"_path":194},"C++","/gists/cpp",{"title":196,"_path":197},"Data Structure","/gists/data-structure",{"title":199,"_path":200},"DEPRESSION","/gists/depression",{"title":202,"_path":203},"设计模式","/gists/design-patterns",{"title":205,"_path":206},"Developer Experience","/gists/developer-experience",{"title":208,"_path":209},"Device Metrics","/gists/device-metrix",{"title":211,"_path":212},"数字化转型","/gists/digital-transformation",{"title":214,"_path":215},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":217,"_path":218},"正则表达式","/gists/eegex",{"title":220,"_path":221},"Emoji","/gists/emoji",{"title":223,"_path":224},"工程","/gists/engineering",{"title":226,"_path":227},"熵","/gists/entropy",{"title":229,"_path":230},"Environment","/gists/environment",{"title":232,"_path":233},"Erlang","/gists/erlang",{"title":235,"_path":236},"逃离塔克夫","/gists/escape-from-tarkov",{"title":238,"_path":239},"ESNext (ES6-ES11)","/gists/esnext",{"title":241,"_path":242},"Eval！","/gists/eval",{"title":244,"_path":245},"Flutter","/gists/flutter",{"title":247,"_path":248},"字体","/gists/font",{"title":250,"_path":251},"JS 函数式编程","/gists/functional",{"title":253,"_path":254},"游戏化","/gists/gamification",{"title":256,"_path":257},"Google C++ Standard","/gists/google-cpp-standard",{"title":259,"_path":260},"双向链接完全体","/gists/graph",{"title":262,"_path":263},"Hardwares","/gists/hardwares",{"title":265,"_path":266},"哈希冲突","/gists/hash-collision",{"title":268,"_path":269},"信息设计","/gists/information-design",{"title":271,"_path":272},"InstantPage","/gists/instant.page",{"title":274,"_path":275},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":277,"_path":278},"KVStore","/gists/key-value-db",{"title":280,"_path":281},"Kubernetes","/gists/kubernetes",{"title":283,"_path":284},"Makefile","/gists/makefile",{"title":286,"_path":287},"Markdown Inline Style","/gists/markdown-nice",{"title":289,"_path":290},"小程序","/gists/miniapp",{"title":292,"_path":293},"减小页面快照体积","/gists/minify-html",{"title":295,"_path":296},"mklink","/gists/mklink",{"title":298,"_path":299},"Mock","/gists/mock",{"title":301,"_path":302},"多人协作系统","/gists/multiplayer",{"title":304,"_path":305},"多端应用","/gists/multy-end-app",{"title":307,"_path":308},"神经科学","/gists/neuroscience",{"title":310,"_path":311},"OO","/gists/oo",{"title":313,"_path":314},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":316,"_path":317},"PInvoke","/gists/pinvoke",{"title":319,"_path":320},"像素","/gists/pixel",{"title":322,"_path":323},"PowerShell","/gists/powershell",{"title":325,"_path":326},"量子","/gists/quantum",{"title":328,"_path":329},"保持好奇心","/gists/questions",{"title":331,"_path":332},"React Native","/gists/react-native",{"title":334,"_path":335},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":337,"_path":338},"SEO","/gists/seo",{"title":340,"_path":341},"Shader","/gists/shader",{"title":343,"_path":344},"Shape Up","/gists/shape-up",{"title":346,"_path":347},"睡觉","/gists/sleep",{"title":349,"_path":350},"记录奇怪的问题","/gists/solved",{"title":352,"_path":353},"States","/gists/states",{"title":355,"_path":356},"Storage","/gists/storage",{"title":358,"_path":359},"音视频流处理","/gists/stream-cli",{"title":361,"_path":362},"Symbol","/gists/symbol",{"title":364,"_path":365},"系统论","/gists/systems-theory",{"title":367,"_path":368},"Taro","/gists/taro",{"title":370,"_path":371},"任务切片","/gists/task-slice",{"title":373,"_path":374},"技术偏好","/gists/tech-dudge",{"title":376,"_path":377},"Untitled","/gists/untitled",{"title":379,"_path":380},"可变字体","/gists/variable-font",{"title":382,"_path":383},"视觉错觉","/gists/visual-illusion",{"title":385,"_path":386},"SS(SSR)","/gists/vpn",{"title":388,"_path":389},"VS Code 插件开发","/gists/vscode-plugin",{"title":391,"_path":392},"Web Components","/gists/web-components",{"title":394,"_path":395},"Windows","/gists/windows",{"title":397,"_path":398},"查缺补漏","/gists/wrong",{"title":400,"_path":401,"children":402},"代码笔记 / Gists","/source-code",[403],{"title":404,"_path":401},"🚄 代码笔记",{"title":406,"_path":407,"children":408},"我 / About","/hire",[409],{"title":410,"_path":407},"📬 技术简历",{"title":412,"_path":413,"children":414},"todo","/todo",[415],{"title":412,"_path":413},{"_path":417,"_dir":418,"_draft":419,"_partial":420,"_locale":421,"title":422,"description":423,"body":424,"_type":1974,"_id":1975,"_source":1976,"_file":1977,"_stem":1978,"_extension":1979},"/maps/_workflow/package-manager/pnpm","package-manager",false,true,"","pnpm","pnpm 是一个快速、省空间的包管理器",{"type":425,"children":426,"toc":1969},"root",[427,436,443,457,463,473,478,484,495,506,512,517,571,577,582,587,592,610,616,627,1176,1190,1195,1201,1232,1238,1319,1352,1361,1381,1387,1439,1481,1490,1501,1507,1512,1535,1586,1592,1597,1603,1631,1637,1661,1672,1677,1683,1688,1749,1755,1760,1768,1780,1786,1791,1804,1809,1820,1826,1903,1909,1922,1930,1941,1947,1952,1963],{"type":428,"tag":429,"props":430,"children":432},"element","h2",{"id":431},"api-细节和配置项",[433],{"type":434,"value":435},"text","API 细节和配置项",{"type":428,"tag":437,"props":438,"children":440},"h4",{"id":439},"pnpm-import",[441],{"type":434,"value":442},"pnpm import",{"type":428,"tag":444,"props":445,"children":446},"p",{},[447,449,455],{"type":434,"value":448},"使用 ",{"type":428,"tag":450,"props":451,"children":453},"code",{"className":452},[],[454],{"type":434,"value":442},{"type":434,"value":456}," 可以将 package-lock、npm-shrinkwrap 和 yarn.lock 转换为 pnpm-lock 文件。",{"type":428,"tag":437,"props":458,"children":460},{"id":459},"pnpm-fetch",[461],{"type":434,"value":462},"pnpm fetch",{"type":428,"tag":444,"props":464,"children":465},{},[466,471],{"type":428,"tag":450,"props":467,"children":469},{"className":468},[],[470],{"type":434,"value":462},{"type":434,"value":472}," 它跳过了 package.json 文件，允许项目在只有 pnpm-lock 文件的情况下创建 .pnpm 虚拟仓库。这有利于 docker 构建，因为 package.json 经常因为非依赖变化的改动而改动，导致 docker layer 失效。",{"type":428,"tag":444,"props":474,"children":475},{},[476],{"type":434,"value":477},"相比 yarn 和 npm，在脱离 package.json 的情况下，单靠 package-lock（或 yarn-lock），yarn 和 npm 没有办法确定依赖版本，因为其 package-lock 中，依赖的版本号不是固定版本号。",{"type":428,"tag":437,"props":479,"children":481},{"id":480},"pnpm-why",[482],{"type":434,"value":483},"pnpm why",{"type":428,"tag":444,"props":485,"children":486},{},[487,488,493],{"type":434,"value":448},{"type":428,"tag":450,"props":489,"children":491},{"className":490},[],[492],{"type":434,"value":483},{"type":434,"value":494}," 可以列出项目内依赖了某个依赖的依赖，比如说找到项目内使用了 lodash 的包。",{"type":428,"tag":496,"props":497,"children":501},"pre",{"code":498,"language":434,"meta":421,"className":499},"dependencies:\nelement-plus 2.2.20\n├── lodash 4.17.21\n└─┬ lodash-unified 1.0.3\n  └── lodash 4.17.21 peer\n...\n",[500],"language-text",[502],{"type":428,"tag":450,"props":503,"children":504},{"__ignoreMap":421},[505],{"type":434,"value":498},{"type":428,"tag":437,"props":507,"children":509},{"id":508},"pnpm-run",[510],{"type":434,"value":511},"pnpm run",{"type":428,"tag":444,"props":513,"children":514},{},[515],{"type":434,"value":516},"与其它包管理器的一些区别：",{"type":428,"tag":518,"props":519,"children":520},"ol",{},[521,547,552],{"type":428,"tag":522,"props":523,"children":524},"li",{},[525,531,533,539,541],{"type":428,"tag":450,"props":526,"children":528},{"className":527},[],[529],{"type":434,"value":530},"pnpm run script-name",{"type":434,"value":532},"，如果 ",{"type":428,"tag":450,"props":534,"children":536},{"className":535},[],[537],{"type":434,"value":538},"script-name",{"type":434,"value":540}," 没有和 pnpm 内置指令冲突，则可以省略 ",{"type":428,"tag":450,"props":542,"children":544},{"className":543},[],[545],{"type":434,"value":546},"run",{"type":428,"tag":522,"props":548,"children":549},{},[550],{"type":434,"value":551},"run 指令默认不会执行 pre 和 post 钩子函数，因为 pnpm 认为这使任务流更难理解",{"type":428,"tag":522,"props":553,"children":554},{},[555,561,563,569],{"type":428,"tag":450,"props":556,"children":558},{"className":557},[],[559],{"type":434,"value":560},"shell-emulator",{"type":434,"value":562}," 选项启用后，将使用 JS 解析指令，这使得在不兼容 POSIX 的环境执行类似 ",{"type":428,"tag":450,"props":564,"children":566},{"className":565},[],[567],{"type":434,"value":568},"NODE_ENV=test node ./index",{"type":434,"value":570}," 的指令会报错的系统也能正常运行这种指令",{"type":428,"tag":437,"props":572,"children":574},{"id":573},"pnpm-pack",[575],{"type":434,"value":576},"pnpm pack",{"type":428,"tag":444,"props":578,"children":579},{},[580],{"type":434,"value":581},"将项目打包为 tarball 压缩包（.tgz）。打包的文件范围和 pnpm publish 一样。",{"type":428,"tag":437,"props":583,"children":585},{"id":584},"shared-workspace-lockfile",[586],{"type":434,"value":584},{"type":428,"tag":444,"props":588,"children":589},{},[590],{"type":434,"value":591},"在 workspace 间共享一份 package-lock 文件。这个配置开启后，所有子包的依赖都会被提升到 workspace 根目录，这带来了几个好处：",{"type":428,"tag":518,"props":593,"children":594},{},[595,600,605],{"type":428,"tag":522,"props":596,"children":597},{},[598],{"type":434,"value":599},"所有依赖都是单例的",{"type":428,"tag":522,"props":601,"children":602},{},[603],{"type":434,"value":604},"更快的安装速度（相比 pnpm install -r）",{"type":428,"tag":522,"props":606,"children":607},{},[608],{"type":434,"value":609},"修改的文件总数更少，利于 Code Review",{"type":428,"tag":437,"props":611,"children":613},{"id":612},"pnpmfilecjs",[614],{"type":434,"value":615},".pnpmfile.cjs",{"type":428,"tag":444,"props":617,"children":618},{},[619,620,625],{"type":434,"value":448},{"type":428,"tag":450,"props":621,"children":623},{"className":622},[],[624],{"type":434,"value":615},{"type":434,"value":626}," 文件提供的 readPackage 和 afterAllResolved 钩子函数可以分别介入依赖元信息解析（minifest）和依赖安装完准备输出 lock 文件的过程。",{"type":428,"tag":496,"props":628,"children":632},{"code":629,"language":630,"meta":421,"className":631,"style":421},"function readPackage(pkg, context) {\n  // Override the manifest of foo@1.x after downloading it from the registry\n  if (pkg.name === 'foo' && pkg.version.startsWith('1.')) {\n    // Replace bar@x.x.x with bar@2.0.0\n    pkg.dependencies = {\n      ...pkg.dependencies,\n      bar: '^2.0.0'\n    }\n    context.log('bar@1 => bar@2 in dependencies of foo')\n  }\n  \n  // This will change any packages using baz@x.x.x to use baz@1.2.3\n  if (pkg.dependencies.baz) {\n    pkg.dependencies.baz = '1.2.3';\n  }\n  \n  return pkg\n}\n\nmodule.exports = {\n  hooks: {\n    readPackage\n  }\n}\n","js","language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai",[633],{"type":428,"tag":450,"props":634,"children":635},{"__ignoreMap":421},[636,686,696,805,814,841,867,895,904,944,953,962,971,1013,1059,1067,1075,1089,1098,1107,1134,1151,1160,1168],{"type":428,"tag":637,"props":638,"children":641},"span",{"class":639,"line":640},"line",1,[642,648,654,660,666,671,676,681],{"type":428,"tag":637,"props":643,"children":645},{"style":644},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[646],{"type":434,"value":647},"function",{"type":428,"tag":637,"props":649,"children":651},{"style":650},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[652],{"type":434,"value":653}," readPackage",{"type":428,"tag":637,"props":655,"children":657},{"style":656},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[658],{"type":434,"value":659},"(",{"type":428,"tag":637,"props":661,"children":663},{"style":662},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[664],{"type":434,"value":665},"pkg",{"type":428,"tag":637,"props":667,"children":668},{"style":656},[669],{"type":434,"value":670},",",{"type":428,"tag":637,"props":672,"children":673},{"style":662},[674],{"type":434,"value":675}," context",{"type":428,"tag":637,"props":677,"children":678},{"style":656},[679],{"type":434,"value":680},")",{"type":428,"tag":637,"props":682,"children":683},{"style":656},[684],{"type":434,"value":685}," {\n",{"type":428,"tag":637,"props":687,"children":689},{"class":639,"line":688},2,[690],{"type":428,"tag":637,"props":691,"children":693},{"style":692},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[694],{"type":434,"value":695},"  // Override the manifest of foo@1.x after downloading it from the registry\n",{"type":428,"tag":637,"props":697,"children":699},{"class":639,"line":698},3,[700,706,712,717,722,727,733,739,745,750,755,760,764,769,773,778,782,786,791,795,800],{"type":428,"tag":637,"props":701,"children":703},{"style":702},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[704],{"type":434,"value":705},"  if",{"type":428,"tag":637,"props":707,"children":709},{"style":708},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[710],{"type":434,"value":711}," (",{"type":428,"tag":637,"props":713,"children":715},{"style":714},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[716],{"type":434,"value":665},{"type":428,"tag":637,"props":718,"children":719},{"style":656},[720],{"type":434,"value":721},".",{"type":428,"tag":637,"props":723,"children":724},{"style":714},[725],{"type":434,"value":726},"name",{"type":428,"tag":637,"props":728,"children":730},{"style":729},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[731],{"type":434,"value":732}," ===",{"type":428,"tag":637,"props":734,"children":736},{"style":735},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[737],{"type":434,"value":738}," '",{"type":428,"tag":637,"props":740,"children":742},{"style":741},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[743],{"type":434,"value":744},"foo",{"type":428,"tag":637,"props":746,"children":747},{"style":735},[748],{"type":434,"value":749},"'",{"type":428,"tag":637,"props":751,"children":752},{"style":729},[753],{"type":434,"value":754}," &&",{"type":428,"tag":637,"props":756,"children":757},{"style":714},[758],{"type":434,"value":759}," pkg",{"type":428,"tag":637,"props":761,"children":762},{"style":656},[763],{"type":434,"value":721},{"type":428,"tag":637,"props":765,"children":766},{"style":714},[767],{"type":434,"value":768},"version",{"type":428,"tag":637,"props":770,"children":771},{"style":656},[772],{"type":434,"value":721},{"type":428,"tag":637,"props":774,"children":775},{"style":650},[776],{"type":434,"value":777},"startsWith",{"type":428,"tag":637,"props":779,"children":780},{"style":708},[781],{"type":434,"value":659},{"type":428,"tag":637,"props":783,"children":784},{"style":735},[785],{"type":434,"value":749},{"type":428,"tag":637,"props":787,"children":788},{"style":741},[789],{"type":434,"value":790},"1.",{"type":428,"tag":637,"props":792,"children":793},{"style":735},[794],{"type":434,"value":749},{"type":428,"tag":637,"props":796,"children":797},{"style":708},[798],{"type":434,"value":799},")) ",{"type":428,"tag":637,"props":801,"children":802},{"style":656},[803],{"type":434,"value":804},"{\n",{"type":428,"tag":637,"props":806,"children":808},{"class":639,"line":807},4,[809],{"type":428,"tag":637,"props":810,"children":811},{"style":692},[812],{"type":434,"value":813},"    // Replace bar@x.x.x with bar@2.0.0\n",{"type":428,"tag":637,"props":815,"children":817},{"class":639,"line":816},5,[818,823,827,832,837],{"type":428,"tag":637,"props":819,"children":820},{"style":714},[821],{"type":434,"value":822},"    pkg",{"type":428,"tag":637,"props":824,"children":825},{"style":656},[826],{"type":434,"value":721},{"type":428,"tag":637,"props":828,"children":829},{"style":714},[830],{"type":434,"value":831},"dependencies",{"type":428,"tag":637,"props":833,"children":834},{"style":729},[835],{"type":434,"value":836}," =",{"type":428,"tag":637,"props":838,"children":839},{"style":656},[840],{"type":434,"value":685},{"type":428,"tag":637,"props":842,"children":844},{"class":639,"line":843},6,[845,850,854,858,862],{"type":428,"tag":637,"props":846,"children":847},{"style":729},[848],{"type":434,"value":849},"      ...",{"type":428,"tag":637,"props":851,"children":852},{"style":714},[853],{"type":434,"value":665},{"type":428,"tag":637,"props":855,"children":856},{"style":656},[857],{"type":434,"value":721},{"type":428,"tag":637,"props":859,"children":860},{"style":714},[861],{"type":434,"value":831},{"type":428,"tag":637,"props":863,"children":864},{"style":656},[865],{"type":434,"value":866},",\n",{"type":428,"tag":637,"props":868,"children":870},{"class":639,"line":869},7,[871,876,881,885,890],{"type":428,"tag":637,"props":872,"children":873},{"style":708},[874],{"type":434,"value":875},"      bar",{"type":428,"tag":637,"props":877,"children":878},{"style":656},[879],{"type":434,"value":880},":",{"type":428,"tag":637,"props":882,"children":883},{"style":735},[884],{"type":434,"value":738},{"type":428,"tag":637,"props":886,"children":887},{"style":741},[888],{"type":434,"value":889},"^2.0.0",{"type":428,"tag":637,"props":891,"children":892},{"style":735},[893],{"type":434,"value":894},"'\n",{"type":428,"tag":637,"props":896,"children":898},{"class":639,"line":897},8,[899],{"type":428,"tag":637,"props":900,"children":901},{"style":656},[902],{"type":434,"value":903},"    }\n",{"type":428,"tag":637,"props":905,"children":907},{"class":639,"line":906},9,[908,913,917,922,926,930,935,939],{"type":428,"tag":637,"props":909,"children":910},{"style":714},[911],{"type":434,"value":912},"    context",{"type":428,"tag":637,"props":914,"children":915},{"style":656},[916],{"type":434,"value":721},{"type":428,"tag":637,"props":918,"children":919},{"style":650},[920],{"type":434,"value":921},"log",{"type":428,"tag":637,"props":923,"children":924},{"style":708},[925],{"type":434,"value":659},{"type":428,"tag":637,"props":927,"children":928},{"style":735},[929],{"type":434,"value":749},{"type":428,"tag":637,"props":931,"children":932},{"style":741},[933],{"type":434,"value":934},"bar@1 => bar@2 in dependencies of foo",{"type":428,"tag":637,"props":936,"children":937},{"style":735},[938],{"type":434,"value":749},{"type":428,"tag":637,"props":940,"children":941},{"style":708},[942],{"type":434,"value":943},")\n",{"type":428,"tag":637,"props":945,"children":947},{"class":639,"line":946},10,[948],{"type":428,"tag":637,"props":949,"children":950},{"style":656},[951],{"type":434,"value":952},"  }\n",{"type":428,"tag":637,"props":954,"children":956},{"class":639,"line":955},11,[957],{"type":428,"tag":637,"props":958,"children":959},{"style":708},[960],{"type":434,"value":961},"  \n",{"type":428,"tag":637,"props":963,"children":965},{"class":639,"line":964},12,[966],{"type":428,"tag":637,"props":967,"children":968},{"style":692},[969],{"type":434,"value":970},"  // This will change any packages using baz@x.x.x to use baz@1.2.3\n",{"type":428,"tag":637,"props":972,"children":974},{"class":639,"line":973},13,[975,979,983,987,991,995,999,1004,1009],{"type":428,"tag":637,"props":976,"children":977},{"style":702},[978],{"type":434,"value":705},{"type":428,"tag":637,"props":980,"children":981},{"style":708},[982],{"type":434,"value":711},{"type":428,"tag":637,"props":984,"children":985},{"style":714},[986],{"type":434,"value":665},{"type":428,"tag":637,"props":988,"children":989},{"style":656},[990],{"type":434,"value":721},{"type":428,"tag":637,"props":992,"children":993},{"style":714},[994],{"type":434,"value":831},{"type":428,"tag":637,"props":996,"children":997},{"style":656},[998],{"type":434,"value":721},{"type":428,"tag":637,"props":1000,"children":1001},{"style":714},[1002],{"type":434,"value":1003},"baz",{"type":428,"tag":637,"props":1005,"children":1006},{"style":708},[1007],{"type":434,"value":1008},") ",{"type":428,"tag":637,"props":1010,"children":1011},{"style":656},[1012],{"type":434,"value":804},{"type":428,"tag":637,"props":1014,"children":1016},{"class":639,"line":1015},14,[1017,1021,1025,1029,1033,1037,1041,1045,1050,1054],{"type":428,"tag":637,"props":1018,"children":1019},{"style":714},[1020],{"type":434,"value":822},{"type":428,"tag":637,"props":1022,"children":1023},{"style":656},[1024],{"type":434,"value":721},{"type":428,"tag":637,"props":1026,"children":1027},{"style":714},[1028],{"type":434,"value":831},{"type":428,"tag":637,"props":1030,"children":1031},{"style":656},[1032],{"type":434,"value":721},{"type":428,"tag":637,"props":1034,"children":1035},{"style":714},[1036],{"type":434,"value":1003},{"type":428,"tag":637,"props":1038,"children":1039},{"style":729},[1040],{"type":434,"value":836},{"type":428,"tag":637,"props":1042,"children":1043},{"style":735},[1044],{"type":434,"value":738},{"type":428,"tag":637,"props":1046,"children":1047},{"style":741},[1048],{"type":434,"value":1049},"1.2.3",{"type":428,"tag":637,"props":1051,"children":1052},{"style":735},[1053],{"type":434,"value":749},{"type":428,"tag":637,"props":1055,"children":1056},{"style":656},[1057],{"type":434,"value":1058},";\n",{"type":428,"tag":637,"props":1060,"children":1062},{"class":639,"line":1061},15,[1063],{"type":428,"tag":637,"props":1064,"children":1065},{"style":656},[1066],{"type":434,"value":952},{"type":428,"tag":637,"props":1068,"children":1070},{"class":639,"line":1069},16,[1071],{"type":428,"tag":637,"props":1072,"children":1073},{"style":708},[1074],{"type":434,"value":961},{"type":428,"tag":637,"props":1076,"children":1078},{"class":639,"line":1077},17,[1079,1084],{"type":428,"tag":637,"props":1080,"children":1081},{"style":702},[1082],{"type":434,"value":1083},"  return",{"type":428,"tag":637,"props":1085,"children":1086},{"style":714},[1087],{"type":434,"value":1088}," pkg\n",{"type":428,"tag":637,"props":1090,"children":1092},{"class":639,"line":1091},18,[1093],{"type":428,"tag":637,"props":1094,"children":1095},{"style":656},[1096],{"type":434,"value":1097},"}\n",{"type":428,"tag":637,"props":1099,"children":1101},{"class":639,"line":1100},19,[1102],{"type":428,"tag":637,"props":1103,"children":1104},{"emptyLinePlaceholder":420},[1105],{"type":434,"value":1106},"\n",{"type":428,"tag":637,"props":1108,"children":1110},{"class":639,"line":1109},20,[1111,1117,1121,1126,1130],{"type":428,"tag":637,"props":1112,"children":1114},{"style":1113},"--shiki-light:#39ADB5;--shiki-light-font-style:inherit;--shiki-default:#005CC5;--shiki-default-font-style:inherit;--shiki-dark:#79B8FF;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[1115],{"type":434,"value":1116},"module",{"type":428,"tag":637,"props":1118,"children":1119},{"style":656},[1120],{"type":434,"value":721},{"type":428,"tag":637,"props":1122,"children":1123},{"style":1113},[1124],{"type":434,"value":1125},"exports",{"type":428,"tag":637,"props":1127,"children":1128},{"style":729},[1129],{"type":434,"value":836},{"type":428,"tag":637,"props":1131,"children":1132},{"style":656},[1133],{"type":434,"value":685},{"type":428,"tag":637,"props":1135,"children":1137},{"class":639,"line":1136},21,[1138,1143,1147],{"type":428,"tag":637,"props":1139,"children":1140},{"style":708},[1141],{"type":434,"value":1142},"  hooks",{"type":428,"tag":637,"props":1144,"children":1145},{"style":656},[1146],{"type":434,"value":880},{"type":428,"tag":637,"props":1148,"children":1149},{"style":656},[1150],{"type":434,"value":685},{"type":428,"tag":637,"props":1152,"children":1154},{"class":639,"line":1153},22,[1155],{"type":428,"tag":637,"props":1156,"children":1157},{"style":714},[1158],{"type":434,"value":1159},"    readPackage\n",{"type":428,"tag":637,"props":1161,"children":1163},{"class":639,"line":1162},23,[1164],{"type":428,"tag":637,"props":1165,"children":1166},{"style":656},[1167],{"type":434,"value":952},{"type":428,"tag":637,"props":1169,"children":1171},{"class":639,"line":1170},24,[1172],{"type":428,"tag":637,"props":1173,"children":1174},{"style":656},[1175],{"type":434,"value":1097},{"type":428,"tag":444,"props":1177,"children":1178},{},[1179,1181],{"type":434,"value":1180},"见：",{"type":428,"tag":1182,"props":1183,"children":1187},"a",{"href":1184,"rel":1185},"https://pnpm.io/pnpmfile",[1186],"nofollow",[1188],{"type":434,"value":1189},"pnpmfile",{"type":428,"tag":429,"props":1191,"children":1193},{"id":1192},"原理",[1194],{"type":434,"value":1192},{"type":428,"tag":437,"props":1196,"children":1198},{"id":1197},"显著的优点",[1199],{"type":434,"value":1200},"显著的优点？",{"type":428,"tag":518,"props":1202,"children":1203},{},[1204,1209,1214,1227],{"type":428,"tag":522,"props":1205,"children":1206},{},[1207],{"type":434,"value":1208},"省磁盘空间，使用软硬链接和符号链接节约空间。",{"type":428,"tag":522,"props":1210,"children":1211},{},[1212],{"type":434,"value":1213},"安装依赖快，因为处理链接要比处理文件快，并且每个包的解析、下载和写入磁盘这三个阶段是分离的。",{"type":428,"tag":522,"props":1215,"children":1216},{},[1217,1219,1225],{"type":434,"value":1218},"内建支持 monorepo，所有命令支持 ",{"type":428,"tag":450,"props":1220,"children":1222},{"className":1221},[],[1223],{"type":434,"value":1224},"--filter",{"type":434,"value":1226}," 过滤包。",{"type":428,"tag":522,"props":1228,"children":1229},{},[1230],{"type":434,"value":1231},"依赖严格，避免幽灵依赖和依赖分身问题。",{"type":428,"tag":437,"props":1233,"children":1235},{"id":1234},"依赖的层次结构是怎样的",[1236],{"type":434,"value":1237},"依赖的层次结构是怎样的？",{"type":428,"tag":444,"props":1239,"children":1240},{},[1241,1243,1249,1251,1257,1259,1265,1267,1273,1275,1280,1282,1287,1289,1294,1296,1302,1304,1309,1311,1317],{"type":434,"value":1242},"当项目文件读取 ",{"type":428,"tag":450,"props":1244,"children":1246},{"className":1245},[],[1247],{"type":434,"value":1248},"bar",{"type":434,"value":1250}," 时，直接读取 ",{"type":428,"tag":450,"props":1252,"children":1254},{"className":1253},[],[1255],{"type":434,"value":1256},"node_modules/bar",{"type":434,"value":1258},"，但它其实是 ",{"type":428,"tag":450,"props":1260,"children":1262},{"className":1261},[],[1263],{"type":434,"value":1264},".pnpm",{"type":434,"value":1266}," 文件夹下 ",{"type":428,"tag":450,"props":1268,"children":1270},{"className":1269},[],[1271],{"type":434,"value":1272},"bar/node_modules/bar",{"type":434,"value":1274}," 的一个符号链接。也就是说，他的真实的地址在 ",{"type":428,"tag":450,"props":1276,"children":1278},{"className":1277},[],[1279],{"type":434,"value":1264},{"type":434,"value":1281}," 文件夹下。这样一来，当 ",{"type":428,"tag":450,"props":1283,"children":1285},{"className":1284},[],[1286],{"type":434,"value":1248},{"type":434,"value":1288}," 读取它的依赖的时候（项目的依赖的依赖），会在 ",{"type":428,"tag":450,"props":1290,"children":1292},{"className":1291},[],[1293],{"type":434,"value":1248},{"type":434,"value":1295}," 的上层目录即 ",{"type":428,"tag":450,"props":1297,"children":1299},{"className":1298},[],[1300],{"type":434,"value":1301},"bar/node_modules",{"type":434,"value":1303}," 找到 ",{"type":428,"tag":450,"props":1305,"children":1307},{"className":1306},[],[1308],{"type":434,"value":744},{"type":434,"value":1310}," 这个依赖。项目文件没法读取 ",{"type":428,"tag":450,"props":1312,"children":1314},{"className":1313},[],[1315],{"type":434,"value":1316},"bar/node_modules/foo",{"type":434,"value":1318}," 所以避免了幽灵依赖问题。",{"type":428,"tag":444,"props":1320,"children":1321},{},[1322,1327,1329,1335,1337,1342,1344,1350],{"type":428,"tag":450,"props":1323,"children":1325},{"className":1324},[],[1326],{"type":434,"value":1316},{"type":434,"value":1328}," 要怎么找到它的依赖呢？它的真实地址在项目 ·（和官网的图有出入），所以 foo 也只能读取它自己的子依赖，即 ",{"type":428,"tag":450,"props":1330,"children":1332},{"className":1331},[],[1333],{"type":434,"value":1334},"node_modules/.pnpm/foo/node_modules",{"type":434,"value":1336},"。如果有依赖依赖了同一份（同一版本）的 ",{"type":428,"tag":450,"props":1338,"children":1340},{"className":1339},[],[1341],{"type":434,"value":744},{"type":434,"value":1343},"，那么它们的真实地址都是一样的 ",{"type":428,"tag":450,"props":1345,"children":1347},{"className":1346},[],[1348],{"type":434,"value":1349},"node_modules/.pnpm/foo/node_modules/foo",{"type":434,"value":1351},"，这样就避免依赖分身问题。",{"type":428,"tag":444,"props":1353,"children":1354},{},[1355],{"type":428,"tag":1356,"props":1357,"children":1360},"img",{"alt":1358,"src":1359},"Modules Mapping in pnpm","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220317192927.png",[],{"type":428,"tag":444,"props":1362,"children":1363},{},[1364,1365,1372,1374],{"type":434,"value":1180},{"type":428,"tag":1182,"props":1366,"children":1369},{"href":1367,"rel":1368},"https://pnpm.io/blog/2020/05/27/flat-node-modules-is-not-the-only-way",[1186],[1370],{"type":434,"value":1371},"Flat node_modules is not the only way | @pnpm",{"type":434,"value":1373},"、",{"type":428,"tag":1182,"props":1375,"children":1378},{"href":1376,"rel":1377},"https://pnpm.io/symlinked-node-modules-structure",[1186],[1379],{"type":434,"value":1380},"Symlinked node_modules structure | @pnpm",{"type":428,"tag":437,"props":1382,"children":1384},{"id":1383},"如何处理同级依赖",[1385],{"type":434,"value":1386},"如何处理同级依赖？",{"type":428,"tag":444,"props":1388,"children":1389},{},[1390,1392,1398,1400,1406,1408,1414,1416,1422,1424,1430,1431,1437],{"type":434,"value":1391},"当项目的两个包 A、B 依赖依赖了同一版本的 C，但是却安装了不同版本的 C 的同级依赖 D@1.0 和 D@1.1，这时，A 依赖的 C 的真实地址是 ",{"type":428,"tag":450,"props":1393,"children":1395},{"className":1394},[],[1396],{"type":434,"value":1397},".pnpm/C_D@1.0/node_modules/C",{"type":434,"value":1399},"，B 依赖的 C 的真实地址是 ",{"type":428,"tag":450,"props":1401,"children":1403},{"className":1402},[],[1404],{"type":434,"value":1405},".pnpm/C_D@1.1/node_modules/C",{"type":434,"value":1407},"。这样一来，两个 C 在读取其同级依赖时，分别读取了 ",{"type":428,"tag":450,"props":1409,"children":1411},{"className":1410},[],[1412],{"type":434,"value":1413},".pnpm/C_D@1.0/node_modules/D",{"type":434,"value":1415}," 和 ",{"type":428,"tag":450,"props":1417,"children":1419},{"className":1418},[],[1420],{"type":434,"value":1421},".pnpm/C_D@1.1/node_modules/D@1.0",{"type":434,"value":1423},"，分别对应真实地址 ",{"type":428,"tag":450,"props":1425,"children":1427},{"className":1426},[],[1428],{"type":434,"value":1429},".pnpm/D@1.0/node_modules/D",{"type":434,"value":1415},{"type":428,"tag":450,"props":1432,"children":1434},{"className":1433},[],[1435],{"type":434,"value":1436},".pnpm/D@1.1/node_modules/D",{"type":434,"value":1438},"。",{"type":428,"tag":444,"props":1440,"children":1441},{},[1442,1444,1450,1451,1457,1459,1465,1466,1471,1473,1479],{"type":434,"value":1443},"当同级依赖的深度增加时，层级结构也随之变得复杂。如果某个依赖 A 依赖了同一个 B，但是 B 子依赖 C 的版本不同（C@1.0 和 C@1.1），这样就创造出了指数级增长的软链数量。为了保证 B 能分别访问两个 C，B 的符号链接的被链接地址会有 ",{"type":428,"tag":450,"props":1445,"children":1447},{"className":1446},[],[1448],{"type":434,"value":1449},".pnpm/B_C@1.0/node_modules/B",{"type":434,"value":1415},{"type":428,"tag":450,"props":1452,"children":1454},{"className":1453},[],[1455],{"type":434,"value":1456},".pnpm/B_C@1.1/node_modules/B",{"type":434,"value":1458},"，而为此，A 的被链接地址也会有两个，",{"type":428,"tag":450,"props":1460,"children":1462},{"className":1461},[],[1463],{"type":434,"value":1464},".pnpm/A_C@1.0/node_modules/A",{"type":434,"value":1415},{"type":428,"tag":450,"props":1467,"children":1469},{"className":1468},[],[1470],{"type":434,"value":1464},{"type":434,"value":1472},"。从不同的 A 的被链接地址的上级目录 ",{"type":428,"tag":450,"props":1474,"children":1476},{"className":1475},[],[1477],{"type":434,"value":1478},"node_modules",{"type":434,"value":1480}," 可以读取到不同的 B 的被链目录，从不同的 B 可以读取到不同的 C。",{"type":428,"tag":496,"props":1482,"children":1485},{"code":1483,"language":434,"meta":421,"className":1484},"node_modules\n└── .pnpm\n    ├── a@1.0.0_c@1.0.0\n    │   └── node_modules\n    │       ├── a\n    │       └── b -> ../../b@1.0.0_c@1.0.0/node_modules/b\n    ├── a@1.0.0_c@1.1.0\n    │   └── node_modules\n    │       ├── a\n    │       └── b -> ../../b@1.0.0_c@1.1.0/node_modules/b\n    ├── b@1.0.0_c@1.0.0\n    │   └── node_modules\n    │       ├── b\n    │       └── c -> ../../c@1.0.0/node_modules/c\n    ├── b@1.0.0_c@1.1.0\n    │   └── node_modules\n    │       ├── b\n    │       └── c -> ../../c@1.1.0/node_modules/c\n    ├── c@1.0.0\n    ├── c@1.1.0\n",[500],[1486],{"type":428,"tag":450,"props":1487,"children":1488},{"__ignoreMap":421},[1489],{"type":434,"value":1483},{"type":428,"tag":444,"props":1491,"children":1492},{},[1493,1494],{"type":434,"value":1180},{"type":428,"tag":1182,"props":1495,"children":1498},{"href":1496,"rel":1497},"https://pnpm.io/how-peers-are-resolved",[1186],[1499],{"type":434,"value":1500},"How peers are resolved | @pnpm",{"type":428,"tag":437,"props":1502,"children":1504},{"id":1503},"怎样兼容-nodejs-模块加载顺序",[1505],{"type":434,"value":1506},"怎样兼容 NodeJS 模块加载顺序？",{"type":428,"tag":444,"props":1508,"children":1509},{},[1510],{"type":434,"value":1511},"不论系统自带的模块，NodeJS 加载模块的顺序是这样的：",{"type":428,"tag":518,"props":1513,"children":1514},{},[1515,1520,1525,1530],{"type":428,"tag":522,"props":1516,"children":1517},{},[1518],{"type":434,"value":1519},"读取本文件夹中 node_modules 中对应名字的文件夹的 package.json，并寻找 main 字段对应的路径",{"type":428,"tag":522,"props":1521,"children":1522},{},[1523],{"type":434,"value":1524},"读取本文件夹中 node_modules 中对应名字的 js 文件",{"type":428,"tag":522,"props":1526,"children":1527},{},[1528],{"type":434,"value":1529},"读取本文件夹中 node_modules 中对应名字文件夹中的 index.js 文件",{"type":428,"tag":522,"props":1531,"children":1532},{},[1533],{"type":434,"value":1534},"跳出本文件夹，继续前三个步骤",{"type":428,"tag":444,"props":1536,"children":1537},{},[1538,1540,1545,1547,1553,1555,1561,1563,1568,1570,1576,1578,1584],{"type":434,"value":1539},"因为项目 ",{"type":428,"tag":450,"props":1541,"children":1543},{"className":1542},[],[1544],{"type":434,"value":1256},{"type":434,"value":1546}," 是 ",{"type":428,"tag":450,"props":1548,"children":1550},{"className":1549},[],[1551],{"type":434,"value":1552},".pnpm/bar/node_modules/bar",{"type":434,"value":1554}," 的符号链接，所以项目文件可以直接读取 ",{"type":428,"tag":450,"props":1556,"children":1558},{"className":1557},[],[1559],{"type":434,"value":1560},"node_modules/bar/x.js",{"type":434,"value":1562},"。同时，如果 ",{"type":428,"tag":450,"props":1564,"children":1566},{"className":1565},[],[1567],{"type":434,"value":1560},{"type":434,"value":1569}," 需要加载 ",{"type":428,"tag":450,"props":1571,"children":1573},{"className":1572},[],[1574],{"type":434,"value":1575},"foo/x.js",{"type":434,"value":1577},"，那么在上述步骤的第 4 步，就能找到 ",{"type":428,"tag":450,"props":1579,"children":1581},{"className":1580},[],[1582],{"type":434,"value":1583},".pnpm/bar/node_modules/foo/x.js",{"type":434,"value":1585}," 文件。",{"type":428,"tag":437,"props":1587,"children":1589},{"id":1588},"为什么其模块层次只是比较严格的semistrict",[1590],{"type":434,"value":1591},"为什么其模块层次只是“比较严格的”（semistrict）？",{"type":428,"tag":444,"props":1593,"children":1594},{},[1595],{"type":434,"value":1596},"由 NodeJS 模块加载规则可知，在 pnpm 创造的依赖层次下，一个依赖的子依赖间仍有相互访问的能力。",{"type":428,"tag":437,"props":1598,"children":1600},{"id":1599},"为什么能节约磁盘空间",[1601],{"type":434,"value":1602},"为什么能节约磁盘空间？",{"type":428,"tag":444,"props":1604,"children":1605},{},[1606,1608,1614,1616,1622,1624,1630],{"type":434,"value":1607},"由 pnpm 创造的 node_modules 层级结构可以知道，所有依赖的符号链接的真实地址都在 ",{"type":428,"tag":450,"props":1609,"children":1611},{"className":1610},[],[1612],{"type":434,"value":1613},".pnpm/package-name/node_modules/package-name",{"type":434,"value":1615}," 这个文件夹中。这种文件夹会通过硬链接的形式链接到 ",{"type":428,"tag":450,"props":1617,"children":1619},{"className":1618},[],[1620],{"type":434,"value":1621},"user-document/.pnpm-store",{"type":434,"value":1623}," 中，所以相同的包只会存一份，也就是 ",{"type":428,"tag":450,"props":1625,"children":1627},{"className":1626},[],[1628],{"type":434,"value":1629},".pnpm-store/package-name",{"type":434,"value":1438},{"type":428,"tag":437,"props":1632,"children":1634},{"id":1633},"软硬链接有什么问题",[1635],{"type":434,"value":1636},"软硬链接有什么问题？",{"type":428,"tag":1638,"props":1639,"children":1640},"ul",{},[1641,1646,1651,1656],{"type":428,"tag":522,"props":1642,"children":1643},{},[1644],{"type":434,"value":1645},"特定的软链结构会导致某些应用出现死循环",{"type":428,"tag":522,"props":1647,"children":1648},{},[1649],{"type":434,"value":1650},"硬链接是同一份文件，不便调试",{"type":428,"tag":522,"props":1652,"children":1653},{},[1654],{"type":434,"value":1655},"软链接在非 SSD 上的读写会有性能损耗",{"type":428,"tag":522,"props":1657,"children":1658},{},[1659],{"type":434,"value":1660},"pnpm 创造的 node_modules 层级结构会破坏某些依赖依赖了相对路径的依赖的逻辑",{"type":428,"tag":444,"props":1662,"children":1663},{},[1664,1665],{"type":434,"value":1180},{"type":428,"tag":1182,"props":1666,"children":1669},{"href":1667,"rel":1668},"https://zhuanlan.zhihu.com/p/553804414",[1186],[1670],{"type":434,"value":1671},"精读 pnpm",{"type":428,"tag":429,"props":1673,"children":1675},{"id":1674},"常见问题",[1676],{"type":434,"value":1674},{"type":428,"tag":437,"props":1678,"children":1680},{"id":1679},"pnpm-找不到全局路径的解决方法",[1681],{"type":434,"value":1682},"PNPM 找不到全局路径的解决方法？",{"type":428,"tag":444,"props":1684,"children":1685},{},[1686],{"type":434,"value":1687},"尽管设置了全局变量，也重新安装了最新版本 PNPM，也执行了 pnpm setup，却仍然报错找不到全局路径的临时解决方案：",{"type":428,"tag":496,"props":1689,"children":1693},{"code":1690,"language":1691,"meta":421,"className":1692,"style":421},"$PNPM_HOME=\"\u003Cpath>\" | pnpm install -g xxx\n","powershell","language-powershell shiki shiki-themes material-theme-lighter github-light github-dark monokai",[1694],{"type":428,"tag":450,"props":1695,"children":1696},{"__ignoreMap":421},[1697],{"type":428,"tag":637,"props":1698,"children":1699},{"class":639,"line":640},[1700,1705,1710,1715,1720,1725,1729,1734,1739,1744],{"type":428,"tag":637,"props":1701,"children":1702},{"style":656},[1703],{"type":434,"value":1704},"$",{"type":428,"tag":637,"props":1706,"children":1707},{"style":714},[1708],{"type":434,"value":1709},"PNPM_HOME",{"type":428,"tag":637,"props":1711,"children":1712},{"style":729},[1713],{"type":434,"value":1714},"=",{"type":428,"tag":637,"props":1716,"children":1717},{"style":735},[1718],{"type":434,"value":1719},"\"",{"type":428,"tag":637,"props":1721,"children":1722},{"style":741},[1723],{"type":434,"value":1724},"\u003Cpath>",{"type":428,"tag":637,"props":1726,"children":1727},{"style":735},[1728],{"type":434,"value":1719},{"type":428,"tag":637,"props":1730,"children":1731},{"style":729},[1732],{"type":434,"value":1733}," |",{"type":428,"tag":637,"props":1735,"children":1736},{"style":714},[1737],{"type":434,"value":1738}," pnpm install ",{"type":428,"tag":637,"props":1740,"children":1741},{"style":729},[1742],{"type":434,"value":1743},"-",{"type":428,"tag":637,"props":1745,"children":1746},{"style":714},[1747],{"type":434,"value":1748},"g xxx\n",{"type":428,"tag":437,"props":1750,"children":1752},{"id":1751},"pnpm-速度变慢了",[1753],{"type":434,"value":1754},"PNPM 速度变慢了？",{"type":428,"tag":444,"props":1756,"children":1757},{},[1758],{"type":434,"value":1759},"今天逛官网时，偶然发现 Readme 中的 benchmark 过时了。它说“要比 Yarn Classic 和 npm “快两倍以上，但是从 benchmark 来看，他要比 Yarn 和 npm 慢了不少。以后启用 NodeJS 20 以上时，如果问题得不到改善，我应该会重新选择 npm 而不是 pnpm，鉴于幽灵依赖和依赖分身带来的问题是可排查可解决的，而速度是解决不了的问题。",{"type":428,"tag":444,"props":1761,"children":1762},{},[1763],{"type":428,"tag":1356,"props":1764,"children":1767},{"alt":1765,"src":1766},"pnpm vs npm vs yarn benchmark","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20230605235736.png",[],{"type":428,"tag":444,"props":1769,"children":1770},{},[1771,1773],{"type":434,"value":1772},"相关见：",{"type":428,"tag":1182,"props":1774,"children":1777},{"href":1775,"rel":1776},"https://github.com/pnpm/pnpm/issues/6447",[1186],[1778],{"type":434,"value":1779},"pnpm seems to be consistently slower than yarn (classic)",{"type":428,"tag":437,"props":1781,"children":1783},{"id":1782},"和-bun-在安装速度上的对比",[1784],{"type":434,"value":1785},"和 Bun 在安装速度上的对比？",{"type":428,"tag":444,"props":1787,"children":1788},{},[1789],{"type":434,"value":1790},"有锁文件、本地缓存，无 node_modules 的情况下，bun 要比 pnpm 安装至少快 3 倍。",{"type":428,"tag":1638,"props":1792,"children":1793},{},[1794,1799],{"type":428,"tag":522,"props":1795,"children":1796},{},[1797],{"type":434,"value":1798},"一个原因是 pnpm、yarn 等工具会在安装时请求最新的 metadata，而 bun 使用的 metadata 源于本地缓存的 metadata。",{"type":428,"tag":522,"props":1800,"children":1801},{},[1802],{"type":434,"value":1803},"另一个原因是 pnpm 在创建 node_modules 层次结构是使用了大量的 symlink，相比其他包管理工具仅使用复制或 hardlink 有更多系统调用。",{"type":428,"tag":444,"props":1805,"children":1806},{},[1807],{"type":434,"value":1808},"所以如果想使 pnpm 更快的安装，可以使用 prefer-offline 选项，以及，node-linker=hoisted 也许有用。",{"type":428,"tag":444,"props":1810,"children":1811},{},[1812,1813],{"type":434,"value":1180},{"type":428,"tag":1182,"props":1814,"children":1817},{"href":1815,"rel":1816},"https://github.com/pnpm/pnpm/issues/7391",[1186],[1818],{"type":434,"value":1819},"Bun.sh-like Module Resolution",{"type":428,"tag":437,"props":1821,"children":1823},{"id":1822},"关于-v8-版本的变化",[1824],{"type":434,"value":1825},"关于 V8 版本的变化？",{"type":428,"tag":1638,"props":1827,"children":1828},{},[1829,1848,1864,1875,1880,1885,1890],{"type":428,"tag":522,"props":1830,"children":1831},{},[1832,1838,1840,1846],{"type":428,"tag":450,"props":1833,"children":1835},{"className":1834},[],[1836],{"type":434,"value":1837},"resolve-peers-from-workspace-root",{"type":434,"value":1839}," is ",{"type":428,"tag":450,"props":1841,"children":1843},{"className":1842},[],[1844],{"type":434,"value":1845},"true",{"type":434,"value":1847}," by default",{"type":428,"tag":522,"props":1849,"children":1850},{},[1851,1857,1858,1863],{"type":428,"tag":450,"props":1852,"children":1854},{"className":1853},[],[1855],{"type":434,"value":1856},"auto-install-peers",{"type":434,"value":1839},{"type":428,"tag":450,"props":1859,"children":1861},{"className":1860},[],[1862],{"type":434,"value":1845},{"type":434,"value":1847},{"type":428,"tag":522,"props":1865,"children":1866},{},[1867,1873],{"type":428,"tag":450,"props":1868,"children":1870},{"className":1869},[],[1871],{"type":434,"value":1872},"dedupe-peer-dependents",{"type":434,"value":1874}," set to true by default",{"type":428,"tag":522,"props":1876,"children":1877},{},[1878],{"type":434,"value":1879},"停止 NodeJS 14 的支持",{"type":428,"tag":522,"props":1881,"children":1882},{},[1883],{"type":434,"value":1884},"lockfile v6 by default",{"type":428,"tag":522,"props":1886,"children":1887},{},[1888],{"type":434,"value":1889},"resolution mode（prebundle、time-based、lowest-direct）default set to lowest-based，需要注意手动升级，尤其是在没有锁文件的情况",{"type":428,"tag":522,"props":1891,"children":1892},{},[1893,1895,1901],{"type":434,"value":1894},"only deply ",{"type":428,"tag":450,"props":1896,"children":1898},{"className":1897},[],[1899],{"type":434,"value":1900},"files",{"type":434,"value":1902}," field when the field exist",{"type":428,"tag":437,"props":1904,"children":1906},{"id":1905},"pnp-模式下的依赖提升设置",[1907],{"type":434,"value":1908},"PnP 模式下的依赖提升设置？",{"type":428,"tag":444,"props":1910,"children":1911},{},[1912,1914,1920],{"type":434,"value":1913},"默认的 node_modules 依赖的层级处于严格和不严格之间的水平（semi-strict）。使用最严格的设置需要打开 PnP 模式，因为在 monorepo 中 PnP 模式中，就算开启了 ",{"type":428,"tag":450,"props":1915,"children":1917},{"className":1916},[],[1918],{"type":434,"value":1919},"hoist=false",{"type":434,"value":1921}," 也不会禁用 workspace root 的依赖",{"type":428,"tag":496,"props":1923,"children":1925},{"code":1924},"node-linker=pnp\nsymlink=false\n",[1926],{"type":428,"tag":450,"props":1927,"children":1928},{"__ignoreMap":421},[1929],{"type":434,"value":1924},{"type":428,"tag":444,"props":1931,"children":1932},{},[1933,1934],{"type":434,"value":1180},{"type":428,"tag":1182,"props":1935,"children":1938},{"href":1936,"rel":1937},"https://pnpm.io/blog/2020/10/17/node-modules-configuration-options-with-pnpm",[1186],[1939],{"type":434,"value":1940},"Node-Modules configuration options with pnpm",{"type":428,"tag":437,"props":1942,"children":1944},{"id":1943},"在-windows-dev-driver-上可能会碰到的问题",[1945],{"type":434,"value":1946},"在 Windows Dev Driver 上可能会碰到的问题？",{"type":428,"tag":444,"props":1948,"children":1949},{},[1950],{"type":434,"value":1951},"2024 年初 pnpm 实现了 Dev Driver 上的 Copy on Write 功能，但可能会碰到变慢的问题。",{"type":428,"tag":444,"props":1953,"children":1954},{},[1955,1956],{"type":434,"value":1180},{"type":428,"tag":1182,"props":1957,"children":1960},{"href":1958,"rel":1959},"https://github.com/pnpm/pnpm/issues/7547",[1186],[1961],{"type":434,"value":1962},"pnpm lately slow and pnpx stuck at installing deps using executable package",{"type":428,"tag":1964,"props":1965,"children":1966},"style",{},[1967],{"type":434,"value":1968},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":421,"searchDepth":688,"depth":688,"links":1970},[1971,1972,1973],{"id":431,"depth":688,"text":435},{"id":1192,"depth":688,"text":1192},{"id":1674,"depth":688,"text":1674},"markdown","content:6.maps:_workflow:package-manager:pnpm.md","content","6.maps/_workflow/package-manager/pnpm.md","6.maps/_workflow/package-manager/pnpm","md",[1981,1984],{"_path":1982,"title":1983,"description":421},"/maps/_workflow/package-manager/npm","NPM",{"_path":1985,"title":1986,"description":421},"/maps/_workflow/packer","打包工具",1739578944358]