[{"data":1,"prerenderedAt":1966},["ShallowReactive",2],{"navigation":3,"/maps/_workflow/package-manager/pnpm":393,"/maps/_workflow/package-manager/pnpm-surround":1957},[4,35,86,105,132,138,144,150,387],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"数字化转型","/gists/digital-transformation",{"title":205,"_path":206},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":208,"_path":209},"正则表达式","/gists/eegex",{"title":211,"_path":212},"Emoji","/gists/emoji",{"title":214,"_path":215},"工程","/gists/engineering",{"title":217,"_path":218},"熵","/gists/entropy",{"title":220,"_path":221},"Environment","/gists/environment",{"title":223,"_path":224},"Erlang","/gists/erlang",{"title":226,"_path":227},"逃离塔克夫","/gists/escape-from-tarkov",{"title":229,"_path":230},"ESNext (ES6-ES11)","/gists/esnext",{"title":232,"_path":233},"Eval！","/gists/eval",{"title":235,"_path":236},"Flutter","/gists/flutter",{"title":238,"_path":239},"字体","/gists/font",{"title":241,"_path":242},"JS 函数式编程","/gists/functional",{"title":244,"_path":245},"游戏化","/gists/gamification",{"title":247,"_path":248},"Google C++ Standard","/gists/google-cpp-standard",{"title":250,"_path":251},"双向链接完全体","/gists/graph",{"title":253,"_path":254},"Hardwares","/gists/hardwares",{"title":256,"_path":257},"哈希冲突","/gists/hash-collision",{"title":259,"_path":260},"信息设计","/gists/information-design",{"title":262,"_path":263},"InstantPage","/gists/instant.page",{"title":265,"_path":266},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":268,"_path":269},"KVStore","/gists/key-value-db",{"title":271,"_path":272},"Kubernetes","/gists/kubernetes",{"title":274,"_path":275},"Makefile","/gists/makefile",{"title":277,"_path":278},"Markdown Inline Style","/gists/markdown-nice",{"title":280,"_path":281},"小程序","/gists/miniapp",{"title":283,"_path":284},"减小页面快照体积","/gists/minify-html",{"title":286,"_path":287},"mklink","/gists/mklink",{"title":289,"_path":290},"Mock","/gists/mock",{"title":292,"_path":293},"多人协作系统","/gists/multiplayer",{"title":295,"_path":296},"多端应用","/gists/multy-end-app",{"title":298,"_path":299},"神经科学","/gists/neuroscience",{"title":301,"_path":302},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":304,"_path":305},"PInvoke","/gists/pinvoke",{"title":307,"_path":308},"像素","/gists/pixel",{"title":310,"_path":311},"PowerShell","/gists/powershell",{"title":313,"_path":314},"量子","/gists/quantum",{"title":316,"_path":317},"保持好奇心","/gists/questions",{"title":319,"_path":320},"React Native","/gists/react-native",{"title":322,"_path":323},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":325,"_path":326},"SEO","/gists/seo",{"title":328,"_path":329},"Shader","/gists/shader",{"title":331,"_path":332},"Shape Up","/gists/shape-up",{"title":334,"_path":335},"睡觉","/gists/sleep",{"title":337,"_path":338},"记录奇怪的问题","/gists/solved",{"title":340,"_path":341},"States","/gists/states",{"title":343,"_path":344},"Storage","/gists/storage",{"title":346,"_path":347},"音视频流处理","/gists/stream-cli",{"title":349,"_path":350},"Symbol","/gists/symbol",{"title":352,"_path":353},"系统论","/gists/systems-theory",{"title":355,"_path":356},"Taro","/gists/taro",{"title":358,"_path":359},"任务切片","/gists/task-slice",{"title":361,"_path":362},"技术偏好","/gists/tech-dudge",{"title":364,"_path":365},"Untitled","/gists/untitled",{"title":367,"_path":368},"可变字体","/gists/variable-font",{"title":370,"_path":371},"视觉错觉","/gists/visual-illusion",{"title":373,"_path":374},"SS(SSR)","/gists/vpn",{"title":376,"_path":377},"VS Code 插件开发","/gists/vscode-plugin",{"title":379,"_path":380},"Web Components","/gists/web-components",{"title":382,"_path":383},"Windows","/gists/windows",{"title":385,"_path":386},"查缺补漏","/gists/wrong",{"title":388,"_path":389,"children":390},"我 / About","/hire",[391],{"title":392,"_path":389},"📬 技术简历",{"_path":394,"_dir":395,"_draft":396,"_partial":397,"_locale":398,"title":399,"description":400,"body":401,"_type":1951,"_id":1952,"_source":1953,"_file":1954,"_stem":1955,"_extension":1956},"/maps/_workflow/package-manager/pnpm","package-manager",false,true,"","pnpm","pnpm 是一个快速、省空间的包管理器",{"type":402,"children":403,"toc":1946},"root",[404,413,420,434,440,450,455,461,472,483,489,494,548,554,559,564,569,587,593,604,1153,1167,1172,1178,1209,1215,1296,1329,1338,1358,1364,1416,1458,1467,1478,1484,1489,1512,1563,1569,1574,1580,1608,1614,1638,1649,1654,1660,1665,1726,1732,1737,1745,1757,1763,1768,1781,1786,1797,1803,1880,1886,1899,1907,1918,1924,1929,1940],{"type":405,"tag":406,"props":407,"children":409},"element","h2",{"id":408},"api-细节和配置项",[410],{"type":411,"value":412},"text","API 细节和配置项",{"type":405,"tag":414,"props":415,"children":417},"h4",{"id":416},"pnpm-import",[418],{"type":411,"value":419},"pnpm import",{"type":405,"tag":421,"props":422,"children":423},"p",{},[424,426,432],{"type":411,"value":425},"使用 ",{"type":405,"tag":427,"props":428,"children":430},"code",{"className":429},[],[431],{"type":411,"value":419},{"type":411,"value":433}," 可以将 package-lock、npm-shrinkwrap 和 yarn.lock 转换为 pnpm-lock 文件。",{"type":405,"tag":414,"props":435,"children":437},{"id":436},"pnpm-fetch",[438],{"type":411,"value":439},"pnpm fetch",{"type":405,"tag":421,"props":441,"children":442},{},[443,448],{"type":405,"tag":427,"props":444,"children":446},{"className":445},[],[447],{"type":411,"value":439},{"type":411,"value":449}," 它跳过了 package.json 文件，允许项目在只有 pnpm-lock 文件的情况下创建 .pnpm 虚拟仓库。这有利于 docker 构建，因为 package.json 经常因为非依赖变化的改动而改动，导致 docker layer 失效。",{"type":405,"tag":421,"props":451,"children":452},{},[453],{"type":411,"value":454},"相比 yarn 和 npm，在脱离 package.json 的情况下，单靠 package-lock（或 yarn-lock），yarn 和 npm 没有办法确定依赖版本，因为其 package-lock 中，依赖的版本号不是固定版本号。",{"type":405,"tag":414,"props":456,"children":458},{"id":457},"pnpm-why",[459],{"type":411,"value":460},"pnpm why",{"type":405,"tag":421,"props":462,"children":463},{},[464,465,470],{"type":411,"value":425},{"type":405,"tag":427,"props":466,"children":468},{"className":467},[],[469],{"type":411,"value":460},{"type":411,"value":471}," 可以列出项目内依赖了某个依赖的依赖，比如说找到项目内使用了 lodash 的包。",{"type":405,"tag":473,"props":474,"children":478},"pre",{"code":475,"language":411,"meta":398,"className":476},"dependencies:\nelement-plus 2.2.20\n├── lodash 4.17.21\n└─┬ lodash-unified 1.0.3\n  └── lodash 4.17.21 peer\n...\n",[477],"language-text",[479],{"type":405,"tag":427,"props":480,"children":481},{"__ignoreMap":398},[482],{"type":411,"value":475},{"type":405,"tag":414,"props":484,"children":486},{"id":485},"pnpm-run",[487],{"type":411,"value":488},"pnpm run",{"type":405,"tag":421,"props":490,"children":491},{},[492],{"type":411,"value":493},"与其它包管理器的一些区别：",{"type":405,"tag":495,"props":496,"children":497},"ol",{},[498,524,529],{"type":405,"tag":499,"props":500,"children":501},"li",{},[502,508,510,516,518],{"type":405,"tag":427,"props":503,"children":505},{"className":504},[],[506],{"type":411,"value":507},"pnpm run script-name",{"type":411,"value":509},"，如果 ",{"type":405,"tag":427,"props":511,"children":513},{"className":512},[],[514],{"type":411,"value":515},"script-name",{"type":411,"value":517}," 没有和 pnpm 内置指令冲突，则可以省略 ",{"type":405,"tag":427,"props":519,"children":521},{"className":520},[],[522],{"type":411,"value":523},"run",{"type":405,"tag":499,"props":525,"children":526},{},[527],{"type":411,"value":528},"run 指令默认不会执行 pre 和 post 钩子函数，因为 pnpm 认为这使任务流更难理解",{"type":405,"tag":499,"props":530,"children":531},{},[532,538,540,546],{"type":405,"tag":427,"props":533,"children":535},{"className":534},[],[536],{"type":411,"value":537},"shell-emulator",{"type":411,"value":539}," 选项启用后，将使用 JS 解析指令，这使得在不兼容 POSIX 的环境执行类似 ",{"type":405,"tag":427,"props":541,"children":543},{"className":542},[],[544],{"type":411,"value":545},"NODE_ENV=test node ./index",{"type":411,"value":547}," 的指令会报错的系统也能正常运行这种指令",{"type":405,"tag":414,"props":549,"children":551},{"id":550},"pnpm-pack",[552],{"type":411,"value":553},"pnpm pack",{"type":405,"tag":421,"props":555,"children":556},{},[557],{"type":411,"value":558},"将项目打包为 tarball 压缩包（.tgz）。打包的文件范围和 pnpm publish 一样。",{"type":405,"tag":414,"props":560,"children":562},{"id":561},"shared-workspace-lockfile",[563],{"type":411,"value":561},{"type":405,"tag":421,"props":565,"children":566},{},[567],{"type":411,"value":568},"在 workspace 间共享一份 package-lock 文件。这个配置开启后，所有子包的依赖都会被提升到 workspace 根目录，这带来了几个好处：",{"type":405,"tag":495,"props":570,"children":571},{},[572,577,582],{"type":405,"tag":499,"props":573,"children":574},{},[575],{"type":411,"value":576},"所有依赖都是单例的",{"type":405,"tag":499,"props":578,"children":579},{},[580],{"type":411,"value":581},"更快的安装速度（相比 pnpm install -r）",{"type":405,"tag":499,"props":583,"children":584},{},[585],{"type":411,"value":586},"修改的文件总数更少，利于 Code Review",{"type":405,"tag":414,"props":588,"children":590},{"id":589},"pnpmfilecjs",[591],{"type":411,"value":592},".pnpmfile.cjs",{"type":405,"tag":421,"props":594,"children":595},{},[596,597,602],{"type":411,"value":425},{"type":405,"tag":427,"props":598,"children":600},{"className":599},[],[601],{"type":411,"value":592},{"type":411,"value":603}," 文件提供的 readPackage 和 afterAllResolved 钩子函数可以分别介入依赖元信息解析（minifest）和依赖安装完准备输出 lock 文件的过程。",{"type":405,"tag":473,"props":605,"children":609},{"code":606,"language":607,"meta":398,"className":608,"style":398},"function readPackage(pkg, context) {\n  // Override the manifest of foo@1.x after downloading it from the registry\n  if (pkg.name === 'foo' && pkg.version.startsWith('1.')) {\n    // Replace bar@x.x.x with bar@2.0.0\n    pkg.dependencies = {\n      ...pkg.dependencies,\n      bar: '^2.0.0'\n    }\n    context.log('bar@1 => bar@2 in dependencies of foo')\n  }\n  \n  // This will change any packages using baz@x.x.x to use baz@1.2.3\n  if (pkg.dependencies.baz) {\n    pkg.dependencies.baz = '1.2.3';\n  }\n  \n  return pkg\n}\n\nmodule.exports = {\n  hooks: {\n    readPackage\n  }\n}\n","js","language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai",[610],{"type":405,"tag":427,"props":611,"children":612},{"__ignoreMap":398},[613,663,673,782,791,818,844,872,881,921,930,939,948,990,1036,1044,1052,1066,1075,1084,1111,1128,1137,1145],{"type":405,"tag":614,"props":615,"children":618},"span",{"class":616,"line":617},"line",1,[619,625,631,637,643,648,653,658],{"type":405,"tag":614,"props":620,"children":622},{"style":621},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[623],{"type":411,"value":624},"function",{"type":405,"tag":614,"props":626,"children":628},{"style":627},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[629],{"type":411,"value":630}," readPackage",{"type":405,"tag":614,"props":632,"children":634},{"style":633},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[635],{"type":411,"value":636},"(",{"type":405,"tag":614,"props":638,"children":640},{"style":639},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[641],{"type":411,"value":642},"pkg",{"type":405,"tag":614,"props":644,"children":645},{"style":633},[646],{"type":411,"value":647},",",{"type":405,"tag":614,"props":649,"children":650},{"style":639},[651],{"type":411,"value":652}," context",{"type":405,"tag":614,"props":654,"children":655},{"style":633},[656],{"type":411,"value":657},")",{"type":405,"tag":614,"props":659,"children":660},{"style":633},[661],{"type":411,"value":662}," {\n",{"type":405,"tag":614,"props":664,"children":666},{"class":616,"line":665},2,[667],{"type":405,"tag":614,"props":668,"children":670},{"style":669},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[671],{"type":411,"value":672},"  // Override the manifest of foo@1.x after downloading it from the registry\n",{"type":405,"tag":614,"props":674,"children":676},{"class":616,"line":675},3,[677,683,689,694,699,704,710,716,722,727,732,737,741,746,750,755,759,763,768,772,777],{"type":405,"tag":614,"props":678,"children":680},{"style":679},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[681],{"type":411,"value":682},"  if",{"type":405,"tag":614,"props":684,"children":686},{"style":685},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[687],{"type":411,"value":688}," (",{"type":405,"tag":614,"props":690,"children":692},{"style":691},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[693],{"type":411,"value":642},{"type":405,"tag":614,"props":695,"children":696},{"style":633},[697],{"type":411,"value":698},".",{"type":405,"tag":614,"props":700,"children":701},{"style":691},[702],{"type":411,"value":703},"name",{"type":405,"tag":614,"props":705,"children":707},{"style":706},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[708],{"type":411,"value":709}," ===",{"type":405,"tag":614,"props":711,"children":713},{"style":712},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[714],{"type":411,"value":715}," '",{"type":405,"tag":614,"props":717,"children":719},{"style":718},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[720],{"type":411,"value":721},"foo",{"type":405,"tag":614,"props":723,"children":724},{"style":712},[725],{"type":411,"value":726},"'",{"type":405,"tag":614,"props":728,"children":729},{"style":706},[730],{"type":411,"value":731}," &&",{"type":405,"tag":614,"props":733,"children":734},{"style":691},[735],{"type":411,"value":736}," pkg",{"type":405,"tag":614,"props":738,"children":739},{"style":633},[740],{"type":411,"value":698},{"type":405,"tag":614,"props":742,"children":743},{"style":691},[744],{"type":411,"value":745},"version",{"type":405,"tag":614,"props":747,"children":748},{"style":633},[749],{"type":411,"value":698},{"type":405,"tag":614,"props":751,"children":752},{"style":627},[753],{"type":411,"value":754},"startsWith",{"type":405,"tag":614,"props":756,"children":757},{"style":685},[758],{"type":411,"value":636},{"type":405,"tag":614,"props":760,"children":761},{"style":712},[762],{"type":411,"value":726},{"type":405,"tag":614,"props":764,"children":765},{"style":718},[766],{"type":411,"value":767},"1.",{"type":405,"tag":614,"props":769,"children":770},{"style":712},[771],{"type":411,"value":726},{"type":405,"tag":614,"props":773,"children":774},{"style":685},[775],{"type":411,"value":776},")) ",{"type":405,"tag":614,"props":778,"children":779},{"style":633},[780],{"type":411,"value":781},"{\n",{"type":405,"tag":614,"props":783,"children":785},{"class":616,"line":784},4,[786],{"type":405,"tag":614,"props":787,"children":788},{"style":669},[789],{"type":411,"value":790},"    // Replace bar@x.x.x with bar@2.0.0\n",{"type":405,"tag":614,"props":792,"children":794},{"class":616,"line":793},5,[795,800,804,809,814],{"type":405,"tag":614,"props":796,"children":797},{"style":691},[798],{"type":411,"value":799},"    pkg",{"type":405,"tag":614,"props":801,"children":802},{"style":633},[803],{"type":411,"value":698},{"type":405,"tag":614,"props":805,"children":806},{"style":691},[807],{"type":411,"value":808},"dependencies",{"type":405,"tag":614,"props":810,"children":811},{"style":706},[812],{"type":411,"value":813}," =",{"type":405,"tag":614,"props":815,"children":816},{"style":633},[817],{"type":411,"value":662},{"type":405,"tag":614,"props":819,"children":821},{"class":616,"line":820},6,[822,827,831,835,839],{"type":405,"tag":614,"props":823,"children":824},{"style":706},[825],{"type":411,"value":826},"      ...",{"type":405,"tag":614,"props":828,"children":829},{"style":691},[830],{"type":411,"value":642},{"type":405,"tag":614,"props":832,"children":833},{"style":633},[834],{"type":411,"value":698},{"type":405,"tag":614,"props":836,"children":837},{"style":691},[838],{"type":411,"value":808},{"type":405,"tag":614,"props":840,"children":841},{"style":633},[842],{"type":411,"value":843},",\n",{"type":405,"tag":614,"props":845,"children":847},{"class":616,"line":846},7,[848,853,858,862,867],{"type":405,"tag":614,"props":849,"children":850},{"style":685},[851],{"type":411,"value":852},"      bar",{"type":405,"tag":614,"props":854,"children":855},{"style":633},[856],{"type":411,"value":857},":",{"type":405,"tag":614,"props":859,"children":860},{"style":712},[861],{"type":411,"value":715},{"type":405,"tag":614,"props":863,"children":864},{"style":718},[865],{"type":411,"value":866},"^2.0.0",{"type":405,"tag":614,"props":868,"children":869},{"style":712},[870],{"type":411,"value":871},"'\n",{"type":405,"tag":614,"props":873,"children":875},{"class":616,"line":874},8,[876],{"type":405,"tag":614,"props":877,"children":878},{"style":633},[879],{"type":411,"value":880},"    }\n",{"type":405,"tag":614,"props":882,"children":884},{"class":616,"line":883},9,[885,890,894,899,903,907,912,916],{"type":405,"tag":614,"props":886,"children":887},{"style":691},[888],{"type":411,"value":889},"    context",{"type":405,"tag":614,"props":891,"children":892},{"style":633},[893],{"type":411,"value":698},{"type":405,"tag":614,"props":895,"children":896},{"style":627},[897],{"type":411,"value":898},"log",{"type":405,"tag":614,"props":900,"children":901},{"style":685},[902],{"type":411,"value":636},{"type":405,"tag":614,"props":904,"children":905},{"style":712},[906],{"type":411,"value":726},{"type":405,"tag":614,"props":908,"children":909},{"style":718},[910],{"type":411,"value":911},"bar@1 => bar@2 in dependencies of foo",{"type":405,"tag":614,"props":913,"children":914},{"style":712},[915],{"type":411,"value":726},{"type":405,"tag":614,"props":917,"children":918},{"style":685},[919],{"type":411,"value":920},")\n",{"type":405,"tag":614,"props":922,"children":924},{"class":616,"line":923},10,[925],{"type":405,"tag":614,"props":926,"children":927},{"style":633},[928],{"type":411,"value":929},"  }\n",{"type":405,"tag":614,"props":931,"children":933},{"class":616,"line":932},11,[934],{"type":405,"tag":614,"props":935,"children":936},{"style":685},[937],{"type":411,"value":938},"  \n",{"type":405,"tag":614,"props":940,"children":942},{"class":616,"line":941},12,[943],{"type":405,"tag":614,"props":944,"children":945},{"style":669},[946],{"type":411,"value":947},"  // This will change any packages using baz@x.x.x to use baz@1.2.3\n",{"type":405,"tag":614,"props":949,"children":951},{"class":616,"line":950},13,[952,956,960,964,968,972,976,981,986],{"type":405,"tag":614,"props":953,"children":954},{"style":679},[955],{"type":411,"value":682},{"type":405,"tag":614,"props":957,"children":958},{"style":685},[959],{"type":411,"value":688},{"type":405,"tag":614,"props":961,"children":962},{"style":691},[963],{"type":411,"value":642},{"type":405,"tag":614,"props":965,"children":966},{"style":633},[967],{"type":411,"value":698},{"type":405,"tag":614,"props":969,"children":970},{"style":691},[971],{"type":411,"value":808},{"type":405,"tag":614,"props":973,"children":974},{"style":633},[975],{"type":411,"value":698},{"type":405,"tag":614,"props":977,"children":978},{"style":691},[979],{"type":411,"value":980},"baz",{"type":405,"tag":614,"props":982,"children":983},{"style":685},[984],{"type":411,"value":985},") ",{"type":405,"tag":614,"props":987,"children":988},{"style":633},[989],{"type":411,"value":781},{"type":405,"tag":614,"props":991,"children":993},{"class":616,"line":992},14,[994,998,1002,1006,1010,1014,1018,1022,1027,1031],{"type":405,"tag":614,"props":995,"children":996},{"style":691},[997],{"type":411,"value":799},{"type":405,"tag":614,"props":999,"children":1000},{"style":633},[1001],{"type":411,"value":698},{"type":405,"tag":614,"props":1003,"children":1004},{"style":691},[1005],{"type":411,"value":808},{"type":405,"tag":614,"props":1007,"children":1008},{"style":633},[1009],{"type":411,"value":698},{"type":405,"tag":614,"props":1011,"children":1012},{"style":691},[1013],{"type":411,"value":980},{"type":405,"tag":614,"props":1015,"children":1016},{"style":706},[1017],{"type":411,"value":813},{"type":405,"tag":614,"props":1019,"children":1020},{"style":712},[1021],{"type":411,"value":715},{"type":405,"tag":614,"props":1023,"children":1024},{"style":718},[1025],{"type":411,"value":1026},"1.2.3",{"type":405,"tag":614,"props":1028,"children":1029},{"style":712},[1030],{"type":411,"value":726},{"type":405,"tag":614,"props":1032,"children":1033},{"style":633},[1034],{"type":411,"value":1035},";\n",{"type":405,"tag":614,"props":1037,"children":1039},{"class":616,"line":1038},15,[1040],{"type":405,"tag":614,"props":1041,"children":1042},{"style":633},[1043],{"type":411,"value":929},{"type":405,"tag":614,"props":1045,"children":1047},{"class":616,"line":1046},16,[1048],{"type":405,"tag":614,"props":1049,"children":1050},{"style":685},[1051],{"type":411,"value":938},{"type":405,"tag":614,"props":1053,"children":1055},{"class":616,"line":1054},17,[1056,1061],{"type":405,"tag":614,"props":1057,"children":1058},{"style":679},[1059],{"type":411,"value":1060},"  return",{"type":405,"tag":614,"props":1062,"children":1063},{"style":691},[1064],{"type":411,"value":1065}," pkg\n",{"type":405,"tag":614,"props":1067,"children":1069},{"class":616,"line":1068},18,[1070],{"type":405,"tag":614,"props":1071,"children":1072},{"style":633},[1073],{"type":411,"value":1074},"}\n",{"type":405,"tag":614,"props":1076,"children":1078},{"class":616,"line":1077},19,[1079],{"type":405,"tag":614,"props":1080,"children":1081},{"emptyLinePlaceholder":397},[1082],{"type":411,"value":1083},"\n",{"type":405,"tag":614,"props":1085,"children":1087},{"class":616,"line":1086},20,[1088,1094,1098,1103,1107],{"type":405,"tag":614,"props":1089,"children":1091},{"style":1090},"--shiki-light:#39ADB5;--shiki-light-font-style:inherit;--shiki-default:#005CC5;--shiki-default-font-style:inherit;--shiki-dark:#79B8FF;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[1092],{"type":411,"value":1093},"module",{"type":405,"tag":614,"props":1095,"children":1096},{"style":633},[1097],{"type":411,"value":698},{"type":405,"tag":614,"props":1099,"children":1100},{"style":1090},[1101],{"type":411,"value":1102},"exports",{"type":405,"tag":614,"props":1104,"children":1105},{"style":706},[1106],{"type":411,"value":813},{"type":405,"tag":614,"props":1108,"children":1109},{"style":633},[1110],{"type":411,"value":662},{"type":405,"tag":614,"props":1112,"children":1114},{"class":616,"line":1113},21,[1115,1120,1124],{"type":405,"tag":614,"props":1116,"children":1117},{"style":685},[1118],{"type":411,"value":1119},"  hooks",{"type":405,"tag":614,"props":1121,"children":1122},{"style":633},[1123],{"type":411,"value":857},{"type":405,"tag":614,"props":1125,"children":1126},{"style":633},[1127],{"type":411,"value":662},{"type":405,"tag":614,"props":1129,"children":1131},{"class":616,"line":1130},22,[1132],{"type":405,"tag":614,"props":1133,"children":1134},{"style":691},[1135],{"type":411,"value":1136},"    readPackage\n",{"type":405,"tag":614,"props":1138,"children":1140},{"class":616,"line":1139},23,[1141],{"type":405,"tag":614,"props":1142,"children":1143},{"style":633},[1144],{"type":411,"value":929},{"type":405,"tag":614,"props":1146,"children":1148},{"class":616,"line":1147},24,[1149],{"type":405,"tag":614,"props":1150,"children":1151},{"style":633},[1152],{"type":411,"value":1074},{"type":405,"tag":421,"props":1154,"children":1155},{},[1156,1158],{"type":411,"value":1157},"见：",{"type":405,"tag":1159,"props":1160,"children":1164},"a",{"href":1161,"rel":1162},"https://pnpm.io/pnpmfile",[1163],"nofollow",[1165],{"type":411,"value":1166},"pnpmfile",{"type":405,"tag":406,"props":1168,"children":1170},{"id":1169},"原理",[1171],{"type":411,"value":1169},{"type":405,"tag":414,"props":1173,"children":1175},{"id":1174},"显著的优点",[1176],{"type":411,"value":1177},"显著的优点？",{"type":405,"tag":495,"props":1179,"children":1180},{},[1181,1186,1191,1204],{"type":405,"tag":499,"props":1182,"children":1183},{},[1184],{"type":411,"value":1185},"省磁盘空间，使用软硬链接和符号链接节约空间。",{"type":405,"tag":499,"props":1187,"children":1188},{},[1189],{"type":411,"value":1190},"安装依赖快，因为处理链接要比处理文件快，并且每个包的解析、下载和写入磁盘这三个阶段是分离的。",{"type":405,"tag":499,"props":1192,"children":1193},{},[1194,1196,1202],{"type":411,"value":1195},"内建支持 monorepo，所有命令支持 ",{"type":405,"tag":427,"props":1197,"children":1199},{"className":1198},[],[1200],{"type":411,"value":1201},"--filter",{"type":411,"value":1203}," 过滤包。",{"type":405,"tag":499,"props":1205,"children":1206},{},[1207],{"type":411,"value":1208},"依赖严格，避免幽灵依赖和依赖分身问题。",{"type":405,"tag":414,"props":1210,"children":1212},{"id":1211},"依赖的层次结构是怎样的",[1213],{"type":411,"value":1214},"依赖的层次结构是怎样的？",{"type":405,"tag":421,"props":1216,"children":1217},{},[1218,1220,1226,1228,1234,1236,1242,1244,1250,1252,1257,1259,1264,1266,1271,1273,1279,1281,1286,1288,1294],{"type":411,"value":1219},"当项目文件读取 ",{"type":405,"tag":427,"props":1221,"children":1223},{"className":1222},[],[1224],{"type":411,"value":1225},"bar",{"type":411,"value":1227}," 时，直接读取 ",{"type":405,"tag":427,"props":1229,"children":1231},{"className":1230},[],[1232],{"type":411,"value":1233},"node_modules/bar",{"type":411,"value":1235},"，但它其实是 ",{"type":405,"tag":427,"props":1237,"children":1239},{"className":1238},[],[1240],{"type":411,"value":1241},".pnpm",{"type":411,"value":1243}," 文件夹下 ",{"type":405,"tag":427,"props":1245,"children":1247},{"className":1246},[],[1248],{"type":411,"value":1249},"bar/node_modules/bar",{"type":411,"value":1251}," 的一个符号链接。也就是说，他的真实的地址在 ",{"type":405,"tag":427,"props":1253,"children":1255},{"className":1254},[],[1256],{"type":411,"value":1241},{"type":411,"value":1258}," 文件夹下。这样一来，当 ",{"type":405,"tag":427,"props":1260,"children":1262},{"className":1261},[],[1263],{"type":411,"value":1225},{"type":411,"value":1265}," 读取它的依赖的时候（项目的依赖的依赖），会在 ",{"type":405,"tag":427,"props":1267,"children":1269},{"className":1268},[],[1270],{"type":411,"value":1225},{"type":411,"value":1272}," 的上层目录即 ",{"type":405,"tag":427,"props":1274,"children":1276},{"className":1275},[],[1277],{"type":411,"value":1278},"bar/node_modules",{"type":411,"value":1280}," 找到 ",{"type":405,"tag":427,"props":1282,"children":1284},{"className":1283},[],[1285],{"type":411,"value":721},{"type":411,"value":1287}," 这个依赖。项目文件没法读取 ",{"type":405,"tag":427,"props":1289,"children":1291},{"className":1290},[],[1292],{"type":411,"value":1293},"bar/node_modules/foo",{"type":411,"value":1295}," 所以避免了幽灵依赖问题。",{"type":405,"tag":421,"props":1297,"children":1298},{},[1299,1304,1306,1312,1314,1319,1321,1327],{"type":405,"tag":427,"props":1300,"children":1302},{"className":1301},[],[1303],{"type":411,"value":1293},{"type":411,"value":1305}," 要怎么找到它的依赖呢？它的真实地址在项目 ·（和官网的图有出入），所以 foo 也只能读取它自己的子依赖，即 ",{"type":405,"tag":427,"props":1307,"children":1309},{"className":1308},[],[1310],{"type":411,"value":1311},"node_modules/.pnpm/foo/node_modules",{"type":411,"value":1313},"。如果有依赖依赖了同一份（同一版本）的 ",{"type":405,"tag":427,"props":1315,"children":1317},{"className":1316},[],[1318],{"type":411,"value":721},{"type":411,"value":1320},"，那么它们的真实地址都是一样的 ",{"type":405,"tag":427,"props":1322,"children":1324},{"className":1323},[],[1325],{"type":411,"value":1326},"node_modules/.pnpm/foo/node_modules/foo",{"type":411,"value":1328},"，这样就避免依赖分身问题。",{"type":405,"tag":421,"props":1330,"children":1331},{},[1332],{"type":405,"tag":1333,"props":1334,"children":1337},"img",{"alt":1335,"src":1336},"Modules Mapping in pnpm","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220317192927.png",[],{"type":405,"tag":421,"props":1339,"children":1340},{},[1341,1342,1349,1351],{"type":411,"value":1157},{"type":405,"tag":1159,"props":1343,"children":1346},{"href":1344,"rel":1345},"https://pnpm.io/blog/2020/05/27/flat-node-modules-is-not-the-only-way",[1163],[1347],{"type":411,"value":1348},"Flat node_modules is not the only way | @pnpm",{"type":411,"value":1350},"、",{"type":405,"tag":1159,"props":1352,"children":1355},{"href":1353,"rel":1354},"https://pnpm.io/symlinked-node-modules-structure",[1163],[1356],{"type":411,"value":1357},"Symlinked node_modules structure | @pnpm",{"type":405,"tag":414,"props":1359,"children":1361},{"id":1360},"如何处理同级依赖",[1362],{"type":411,"value":1363},"如何处理同级依赖？",{"type":405,"tag":421,"props":1365,"children":1366},{},[1367,1369,1375,1377,1383,1385,1391,1393,1399,1401,1407,1408,1414],{"type":411,"value":1368},"当项目的两个包 A、B 依赖依赖了同一版本的 C，但是却安装了不同版本的 C 的同级依赖 D@1.0 和 D@1.1，这时，A 依赖的 C 的真实地址是 ",{"type":405,"tag":427,"props":1370,"children":1372},{"className":1371},[],[1373],{"type":411,"value":1374},".pnpm/C_D@1.0/node_modules/C",{"type":411,"value":1376},"，B 依赖的 C 的真实地址是 ",{"type":405,"tag":427,"props":1378,"children":1380},{"className":1379},[],[1381],{"type":411,"value":1382},".pnpm/C_D@1.1/node_modules/C",{"type":411,"value":1384},"。这样一来，两个 C 在读取其同级依赖时，分别读取了 ",{"type":405,"tag":427,"props":1386,"children":1388},{"className":1387},[],[1389],{"type":411,"value":1390},".pnpm/C_D@1.0/node_modules/D",{"type":411,"value":1392}," 和 ",{"type":405,"tag":427,"props":1394,"children":1396},{"className":1395},[],[1397],{"type":411,"value":1398},".pnpm/C_D@1.1/node_modules/D@1.0",{"type":411,"value":1400},"，分别对应真实地址 ",{"type":405,"tag":427,"props":1402,"children":1404},{"className":1403},[],[1405],{"type":411,"value":1406},".pnpm/D@1.0/node_modules/D",{"type":411,"value":1392},{"type":405,"tag":427,"props":1409,"children":1411},{"className":1410},[],[1412],{"type":411,"value":1413},".pnpm/D@1.1/node_modules/D",{"type":411,"value":1415},"。",{"type":405,"tag":421,"props":1417,"children":1418},{},[1419,1421,1427,1428,1434,1436,1442,1443,1448,1450,1456],{"type":411,"value":1420},"当同级依赖的深度增加时，层级结构也随之变得复杂。如果某个依赖 A 依赖了同一个 B，但是 B 子依赖 C 的版本不同（C@1.0 和 C@1.1），这样就创造出了指数级增长的软链数量。为了保证 B 能分别访问两个 C，B 的符号链接的被链接地址会有 ",{"type":405,"tag":427,"props":1422,"children":1424},{"className":1423},[],[1425],{"type":411,"value":1426},".pnpm/B_C@1.0/node_modules/B",{"type":411,"value":1392},{"type":405,"tag":427,"props":1429,"children":1431},{"className":1430},[],[1432],{"type":411,"value":1433},".pnpm/B_C@1.1/node_modules/B",{"type":411,"value":1435},"，而为此，A 的被链接地址也会有两个，",{"type":405,"tag":427,"props":1437,"children":1439},{"className":1438},[],[1440],{"type":411,"value":1441},".pnpm/A_C@1.0/node_modules/A",{"type":411,"value":1392},{"type":405,"tag":427,"props":1444,"children":1446},{"className":1445},[],[1447],{"type":411,"value":1441},{"type":411,"value":1449},"。从不同的 A 的被链接地址的上级目录 ",{"type":405,"tag":427,"props":1451,"children":1453},{"className":1452},[],[1454],{"type":411,"value":1455},"node_modules",{"type":411,"value":1457}," 可以读取到不同的 B 的被链目录，从不同的 B 可以读取到不同的 C。",{"type":405,"tag":473,"props":1459,"children":1462},{"code":1460,"language":411,"meta":398,"className":1461},"node_modules\n└── .pnpm\n    ├── a@1.0.0_c@1.0.0\n    │   └── node_modules\n    │       ├── a\n    │       └── b -> ../../b@1.0.0_c@1.0.0/node_modules/b\n    ├── a@1.0.0_c@1.1.0\n    │   └── node_modules\n    │       ├── a\n    │       └── b -> ../../b@1.0.0_c@1.1.0/node_modules/b\n    ├── b@1.0.0_c@1.0.0\n    │   └── node_modules\n    │       ├── b\n    │       └── c -> ../../c@1.0.0/node_modules/c\n    ├── b@1.0.0_c@1.1.0\n    │   └── node_modules\n    │       ├── b\n    │       └── c -> ../../c@1.1.0/node_modules/c\n    ├── c@1.0.0\n    ├── c@1.1.0\n",[477],[1463],{"type":405,"tag":427,"props":1464,"children":1465},{"__ignoreMap":398},[1466],{"type":411,"value":1460},{"type":405,"tag":421,"props":1468,"children":1469},{},[1470,1471],{"type":411,"value":1157},{"type":405,"tag":1159,"props":1472,"children":1475},{"href":1473,"rel":1474},"https://pnpm.io/how-peers-are-resolved",[1163],[1476],{"type":411,"value":1477},"How peers are resolved | @pnpm",{"type":405,"tag":414,"props":1479,"children":1481},{"id":1480},"怎样兼容-nodejs-模块加载顺序",[1482],{"type":411,"value":1483},"怎样兼容 NodeJS 模块加载顺序？",{"type":405,"tag":421,"props":1485,"children":1486},{},[1487],{"type":411,"value":1488},"不论系统自带的模块，NodeJS 加载模块的顺序是这样的：",{"type":405,"tag":495,"props":1490,"children":1491},{},[1492,1497,1502,1507],{"type":405,"tag":499,"props":1493,"children":1494},{},[1495],{"type":411,"value":1496},"读取本文件夹中 node_modules 中对应名字的文件夹的 package.json，并寻找 main 字段对应的路径",{"type":405,"tag":499,"props":1498,"children":1499},{},[1500],{"type":411,"value":1501},"读取本文件夹中 node_modules 中对应名字的 js 文件",{"type":405,"tag":499,"props":1503,"children":1504},{},[1505],{"type":411,"value":1506},"读取本文件夹中 node_modules 中对应名字文件夹中的 index.js 文件",{"type":405,"tag":499,"props":1508,"children":1509},{},[1510],{"type":411,"value":1511},"跳出本文件夹，继续前三个步骤",{"type":405,"tag":421,"props":1513,"children":1514},{},[1515,1517,1522,1524,1530,1532,1538,1540,1545,1547,1553,1555,1561],{"type":411,"value":1516},"因为项目 ",{"type":405,"tag":427,"props":1518,"children":1520},{"className":1519},[],[1521],{"type":411,"value":1233},{"type":411,"value":1523}," 是 ",{"type":405,"tag":427,"props":1525,"children":1527},{"className":1526},[],[1528],{"type":411,"value":1529},".pnpm/bar/node_modules/bar",{"type":411,"value":1531}," 的符号链接，所以项目文件可以直接读取 ",{"type":405,"tag":427,"props":1533,"children":1535},{"className":1534},[],[1536],{"type":411,"value":1537},"node_modules/bar/x.js",{"type":411,"value":1539},"。同时，如果 ",{"type":405,"tag":427,"props":1541,"children":1543},{"className":1542},[],[1544],{"type":411,"value":1537},{"type":411,"value":1546}," 需要加载 ",{"type":405,"tag":427,"props":1548,"children":1550},{"className":1549},[],[1551],{"type":411,"value":1552},"foo/x.js",{"type":411,"value":1554},"，那么在上述步骤的第 4 步，就能找到 ",{"type":405,"tag":427,"props":1556,"children":1558},{"className":1557},[],[1559],{"type":411,"value":1560},".pnpm/bar/node_modules/foo/x.js",{"type":411,"value":1562}," 文件。",{"type":405,"tag":414,"props":1564,"children":1566},{"id":1565},"为什么其模块层次只是比较严格的semistrict",[1567],{"type":411,"value":1568},"为什么其模块层次只是“比较严格的”（semistrict）？",{"type":405,"tag":421,"props":1570,"children":1571},{},[1572],{"type":411,"value":1573},"由 NodeJS 模块加载规则可知，在 pnpm 创造的依赖层次下，一个依赖的子依赖间仍有相互访问的能力。",{"type":405,"tag":414,"props":1575,"children":1577},{"id":1576},"为什么能节约磁盘空间",[1578],{"type":411,"value":1579},"为什么能节约磁盘空间？",{"type":405,"tag":421,"props":1581,"children":1582},{},[1583,1585,1591,1593,1599,1601,1607],{"type":411,"value":1584},"由 pnpm 创造的 node_modules 层级结构可以知道，所有依赖的符号链接的真实地址都在 ",{"type":405,"tag":427,"props":1586,"children":1588},{"className":1587},[],[1589],{"type":411,"value":1590},".pnpm/package-name/node_modules/package-name",{"type":411,"value":1592}," 这个文件夹中。这种文件夹会通过硬链接的形式链接到 ",{"type":405,"tag":427,"props":1594,"children":1596},{"className":1595},[],[1597],{"type":411,"value":1598},"user-document/.pnpm-store",{"type":411,"value":1600}," 中，所以相同的包只会存一份，也就是 ",{"type":405,"tag":427,"props":1602,"children":1604},{"className":1603},[],[1605],{"type":411,"value":1606},".pnpm-store/package-name",{"type":411,"value":1415},{"type":405,"tag":414,"props":1609,"children":1611},{"id":1610},"软硬链接有什么问题",[1612],{"type":411,"value":1613},"软硬链接有什么问题？",{"type":405,"tag":1615,"props":1616,"children":1617},"ul",{},[1618,1623,1628,1633],{"type":405,"tag":499,"props":1619,"children":1620},{},[1621],{"type":411,"value":1622},"特定的软链结构会导致某些应用出现死循环",{"type":405,"tag":499,"props":1624,"children":1625},{},[1626],{"type":411,"value":1627},"硬链接是同一份文件，不便调试",{"type":405,"tag":499,"props":1629,"children":1630},{},[1631],{"type":411,"value":1632},"软链接在非 SSD 上的读写会有性能损耗",{"type":405,"tag":499,"props":1634,"children":1635},{},[1636],{"type":411,"value":1637},"pnpm 创造的 node_modules 层级结构会破坏某些依赖依赖了相对路径的依赖的逻辑",{"type":405,"tag":421,"props":1639,"children":1640},{},[1641,1642],{"type":411,"value":1157},{"type":405,"tag":1159,"props":1643,"children":1646},{"href":1644,"rel":1645},"https://zhuanlan.zhihu.com/p/553804414",[1163],[1647],{"type":411,"value":1648},"精读 pnpm",{"type":405,"tag":406,"props":1650,"children":1652},{"id":1651},"常见问题",[1653],{"type":411,"value":1651},{"type":405,"tag":414,"props":1655,"children":1657},{"id":1656},"pnpm-找不到全局路径的解决方法",[1658],{"type":411,"value":1659},"PNPM 找不到全局路径的解决方法？",{"type":405,"tag":421,"props":1661,"children":1662},{},[1663],{"type":411,"value":1664},"尽管设置了全局变量，也重新安装了最新版本 PNPM，也执行了 pnpm setup，却仍然报错找不到全局路径的临时解决方案：",{"type":405,"tag":473,"props":1666,"children":1670},{"code":1667,"language":1668,"meta":398,"className":1669,"style":398},"$PNPM_HOME=\"\u003Cpath>\" | pnpm install -g xxx\n","powershell","language-powershell shiki shiki-themes material-theme-lighter github-light github-dark monokai",[1671],{"type":405,"tag":427,"props":1672,"children":1673},{"__ignoreMap":398},[1674],{"type":405,"tag":614,"props":1675,"children":1676},{"class":616,"line":617},[1677,1682,1687,1692,1697,1702,1706,1711,1716,1721],{"type":405,"tag":614,"props":1678,"children":1679},{"style":633},[1680],{"type":411,"value":1681},"$",{"type":405,"tag":614,"props":1683,"children":1684},{"style":691},[1685],{"type":411,"value":1686},"PNPM_HOME",{"type":405,"tag":614,"props":1688,"children":1689},{"style":706},[1690],{"type":411,"value":1691},"=",{"type":405,"tag":614,"props":1693,"children":1694},{"style":712},[1695],{"type":411,"value":1696},"\"",{"type":405,"tag":614,"props":1698,"children":1699},{"style":718},[1700],{"type":411,"value":1701},"\u003Cpath>",{"type":405,"tag":614,"props":1703,"children":1704},{"style":712},[1705],{"type":411,"value":1696},{"type":405,"tag":614,"props":1707,"children":1708},{"style":706},[1709],{"type":411,"value":1710}," |",{"type":405,"tag":614,"props":1712,"children":1713},{"style":691},[1714],{"type":411,"value":1715}," pnpm install ",{"type":405,"tag":614,"props":1717,"children":1718},{"style":706},[1719],{"type":411,"value":1720},"-",{"type":405,"tag":614,"props":1722,"children":1723},{"style":691},[1724],{"type":411,"value":1725},"g xxx\n",{"type":405,"tag":414,"props":1727,"children":1729},{"id":1728},"pnpm-速度变慢了",[1730],{"type":411,"value":1731},"PNPM 速度变慢了？",{"type":405,"tag":421,"props":1733,"children":1734},{},[1735],{"type":411,"value":1736},"今天逛官网时，偶然发现 Readme 中的 benchmark 过时了。它说“要比 Yarn Classic 和 npm “快两倍以上，但是从 benchmark 来看，他要比 Yarn 和 npm 慢了不少。以后启用 NodeJS 20 以上时，如果问题得不到改善，我应该会重新选择 npm 而不是 pnpm，鉴于幽灵依赖和依赖分身带来的问题是可排查可解决的，而速度是解决不了的问题。",{"type":405,"tag":421,"props":1738,"children":1739},{},[1740],{"type":405,"tag":1333,"props":1741,"children":1744},{"alt":1742,"src":1743},"pnpm vs npm vs yarn benchmark","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20230605235736.png",[],{"type":405,"tag":421,"props":1746,"children":1747},{},[1748,1750],{"type":411,"value":1749},"相关见：",{"type":405,"tag":1159,"props":1751,"children":1754},{"href":1752,"rel":1753},"https://github.com/pnpm/pnpm/issues/6447",[1163],[1755],{"type":411,"value":1756},"pnpm seems to be consistently slower than yarn (classic)",{"type":405,"tag":414,"props":1758,"children":1760},{"id":1759},"和-bun-在安装速度上的对比",[1761],{"type":411,"value":1762},"和 Bun 在安装速度上的对比？",{"type":405,"tag":421,"props":1764,"children":1765},{},[1766],{"type":411,"value":1767},"有锁文件、本地缓存，无 node_modules 的情况下，bun 要比 pnpm 安装至少快 3 倍。",{"type":405,"tag":1615,"props":1769,"children":1770},{},[1771,1776],{"type":405,"tag":499,"props":1772,"children":1773},{},[1774],{"type":411,"value":1775},"一个原因是 pnpm、yarn 等工具会在安装时请求最新的 metadata，而 bun 使用的 metadata 源于本地缓存的 metadata。",{"type":405,"tag":499,"props":1777,"children":1778},{},[1779],{"type":411,"value":1780},"另一个原因是 pnpm 在创建 node_modules 层次结构是使用了大量的 symlink，相比其他包管理工具仅使用复制或 hardlink 有更多系统调用。",{"type":405,"tag":421,"props":1782,"children":1783},{},[1784],{"type":411,"value":1785},"所以如果想使 pnpm 更快的安装，可以使用 prefer-offline 选项，以及，node-linker=hoisted 也许有用。",{"type":405,"tag":421,"props":1787,"children":1788},{},[1789,1790],{"type":411,"value":1157},{"type":405,"tag":1159,"props":1791,"children":1794},{"href":1792,"rel":1793},"https://github.com/pnpm/pnpm/issues/7391",[1163],[1795],{"type":411,"value":1796},"Bun.sh-like Module Resolution",{"type":405,"tag":414,"props":1798,"children":1800},{"id":1799},"关于-v8-版本的变化",[1801],{"type":411,"value":1802},"关于 V8 版本的变化？",{"type":405,"tag":1615,"props":1804,"children":1805},{},[1806,1825,1841,1852,1857,1862,1867],{"type":405,"tag":499,"props":1807,"children":1808},{},[1809,1815,1817,1823],{"type":405,"tag":427,"props":1810,"children":1812},{"className":1811},[],[1813],{"type":411,"value":1814},"resolve-peers-from-workspace-root",{"type":411,"value":1816}," is ",{"type":405,"tag":427,"props":1818,"children":1820},{"className":1819},[],[1821],{"type":411,"value":1822},"true",{"type":411,"value":1824}," by default",{"type":405,"tag":499,"props":1826,"children":1827},{},[1828,1834,1835,1840],{"type":405,"tag":427,"props":1829,"children":1831},{"className":1830},[],[1832],{"type":411,"value":1833},"auto-install-peers",{"type":411,"value":1816},{"type":405,"tag":427,"props":1836,"children":1838},{"className":1837},[],[1839],{"type":411,"value":1822},{"type":411,"value":1824},{"type":405,"tag":499,"props":1842,"children":1843},{},[1844,1850],{"type":405,"tag":427,"props":1845,"children":1847},{"className":1846},[],[1848],{"type":411,"value":1849},"dedupe-peer-dependents",{"type":411,"value":1851}," set to true by default",{"type":405,"tag":499,"props":1853,"children":1854},{},[1855],{"type":411,"value":1856},"停止 NodeJS 14 的支持",{"type":405,"tag":499,"props":1858,"children":1859},{},[1860],{"type":411,"value":1861},"lockfile v6 by default",{"type":405,"tag":499,"props":1863,"children":1864},{},[1865],{"type":411,"value":1866},"resolution mode（prebundle、time-based、lowest-direct）default set to lowest-based，需要注意手动升级，尤其是在没有锁文件的情况",{"type":405,"tag":499,"props":1868,"children":1869},{},[1870,1872,1878],{"type":411,"value":1871},"only deply ",{"type":405,"tag":427,"props":1873,"children":1875},{"className":1874},[],[1876],{"type":411,"value":1877},"files",{"type":411,"value":1879}," field when the field exist",{"type":405,"tag":414,"props":1881,"children":1883},{"id":1882},"pnp-模式下的依赖提升设置",[1884],{"type":411,"value":1885},"PnP 模式下的依赖提升设置？",{"type":405,"tag":421,"props":1887,"children":1888},{},[1889,1891,1897],{"type":411,"value":1890},"默认的 node_modules 依赖的层级处于严格和不严格之间的水平（semi-strict）。使用最严格的设置需要打开 PnP 模式，因为在 monorepo 中 PnP 模式中，就算开启了 ",{"type":405,"tag":427,"props":1892,"children":1894},{"className":1893},[],[1895],{"type":411,"value":1896},"hoist=false",{"type":411,"value":1898}," 也不会禁用 workspace root 的依赖",{"type":405,"tag":473,"props":1900,"children":1902},{"code":1901},"node-linker=pnp\nsymlink=false\n",[1903],{"type":405,"tag":427,"props":1904,"children":1905},{"__ignoreMap":398},[1906],{"type":411,"value":1901},{"type":405,"tag":421,"props":1908,"children":1909},{},[1910,1911],{"type":411,"value":1157},{"type":405,"tag":1159,"props":1912,"children":1915},{"href":1913,"rel":1914},"https://pnpm.io/blog/2020/10/17/node-modules-configuration-options-with-pnpm",[1163],[1916],{"type":411,"value":1917},"Node-Modules configuration options with pnpm",{"type":405,"tag":414,"props":1919,"children":1921},{"id":1920},"在-windows-dev-driver-上可能会碰到的问题",[1922],{"type":411,"value":1923},"在 Windows Dev Driver 上可能会碰到的问题？",{"type":405,"tag":421,"props":1925,"children":1926},{},[1927],{"type":411,"value":1928},"2024 年初 pnpm 实现了 Dev Driver 上的 Copy on Write 功能，但可能会碰到变慢的问题。",{"type":405,"tag":421,"props":1930,"children":1931},{},[1932,1933],{"type":411,"value":1157},{"type":405,"tag":1159,"props":1934,"children":1937},{"href":1935,"rel":1936},"https://github.com/pnpm/pnpm/issues/7547",[1163],[1938],{"type":411,"value":1939},"pnpm lately slow and pnpx stuck at installing deps using executable package",{"type":405,"tag":1941,"props":1942,"children":1943},"style",{},[1944],{"type":411,"value":1945},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":398,"searchDepth":665,"depth":665,"links":1947},[1948,1949,1950],{"id":408,"depth":665,"text":412},{"id":1169,"depth":665,"text":1169},{"id":1651,"depth":665,"text":1651},"markdown","content:6.maps:_workflow:package-manager:pnpm.md","content","6.maps/_workflow/package-manager/pnpm.md","6.maps/_workflow/package-manager/pnpm","md",[1958,1962],{"_path":1959,"title":1960,"description":1961},"/maps/_workflow/package-manager/npm","NPM","NPM 包管理器完整指南，包含 package.json 配置、镜像源管理、依赖安装等核心功能的详细说明。",{"_path":1963,"title":1964,"description":1965},"/maps/_workflow/packer","打包工具","前端打包工具全景图，涵盖 Vite、Webpack、Rollup、tsup、Unbuild、Rome 等主流工具的特性对比和使用说明。",1741604962695]