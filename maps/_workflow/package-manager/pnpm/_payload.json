[{"data":1,"prerenderedAt":1957},["ShallowReactive",2],{"navigation":3,"/maps/_workflow/package-manager/pnpm":384,"/maps/_workflow/package-manager/pnpm-surround":1948},[4,35,86,105,132,138,144,150,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":205,"_path":206},"正则表达式","/gists/eegex",{"title":208,"_path":209},"Emoji","/gists/emoji",{"title":211,"_path":212},"工程","/gists/engineering",{"title":214,"_path":215},"熵","/gists/entropy",{"title":217,"_path":218},"Environment","/gists/environment",{"title":220,"_path":221},"Erlang","/gists/erlang",{"title":223,"_path":224},"逃离塔克夫","/gists/escape-from-tarkov",{"title":226,"_path":227},"ESNext (ES6-ES11)","/gists/esnext",{"title":229,"_path":230},"Eval！","/gists/eval",{"title":232,"_path":233},"Flutter","/gists/flutter",{"title":235,"_path":236},"字体","/gists/font",{"title":238,"_path":239},"JS 函数式编程","/gists/functional",{"title":241,"_path":242},"游戏化","/gists/gamification",{"title":244,"_path":245},"Google C++ Standard","/gists/google-cpp-standard",{"title":247,"_path":248},"双向链接完全体","/gists/graph",{"title":250,"_path":251},"Hardwares","/gists/hardwares",{"title":253,"_path":254},"哈希冲突","/gists/hash-collision",{"title":256,"_path":257},"信息设计","/gists/information-design",{"title":259,"_path":260},"InstantPage","/gists/instant.page",{"title":262,"_path":263},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":265,"_path":266},"KVStore","/gists/key-value-db",{"title":268,"_path":269},"Kubernetes","/gists/kubernetes",{"title":271,"_path":272},"Makefile","/gists/makefile",{"title":274,"_path":275},"Markdown Inline Style","/gists/markdown-nice",{"title":277,"_path":278},"减小页面快照体积","/gists/minify-html",{"title":280,"_path":281},"mklink","/gists/mklink",{"title":283,"_path":284},"Mock","/gists/mock",{"title":286,"_path":287},"多人协作系统","/gists/multiplayer",{"title":289,"_path":290},"多端应用","/gists/multy-end-app",{"title":292,"_path":293},"神经科学","/gists/neuroscience",{"title":295,"_path":296},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":298,"_path":299},"PInvoke","/gists/pinvoke",{"title":301,"_path":302},"像素","/gists/pixel",{"title":304,"_path":305},"PowerShell","/gists/powershell",{"title":307,"_path":308},"量子","/gists/quantum",{"title":310,"_path":311},"保持好奇心","/gists/questions",{"title":313,"_path":314},"React Native","/gists/react-native",{"title":316,"_path":317},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":319,"_path":320},"SEO","/gists/seo",{"title":322,"_path":323},"Shader","/gists/shader",{"title":325,"_path":326},"Shape Up","/gists/shape-up",{"title":328,"_path":329},"睡觉","/gists/sleep",{"title":331,"_path":332},"记录奇怪的问题","/gists/solved",{"title":334,"_path":335},"States","/gists/states",{"title":337,"_path":338},"Storage","/gists/storage",{"title":340,"_path":341},"音视频流处理","/gists/stream-cli",{"title":343,"_path":344},"Symbol","/gists/symbol",{"title":346,"_path":347},"系统论","/gists/systems-theory",{"title":349,"_path":350},"任务切片","/gists/task-slice",{"title":352,"_path":353},"技术偏好","/gists/tech-dudge",{"title":355,"_path":356},"Untitled","/gists/untitled",{"title":358,"_path":359},"可变字体","/gists/variable-font",{"title":361,"_path":362},"视觉错觉","/gists/visual-illusion",{"title":364,"_path":365},"SS(SSR)","/gists/vpn",{"title":367,"_path":368},"VS Code 插件开发","/gists/vscode-plugin",{"title":370,"_path":371},"Web Components","/gists/web-components",{"title":373,"_path":374},"Windows","/gists/windows",{"title":376,"_path":377},"查缺补漏","/gists/wrong",{"title":379,"_path":380,"children":381},"我 / About","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"_path":385,"_dir":386,"_draft":387,"_partial":388,"_locale":389,"title":390,"description":391,"body":392,"_type":1942,"_id":1943,"_source":1944,"_file":1945,"_stem":1946,"_extension":1947},"/maps/_workflow/package-manager/pnpm","package-manager",false,true,"","pnpm","pnpm 是一个快速、省空间的包管理器",{"type":393,"children":394,"toc":1937},"root",[395,404,411,425,431,441,446,452,463,474,480,485,539,545,550,555,560,578,584,595,1144,1158,1163,1169,1200,1206,1287,1320,1329,1349,1355,1407,1449,1458,1469,1475,1480,1503,1554,1560,1565,1571,1599,1605,1629,1640,1645,1651,1656,1717,1723,1728,1736,1748,1754,1759,1772,1777,1788,1794,1871,1877,1890,1898,1909,1915,1920,1931],{"type":396,"tag":397,"props":398,"children":400},"element","h2",{"id":399},"api-细节和配置项",[401],{"type":402,"value":403},"text","API 细节和配置项",{"type":396,"tag":405,"props":406,"children":408},"h4",{"id":407},"pnpm-import",[409],{"type":402,"value":410},"pnpm import",{"type":396,"tag":412,"props":413,"children":414},"p",{},[415,417,423],{"type":402,"value":416},"使用 ",{"type":396,"tag":418,"props":419,"children":421},"code",{"className":420},[],[422],{"type":402,"value":410},{"type":402,"value":424}," 可以将 package-lock、npm-shrinkwrap 和 yarn.lock 转换为 pnpm-lock 文件。",{"type":396,"tag":405,"props":426,"children":428},{"id":427},"pnpm-fetch",[429],{"type":402,"value":430},"pnpm fetch",{"type":396,"tag":412,"props":432,"children":433},{},[434,439],{"type":396,"tag":418,"props":435,"children":437},{"className":436},[],[438],{"type":402,"value":430},{"type":402,"value":440}," 它跳过了 package.json 文件，允许项目在只有 pnpm-lock 文件的情况下创建 .pnpm 虚拟仓库。这有利于 docker 构建，因为 package.json 经常因为非依赖变化的改动而改动，导致 docker layer 失效。",{"type":396,"tag":412,"props":442,"children":443},{},[444],{"type":402,"value":445},"相比 yarn 和 npm，在脱离 package.json 的情况下，单靠 package-lock（或 yarn-lock），yarn 和 npm 没有办法确定依赖版本，因为其 package-lock 中，依赖的版本号不是固定版本号。",{"type":396,"tag":405,"props":447,"children":449},{"id":448},"pnpm-why",[450],{"type":402,"value":451},"pnpm why",{"type":396,"tag":412,"props":453,"children":454},{},[455,456,461],{"type":402,"value":416},{"type":396,"tag":418,"props":457,"children":459},{"className":458},[],[460],{"type":402,"value":451},{"type":402,"value":462}," 可以列出项目内依赖了某个依赖的依赖，比如说找到项目内使用了 lodash 的包。",{"type":396,"tag":464,"props":465,"children":469},"pre",{"code":466,"language":402,"meta":389,"className":467},"dependencies:\nelement-plus 2.2.20\n├── lodash 4.17.21\n└─┬ lodash-unified 1.0.3\n  └── lodash 4.17.21 peer\n...\n",[468],"language-text",[470],{"type":396,"tag":418,"props":471,"children":472},{"__ignoreMap":389},[473],{"type":402,"value":466},{"type":396,"tag":405,"props":475,"children":477},{"id":476},"pnpm-run",[478],{"type":402,"value":479},"pnpm run",{"type":396,"tag":412,"props":481,"children":482},{},[483],{"type":402,"value":484},"与其它包管理器的一些区别：",{"type":396,"tag":486,"props":487,"children":488},"ol",{},[489,515,520],{"type":396,"tag":490,"props":491,"children":492},"li",{},[493,499,501,507,509],{"type":396,"tag":418,"props":494,"children":496},{"className":495},[],[497],{"type":402,"value":498},"pnpm run script-name",{"type":402,"value":500},"，如果 ",{"type":396,"tag":418,"props":502,"children":504},{"className":503},[],[505],{"type":402,"value":506},"script-name",{"type":402,"value":508}," 没有和 pnpm 内置指令冲突，则可以省略 ",{"type":396,"tag":418,"props":510,"children":512},{"className":511},[],[513],{"type":402,"value":514},"run",{"type":396,"tag":490,"props":516,"children":517},{},[518],{"type":402,"value":519},"run 指令默认不会执行 pre 和 post 钩子函数，因为 pnpm 认为这使任务流更难理解",{"type":396,"tag":490,"props":521,"children":522},{},[523,529,531,537],{"type":396,"tag":418,"props":524,"children":526},{"className":525},[],[527],{"type":402,"value":528},"shell-emulator",{"type":402,"value":530}," 选项启用后，将使用 JS 解析指令，这使得在不兼容 POSIX 的环境执行类似 ",{"type":396,"tag":418,"props":532,"children":534},{"className":533},[],[535],{"type":402,"value":536},"NODE_ENV=test node ./index",{"type":402,"value":538}," 的指令会报错的系统也能正常运行这种指令",{"type":396,"tag":405,"props":540,"children":542},{"id":541},"pnpm-pack",[543],{"type":402,"value":544},"pnpm pack",{"type":396,"tag":412,"props":546,"children":547},{},[548],{"type":402,"value":549},"将项目打包为 tarball 压缩包（.tgz）。打包的文件范围和 pnpm publish 一样。",{"type":396,"tag":405,"props":551,"children":553},{"id":552},"shared-workspace-lockfile",[554],{"type":402,"value":552},{"type":396,"tag":412,"props":556,"children":557},{},[558],{"type":402,"value":559},"在 workspace 间共享一份 package-lock 文件。这个配置开启后，所有子包的依赖都会被提升到 workspace 根目录，这带来了几个好处：",{"type":396,"tag":486,"props":561,"children":562},{},[563,568,573],{"type":396,"tag":490,"props":564,"children":565},{},[566],{"type":402,"value":567},"所有依赖都是单例的",{"type":396,"tag":490,"props":569,"children":570},{},[571],{"type":402,"value":572},"更快的安装速度（相比 pnpm install -r）",{"type":396,"tag":490,"props":574,"children":575},{},[576],{"type":402,"value":577},"修改的文件总数更少，利于 Code Review",{"type":396,"tag":405,"props":579,"children":581},{"id":580},"pnpmfilecjs",[582],{"type":402,"value":583},".pnpmfile.cjs",{"type":396,"tag":412,"props":585,"children":586},{},[587,588,593],{"type":402,"value":416},{"type":396,"tag":418,"props":589,"children":591},{"className":590},[],[592],{"type":402,"value":583},{"type":402,"value":594}," 文件提供的 readPackage 和 afterAllResolved 钩子函数可以分别介入依赖元信息解析（minifest）和依赖安装完准备输出 lock 文件的过程。",{"type":396,"tag":464,"props":596,"children":600},{"code":597,"language":598,"meta":389,"className":599,"style":389},"function readPackage(pkg, context) {\n  // Override the manifest of foo@1.x after downloading it from the registry\n  if (pkg.name === 'foo' && pkg.version.startsWith('1.')) {\n    // Replace bar@x.x.x with bar@2.0.0\n    pkg.dependencies = {\n      ...pkg.dependencies,\n      bar: '^2.0.0'\n    }\n    context.log('bar@1 => bar@2 in dependencies of foo')\n  }\n  \n  // This will change any packages using baz@x.x.x to use baz@1.2.3\n  if (pkg.dependencies.baz) {\n    pkg.dependencies.baz = '1.2.3';\n  }\n  \n  return pkg\n}\n\nmodule.exports = {\n  hooks: {\n    readPackage\n  }\n}\n","js","language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai",[601],{"type":396,"tag":418,"props":602,"children":603},{"__ignoreMap":389},[604,654,664,773,782,809,835,863,872,912,921,930,939,981,1027,1035,1043,1057,1066,1075,1102,1119,1128,1136],{"type":396,"tag":605,"props":606,"children":609},"span",{"class":607,"line":608},"line",1,[610,616,622,628,634,639,644,649],{"type":396,"tag":605,"props":611,"children":613},{"style":612},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[614],{"type":402,"value":615},"function",{"type":396,"tag":605,"props":617,"children":619},{"style":618},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[620],{"type":402,"value":621}," readPackage",{"type":396,"tag":605,"props":623,"children":625},{"style":624},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[626],{"type":402,"value":627},"(",{"type":396,"tag":605,"props":629,"children":631},{"style":630},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[632],{"type":402,"value":633},"pkg",{"type":396,"tag":605,"props":635,"children":636},{"style":624},[637],{"type":402,"value":638},",",{"type":396,"tag":605,"props":640,"children":641},{"style":630},[642],{"type":402,"value":643}," context",{"type":396,"tag":605,"props":645,"children":646},{"style":624},[647],{"type":402,"value":648},")",{"type":396,"tag":605,"props":650,"children":651},{"style":624},[652],{"type":402,"value":653}," {\n",{"type":396,"tag":605,"props":655,"children":657},{"class":607,"line":656},2,[658],{"type":396,"tag":605,"props":659,"children":661},{"style":660},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[662],{"type":402,"value":663},"  // Override the manifest of foo@1.x after downloading it from the registry\n",{"type":396,"tag":605,"props":665,"children":667},{"class":607,"line":666},3,[668,674,680,685,690,695,701,707,713,718,723,728,732,737,741,746,750,754,759,763,768],{"type":396,"tag":605,"props":669,"children":671},{"style":670},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[672],{"type":402,"value":673},"  if",{"type":396,"tag":605,"props":675,"children":677},{"style":676},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[678],{"type":402,"value":679}," (",{"type":396,"tag":605,"props":681,"children":683},{"style":682},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[684],{"type":402,"value":633},{"type":396,"tag":605,"props":686,"children":687},{"style":624},[688],{"type":402,"value":689},".",{"type":396,"tag":605,"props":691,"children":692},{"style":682},[693],{"type":402,"value":694},"name",{"type":396,"tag":605,"props":696,"children":698},{"style":697},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[699],{"type":402,"value":700}," ===",{"type":396,"tag":605,"props":702,"children":704},{"style":703},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[705],{"type":402,"value":706}," '",{"type":396,"tag":605,"props":708,"children":710},{"style":709},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[711],{"type":402,"value":712},"foo",{"type":396,"tag":605,"props":714,"children":715},{"style":703},[716],{"type":402,"value":717},"'",{"type":396,"tag":605,"props":719,"children":720},{"style":697},[721],{"type":402,"value":722}," &&",{"type":396,"tag":605,"props":724,"children":725},{"style":682},[726],{"type":402,"value":727}," pkg",{"type":396,"tag":605,"props":729,"children":730},{"style":624},[731],{"type":402,"value":689},{"type":396,"tag":605,"props":733,"children":734},{"style":682},[735],{"type":402,"value":736},"version",{"type":396,"tag":605,"props":738,"children":739},{"style":624},[740],{"type":402,"value":689},{"type":396,"tag":605,"props":742,"children":743},{"style":618},[744],{"type":402,"value":745},"startsWith",{"type":396,"tag":605,"props":747,"children":748},{"style":676},[749],{"type":402,"value":627},{"type":396,"tag":605,"props":751,"children":752},{"style":703},[753],{"type":402,"value":717},{"type":396,"tag":605,"props":755,"children":756},{"style":709},[757],{"type":402,"value":758},"1.",{"type":396,"tag":605,"props":760,"children":761},{"style":703},[762],{"type":402,"value":717},{"type":396,"tag":605,"props":764,"children":765},{"style":676},[766],{"type":402,"value":767},")) ",{"type":396,"tag":605,"props":769,"children":770},{"style":624},[771],{"type":402,"value":772},"{\n",{"type":396,"tag":605,"props":774,"children":776},{"class":607,"line":775},4,[777],{"type":396,"tag":605,"props":778,"children":779},{"style":660},[780],{"type":402,"value":781},"    // Replace bar@x.x.x with bar@2.0.0\n",{"type":396,"tag":605,"props":783,"children":785},{"class":607,"line":784},5,[786,791,795,800,805],{"type":396,"tag":605,"props":787,"children":788},{"style":682},[789],{"type":402,"value":790},"    pkg",{"type":396,"tag":605,"props":792,"children":793},{"style":624},[794],{"type":402,"value":689},{"type":396,"tag":605,"props":796,"children":797},{"style":682},[798],{"type":402,"value":799},"dependencies",{"type":396,"tag":605,"props":801,"children":802},{"style":697},[803],{"type":402,"value":804}," =",{"type":396,"tag":605,"props":806,"children":807},{"style":624},[808],{"type":402,"value":653},{"type":396,"tag":605,"props":810,"children":812},{"class":607,"line":811},6,[813,818,822,826,830],{"type":396,"tag":605,"props":814,"children":815},{"style":697},[816],{"type":402,"value":817},"      ...",{"type":396,"tag":605,"props":819,"children":820},{"style":682},[821],{"type":402,"value":633},{"type":396,"tag":605,"props":823,"children":824},{"style":624},[825],{"type":402,"value":689},{"type":396,"tag":605,"props":827,"children":828},{"style":682},[829],{"type":402,"value":799},{"type":396,"tag":605,"props":831,"children":832},{"style":624},[833],{"type":402,"value":834},",\n",{"type":396,"tag":605,"props":836,"children":838},{"class":607,"line":837},7,[839,844,849,853,858],{"type":396,"tag":605,"props":840,"children":841},{"style":676},[842],{"type":402,"value":843},"      bar",{"type":396,"tag":605,"props":845,"children":846},{"style":624},[847],{"type":402,"value":848},":",{"type":396,"tag":605,"props":850,"children":851},{"style":703},[852],{"type":402,"value":706},{"type":396,"tag":605,"props":854,"children":855},{"style":709},[856],{"type":402,"value":857},"^2.0.0",{"type":396,"tag":605,"props":859,"children":860},{"style":703},[861],{"type":402,"value":862},"'\n",{"type":396,"tag":605,"props":864,"children":866},{"class":607,"line":865},8,[867],{"type":396,"tag":605,"props":868,"children":869},{"style":624},[870],{"type":402,"value":871},"    }\n",{"type":396,"tag":605,"props":873,"children":875},{"class":607,"line":874},9,[876,881,885,890,894,898,903,907],{"type":396,"tag":605,"props":877,"children":878},{"style":682},[879],{"type":402,"value":880},"    context",{"type":396,"tag":605,"props":882,"children":883},{"style":624},[884],{"type":402,"value":689},{"type":396,"tag":605,"props":886,"children":887},{"style":618},[888],{"type":402,"value":889},"log",{"type":396,"tag":605,"props":891,"children":892},{"style":676},[893],{"type":402,"value":627},{"type":396,"tag":605,"props":895,"children":896},{"style":703},[897],{"type":402,"value":717},{"type":396,"tag":605,"props":899,"children":900},{"style":709},[901],{"type":402,"value":902},"bar@1 => bar@2 in dependencies of foo",{"type":396,"tag":605,"props":904,"children":905},{"style":703},[906],{"type":402,"value":717},{"type":396,"tag":605,"props":908,"children":909},{"style":676},[910],{"type":402,"value":911},")\n",{"type":396,"tag":605,"props":913,"children":915},{"class":607,"line":914},10,[916],{"type":396,"tag":605,"props":917,"children":918},{"style":624},[919],{"type":402,"value":920},"  }\n",{"type":396,"tag":605,"props":922,"children":924},{"class":607,"line":923},11,[925],{"type":396,"tag":605,"props":926,"children":927},{"style":676},[928],{"type":402,"value":929},"  \n",{"type":396,"tag":605,"props":931,"children":933},{"class":607,"line":932},12,[934],{"type":396,"tag":605,"props":935,"children":936},{"style":660},[937],{"type":402,"value":938},"  // This will change any packages using baz@x.x.x to use baz@1.2.3\n",{"type":396,"tag":605,"props":940,"children":942},{"class":607,"line":941},13,[943,947,951,955,959,963,967,972,977],{"type":396,"tag":605,"props":944,"children":945},{"style":670},[946],{"type":402,"value":673},{"type":396,"tag":605,"props":948,"children":949},{"style":676},[950],{"type":402,"value":679},{"type":396,"tag":605,"props":952,"children":953},{"style":682},[954],{"type":402,"value":633},{"type":396,"tag":605,"props":956,"children":957},{"style":624},[958],{"type":402,"value":689},{"type":396,"tag":605,"props":960,"children":961},{"style":682},[962],{"type":402,"value":799},{"type":396,"tag":605,"props":964,"children":965},{"style":624},[966],{"type":402,"value":689},{"type":396,"tag":605,"props":968,"children":969},{"style":682},[970],{"type":402,"value":971},"baz",{"type":396,"tag":605,"props":973,"children":974},{"style":676},[975],{"type":402,"value":976},") ",{"type":396,"tag":605,"props":978,"children":979},{"style":624},[980],{"type":402,"value":772},{"type":396,"tag":605,"props":982,"children":984},{"class":607,"line":983},14,[985,989,993,997,1001,1005,1009,1013,1018,1022],{"type":396,"tag":605,"props":986,"children":987},{"style":682},[988],{"type":402,"value":790},{"type":396,"tag":605,"props":990,"children":991},{"style":624},[992],{"type":402,"value":689},{"type":396,"tag":605,"props":994,"children":995},{"style":682},[996],{"type":402,"value":799},{"type":396,"tag":605,"props":998,"children":999},{"style":624},[1000],{"type":402,"value":689},{"type":396,"tag":605,"props":1002,"children":1003},{"style":682},[1004],{"type":402,"value":971},{"type":396,"tag":605,"props":1006,"children":1007},{"style":697},[1008],{"type":402,"value":804},{"type":396,"tag":605,"props":1010,"children":1011},{"style":703},[1012],{"type":402,"value":706},{"type":396,"tag":605,"props":1014,"children":1015},{"style":709},[1016],{"type":402,"value":1017},"1.2.3",{"type":396,"tag":605,"props":1019,"children":1020},{"style":703},[1021],{"type":402,"value":717},{"type":396,"tag":605,"props":1023,"children":1024},{"style":624},[1025],{"type":402,"value":1026},";\n",{"type":396,"tag":605,"props":1028,"children":1030},{"class":607,"line":1029},15,[1031],{"type":396,"tag":605,"props":1032,"children":1033},{"style":624},[1034],{"type":402,"value":920},{"type":396,"tag":605,"props":1036,"children":1038},{"class":607,"line":1037},16,[1039],{"type":396,"tag":605,"props":1040,"children":1041},{"style":676},[1042],{"type":402,"value":929},{"type":396,"tag":605,"props":1044,"children":1046},{"class":607,"line":1045},17,[1047,1052],{"type":396,"tag":605,"props":1048,"children":1049},{"style":670},[1050],{"type":402,"value":1051},"  return",{"type":396,"tag":605,"props":1053,"children":1054},{"style":682},[1055],{"type":402,"value":1056}," pkg\n",{"type":396,"tag":605,"props":1058,"children":1060},{"class":607,"line":1059},18,[1061],{"type":396,"tag":605,"props":1062,"children":1063},{"style":624},[1064],{"type":402,"value":1065},"}\n",{"type":396,"tag":605,"props":1067,"children":1069},{"class":607,"line":1068},19,[1070],{"type":396,"tag":605,"props":1071,"children":1072},{"emptyLinePlaceholder":388},[1073],{"type":402,"value":1074},"\n",{"type":396,"tag":605,"props":1076,"children":1078},{"class":607,"line":1077},20,[1079,1085,1089,1094,1098],{"type":396,"tag":605,"props":1080,"children":1082},{"style":1081},"--shiki-light:#39ADB5;--shiki-light-font-style:inherit;--shiki-default:#005CC5;--shiki-default-font-style:inherit;--shiki-dark:#79B8FF;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[1083],{"type":402,"value":1084},"module",{"type":396,"tag":605,"props":1086,"children":1087},{"style":624},[1088],{"type":402,"value":689},{"type":396,"tag":605,"props":1090,"children":1091},{"style":1081},[1092],{"type":402,"value":1093},"exports",{"type":396,"tag":605,"props":1095,"children":1096},{"style":697},[1097],{"type":402,"value":804},{"type":396,"tag":605,"props":1099,"children":1100},{"style":624},[1101],{"type":402,"value":653},{"type":396,"tag":605,"props":1103,"children":1105},{"class":607,"line":1104},21,[1106,1111,1115],{"type":396,"tag":605,"props":1107,"children":1108},{"style":676},[1109],{"type":402,"value":1110},"  hooks",{"type":396,"tag":605,"props":1112,"children":1113},{"style":624},[1114],{"type":402,"value":848},{"type":396,"tag":605,"props":1116,"children":1117},{"style":624},[1118],{"type":402,"value":653},{"type":396,"tag":605,"props":1120,"children":1122},{"class":607,"line":1121},22,[1123],{"type":396,"tag":605,"props":1124,"children":1125},{"style":682},[1126],{"type":402,"value":1127},"    readPackage\n",{"type":396,"tag":605,"props":1129,"children":1131},{"class":607,"line":1130},23,[1132],{"type":396,"tag":605,"props":1133,"children":1134},{"style":624},[1135],{"type":402,"value":920},{"type":396,"tag":605,"props":1137,"children":1139},{"class":607,"line":1138},24,[1140],{"type":396,"tag":605,"props":1141,"children":1142},{"style":624},[1143],{"type":402,"value":1065},{"type":396,"tag":412,"props":1145,"children":1146},{},[1147,1149],{"type":402,"value":1148},"见：",{"type":396,"tag":1150,"props":1151,"children":1155},"a",{"href":1152,"rel":1153},"https://pnpm.io/pnpmfile",[1154],"nofollow",[1156],{"type":402,"value":1157},"pnpmfile",{"type":396,"tag":397,"props":1159,"children":1161},{"id":1160},"原理",[1162],{"type":402,"value":1160},{"type":396,"tag":405,"props":1164,"children":1166},{"id":1165},"显著的优点",[1167],{"type":402,"value":1168},"显著的优点？",{"type":396,"tag":486,"props":1170,"children":1171},{},[1172,1177,1182,1195],{"type":396,"tag":490,"props":1173,"children":1174},{},[1175],{"type":402,"value":1176},"省磁盘空间，使用软硬链接和符号链接节约空间。",{"type":396,"tag":490,"props":1178,"children":1179},{},[1180],{"type":402,"value":1181},"安装依赖快，因为处理链接要比处理文件快，并且每个包的解析、下载和写入磁盘这三个阶段是分离的。",{"type":396,"tag":490,"props":1183,"children":1184},{},[1185,1187,1193],{"type":402,"value":1186},"内建支持 monorepo，所有命令支持 ",{"type":396,"tag":418,"props":1188,"children":1190},{"className":1189},[],[1191],{"type":402,"value":1192},"--filter",{"type":402,"value":1194}," 过滤包。",{"type":396,"tag":490,"props":1196,"children":1197},{},[1198],{"type":402,"value":1199},"依赖严格，避免幽灵依赖和依赖分身问题。",{"type":396,"tag":405,"props":1201,"children":1203},{"id":1202},"依赖的层次结构是怎样的",[1204],{"type":402,"value":1205},"依赖的层次结构是怎样的？",{"type":396,"tag":412,"props":1207,"children":1208},{},[1209,1211,1217,1219,1225,1227,1233,1235,1241,1243,1248,1250,1255,1257,1262,1264,1270,1272,1277,1279,1285],{"type":402,"value":1210},"当项目文件读取 ",{"type":396,"tag":418,"props":1212,"children":1214},{"className":1213},[],[1215],{"type":402,"value":1216},"bar",{"type":402,"value":1218}," 时，直接读取 ",{"type":396,"tag":418,"props":1220,"children":1222},{"className":1221},[],[1223],{"type":402,"value":1224},"node_modules/bar",{"type":402,"value":1226},"，但它其实是 ",{"type":396,"tag":418,"props":1228,"children":1230},{"className":1229},[],[1231],{"type":402,"value":1232},".pnpm",{"type":402,"value":1234}," 文件夹下 ",{"type":396,"tag":418,"props":1236,"children":1238},{"className":1237},[],[1239],{"type":402,"value":1240},"bar/node_modules/bar",{"type":402,"value":1242}," 的一个符号链接。也就是说，他的真实的地址在 ",{"type":396,"tag":418,"props":1244,"children":1246},{"className":1245},[],[1247],{"type":402,"value":1232},{"type":402,"value":1249}," 文件夹下。这样一来，当 ",{"type":396,"tag":418,"props":1251,"children":1253},{"className":1252},[],[1254],{"type":402,"value":1216},{"type":402,"value":1256}," 读取它的依赖的时候（项目的依赖的依赖），会在 ",{"type":396,"tag":418,"props":1258,"children":1260},{"className":1259},[],[1261],{"type":402,"value":1216},{"type":402,"value":1263}," 的上层目录即 ",{"type":396,"tag":418,"props":1265,"children":1267},{"className":1266},[],[1268],{"type":402,"value":1269},"bar/node_modules",{"type":402,"value":1271}," 找到 ",{"type":396,"tag":418,"props":1273,"children":1275},{"className":1274},[],[1276],{"type":402,"value":712},{"type":402,"value":1278}," 这个依赖。项目文件没法读取 ",{"type":396,"tag":418,"props":1280,"children":1282},{"className":1281},[],[1283],{"type":402,"value":1284},"bar/node_modules/foo",{"type":402,"value":1286}," 所以避免了幽灵依赖问题。",{"type":396,"tag":412,"props":1288,"children":1289},{},[1290,1295,1297,1303,1305,1310,1312,1318],{"type":396,"tag":418,"props":1291,"children":1293},{"className":1292},[],[1294],{"type":402,"value":1284},{"type":402,"value":1296}," 要怎么找到它的依赖呢？它的真实地址在项目 ·（和官网的图有出入），所以 foo 也只能读取它自己的子依赖，即 ",{"type":396,"tag":418,"props":1298,"children":1300},{"className":1299},[],[1301],{"type":402,"value":1302},"node_modules/.pnpm/foo/node_modules",{"type":402,"value":1304},"。如果有依赖依赖了同一份（同一版本）的 ",{"type":396,"tag":418,"props":1306,"children":1308},{"className":1307},[],[1309],{"type":402,"value":712},{"type":402,"value":1311},"，那么它们的真实地址都是一样的 ",{"type":396,"tag":418,"props":1313,"children":1315},{"className":1314},[],[1316],{"type":402,"value":1317},"node_modules/.pnpm/foo/node_modules/foo",{"type":402,"value":1319},"，这样就避免依赖分身问题。",{"type":396,"tag":412,"props":1321,"children":1322},{},[1323],{"type":396,"tag":1324,"props":1325,"children":1328},"img",{"alt":1326,"src":1327},"Modules Mapping in pnpm","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220317192927.png",[],{"type":396,"tag":412,"props":1330,"children":1331},{},[1332,1333,1340,1342],{"type":402,"value":1148},{"type":396,"tag":1150,"props":1334,"children":1337},{"href":1335,"rel":1336},"https://pnpm.io/blog/2020/05/27/flat-node-modules-is-not-the-only-way",[1154],[1338],{"type":402,"value":1339},"Flat node_modules is not the only way | @pnpm",{"type":402,"value":1341},"、",{"type":396,"tag":1150,"props":1343,"children":1346},{"href":1344,"rel":1345},"https://pnpm.io/symlinked-node-modules-structure",[1154],[1347],{"type":402,"value":1348},"Symlinked node_modules structure | @pnpm",{"type":396,"tag":405,"props":1350,"children":1352},{"id":1351},"如何处理同级依赖",[1353],{"type":402,"value":1354},"如何处理同级依赖？",{"type":396,"tag":412,"props":1356,"children":1357},{},[1358,1360,1366,1368,1374,1376,1382,1384,1390,1392,1398,1399,1405],{"type":402,"value":1359},"当项目的两个包 A、B 依赖依赖了同一版本的 C，但是却安装了不同版本的 C 的同级依赖 D@1.0 和 D@1.1，这时，A 依赖的 C 的真实地址是 ",{"type":396,"tag":418,"props":1361,"children":1363},{"className":1362},[],[1364],{"type":402,"value":1365},".pnpm/C_D@1.0/node_modules/C",{"type":402,"value":1367},"，B 依赖的 C 的真实地址是 ",{"type":396,"tag":418,"props":1369,"children":1371},{"className":1370},[],[1372],{"type":402,"value":1373},".pnpm/C_D@1.1/node_modules/C",{"type":402,"value":1375},"。这样一来，两个 C 在读取其同级依赖时，分别读取了 ",{"type":396,"tag":418,"props":1377,"children":1379},{"className":1378},[],[1380],{"type":402,"value":1381},".pnpm/C_D@1.0/node_modules/D",{"type":402,"value":1383}," 和 ",{"type":396,"tag":418,"props":1385,"children":1387},{"className":1386},[],[1388],{"type":402,"value":1389},".pnpm/C_D@1.1/node_modules/D@1.0",{"type":402,"value":1391},"，分别对应真实地址 ",{"type":396,"tag":418,"props":1393,"children":1395},{"className":1394},[],[1396],{"type":402,"value":1397},".pnpm/D@1.0/node_modules/D",{"type":402,"value":1383},{"type":396,"tag":418,"props":1400,"children":1402},{"className":1401},[],[1403],{"type":402,"value":1404},".pnpm/D@1.1/node_modules/D",{"type":402,"value":1406},"。",{"type":396,"tag":412,"props":1408,"children":1409},{},[1410,1412,1418,1419,1425,1427,1433,1434,1439,1441,1447],{"type":402,"value":1411},"当同级依赖的深度增加时，层级结构也随之变得复杂。如果某个依赖 A 依赖了同一个 B，但是 B 子依赖 C 的版本不同（C@1.0 和 C@1.1），这样就创造出了指数级增长的软链数量。为了保证 B 能分别访问两个 C，B 的符号链接的被链接地址会有 ",{"type":396,"tag":418,"props":1413,"children":1415},{"className":1414},[],[1416],{"type":402,"value":1417},".pnpm/B_C@1.0/node_modules/B",{"type":402,"value":1383},{"type":396,"tag":418,"props":1420,"children":1422},{"className":1421},[],[1423],{"type":402,"value":1424},".pnpm/B_C@1.1/node_modules/B",{"type":402,"value":1426},"，而为此，A 的被链接地址也会有两个，",{"type":396,"tag":418,"props":1428,"children":1430},{"className":1429},[],[1431],{"type":402,"value":1432},".pnpm/A_C@1.0/node_modules/A",{"type":402,"value":1383},{"type":396,"tag":418,"props":1435,"children":1437},{"className":1436},[],[1438],{"type":402,"value":1432},{"type":402,"value":1440},"。从不同的 A 的被链接地址的上级目录 ",{"type":396,"tag":418,"props":1442,"children":1444},{"className":1443},[],[1445],{"type":402,"value":1446},"node_modules",{"type":402,"value":1448}," 可以读取到不同的 B 的被链目录，从不同的 B 可以读取到不同的 C。",{"type":396,"tag":464,"props":1450,"children":1453},{"code":1451,"language":402,"meta":389,"className":1452},"node_modules\n└── .pnpm\n    ├── a@1.0.0_c@1.0.0\n    │   └── node_modules\n    │       ├── a\n    │       └── b -> ../../b@1.0.0_c@1.0.0/node_modules/b\n    ├── a@1.0.0_c@1.1.0\n    │   └── node_modules\n    │       ├── a\n    │       └── b -> ../../b@1.0.0_c@1.1.0/node_modules/b\n    ├── b@1.0.0_c@1.0.0\n    │   └── node_modules\n    │       ├── b\n    │       └── c -> ../../c@1.0.0/node_modules/c\n    ├── b@1.0.0_c@1.1.0\n    │   └── node_modules\n    │       ├── b\n    │       └── c -> ../../c@1.1.0/node_modules/c\n    ├── c@1.0.0\n    ├── c@1.1.0\n",[468],[1454],{"type":396,"tag":418,"props":1455,"children":1456},{"__ignoreMap":389},[1457],{"type":402,"value":1451},{"type":396,"tag":412,"props":1459,"children":1460},{},[1461,1462],{"type":402,"value":1148},{"type":396,"tag":1150,"props":1463,"children":1466},{"href":1464,"rel":1465},"https://pnpm.io/how-peers-are-resolved",[1154],[1467],{"type":402,"value":1468},"How peers are resolved | @pnpm",{"type":396,"tag":405,"props":1470,"children":1472},{"id":1471},"怎样兼容-nodejs-模块加载顺序",[1473],{"type":402,"value":1474},"怎样兼容 NodeJS 模块加载顺序？",{"type":396,"tag":412,"props":1476,"children":1477},{},[1478],{"type":402,"value":1479},"不论系统自带的模块，NodeJS 加载模块的顺序是这样的：",{"type":396,"tag":486,"props":1481,"children":1482},{},[1483,1488,1493,1498],{"type":396,"tag":490,"props":1484,"children":1485},{},[1486],{"type":402,"value":1487},"读取本文件夹中 node_modules 中对应名字的文件夹的 package.json，并寻找 main 字段对应的路径",{"type":396,"tag":490,"props":1489,"children":1490},{},[1491],{"type":402,"value":1492},"读取本文件夹中 node_modules 中对应名字的 js 文件",{"type":396,"tag":490,"props":1494,"children":1495},{},[1496],{"type":402,"value":1497},"读取本文件夹中 node_modules 中对应名字文件夹中的 index.js 文件",{"type":396,"tag":490,"props":1499,"children":1500},{},[1501],{"type":402,"value":1502},"跳出本文件夹，继续前三个步骤",{"type":396,"tag":412,"props":1504,"children":1505},{},[1506,1508,1513,1515,1521,1523,1529,1531,1536,1538,1544,1546,1552],{"type":402,"value":1507},"因为项目 ",{"type":396,"tag":418,"props":1509,"children":1511},{"className":1510},[],[1512],{"type":402,"value":1224},{"type":402,"value":1514}," 是 ",{"type":396,"tag":418,"props":1516,"children":1518},{"className":1517},[],[1519],{"type":402,"value":1520},".pnpm/bar/node_modules/bar",{"type":402,"value":1522}," 的符号链接，所以项目文件可以直接读取 ",{"type":396,"tag":418,"props":1524,"children":1526},{"className":1525},[],[1527],{"type":402,"value":1528},"node_modules/bar/x.js",{"type":402,"value":1530},"。同时，如果 ",{"type":396,"tag":418,"props":1532,"children":1534},{"className":1533},[],[1535],{"type":402,"value":1528},{"type":402,"value":1537}," 需要加载 ",{"type":396,"tag":418,"props":1539,"children":1541},{"className":1540},[],[1542],{"type":402,"value":1543},"foo/x.js",{"type":402,"value":1545},"，那么在上述步骤的第 4 步，就能找到 ",{"type":396,"tag":418,"props":1547,"children":1549},{"className":1548},[],[1550],{"type":402,"value":1551},".pnpm/bar/node_modules/foo/x.js",{"type":402,"value":1553}," 文件。",{"type":396,"tag":405,"props":1555,"children":1557},{"id":1556},"为什么其模块层次只是比较严格的semistrict",[1558],{"type":402,"value":1559},"为什么其模块层次只是“比较严格的”（semistrict）？",{"type":396,"tag":412,"props":1561,"children":1562},{},[1563],{"type":402,"value":1564},"由 NodeJS 模块加载规则可知，在 pnpm 创造的依赖层次下，一个依赖的子依赖间仍有相互访问的能力。",{"type":396,"tag":405,"props":1566,"children":1568},{"id":1567},"为什么能节约磁盘空间",[1569],{"type":402,"value":1570},"为什么能节约磁盘空间？",{"type":396,"tag":412,"props":1572,"children":1573},{},[1574,1576,1582,1584,1590,1592,1598],{"type":402,"value":1575},"由 pnpm 创造的 node_modules 层级结构可以知道，所有依赖的符号链接的真实地址都在 ",{"type":396,"tag":418,"props":1577,"children":1579},{"className":1578},[],[1580],{"type":402,"value":1581},".pnpm/package-name/node_modules/package-name",{"type":402,"value":1583}," 这个文件夹中。这种文件夹会通过硬链接的形式链接到 ",{"type":396,"tag":418,"props":1585,"children":1587},{"className":1586},[],[1588],{"type":402,"value":1589},"user-document/.pnpm-store",{"type":402,"value":1591}," 中，所以相同的包只会存一份，也就是 ",{"type":396,"tag":418,"props":1593,"children":1595},{"className":1594},[],[1596],{"type":402,"value":1597},".pnpm-store/package-name",{"type":402,"value":1406},{"type":396,"tag":405,"props":1600,"children":1602},{"id":1601},"软硬链接有什么问题",[1603],{"type":402,"value":1604},"软硬链接有什么问题？",{"type":396,"tag":1606,"props":1607,"children":1608},"ul",{},[1609,1614,1619,1624],{"type":396,"tag":490,"props":1610,"children":1611},{},[1612],{"type":402,"value":1613},"特定的软链结构会导致某些应用出现死循环",{"type":396,"tag":490,"props":1615,"children":1616},{},[1617],{"type":402,"value":1618},"硬链接是同一份文件，不便调试",{"type":396,"tag":490,"props":1620,"children":1621},{},[1622],{"type":402,"value":1623},"软链接在非 SSD 上的读写会有性能损耗",{"type":396,"tag":490,"props":1625,"children":1626},{},[1627],{"type":402,"value":1628},"pnpm 创造的 node_modules 层级结构会破坏某些依赖依赖了相对路径的依赖的逻辑",{"type":396,"tag":412,"props":1630,"children":1631},{},[1632,1633],{"type":402,"value":1148},{"type":396,"tag":1150,"props":1634,"children":1637},{"href":1635,"rel":1636},"https://zhuanlan.zhihu.com/p/553804414",[1154],[1638],{"type":402,"value":1639},"精读 pnpm",{"type":396,"tag":397,"props":1641,"children":1643},{"id":1642},"常见问题",[1644],{"type":402,"value":1642},{"type":396,"tag":405,"props":1646,"children":1648},{"id":1647},"pnpm-找不到全局路径的解决方法",[1649],{"type":402,"value":1650},"PNPM 找不到全局路径的解决方法？",{"type":396,"tag":412,"props":1652,"children":1653},{},[1654],{"type":402,"value":1655},"尽管设置了全局变量，也重新安装了最新版本 PNPM，也执行了 pnpm setup，却仍然报错找不到全局路径的临时解决方案：",{"type":396,"tag":464,"props":1657,"children":1661},{"code":1658,"language":1659,"meta":389,"className":1660,"style":389},"$PNPM_HOME=\"\u003Cpath>\" | pnpm install -g xxx\n","powershell","language-powershell shiki shiki-themes material-theme-lighter github-light github-dark monokai",[1662],{"type":396,"tag":418,"props":1663,"children":1664},{"__ignoreMap":389},[1665],{"type":396,"tag":605,"props":1666,"children":1667},{"class":607,"line":608},[1668,1673,1678,1683,1688,1693,1697,1702,1707,1712],{"type":396,"tag":605,"props":1669,"children":1670},{"style":624},[1671],{"type":402,"value":1672},"$",{"type":396,"tag":605,"props":1674,"children":1675},{"style":682},[1676],{"type":402,"value":1677},"PNPM_HOME",{"type":396,"tag":605,"props":1679,"children":1680},{"style":697},[1681],{"type":402,"value":1682},"=",{"type":396,"tag":605,"props":1684,"children":1685},{"style":703},[1686],{"type":402,"value":1687},"\"",{"type":396,"tag":605,"props":1689,"children":1690},{"style":709},[1691],{"type":402,"value":1692},"\u003Cpath>",{"type":396,"tag":605,"props":1694,"children":1695},{"style":703},[1696],{"type":402,"value":1687},{"type":396,"tag":605,"props":1698,"children":1699},{"style":697},[1700],{"type":402,"value":1701}," |",{"type":396,"tag":605,"props":1703,"children":1704},{"style":682},[1705],{"type":402,"value":1706}," pnpm install ",{"type":396,"tag":605,"props":1708,"children":1709},{"style":697},[1710],{"type":402,"value":1711},"-",{"type":396,"tag":605,"props":1713,"children":1714},{"style":682},[1715],{"type":402,"value":1716},"g xxx\n",{"type":396,"tag":405,"props":1718,"children":1720},{"id":1719},"pnpm-速度变慢了",[1721],{"type":402,"value":1722},"PNPM 速度变慢了？",{"type":396,"tag":412,"props":1724,"children":1725},{},[1726],{"type":402,"value":1727},"今天逛官网时，偶然发现 Readme 中的 benchmark 过时了。它说“要比 Yarn Classic 和 npm “快两倍以上，但是从 benchmark 来看，他要比 Yarn 和 npm 慢了不少。以后启用 NodeJS 20 以上时，如果问题得不到改善，我应该会重新选择 npm 而不是 pnpm，鉴于幽灵依赖和依赖分身带来的问题是可排查可解决的，而速度是解决不了的问题。",{"type":396,"tag":412,"props":1729,"children":1730},{},[1731],{"type":396,"tag":1324,"props":1732,"children":1735},{"alt":1733,"src":1734},"pnpm vs npm vs yarn benchmark","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20230605235736.png",[],{"type":396,"tag":412,"props":1737,"children":1738},{},[1739,1741],{"type":402,"value":1740},"相关见：",{"type":396,"tag":1150,"props":1742,"children":1745},{"href":1743,"rel":1744},"https://github.com/pnpm/pnpm/issues/6447",[1154],[1746],{"type":402,"value":1747},"pnpm seems to be consistently slower than yarn (classic)",{"type":396,"tag":405,"props":1749,"children":1751},{"id":1750},"和-bun-在安装速度上的对比",[1752],{"type":402,"value":1753},"和 Bun 在安装速度上的对比？",{"type":396,"tag":412,"props":1755,"children":1756},{},[1757],{"type":402,"value":1758},"有锁文件、本地缓存，无 node_modules 的情况下，bun 要比 pnpm 安装至少快 3 倍。",{"type":396,"tag":1606,"props":1760,"children":1761},{},[1762,1767],{"type":396,"tag":490,"props":1763,"children":1764},{},[1765],{"type":402,"value":1766},"一个原因是 pnpm、yarn 等工具会在安装时请求最新的 metadata，而 bun 使用的 metadata 源于本地缓存的 metadata。",{"type":396,"tag":490,"props":1768,"children":1769},{},[1770],{"type":402,"value":1771},"另一个原因是 pnpm 在创建 node_modules 层次结构是使用了大量的 symlink，相比其他包管理工具仅使用复制或 hardlink 有更多系统调用。",{"type":396,"tag":412,"props":1773,"children":1774},{},[1775],{"type":402,"value":1776},"所以如果想使 pnpm 更快的安装，可以使用 prefer-offline 选项，以及，node-linker=hoisted 也许有用。",{"type":396,"tag":412,"props":1778,"children":1779},{},[1780,1781],{"type":402,"value":1148},{"type":396,"tag":1150,"props":1782,"children":1785},{"href":1783,"rel":1784},"https://github.com/pnpm/pnpm/issues/7391",[1154],[1786],{"type":402,"value":1787},"Bun.sh-like Module Resolution",{"type":396,"tag":405,"props":1789,"children":1791},{"id":1790},"关于-v8-版本的变化",[1792],{"type":402,"value":1793},"关于 V8 版本的变化？",{"type":396,"tag":1606,"props":1795,"children":1796},{},[1797,1816,1832,1843,1848,1853,1858],{"type":396,"tag":490,"props":1798,"children":1799},{},[1800,1806,1808,1814],{"type":396,"tag":418,"props":1801,"children":1803},{"className":1802},[],[1804],{"type":402,"value":1805},"resolve-peers-from-workspace-root",{"type":402,"value":1807}," is ",{"type":396,"tag":418,"props":1809,"children":1811},{"className":1810},[],[1812],{"type":402,"value":1813},"true",{"type":402,"value":1815}," by default",{"type":396,"tag":490,"props":1817,"children":1818},{},[1819,1825,1826,1831],{"type":396,"tag":418,"props":1820,"children":1822},{"className":1821},[],[1823],{"type":402,"value":1824},"auto-install-peers",{"type":402,"value":1807},{"type":396,"tag":418,"props":1827,"children":1829},{"className":1828},[],[1830],{"type":402,"value":1813},{"type":402,"value":1815},{"type":396,"tag":490,"props":1833,"children":1834},{},[1835,1841],{"type":396,"tag":418,"props":1836,"children":1838},{"className":1837},[],[1839],{"type":402,"value":1840},"dedupe-peer-dependents",{"type":402,"value":1842}," set to true by default",{"type":396,"tag":490,"props":1844,"children":1845},{},[1846],{"type":402,"value":1847},"停止 NodeJS 14 的支持",{"type":396,"tag":490,"props":1849,"children":1850},{},[1851],{"type":402,"value":1852},"lockfile v6 by default",{"type":396,"tag":490,"props":1854,"children":1855},{},[1856],{"type":402,"value":1857},"resolution mode（prebundle、time-based、lowest-direct）default set to lowest-based，需要注意手动升级，尤其是在没有锁文件的情况",{"type":396,"tag":490,"props":1859,"children":1860},{},[1861,1863,1869],{"type":402,"value":1862},"only deply ",{"type":396,"tag":418,"props":1864,"children":1866},{"className":1865},[],[1867],{"type":402,"value":1868},"files",{"type":402,"value":1870}," field when the field exist",{"type":396,"tag":405,"props":1872,"children":1874},{"id":1873},"pnp-模式下的依赖提升设置",[1875],{"type":402,"value":1876},"PnP 模式下的依赖提升设置？",{"type":396,"tag":412,"props":1878,"children":1879},{},[1880,1882,1888],{"type":402,"value":1881},"默认的 node_modules 依赖的层级处于严格和不严格之间的水平（semi-strict）。使用最严格的设置需要打开 PnP 模式，因为在 monorepo 中 PnP 模式中，就算开启了 ",{"type":396,"tag":418,"props":1883,"children":1885},{"className":1884},[],[1886],{"type":402,"value":1887},"hoist=false",{"type":402,"value":1889}," 也不会禁用 workspace root 的依赖",{"type":396,"tag":464,"props":1891,"children":1893},{"code":1892},"node-linker=pnp\nsymlink=false\n",[1894],{"type":396,"tag":418,"props":1895,"children":1896},{"__ignoreMap":389},[1897],{"type":402,"value":1892},{"type":396,"tag":412,"props":1899,"children":1900},{},[1901,1902],{"type":402,"value":1148},{"type":396,"tag":1150,"props":1903,"children":1906},{"href":1904,"rel":1905},"https://pnpm.io/blog/2020/10/17/node-modules-configuration-options-with-pnpm",[1154],[1907],{"type":402,"value":1908},"Node-Modules configuration options with pnpm",{"type":396,"tag":405,"props":1910,"children":1912},{"id":1911},"在-windows-dev-driver-上可能会碰到的问题",[1913],{"type":402,"value":1914},"在 Windows Dev Driver 上可能会碰到的问题？",{"type":396,"tag":412,"props":1916,"children":1917},{},[1918],{"type":402,"value":1919},"2024 年初 pnpm 实现了 Dev Driver 上的 Copy on Write 功能，但可能会碰到变慢的问题。",{"type":396,"tag":412,"props":1921,"children":1922},{},[1923,1924],{"type":402,"value":1148},{"type":396,"tag":1150,"props":1925,"children":1928},{"href":1926,"rel":1927},"https://github.com/pnpm/pnpm/issues/7547",[1154],[1929],{"type":402,"value":1930},"pnpm lately slow and pnpx stuck at installing deps using executable package",{"type":396,"tag":1932,"props":1933,"children":1934},"style",{},[1935],{"type":402,"value":1936},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":389,"searchDepth":656,"depth":656,"links":1938},[1939,1940,1941],{"id":399,"depth":656,"text":403},{"id":1160,"depth":656,"text":1160},{"id":1642,"depth":656,"text":1642},"markdown","content:6.maps:_workflow:package-manager:pnpm.md","content","6.maps/_workflow/package-manager/pnpm.md","6.maps/_workflow/package-manager/pnpm","md",[1949,1953],{"_path":1950,"title":1951,"description":1952},"/maps/_workflow/package-manager/npm","NPM","NPM 包管理器完整指南，包含 package.json 配置、镜像源管理、依赖安装等核心功能的详细说明。",{"_path":1954,"title":1955,"description":1956},"/maps/_workflow/packer","打包工具","前端打包工具全景图，涵盖 Vite、Webpack、Rollup、tsup、Unbuild、Rome 等主流工具的特性对比和使用说明。",1742040374040]