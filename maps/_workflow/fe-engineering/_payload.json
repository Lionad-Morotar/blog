[{"data":1,"prerenderedAt":423},["ShallowReactive",2],{"navigation":3,"/maps/_workflow/fe-engineering":161,"/maps/_workflow/fe-engineering-surround":414},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":408,"_id":409,"_source":410,"_file":411,"_stem":412,"_extension":413},"/maps/_workflow/fe-engineering","_workflow",false,true,"","前端工程化","前端工程化的最佳实践和工具，帮助提升开发效率和代码质量",{"type":170,"children":171,"toc":405},"root",[172,181,187,192,237,243,248,257,271,279,307,315,348,356,374,382],{"type":173,"tag":174,"props":175,"children":177},"element","h4",{"id":176},"什么是软件工程",[178],{"type":179,"value":180},"text","什么是软件工程？",{"type":173,"tag":182,"props":183,"children":184},"p",{},[185],{"type":179,"value":186},"软件工程是指在软件开发过程中，应用工程化的原则和方法，以提高软件质量、降低开发成本、缩短开发周期为目标的一门学科。它涵盖是一个涵盖需求、设计、实现、测试、部署、运维、管理和持续改进的完整闭环体系，贯穿软件从“想法”到“产品”再到“持续运营”的全部过程。每一环节都有专业的方法、流程和工具保障交付的高质高效。",{"type":173,"tag":182,"props":188,"children":189},{},[190],{"type":179,"value":191},"当然可以，以下是用简洁 list 形式概括的软件工程主要内容：",{"type":173,"tag":193,"props":194,"children":195},"ol",{},[196,202,207,212,217,222,227,232],{"type":173,"tag":197,"props":198,"children":199},"li",{},[200],{"type":179,"value":201},"需求分析：调研与获取需求，建模并形成需求规格说明书。",{"type":173,"tag":197,"props":203,"children":204},{},[205],{"type":179,"value":206},"系统设计：设计系统架构，划分模块，设计数据库和接口，输出设计文档。",{"type":173,"tag":197,"props":208,"children":209},{},[210],{"type":179,"value":211},"编码实现：按规范开发模块，代码审查，执行单元测试。",{"type":173,"tag":197,"props":213,"children":214},{},[215],{"type":179,"value":216},"软件测试：开展单元、集成、系统、验收及自动化测试，确保质量。",{"type":173,"tag":197,"props":218,"children":219},{},[220],{"type":179,"value":221},"部署运维：进行CI/CD、配置管理、监控、日志分析和故障恢复，保障系统稳定。",{"type":173,"tag":197,"props":223,"children":224},{},[225],{"type":179,"value":226},"项目管理：管理进度、范围、成本、风险、团队与质量，确保高效协作与交付。",{"type":173,"tag":197,"props":228,"children":229},{},[230],{"type":179,"value":231},"文档与配置管理：完善各类文档，进行版本控制和配置项管理，保证可追溯性与一致性。",{"type":173,"tag":197,"props":233,"children":234},{},[235],{"type":179,"value":236},"过程改进：评估与优化流程，推广自动化工具，持续提升开发效率和软件质量。",{"type":173,"tag":174,"props":238,"children":240},{"id":239},"什么是前端工程化",[241],{"type":179,"value":242},"什么是前端工程化？",{"type":173,"tag":182,"props":244,"children":245},{},[246],{"type":179,"value":247},"前端工程化可以从软件工程借鉴部分定义，泛指将自动化、标准化、流程化等工程领域思想应用于前端开发全过程，以达到提升开发效率、提高代码质量与可维护性、协同团队合作的目的。",{"type":173,"tag":182,"props":249,"children":250},{},[251],{"type":173,"tag":252,"props":253,"children":254},"strong",{},[255],{"type":179,"value":256},"代码规范",{"type":173,"tag":258,"props":259,"children":260},"ul",{},[261,266],{"type":173,"tag":197,"props":262,"children":263},{},[264],{"type":179,"value":265},"代码规范：通过 ESLint 等工具，统一代码风格，减少低级错误。",{"type":173,"tag":197,"props":267,"children":268},{},[269],{"type":179,"value":270},"代码片段：借助 Snippets 或脚本创建代码模版，减少重复性编码工作。",{"type":173,"tag":182,"props":272,"children":273},{},[274],{"type":173,"tag":252,"props":275,"children":276},{},[277],{"type":179,"value":278},"开发模式",{"type":173,"tag":258,"props":280,"children":281},{},[282,287,292,297,302],{"type":173,"tag":197,"props":283,"children":284},{},[285],{"type":179,"value":286},"模块化：采用 ESM 等模块化方式，细化逻辑颗粒度，实现代码复用，提升可维护性。",{"type":173,"tag":197,"props":288,"children":289},{},[290],{"type":179,"value":291},"组件化：使用 Vue 等现代框架，将 UI 拆分为独立、可复用的组件。",{"type":173,"tag":197,"props":293,"children":294},{},[295],{"type":179,"value":296},"依赖管理：使用 pnpm 等包管理工具，规范依赖引入、更新、审计过程。",{"type":173,"tag":197,"props":298,"children":299},{},[300],{"type":179,"value":301},"框架约束：使用 Nuxt 等元框架，减少基础架构工作，提升起步效率。",{"type":173,"tag":197,"props":303,"children":304},{},[305],{"type":179,"value":306},"代码历史：结合 Git 及工作流，优化代码协同流程，提供代码的历史追踪数据。",{"type":173,"tag":182,"props":308,"children":309},{},[310],{"type":173,"tag":252,"props":311,"children":312},{},[313],{"type":179,"value":314},"质量保证",{"type":173,"tag":258,"props":316,"children":317},{},[318,323,328,333,338,343],{"type":173,"tag":197,"props":319,"children":320},{},[321],{"type":179,"value":322},"安全审计：通过 Socket、pnpm audit 等工具，自动化检查依赖包的安全漏洞，确保项目安全。",{"type":173,"tag":197,"props":324,"children":325},{},[326],{"type":179,"value":327},"代码审查：借助 Pull Request、Code Review 流程，保障最低代码质量。",{"type":173,"tag":197,"props":329,"children":330},{},[331],{"type":179,"value":332},"代码质量检测：使用 SonarQube 等平台，静态分析代码，发现潜在的逻辑缺陷和安全隐患。",{"type":173,"tag":197,"props":334,"children":335},{},[336],{"type":179,"value":337},"自动化测试：使用 Playwright、Istanbul 等框架，执行单元测试、覆盖率测试，提高错误检测能力。",{"type":173,"tag":197,"props":339,"children":340},{},[341],{"type":179,"value":342},"监控与日志：集成 Sentry 等工具，埋点后可实时监控应用状态、收集前端错误，作为数据基建。",{"type":173,"tag":197,"props":344,"children":345},{},[346],{"type":179,"value":347},"性能分析：使用 Lighthouse 等工具，分析页面性能和用户体验瓶颈。",{"type":173,"tag":182,"props":349,"children":350},{},[351],{"type":173,"tag":252,"props":352,"children":353},{},[354],{"type":179,"value":355},"构建与部署",{"type":173,"tag":258,"props":357,"children":358},{},[359,364,369],{"type":173,"tag":197,"props":360,"children":361},{},[362],{"type":179,"value":363},"自动化构建：采用 Webpack、Gulp 等构建工具，整合资源编译、压缩、优化与打包流程。",{"type":173,"tag":197,"props":365,"children":366},{},[367],{"type":179,"value":368},"CI/CD：集成 GitHub Actions、GitLab CI 等持续集成工具，实现自动化测试、构建和部署。",{"type":173,"tag":197,"props":370,"children":371},{},[372],{"type":179,"value":373},"版本管理：使用 SemVer 等方法论，管理项目版本，确保兼容性。",{"type":173,"tag":182,"props":375,"children":376},{},[377],{"type":173,"tag":252,"props":378,"children":379},{},[380],{"type":179,"value":381},"文档协作",{"type":173,"tag":258,"props":383,"children":384},{},[385,390,395,400],{"type":173,"tag":197,"props":386,"children":387},{},[388],{"type":179,"value":389},"文档生成：通过 Storybook 等工具，生成 API 文档和可视化组件库，提升团队沟通与维护效率。",{"type":173,"tag":197,"props":391,"children":392},{},[393],{"type":179,"value":394},"在线环境：构建在线演示环境或编辑器，支持团队成员快速分享代码或验证问题，提升协作效率。",{"type":173,"tag":197,"props":396,"children":397},{},[398],{"type":179,"value":399},"前后协同：制定数据规范，使用 yapi 等工具，提升接口文档的可维护性与可用性。",{"type":173,"tag":197,"props":401,"children":402},{},[403],{"type":179,"value":404},"知识积累：使用语雀等工具，记录业务经验、技术文档，形成团队知识库。",{"title":166,"searchDepth":406,"depth":406,"links":407},2,[],"markdown","content:6.maps:_workflow:fe-engineering.md","content","6.maps/_workflow/fe-engineering.md","6.maps/_workflow/fe-engineering","md",[415,419],{"_path":416,"title":417,"description":418},"/maps/_workflow/compiler","Compiler","编译器原理与实践，重点介绍 Babel 等前端编译工具的工作原理和使用方法。",{"_path":420,"title":421,"description":422},"/maps/_workflow/linter/eslint","ESLint","ESLint 是 JavaScript 和 TypeScript 的代码质量检查工具，帮助开发者保持代码风格一致性和减少错误。",1754391502739]