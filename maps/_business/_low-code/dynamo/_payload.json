[{"data":1,"prerenderedAt":928},["ShallowReactive",2],{"navigation":3,"/maps/_business/_low-code/dynamo":384,"/maps/_business/_low-code/dynamo-surround":920},[4,35,86,105,132,138,144,150,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":205,"_path":206},"正则表达式","/gists/eegex",{"title":208,"_path":209},"Emoji","/gists/emoji",{"title":211,"_path":212},"工程","/gists/engineering",{"title":214,"_path":215},"熵","/gists/entropy",{"title":217,"_path":218},"Environment","/gists/environment",{"title":220,"_path":221},"Erlang","/gists/erlang",{"title":223,"_path":224},"逃离塔克夫","/gists/escape-from-tarkov",{"title":226,"_path":227},"ESNext (ES6-ES11)","/gists/esnext",{"title":229,"_path":230},"Eval！","/gists/eval",{"title":232,"_path":233},"Flutter","/gists/flutter",{"title":235,"_path":236},"字体","/gists/font",{"title":238,"_path":239},"JS 函数式编程","/gists/functional",{"title":241,"_path":242},"游戏化","/gists/gamification",{"title":244,"_path":245},"Google C++ Standard","/gists/google-cpp-standard",{"title":247,"_path":248},"双向链接完全体","/gists/graph",{"title":250,"_path":251},"Hardwares","/gists/hardwares",{"title":253,"_path":254},"哈希冲突","/gists/hash-collision",{"title":256,"_path":257},"信息设计","/gists/information-design",{"title":259,"_path":260},"InstantPage","/gists/instant.page",{"title":262,"_path":263},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":265,"_path":266},"KVStore","/gists/key-value-db",{"title":268,"_path":269},"Kubernetes","/gists/kubernetes",{"title":271,"_path":272},"Makefile","/gists/makefile",{"title":274,"_path":275},"Markdown Inline Style","/gists/markdown-nice",{"title":277,"_path":278},"减小页面快照体积","/gists/minify-html",{"title":280,"_path":281},"mklink","/gists/mklink",{"title":283,"_path":284},"Mock","/gists/mock",{"title":286,"_path":287},"多人协作系统","/gists/multiplayer",{"title":289,"_path":290},"多端应用","/gists/multy-end-app",{"title":292,"_path":293},"神经科学","/gists/neuroscience",{"title":295,"_path":296},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":298,"_path":299},"PInvoke","/gists/pinvoke",{"title":301,"_path":302},"像素","/gists/pixel",{"title":304,"_path":305},"PowerShell","/gists/powershell",{"title":307,"_path":308},"量子","/gists/quantum",{"title":310,"_path":311},"保持好奇心","/gists/questions",{"title":313,"_path":314},"React Native","/gists/react-native",{"title":316,"_path":317},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":319,"_path":320},"SEO","/gists/seo",{"title":322,"_path":323},"Shader","/gists/shader",{"title":325,"_path":326},"Shape Up","/gists/shape-up",{"title":328,"_path":329},"睡觉","/gists/sleep",{"title":331,"_path":332},"记录奇怪的问题","/gists/solved",{"title":334,"_path":335},"States","/gists/states",{"title":337,"_path":338},"Storage","/gists/storage",{"title":340,"_path":341},"音视频流处理","/gists/stream-cli",{"title":343,"_path":344},"Symbol","/gists/symbol",{"title":346,"_path":347},"系统论","/gists/systems-theory",{"title":349,"_path":350},"任务切片","/gists/task-slice",{"title":352,"_path":353},"技术偏好","/gists/tech-dudge",{"title":355,"_path":356},"Untitled","/gists/untitled",{"title":358,"_path":359},"可变字体","/gists/variable-font",{"title":361,"_path":362},"视觉错觉","/gists/visual-illusion",{"title":364,"_path":365},"SS(SSR)","/gists/vpn",{"title":367,"_path":368},"VS Code 插件开发","/gists/vscode-plugin",{"title":370,"_path":371},"Web Components","/gists/web-components",{"title":373,"_path":374},"Windows","/gists/windows",{"title":376,"_path":377},"查缺补漏","/gists/wrong",{"title":379,"_path":380,"children":381},"我 / About","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"_path":385,"_dir":386,"_draft":387,"_partial":388,"_locale":389,"title":390,"description":391,"body":392,"_type":914,"_id":915,"_source":916,"_file":917,"_stem":918,"_extension":919},"/maps/_business/_low-code/dynamo","_low-code",false,true,"","Dynamo","Dynamo 原本是 Revit 中建筑信息模型 (BIM) 的附加模块，后来发展成熟，成为一个给设计师探索可视化编程、解决问题并自行制作工具的平台。",{"type":393,"children":394,"toc":907},"root",[395,407,412,420,427,442,497,502,507,512,520,525,531,536,544,603,608,616,624,658,663,668,673,678,683,691,696,703,708,716,721,726,734,739,744,749,754,762,767,775,780,785,792,797,802,807,812,817,822,830,835,843,848,853,858,863,902],{"type":396,"tag":397,"props":398,"children":399},"element","blockquote",{},[400],{"type":396,"tag":401,"props":402,"children":403},"p",{},[404],{"type":405,"value":406},"text","一款可视化编程工具，旨在同时供非编程人员和编程人员使用。它使用户能够直观地查看脚本行为、定义自定义逻辑以及使用各种文本编程语言的脚本。",{"type":396,"tag":401,"props":408,"children":409},{},[410],{"type":405,"value":411},"一个 Dynamo 示例：",{"type":396,"tag":401,"props":413,"children":414},{},[415],{"type":396,"tag":416,"props":417,"children":419},"img",{"alt":389,"src":418},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311908636.png",[],{"type":396,"tag":421,"props":422,"children":424},"h4",{"id":423},"dynamo-primer",[425],{"type":405,"value":426},"Dynamo Primer",{"type":396,"tag":401,"props":428,"children":429},{},[430,432,440],{"type":405,"value":431},"Autodesk 给 Dynamo 编写了一册全面指南，叫 ",{"type":396,"tag":433,"props":434,"children":438},"a",{"href":435,"rel":436},"https://primer.dynamobim.org/zh-cn/index.html",[437],"nofollow",[439],{"type":405,"value":426},{"type":405,"value":441},"。",{"type":396,"tag":443,"props":444,"children":445},"ul",{},[446,452,457,462,467,472,477,482,487,492],{"type":396,"tag":447,"props":448,"children":449},"li",{},[450],{"type":405,"value":451},"上下文：“可视化编程”的确切含义是什么？我需要了解哪些概念才能深入了解 Dynamo？",{"type":396,"tag":447,"props":453,"children":454},{},[455],{"type":405,"value":456},"快速入门：如何获取 Dynamo 并创建第一个程序？",{"type":396,"tag":447,"props":458,"children":459},{},[460],{"type":405,"value":461},"程序中的内容：Dynamo 的功能部分是什么以及如何使用它们？",{"type":396,"tag":447,"props":463,"children":464},{},[465],{"type":405,"value":466},"构建块：“数据”是什么，我可以在程序中开始使用哪些基本类型？",{"type":396,"tag":447,"props":468,"children":469},{},[470],{"type":405,"value":471},"用于设计的几何体：如何在 Dynamo 中使用几何元素？",{"type":396,"tag":447,"props":473,"children":474},{},[475],{"type":405,"value":476},"列表、列表、列表：如何管理和协调数据结构？",{"type":396,"tag":447,"props":478,"children":479},{},[480],{"type":405,"value":481},"节点中的代码：如何使用自己的代码开始扩展 Dynamo？",{"type":396,"tag":447,"props":483,"children":484},{},[485],{"type":405,"value":486},"计算 BIM: 如何将 Dynamo 与 Revit 模型结合使用？",{"type":396,"tag":447,"props":488,"children":489},{},[490],{"type":405,"value":491},"自定义节点：如何创建自己的节点？",{"type":396,"tag":447,"props":493,"children":494},{},[495],{"type":405,"value":496},"软件包：如何与社区共享我的工具？",{"type":396,"tag":401,"props":498,"children":499},{},[500],{"type":405,"value":501},"程序需要按照算法来工作，所以这些操作必然遵循输入、处理和输出的基本逻辑。",{"type":396,"tag":401,"props":503,"children":504},{},[505],{"type":405,"value":506},"编程的关键及我们会遇到的第一个障碍是：必须依靠某种形式的抽象形式，才能与计算机进行有效通信。",{"type":396,"tag":401,"props":508,"children":509},{},[510],{"type":405,"value":511},"可视化编程把描述性操作抽象成了节点（及节点关系）。Dynamo 将节点关系描述为“连接，将定义数据流”。下面是一个通过中心点和半径创建圆的例子：",{"type":396,"tag":401,"props":513,"children":514},{},[515],{"type":396,"tag":416,"props":516,"children":519},{"alt":517,"src":518},"Dynamo example to create a circle","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270238695.png",[],{"type":396,"tag":401,"props":521,"children":522},{},[523],{"type":405,"value":524},"Dynamo 的开发版本叫做“bleeding edge”。出血（bleeding）是一个设计领域术语，指裁切边缘距材料边缘的距离。",{"type":396,"tag":526,"props":527,"children":529},"h2",{"id":528},"界面",[530],{"type":405,"value":528},{"type":396,"tag":401,"props":532,"children":533},{},[534],{"type":405,"value":535},"节点主要分为如下几个部分，其中，“核心”和“几何”包含最多数量的节点（“核心”是什么？）。",{"type":396,"tag":401,"props":537,"children":538},{},[539],{"type":396,"tag":416,"props":540,"children":543},{"alt":541,"src":542},"Dynamo Libs","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270249685.png",[],{"type":396,"tag":545,"props":546,"children":547},"ol",{},[548,553,558,563,568,573,578,583,588,593,598],{"type":396,"tag":447,"props":549,"children":550},{},[551],{"type":405,"value":552},"词典",{"type":396,"tag":447,"props":554,"children":555},{},[556],{"type":405,"value":557},"显示",{"type":396,"tag":447,"props":559,"children":560},{},[561],{"type":405,"value":562},"几何",{"type":396,"tag":447,"props":564,"children":565},{},[566],{"type":405,"value":567},"ImportExport",{"type":396,"tag":447,"props":569,"children":570},{},[571],{"type":405,"value":572},"输入",{"type":396,"tag":447,"props":574,"children":575},{},[576],{"type":405,"value":577},"列表",{"type":396,"tag":447,"props":579,"children":580},{},[581],{"type":405,"value":582},"匹配",{"type":396,"tag":447,"props":584,"children":585},{},[586],{"type":405,"value":587},"Revit",{"type":396,"tag":447,"props":589,"children":590},{},[591],{"type":405,"value":592},"脚本",{"type":396,"tag":447,"props":594,"children":595},{},[596],{"type":405,"value":597},"字符串",{"type":396,"tag":447,"props":599,"children":600},{},[601],{"type":405,"value":602},"附加模块",{"type":396,"tag":401,"props":604,"children":605},{},[606],{"type":405,"value":607},"可以参考一下节点布局算法。界面中的“节点清理”即节点布局：",{"type":396,"tag":401,"props":609,"children":610},{},[611],{"type":396,"tag":416,"props":612,"children":615},{"alt":613,"src":614},"after clean nodes","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270257741.png",[],{"type":396,"tag":401,"props":617,"children":618},{},[619],{"type":396,"tag":416,"props":620,"children":623},{"alt":621,"src":622},"一个 Dynamo 节点","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270309333.png",[],{"type":396,"tag":545,"props":625,"children":626},{},[627,629,634,635,640,641,646,647,652,653],{"type":405,"value":628},"\n  ",{"type":396,"tag":447,"props":630,"children":631},{},[632],{"type":405,"value":633},"名称 - 具有 Category.Name 命名约定的节点名称",{"type":405,"value":628},{"type":396,"tag":447,"props":636,"children":637},{},[638],{"type":405,"value":639},"主节点 - 节点的主体 - 在此处单击鼠标右键可显示整个节点级别的选项",{"type":405,"value":628},{"type":396,"tag":447,"props":642,"children":643},{},[644],{"type":405,"value":645},"端口（输入输出）- 导线的接受器，它们向节点提供输入数据以及节点操作的结果，有类型和值",{"type":405,"value":628},{"type":396,"tag":447,"props":648,"children":649},{},[650],{"type":405,"value":651},"连缀图标 - 表示为匹配列表输入指定的“连缀”选项（稍后再做详细介绍）",{"type":405,"value":628},{"type":396,"tag":447,"props":654,"children":655},{},[656],{"type":405,"value":657},"默认值 - 在输入端口上单击鼠标右键 - 某些节点具有可以使用也可以不使用的默认值。",{"type":396,"tag":401,"props":659,"children":660},{},[661],{"type":405,"value":662},"节点根据颜色还划分为：非活动、错误、冻结、选中、警告等状态。",{"type":396,"tag":401,"props":664,"children":665},{},[666],{"type":405,"value":667},"所有节点只分三层排列，其命名惯例为：library.category.nodeName。",{"type":396,"tag":401,"props":669,"children":670},{},[671],{"type":405,"value":672},"如何管理大量节点？通过注释标记节点功能、Watch 节点观察节点输出、Group 分组节点。",{"type":396,"tag":401,"props":674,"children":675},{},[676],{"type":405,"value":677},"因为节点的颜色已经被用来表示节点的状态，所以节点层面还缺少一种视觉方式来表示节点的类型。在 PRay 中也许可以使用图标、背景纹案之类的方案。",{"type":396,"tag":401,"props":679,"children":680},{},[681],{"type":405,"value":682},"在工程中 Dynamo 使用分组颜色来区分不用的功能区域。",{"type":396,"tag":401,"props":684,"children":685},{},[686],{"type":396,"tag":416,"props":687,"children":690},{"alt":688,"src":689},"dynamo project template","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311703670.png",[],{"type":396,"tag":401,"props":692,"children":693},{},[694],{"type":405,"value":695},"Dynamo 的节点很清晰也很漂亮：",{"type":396,"tag":401,"props":697,"children":698},{},[699],{"type":396,"tag":416,"props":700,"children":702},{"alt":389,"src":701},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270327205.png",[],{"type":396,"tag":401,"props":704,"children":705},{},[706],{"type":405,"value":707},"节点的抽象层级应该符合用户的认知层级，过高过低都不行，所以产品设计上经常会有“表达式”这么一个用来描述公式化逻辑的节点。如果要用节点把公式写出来那就太麻烦了，比如黄金螺旋的公式很简单：$x=r\\cos(\\theta)$, $y=r\\sin(\\theta)$，但是如果用节点来表达就会变得很复杂，如下图：",{"type":396,"tag":401,"props":709,"children":710},{},[711],{"type":396,"tag":416,"props":712,"children":715},{"alt":713,"src":714},"Gold Spiral","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270345013.png",[],{"type":396,"tag":401,"props":717,"children":718},{},[719],{"type":405,"value":720},"怎么处理混乱的输入？",{"type":396,"tag":401,"props":722,"children":723},{},[724],{"type":405,"value":725},"如图，有三种条件逻辑的表达方式，但是为了给这三个节点输入统一的值，输入连线处理得很难看：",{"type":396,"tag":401,"props":727,"children":728},{},[729],{"type":396,"tag":416,"props":730,"children":733},{"alt":731,"src":732},"three ways to express conditional logic","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270349782.png",[],{"type":396,"tag":401,"props":735,"children":736},{},[737],{"type":405,"value":738},"应该创建“节点分身”之类的概念，或是“幽灵节点”？操作逻辑可以是：从一个非分身节点复制出一个分身，分身和节点的数据保持一致，两者都可以修改。然后可以将分身节点拖到任意地方使用，这样就解耦了输入和使用方。不过，这样似乎会导致新的混乱，em...",{"type":396,"tag":526,"props":740,"children":742},{"id":741},"几何体",[743],{"type":405,"value":741},{"type":396,"tag":401,"props":745,"children":746},{},[747],{"type":405,"value":748},"“维数是一种开始对几何图形进行分类的便捷方法，但它不一定是最佳方法。毕竟，我们不仅使用“点”、“线”、“平面”和“方框”建模 - 如果我想要弯曲，该怎么办？”",{"type":396,"tag":401,"props":750,"children":751},{},[752],{"type":405,"value":753},"正如游戏建模中接触的“网格”的概念，Dynamo 中自有一套几何体的数据类型（估计和 Autodesk 其他产品保持一致）：",{"type":396,"tag":401,"props":755,"children":756},{},[757],{"type":396,"tag":416,"props":758,"children":761},{"alt":759,"src":760},"Geometry Data Types","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270420841.png",[],{"type":396,"tag":401,"props":763,"children":764},{},[765],{"type":405,"value":766},"之前用过 C4D 和 Blender，这些数据类型都和 Dynamo 的类似（或者说几乎一致？）",{"type":396,"tag":401,"props":768,"children":769},{},[770],{"type":396,"tag":416,"props":771,"children":774},{"alt":772,"src":773},"Geometry Types","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270423147.png",[],{"type":396,"tag":401,"props":776,"children":777},{},[778],{"type":405,"value":779},"“抽象”的数据类型不能在屏幕上预览，这和“headless”的概念很类似，都是在界面底层通过操作数据结构来创建一种更基本的“逻辑”，可以没有界面。说“可以”是因为比如“平面”之类的数据类型尽管是抽象的，但（为了操作的便利性）仍可以在界面上预览。",{"type":396,"tag":401,"props":781,"children":782},{},[783],{"type":405,"value":784},"节点冻结用于禁用当前及下游节点，可以避免修改上游节点导致下游节点重新计算带来的巨大性能开销，如下图，冻结了圆和圆锥的 Union 操作。",{"type":396,"tag":401,"props":786,"children":787},{},[788],{"type":396,"tag":416,"props":789,"children":791},{"alt":389,"src":790},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270450836.png",[],{"type":396,"tag":401,"props":793,"children":794},{},[795],{"type":405,"value":796},"Comfy UI 在跑流程时，节点上会有个进度条显示，暗示当前的执行进度。",{"type":396,"tag":401,"props":798,"children":799},{},[800],{"type":405,"value":801},"两种形式分别对应：实时预览和离线计算。鉴于 PRay 的代码编辑需要实时预览，但是节点的执行机制需要设计成离线式的，也就是全部走异步+防抖的形式。不过，这样的话又会碰到副作用的问题。.. 还是再考虑下。",{"type":396,"tag":526,"props":803,"children":805},{"id":804},"数据结构",[806],{"type":405,"value":804},{"type":396,"tag":401,"props":808,"children":809},{},[810],{"type":405,"value":811},"对于能接受列表的节点，比如 PolyCurve.ByPoints 和 Circle.ByCenterPointRadius，他们都能接受点列表作为输入，但是逻辑处理机制不同，前者按照点列表生成多段曲线，后者生成多个圆。也就是说，对于后者，似乎存在一个隐式的“循环”操作。",{"type":396,"tag":401,"props":813,"children":814},{},[815],{"type":405,"value":816},"当两个列表长度不匹配时，通过设置“连缀”选项来处理，可选“最短列表”、“笛卡尔积（叉积）”等。鉴于在非绘图绘表的 Web 数据处理一般是操作相同长度的列表，所以这个设计不能直接套用。",{"type":396,"tag":401,"props":818,"children":819},{},[820],{"type":405,"value":821},"因为用节点编排逻辑只是代码的某种子集，所以见到 Dynamo 中有“节点转换到代码”这种功能也不足为奇。在 Dynamo Primer 的“最佳实践”章节，甚至直接提到了可以使用节点到代码功能降低图形复杂度。只是，他还说节点到代码“无法轻松返回”？难道节点到代码丢失了除了节点位置之类的其他信息，或者只是单纯没有代码解析器所以提供这个功能。",{"type":396,"tag":401,"props":823,"children":824},{},[825],{"type":396,"tag":416,"props":826,"children":829},{"alt":827,"src":828},"dynamo nodes 2 codes","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311638043.png",[],{"type":396,"tag":401,"props":831,"children":832},{},[833],{"type":405,"value":834},"至于在创建、操作数据和编排逻辑这块，代码的表达性要比节点强太多了，以条件逻辑举例，见下图。",{"type":396,"tag":401,"props":836,"children":837},{},[838],{"type":396,"tag":416,"props":839,"children":842},{"alt":840,"src":841},"condition expression","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311643375.png",[],{"type":396,"tag":401,"props":844,"children":845},{},[846],{"type":405,"value":847},"那么节点强在什么地方呢？举个例子，可视化变成的一个优势是可以直观的观察到数据流，并且提供了更强的人机交互。所以，如果代码块支持用模版语法自定义变量，再由节点作为可控输入，就可以二者的优势。这其实是“函数”，也就是说，代码块本身只是代码，并没有显示的切换成“表达式”、“语句”、“函数”等模式，而传统意义上的代码中的“函数”在可视化编程中是个外显的界面概念。",{"type":396,"tag":401,"props":849,"children":850},{},[851],{"type":405,"value":852},"实际上，在 Dynamo 的“代码块”可以声明“函数”。声明后，其他代码块可以直接调用函数而无需连线。在这里，节点的操作和代码创建函数共享了一整个空间，不过事情似乎会变得更难以理解。",{"type":396,"tag":526,"props":854,"children":856},{"id":855},"扩展",[857],{"type":405,"value":855},{"type":396,"tag":401,"props":859,"children":860},{},[861],{"type":405,"value":862},"关于 Dynamo 的自定义节点，找到几个有用的库：",{"type":396,"tag":443,"props":864,"children":865},{},[866,878,890],{"type":396,"tag":447,"props":867,"children":868},{},[869,876],{"type":396,"tag":433,"props":870,"children":873},{"href":871,"rel":872},"https://data-shapes.io/blog/",[437],[874],{"type":405,"value":875},"Data Shapes",{"type":405,"value":877},"：绘图和数据处理用的节点，包含了图表、表单、地图、表格、UI 构建（用户侧的表单等）。",{"type":396,"tag":447,"props":879,"children":880},{},[881,888],{"type":396,"tag":433,"props":882,"children":885},{"href":883,"rel":884},"https://bimorph.com/bimorph-nodes/",[437],[886],{"type":405,"value":887},"BIMORPH Nodes",{"type":405,"value":889},"：包含了碰撞检测等高级功能，主要面向 CAD、Curve、Revit 之类的数据结构。",{"type":396,"tag":447,"props":891,"children":892},{},[893,900],{"type":396,"tag":433,"props":894,"children":897},{"href":895,"rel":896},"https://github.com/ksobon/Bumblebee",[437],[898],{"type":405,"value":899},"Bumblebee",{"type":405,"value":901},"：用于操作 Excel，但是最近一次提交在 2019 年。",{"type":396,"tag":401,"props":903,"children":904},{},[905],{"type":405,"value":906},"Data Shapes 太棒了，可以用图表快速分析图中的数据。但是 Github 上只有 50+ 星星，看来 Dynamo 的用户中懂代码的群体还是太小了。其实就连 Dynamo 仓库本身的 Issue 数量也才 300+（未关闭的）。",{"title":389,"searchDepth":908,"depth":908,"links":909},2,[910,911,912,913],{"id":528,"depth":908,"text":528},{"id":741,"depth":908,"text":741},{"id":804,"depth":908,"text":804},{"id":855,"depth":908,"text":855},"markdown","content:6.maps:_business:_low-code:dynamo.md","content","6.maps/_business/_low-code/dynamo.md","6.maps/_business/_low-code/dynamo","md",[921,924],{"_path":922,"title":923,"description":389},"/maps/_business/_low-code/budibase","Budibase",{"_path":925,"title":926,"description":927},"/maps/_business/business-analysis","商业分析","商业分析是指通过拆解问题、分析需求、设计解决方案，为业务开展提供更好的数据和决策支持的过程。",1742040376360]