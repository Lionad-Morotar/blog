[{"data":1,"prerenderedAt":937},["ShallowReactive",2],{"navigation":3,"/maps/_business/_low-code/dynamo":393,"/maps/_business/_low-code/dynamo-surround":929},[4,35,86,105,132,138,144,150,387],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"数字化转型","/gists/digital-transformation",{"title":205,"_path":206},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":208,"_path":209},"正则表达式","/gists/eegex",{"title":211,"_path":212},"Emoji","/gists/emoji",{"title":214,"_path":215},"工程","/gists/engineering",{"title":217,"_path":218},"熵","/gists/entropy",{"title":220,"_path":221},"Environment","/gists/environment",{"title":223,"_path":224},"Erlang","/gists/erlang",{"title":226,"_path":227},"逃离塔克夫","/gists/escape-from-tarkov",{"title":229,"_path":230},"ESNext (ES6-ES11)","/gists/esnext",{"title":232,"_path":233},"Eval！","/gists/eval",{"title":235,"_path":236},"Flutter","/gists/flutter",{"title":238,"_path":239},"字体","/gists/font",{"title":241,"_path":242},"JS 函数式编程","/gists/functional",{"title":244,"_path":245},"游戏化","/gists/gamification",{"title":247,"_path":248},"Google C++ Standard","/gists/google-cpp-standard",{"title":250,"_path":251},"双向链接完全体","/gists/graph",{"title":253,"_path":254},"Hardwares","/gists/hardwares",{"title":256,"_path":257},"哈希冲突","/gists/hash-collision",{"title":259,"_path":260},"信息设计","/gists/information-design",{"title":262,"_path":263},"InstantPage","/gists/instant.page",{"title":265,"_path":266},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":268,"_path":269},"KVStore","/gists/key-value-db",{"title":271,"_path":272},"Kubernetes","/gists/kubernetes",{"title":274,"_path":275},"Makefile","/gists/makefile",{"title":277,"_path":278},"Markdown Inline Style","/gists/markdown-nice",{"title":280,"_path":281},"小程序","/gists/miniapp",{"title":283,"_path":284},"减小页面快照体积","/gists/minify-html",{"title":286,"_path":287},"mklink","/gists/mklink",{"title":289,"_path":290},"Mock","/gists/mock",{"title":292,"_path":293},"多人协作系统","/gists/multiplayer",{"title":295,"_path":296},"多端应用","/gists/multy-end-app",{"title":298,"_path":299},"神经科学","/gists/neuroscience",{"title":301,"_path":302},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":304,"_path":305},"PInvoke","/gists/pinvoke",{"title":307,"_path":308},"像素","/gists/pixel",{"title":310,"_path":311},"PowerShell","/gists/powershell",{"title":313,"_path":314},"量子","/gists/quantum",{"title":316,"_path":317},"保持好奇心","/gists/questions",{"title":319,"_path":320},"React Native","/gists/react-native",{"title":322,"_path":323},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":325,"_path":326},"SEO","/gists/seo",{"title":328,"_path":329},"Shader","/gists/shader",{"title":331,"_path":332},"Shape Up","/gists/shape-up",{"title":334,"_path":335},"睡觉","/gists/sleep",{"title":337,"_path":338},"记录奇怪的问题","/gists/solved",{"title":340,"_path":341},"States","/gists/states",{"title":343,"_path":344},"Storage","/gists/storage",{"title":346,"_path":347},"音视频流处理","/gists/stream-cli",{"title":349,"_path":350},"Symbol","/gists/symbol",{"title":352,"_path":353},"系统论","/gists/systems-theory",{"title":355,"_path":356},"Taro","/gists/taro",{"title":358,"_path":359},"任务切片","/gists/task-slice",{"title":361,"_path":362},"技术偏好","/gists/tech-dudge",{"title":364,"_path":365},"Untitled","/gists/untitled",{"title":367,"_path":368},"可变字体","/gists/variable-font",{"title":370,"_path":371},"视觉错觉","/gists/visual-illusion",{"title":373,"_path":374},"SS(SSR)","/gists/vpn",{"title":376,"_path":377},"VS Code 插件开发","/gists/vscode-plugin",{"title":379,"_path":380},"Web Components","/gists/web-components",{"title":382,"_path":383},"Windows","/gists/windows",{"title":385,"_path":386},"查缺补漏","/gists/wrong",{"title":388,"_path":389,"children":390},"我 / About","/hire",[391],{"title":392,"_path":389},"📬 技术简历",{"_path":394,"_dir":395,"_draft":396,"_partial":397,"_locale":398,"title":399,"description":400,"body":401,"_type":923,"_id":924,"_source":925,"_file":926,"_stem":927,"_extension":928},"/maps/_business/_low-code/dynamo","_low-code",false,true,"","Dynamo","Dynamo 原本是 Revit 中建筑信息模型 (BIM) 的附加模块，后来发展成熟，成为一个给设计师探索可视化编程、解决问题并自行制作工具的平台。",{"type":402,"children":403,"toc":916},"root",[404,416,421,429,436,451,506,511,516,521,529,534,540,545,553,612,617,625,633,667,672,677,682,687,692,700,705,712,717,725,730,735,743,748,753,758,763,771,776,784,789,794,801,806,811,816,821,826,831,839,844,852,857,862,867,872,911],{"type":405,"tag":406,"props":407,"children":408},"element","blockquote",{},[409],{"type":405,"tag":410,"props":411,"children":412},"p",{},[413],{"type":414,"value":415},"text","一款可视化编程工具，旨在同时供非编程人员和编程人员使用。它使用户能够直观地查看脚本行为、定义自定义逻辑以及使用各种文本编程语言的脚本。",{"type":405,"tag":410,"props":417,"children":418},{},[419],{"type":414,"value":420},"一个 Dynamo 示例：",{"type":405,"tag":410,"props":422,"children":423},{},[424],{"type":405,"tag":425,"props":426,"children":428},"img",{"alt":398,"src":427},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311908636.png",[],{"type":405,"tag":430,"props":431,"children":433},"h4",{"id":432},"dynamo-primer",[434],{"type":414,"value":435},"Dynamo Primer",{"type":405,"tag":410,"props":437,"children":438},{},[439,441,449],{"type":414,"value":440},"Autodesk 给 Dynamo 编写了一册全面指南，叫 ",{"type":405,"tag":442,"props":443,"children":447},"a",{"href":444,"rel":445},"https://primer.dynamobim.org/zh-cn/index.html",[446],"nofollow",[448],{"type":414,"value":435},{"type":414,"value":450},"。",{"type":405,"tag":452,"props":453,"children":454},"ul",{},[455,461,466,471,476,481,486,491,496,501],{"type":405,"tag":456,"props":457,"children":458},"li",{},[459],{"type":414,"value":460},"上下文：“可视化编程”的确切含义是什么？我需要了解哪些概念才能深入了解 Dynamo？",{"type":405,"tag":456,"props":462,"children":463},{},[464],{"type":414,"value":465},"快速入门：如何获取 Dynamo 并创建第一个程序？",{"type":405,"tag":456,"props":467,"children":468},{},[469],{"type":414,"value":470},"程序中的内容：Dynamo 的功能部分是什么以及如何使用它们？",{"type":405,"tag":456,"props":472,"children":473},{},[474],{"type":414,"value":475},"构建块：“数据”是什么，我可以在程序中开始使用哪些基本类型？",{"type":405,"tag":456,"props":477,"children":478},{},[479],{"type":414,"value":480},"用于设计的几何体：如何在 Dynamo 中使用几何元素？",{"type":405,"tag":456,"props":482,"children":483},{},[484],{"type":414,"value":485},"列表、列表、列表：如何管理和协调数据结构？",{"type":405,"tag":456,"props":487,"children":488},{},[489],{"type":414,"value":490},"节点中的代码：如何使用自己的代码开始扩展 Dynamo？",{"type":405,"tag":456,"props":492,"children":493},{},[494],{"type":414,"value":495},"计算 BIM: 如何将 Dynamo 与 Revit 模型结合使用？",{"type":405,"tag":456,"props":497,"children":498},{},[499],{"type":414,"value":500},"自定义节点：如何创建自己的节点？",{"type":405,"tag":456,"props":502,"children":503},{},[504],{"type":414,"value":505},"软件包：如何与社区共享我的工具？",{"type":405,"tag":410,"props":507,"children":508},{},[509],{"type":414,"value":510},"程序需要按照算法来工作，所以这些操作必然遵循输入、处理和输出的基本逻辑。",{"type":405,"tag":410,"props":512,"children":513},{},[514],{"type":414,"value":515},"编程的关键及我们会遇到的第一个障碍是：必须依靠某种形式的抽象形式，才能与计算机进行有效通信。",{"type":405,"tag":410,"props":517,"children":518},{},[519],{"type":414,"value":520},"可视化编程把描述性操作抽象成了节点（及节点关系）。Dynamo 将节点关系描述为“连接，将定义数据流”。下面是一个通过中心点和半径创建圆的例子：",{"type":405,"tag":410,"props":522,"children":523},{},[524],{"type":405,"tag":425,"props":525,"children":528},{"alt":526,"src":527},"Dynamo example to create a circle","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270238695.png",[],{"type":405,"tag":410,"props":530,"children":531},{},[532],{"type":414,"value":533},"Dynamo 的开发版本叫做“bleeding edge”。出血（bleeding）是一个设计领域术语，指裁切边缘距材料边缘的距离。",{"type":405,"tag":535,"props":536,"children":538},"h2",{"id":537},"界面",[539],{"type":414,"value":537},{"type":405,"tag":410,"props":541,"children":542},{},[543],{"type":414,"value":544},"节点主要分为如下几个部分，其中，“核心”和“几何”包含最多数量的节点（“核心”是什么？）。",{"type":405,"tag":410,"props":546,"children":547},{},[548],{"type":405,"tag":425,"props":549,"children":552},{"alt":550,"src":551},"Dynamo Libs","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270249685.png",[],{"type":405,"tag":554,"props":555,"children":556},"ol",{},[557,562,567,572,577,582,587,592,597,602,607],{"type":405,"tag":456,"props":558,"children":559},{},[560],{"type":414,"value":561},"词典",{"type":405,"tag":456,"props":563,"children":564},{},[565],{"type":414,"value":566},"显示",{"type":405,"tag":456,"props":568,"children":569},{},[570],{"type":414,"value":571},"几何",{"type":405,"tag":456,"props":573,"children":574},{},[575],{"type":414,"value":576},"ImportExport",{"type":405,"tag":456,"props":578,"children":579},{},[580],{"type":414,"value":581},"输入",{"type":405,"tag":456,"props":583,"children":584},{},[585],{"type":414,"value":586},"列表",{"type":405,"tag":456,"props":588,"children":589},{},[590],{"type":414,"value":591},"匹配",{"type":405,"tag":456,"props":593,"children":594},{},[595],{"type":414,"value":596},"Revit",{"type":405,"tag":456,"props":598,"children":599},{},[600],{"type":414,"value":601},"脚本",{"type":405,"tag":456,"props":603,"children":604},{},[605],{"type":414,"value":606},"字符串",{"type":405,"tag":456,"props":608,"children":609},{},[610],{"type":414,"value":611},"附加模块",{"type":405,"tag":410,"props":613,"children":614},{},[615],{"type":414,"value":616},"可以参考一下节点布局算法。界面中的“节点清理”即节点布局：",{"type":405,"tag":410,"props":618,"children":619},{},[620],{"type":405,"tag":425,"props":621,"children":624},{"alt":622,"src":623},"after clean nodes","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270257741.png",[],{"type":405,"tag":410,"props":626,"children":627},{},[628],{"type":405,"tag":425,"props":629,"children":632},{"alt":630,"src":631},"一个 Dynamo 节点","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270309333.png",[],{"type":405,"tag":554,"props":634,"children":635},{},[636,638,643,644,649,650,655,656,661,662],{"type":414,"value":637},"\n  ",{"type":405,"tag":456,"props":639,"children":640},{},[641],{"type":414,"value":642},"名称 - 具有 Category.Name 命名约定的节点名称",{"type":414,"value":637},{"type":405,"tag":456,"props":645,"children":646},{},[647],{"type":414,"value":648},"主节点 - 节点的主体 - 在此处单击鼠标右键可显示整个节点级别的选项",{"type":414,"value":637},{"type":405,"tag":456,"props":651,"children":652},{},[653],{"type":414,"value":654},"端口（输入输出）- 导线的接受器，它们向节点提供输入数据以及节点操作的结果，有类型和值",{"type":414,"value":637},{"type":405,"tag":456,"props":657,"children":658},{},[659],{"type":414,"value":660},"连缀图标 - 表示为匹配列表输入指定的“连缀”选项（稍后再做详细介绍）",{"type":414,"value":637},{"type":405,"tag":456,"props":663,"children":664},{},[665],{"type":414,"value":666},"默认值 - 在输入端口上单击鼠标右键 - 某些节点具有可以使用也可以不使用的默认值。",{"type":405,"tag":410,"props":668,"children":669},{},[670],{"type":414,"value":671},"节点根据颜色还划分为：非活动、错误、冻结、选中、警告等状态。",{"type":405,"tag":410,"props":673,"children":674},{},[675],{"type":414,"value":676},"所有节点只分三层排列，其命名惯例为：library.category.nodeName。",{"type":405,"tag":410,"props":678,"children":679},{},[680],{"type":414,"value":681},"如何管理大量节点？通过注释标记节点功能、Watch 节点观察节点输出、Group 分组节点。",{"type":405,"tag":410,"props":683,"children":684},{},[685],{"type":414,"value":686},"因为节点的颜色已经被用来表示节点的状态，所以节点层面还缺少一种视觉方式来表示节点的类型。在 PRay 中也许可以使用图标、背景纹案之类的方案。",{"type":405,"tag":410,"props":688,"children":689},{},[690],{"type":414,"value":691},"在工程中 Dynamo 使用分组颜色来区分不用的功能区域。",{"type":405,"tag":410,"props":693,"children":694},{},[695],{"type":405,"tag":425,"props":696,"children":699},{"alt":697,"src":698},"dynamo project template","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311703670.png",[],{"type":405,"tag":410,"props":701,"children":702},{},[703],{"type":414,"value":704},"Dynamo 的节点很清晰也很漂亮：",{"type":405,"tag":410,"props":706,"children":707},{},[708],{"type":405,"tag":425,"props":709,"children":711},{"alt":398,"src":710},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270327205.png",[],{"type":405,"tag":410,"props":713,"children":714},{},[715],{"type":414,"value":716},"节点的抽象层级应该符合用户的认知层级，过高过低都不行，所以产品设计上经常会有“表达式”这么一个用来描述公式化逻辑的节点。如果要用节点把公式写出来那就太麻烦了，比如黄金螺旋的公式很简单：$x=r\\cos(\\theta)$, $y=r\\sin(\\theta)$，但是如果用节点来表达就会变得很复杂，如下图：",{"type":405,"tag":410,"props":718,"children":719},{},[720],{"type":405,"tag":425,"props":721,"children":724},{"alt":722,"src":723},"Gold Spiral","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270345013.png",[],{"type":405,"tag":410,"props":726,"children":727},{},[728],{"type":414,"value":729},"怎么处理混乱的输入？",{"type":405,"tag":410,"props":731,"children":732},{},[733],{"type":414,"value":734},"如图，有三种条件逻辑的表达方式，但是为了给这三个节点输入统一的值，输入连线处理得很难看：",{"type":405,"tag":410,"props":736,"children":737},{},[738],{"type":405,"tag":425,"props":739,"children":742},{"alt":740,"src":741},"three ways to express conditional logic","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270349782.png",[],{"type":405,"tag":410,"props":744,"children":745},{},[746],{"type":414,"value":747},"应该创建“节点分身”之类的概念，或是“幽灵节点”？操作逻辑可以是：从一个非分身节点复制出一个分身，分身和节点的数据保持一致，两者都可以修改。然后可以将分身节点拖到任意地方使用，这样就解耦了输入和使用方。不过，这样似乎会导致新的混乱，em...",{"type":405,"tag":535,"props":749,"children":751},{"id":750},"几何体",[752],{"type":414,"value":750},{"type":405,"tag":410,"props":754,"children":755},{},[756],{"type":414,"value":757},"“维数是一种开始对几何图形进行分类的便捷方法，但它不一定是最佳方法。毕竟，我们不仅使用“点”、“线”、“平面”和“方框”建模 - 如果我想要弯曲，该怎么办？”",{"type":405,"tag":410,"props":759,"children":760},{},[761],{"type":414,"value":762},"正如游戏建模中接触的“网格”的概念，Dynamo 中自有一套几何体的数据类型（估计和 Autodesk 其他产品保持一致）：",{"type":405,"tag":410,"props":764,"children":765},{},[766],{"type":405,"tag":425,"props":767,"children":770},{"alt":768,"src":769},"Geometry Data Types","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270420841.png",[],{"type":405,"tag":410,"props":772,"children":773},{},[774],{"type":414,"value":775},"之前用过 C4D 和 Blender，这些数据类型都和 Dynamo 的类似（或者说几乎一致？）",{"type":405,"tag":410,"props":777,"children":778},{},[779],{"type":405,"tag":425,"props":780,"children":783},{"alt":781,"src":782},"Geometry Types","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270423147.png",[],{"type":405,"tag":410,"props":785,"children":786},{},[787],{"type":414,"value":788},"“抽象”的数据类型不能在屏幕上预览，这和“headless”的概念很类似，都是在界面底层通过操作数据结构来创建一种更基本的“逻辑”，可以没有界面。说“可以”是因为比如“平面”之类的数据类型尽管是抽象的，但（为了操作的便利性）仍可以在界面上预览。",{"type":405,"tag":410,"props":790,"children":791},{},[792],{"type":414,"value":793},"节点冻结用于禁用当前及下游节点，可以避免修改上游节点导致下游节点重新计算带来的巨大性能开销，如下图，冻结了圆和圆锥的 Union 操作。",{"type":405,"tag":410,"props":795,"children":796},{},[797],{"type":405,"tag":425,"props":798,"children":800},{"alt":398,"src":799},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270450836.png",[],{"type":405,"tag":410,"props":802,"children":803},{},[804],{"type":414,"value":805},"Comfy UI 在跑流程时，节点上会有个进度条显示，暗示当前的执行进度。",{"type":405,"tag":410,"props":807,"children":808},{},[809],{"type":414,"value":810},"两种形式分别对应：实时预览和离线计算。鉴于 PRay 的代码编辑需要实时预览，但是节点的执行机制需要设计成离线式的，也就是全部走异步+防抖的形式。不过，这样的话又会碰到副作用的问题。.. 还是再考虑下。",{"type":405,"tag":535,"props":812,"children":814},{"id":813},"数据结构",[815],{"type":414,"value":813},{"type":405,"tag":410,"props":817,"children":818},{},[819],{"type":414,"value":820},"对于能接受列表的节点，比如 PolyCurve.ByPoints 和 Circle.ByCenterPointRadius，他们都能接受点列表作为输入，但是逻辑处理机制不同，前者按照点列表生成多段曲线，后者生成多个圆。也就是说，对于后者，似乎存在一个隐式的“循环”操作。",{"type":405,"tag":410,"props":822,"children":823},{},[824],{"type":414,"value":825},"当两个列表长度不匹配时，通过设置“连缀”选项来处理，可选“最短列表”、“笛卡尔积（叉积）”等。鉴于在非绘图绘表的 Web 数据处理一般是操作相同长度的列表，所以这个设计不能直接套用。",{"type":405,"tag":410,"props":827,"children":828},{},[829],{"type":414,"value":830},"因为用节点编排逻辑只是代码的某种子集，所以见到 Dynamo 中有“节点转换到代码”这种功能也不足为奇。在 Dynamo Primer 的“最佳实践”章节，甚至直接提到了可以使用节点到代码功能降低图形复杂度。只是，他还说节点到代码“无法轻松返回”？难道节点到代码丢失了除了节点位置之类的其他信息，或者只是单纯没有代码解析器所以提供这个功能。",{"type":405,"tag":410,"props":832,"children":833},{},[834],{"type":405,"tag":425,"props":835,"children":838},{"alt":836,"src":837},"dynamo nodes 2 codes","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311638043.png",[],{"type":405,"tag":410,"props":840,"children":841},{},[842],{"type":414,"value":843},"至于在创建、操作数据和编排逻辑这块，代码的表达性要比节点强太多了，以条件逻辑举例，见下图。",{"type":405,"tag":410,"props":845,"children":846},{},[847],{"type":405,"tag":425,"props":848,"children":851},{"alt":849,"src":850},"condition expression","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311643375.png",[],{"type":405,"tag":410,"props":853,"children":854},{},[855],{"type":414,"value":856},"那么节点强在什么地方呢？举个例子，可视化变成的一个优势是可以直观的观察到数据流，并且提供了更强的人机交互。所以，如果代码块支持用模版语法自定义变量，再由节点作为可控输入，就可以二者的优势。这其实是“函数”，也就是说，代码块本身只是代码，并没有显示的切换成“表达式”、“语句”、“函数”等模式，而传统意义上的代码中的“函数”在可视化编程中是个外显的界面概念。",{"type":405,"tag":410,"props":858,"children":859},{},[860],{"type":414,"value":861},"实际上，在 Dynamo 的“代码块”可以声明“函数”。声明后，其他代码块可以直接调用函数而无需连线。在这里，节点的操作和代码创建函数共享了一整个空间，不过事情似乎会变得更难以理解。",{"type":405,"tag":535,"props":863,"children":865},{"id":864},"扩展",[866],{"type":414,"value":864},{"type":405,"tag":410,"props":868,"children":869},{},[870],{"type":414,"value":871},"关于 Dynamo 的自定义节点，找到几个有用的库：",{"type":405,"tag":452,"props":873,"children":874},{},[875,887,899],{"type":405,"tag":456,"props":876,"children":877},{},[878,885],{"type":405,"tag":442,"props":879,"children":882},{"href":880,"rel":881},"https://data-shapes.io/blog/",[446],[883],{"type":414,"value":884},"Data Shapes",{"type":414,"value":886},"：绘图和数据处理用的节点，包含了图表、表单、地图、表格、UI 构建（用户侧的表单等）。",{"type":405,"tag":456,"props":888,"children":889},{},[890,897],{"type":405,"tag":442,"props":891,"children":894},{"href":892,"rel":893},"https://bimorph.com/bimorph-nodes/",[446],[895],{"type":414,"value":896},"BIMORPH Nodes",{"type":414,"value":898},"：包含了碰撞检测等高级功能，主要面向 CAD、Curve、Revit 之类的数据结构。",{"type":405,"tag":456,"props":900,"children":901},{},[902,909],{"type":405,"tag":442,"props":903,"children":906},{"href":904,"rel":905},"https://github.com/ksobon/Bumblebee",[446],[907],{"type":414,"value":908},"Bumblebee",{"type":414,"value":910},"：用于操作 Excel，但是最近一次提交在 2019 年。",{"type":405,"tag":410,"props":912,"children":913},{},[914],{"type":414,"value":915},"Data Shapes 太棒了，可以用图表快速分析图中的数据。但是 Github 上只有 50+ 星星，看来 Dynamo 的用户中懂代码的群体还是太小了。其实就连 Dynamo 仓库本身的 Issue 数量也才 300+（未关闭的）。",{"title":398,"searchDepth":917,"depth":917,"links":918},2,[919,920,921,922],{"id":537,"depth":917,"text":537},{"id":750,"depth":917,"text":750},{"id":813,"depth":917,"text":813},{"id":864,"depth":917,"text":864},"markdown","content:6.maps:_business:_low-code:dynamo.md","content","6.maps/_business/_low-code/dynamo.md","6.maps/_business/_low-code/dynamo","md",[930,933],{"_path":931,"title":932,"description":398},"/maps/_business/_low-code/budibase","Budibase",{"_path":934,"title":935,"description":936},"/maps/_business/business-analysis","商业分析","商业分析是指通过拆解问题、分析需求、设计解决方案，为业务开展提供更好的数据和决策支持的过程。",1741604964969]