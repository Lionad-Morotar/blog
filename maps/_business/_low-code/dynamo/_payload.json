[{"data":1,"prerenderedAt":960},["ShallowReactive",2],{"navigation":3,"/maps/_business/_low-code/dynamo":416,"/maps/_business/_low-code/dynamo-surround":952},[4,32,86,108,135,141,147,153,399,405,411],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":42,"_path":43},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":45,"_path":46},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":48,"_path":49},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":51,"_path":52},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":54,"_path":55},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":57,"_path":58},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":60,"_path":61},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":63,"_path":64},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":66,"_path":67},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":69,"_path":70},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":72,"_path":73},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":75,"_path":76},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":78,"_path":79},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":81,"_path":82},"🚝 四十二篇系列","/articles/fourty-two",{"title":84,"_path":85},"📝 技术博客归档","/articles/fold",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102,105],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107},"🖨️ any-to-base64","/tools/any-to-base64",{"title":109,"_path":110,"children":111},"吉他剧场 / Music","/music",[112,114,117,120,123,126,129,132],{"title":113,"_path":110},"🎸 FingerStyle！",{"title":115,"_path":116},"🌬️ 等待的风","/music/wind",{"title":118,"_path":119},"💕 约定的海洋","/music/ocean",{"title":121,"_path":122},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":124,"_path":125},"🌏 残酷天使的行动纲领","/music/eva",{"title":127,"_path":128},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":130,"_path":131},"🍷 Wu Wei","/music/wu-wei",{"title":133,"_path":134},"🌅 无题","/music/untitled",{"title":136,"_path":137,"children":138},"画点什么 / Paint","/paint",[139],{"title":140,"_path":137},"🚧 正在施工",{"title":142,"_path":143,"children":144},"读书笔记 / Notes","/books",[145],{"title":146,"_path":143},"📕 读书笔记",{"title":148,"_path":149,"children":150},"知识地图 / Maps","/maps",[151],{"title":152,"_path":149},"🏁 知识地图",{"title":154,"_path":155,"children":156},"零散的笔记 / Gists","/gists",[157,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":158,"_path":155},"🧊 Gists",{"title":160,"_path":161},"网站的可访问性","/gists/accessibility",{"title":163,"_path":164},"Bit","/gists/bit",{"title":166,"_path":167},"图片模糊","/gists/blur",{"title":169,"_path":170},"渲染相关笔记","/gists/c4d",{"title":172,"_path":173},"CDN 问题记录","/gists/cdn",{"title":175,"_path":176},"消毒剂","/gists/cleaner",{"title":178,"_path":179},"Windows Command","/gists/cmd",{"title":181,"_path":182},"Command","/gists/command",{"title":184,"_path":185},"复杂科学","/gists/complexity-science",{"title":187,"_path":188},"GitHub Copilot","/gists/copilot",{"title":190,"_path":191},"宇宙","/gists/cosmos",{"title":193,"_path":194},"C++","/gists/cpp",{"title":196,"_path":197},"Data Structure","/gists/data-structure",{"title":199,"_path":200},"DEPRESSION","/gists/depression",{"title":202,"_path":203},"设计模式","/gists/design-patterns",{"title":205,"_path":206},"Developer Experience","/gists/developer-experience",{"title":208,"_path":209},"Device Metrics","/gists/device-metrix",{"title":211,"_path":212},"数字化转型","/gists/digital-transformation",{"title":214,"_path":215},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":217,"_path":218},"正则表达式","/gists/eegex",{"title":220,"_path":221},"Emoji","/gists/emoji",{"title":223,"_path":224},"工程","/gists/engineering",{"title":226,"_path":227},"熵","/gists/entropy",{"title":229,"_path":230},"Environment","/gists/environment",{"title":232,"_path":233},"Erlang","/gists/erlang",{"title":235,"_path":236},"逃离塔克夫","/gists/escape-from-tarkov",{"title":238,"_path":239},"ESNext (ES6-ES11)","/gists/esnext",{"title":241,"_path":242},"Eval！","/gists/eval",{"title":244,"_path":245},"Flutter","/gists/flutter",{"title":247,"_path":248},"字体","/gists/font",{"title":250,"_path":251},"JS 函数式编程","/gists/functional",{"title":253,"_path":254},"游戏化","/gists/gamification",{"title":256,"_path":257},"Google C++ Standard","/gists/google-cpp-standard",{"title":259,"_path":260},"双向链接完全体","/gists/graph",{"title":262,"_path":263},"Hardwares","/gists/hardwares",{"title":265,"_path":266},"哈希冲突","/gists/hash-collision",{"title":268,"_path":269},"信息设计","/gists/information-design",{"title":271,"_path":272},"InstantPage","/gists/instant.page",{"title":274,"_path":275},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":277,"_path":278},"KVStore","/gists/key-value-db",{"title":280,"_path":281},"Kubernetes","/gists/kubernetes",{"title":283,"_path":284},"Makefile","/gists/makefile",{"title":286,"_path":287},"Markdown Inline Style","/gists/markdown-nice",{"title":289,"_path":290},"小程序","/gists/miniapp",{"title":292,"_path":293},"减小页面快照体积","/gists/minify-html",{"title":295,"_path":296},"mklink","/gists/mklink",{"title":298,"_path":299},"Mock","/gists/mock",{"title":301,"_path":302},"多人协作系统","/gists/multiplayer",{"title":304,"_path":305},"多端应用","/gists/multy-end-app",{"title":307,"_path":308},"神经科学","/gists/neuroscience",{"title":310,"_path":311},"OO","/gists/oo",{"title":313,"_path":314},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":316,"_path":317},"PInvoke","/gists/pinvoke",{"title":319,"_path":320},"像素","/gists/pixel",{"title":322,"_path":323},"PowerShell","/gists/powershell",{"title":325,"_path":326},"量子","/gists/quantum",{"title":328,"_path":329},"保持好奇心","/gists/questions",{"title":331,"_path":332},"React Native","/gists/react-native",{"title":334,"_path":335},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":337,"_path":338},"SEO","/gists/seo",{"title":340,"_path":341},"Shader","/gists/shader",{"title":343,"_path":344},"Shape Up","/gists/shape-up",{"title":346,"_path":347},"睡觉","/gists/sleep",{"title":349,"_path":350},"记录奇怪的问题","/gists/solved",{"title":352,"_path":353},"States","/gists/states",{"title":355,"_path":356},"Storage","/gists/storage",{"title":358,"_path":359},"音视频流处理","/gists/stream-cli",{"title":361,"_path":362},"Symbol","/gists/symbol",{"title":364,"_path":365},"系统论","/gists/systems-theory",{"title":367,"_path":368},"Taro","/gists/taro",{"title":370,"_path":371},"任务切片","/gists/task-slice",{"title":373,"_path":374},"技术偏好","/gists/tech-dudge",{"title":376,"_path":377},"Untitled","/gists/untitled",{"title":379,"_path":380},"可变字体","/gists/variable-font",{"title":382,"_path":383},"视觉错觉","/gists/visual-illusion",{"title":385,"_path":386},"SS(SSR)","/gists/vpn",{"title":388,"_path":389},"VS Code 插件开发","/gists/vscode-plugin",{"title":391,"_path":392},"Web Components","/gists/web-components",{"title":394,"_path":395},"Windows","/gists/windows",{"title":397,"_path":398},"查缺补漏","/gists/wrong",{"title":400,"_path":401,"children":402},"代码笔记 / Gists","/source-code",[403],{"title":404,"_path":401},"🚄 代码笔记",{"title":406,"_path":407,"children":408},"我 / Abount","/hire",[409],{"title":410,"_path":407},"📬 技术简历",{"title":412,"_path":413,"children":414},"todo","/todo",[415],{"title":412,"_path":413},{"_path":417,"_dir":418,"_draft":419,"_partial":420,"_locale":421,"title":422,"description":423,"body":424,"_type":946,"_id":947,"_source":948,"_file":949,"_stem":950,"_extension":951},"/maps/_business/_low-code/dynamo","_low-code",false,true,"","Dynamo","Dynamo 原本是 Revit 中建筑信息模型 (BIM) 的附加模块，后来发展成熟，成为一个给设计师探索可视化编程、解决问题并自行制作工具的平台。",{"type":425,"children":426,"toc":939},"root",[427,439,444,452,459,474,529,534,539,544,552,557,563,568,576,635,640,648,656,690,695,700,705,710,715,723,728,735,740,748,753,758,766,771,776,781,786,794,799,807,812,817,824,829,834,839,844,849,854,862,867,875,880,885,890,895,934],{"type":428,"tag":429,"props":430,"children":431},"element","blockquote",{},[432],{"type":428,"tag":433,"props":434,"children":435},"p",{},[436],{"type":437,"value":438},"text","一款可视化编程工具，旨在同时供非编程人员和编程人员使用。它使用户能够直观地查看脚本行为、定义自定义逻辑以及使用各种文本编程语言的脚本。",{"type":428,"tag":433,"props":440,"children":441},{},[442],{"type":437,"value":443},"一个 Dynamo 示例：",{"type":428,"tag":433,"props":445,"children":446},{},[447],{"type":428,"tag":448,"props":449,"children":451},"img",{"alt":421,"src":450},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311908636.png",[],{"type":428,"tag":453,"props":454,"children":456},"h4",{"id":455},"dynamo-primer",[457],{"type":437,"value":458},"Dynamo Primer",{"type":428,"tag":433,"props":460,"children":461},{},[462,464,472],{"type":437,"value":463},"Autodesk 给 Dynamo 编写了一册全面指南，叫 ",{"type":428,"tag":465,"props":466,"children":470},"a",{"href":467,"rel":468},"https://primer.dynamobim.org/zh-cn/index.html",[469],"nofollow",[471],{"type":437,"value":458},{"type":437,"value":473},"。",{"type":428,"tag":475,"props":476,"children":477},"ul",{},[478,484,489,494,499,504,509,514,519,524],{"type":428,"tag":479,"props":480,"children":481},"li",{},[482],{"type":437,"value":483},"上下文：“可视化编程”的确切含义是什么？我需要了解哪些概念才能深入了解 Dynamo？",{"type":428,"tag":479,"props":485,"children":486},{},[487],{"type":437,"value":488},"快速入门：如何获取 Dynamo 并创建第一个程序？",{"type":428,"tag":479,"props":490,"children":491},{},[492],{"type":437,"value":493},"程序中的内容：Dynamo 的功能部分是什么以及如何使用它们？",{"type":428,"tag":479,"props":495,"children":496},{},[497],{"type":437,"value":498},"构建块：“数据”是什么，我可以在程序中开始使用哪些基本类型？",{"type":428,"tag":479,"props":500,"children":501},{},[502],{"type":437,"value":503},"用于设计的几何体：如何在 Dynamo 中使用几何元素？",{"type":428,"tag":479,"props":505,"children":506},{},[507],{"type":437,"value":508},"列表、列表、列表：如何管理和协调数据结构？",{"type":428,"tag":479,"props":510,"children":511},{},[512],{"type":437,"value":513},"节点中的代码：如何使用自己的代码开始扩展 Dynamo？",{"type":428,"tag":479,"props":515,"children":516},{},[517],{"type":437,"value":518},"计算 BIM: 如何将 Dynamo 与 Revit 模型结合使用？",{"type":428,"tag":479,"props":520,"children":521},{},[522],{"type":437,"value":523},"自定义节点：如何创建自己的节点？",{"type":428,"tag":479,"props":525,"children":526},{},[527],{"type":437,"value":528},"软件包：如何与社区共享我的工具？",{"type":428,"tag":433,"props":530,"children":531},{},[532],{"type":437,"value":533},"程序需要按照算法来工作，所以这些操作必然遵循输入、处理和输出的基本逻辑。",{"type":428,"tag":433,"props":535,"children":536},{},[537],{"type":437,"value":538},"编程的关键及我们会遇到的第一个障碍是：必须依靠某种形式的抽象形式，才能与计算机进行有效通信。",{"type":428,"tag":433,"props":540,"children":541},{},[542],{"type":437,"value":543},"可视化编程把描述性操作抽象成了节点（及节点关系）。Dynamo 将节点关系描述为“连接，将定义数据流”。下面是一个通过中心点和半径创建圆的例子：",{"type":428,"tag":433,"props":545,"children":546},{},[547],{"type":428,"tag":448,"props":548,"children":551},{"alt":549,"src":550},"Dynamo example to create a circle","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270238695.png",[],{"type":428,"tag":433,"props":553,"children":554},{},[555],{"type":437,"value":556},"Dynamo 的开发版本叫做“bleeding edge”。出血（bleeding）是一个设计领域术语，指裁切边缘距材料边缘的距离。",{"type":428,"tag":558,"props":559,"children":561},"h2",{"id":560},"界面",[562],{"type":437,"value":560},{"type":428,"tag":433,"props":564,"children":565},{},[566],{"type":437,"value":567},"节点主要分为如下几个部分，其中，“核心”和“几何”包含最多数量的节点（“核心”是什么？）。",{"type":428,"tag":433,"props":569,"children":570},{},[571],{"type":428,"tag":448,"props":572,"children":575},{"alt":573,"src":574},"Dynamo Libs","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270249685.png",[],{"type":428,"tag":577,"props":578,"children":579},"ol",{},[580,585,590,595,600,605,610,615,620,625,630],{"type":428,"tag":479,"props":581,"children":582},{},[583],{"type":437,"value":584},"词典",{"type":428,"tag":479,"props":586,"children":587},{},[588],{"type":437,"value":589},"显示",{"type":428,"tag":479,"props":591,"children":592},{},[593],{"type":437,"value":594},"几何",{"type":428,"tag":479,"props":596,"children":597},{},[598],{"type":437,"value":599},"ImportExport",{"type":428,"tag":479,"props":601,"children":602},{},[603],{"type":437,"value":604},"输入",{"type":428,"tag":479,"props":606,"children":607},{},[608],{"type":437,"value":609},"列表",{"type":428,"tag":479,"props":611,"children":612},{},[613],{"type":437,"value":614},"匹配",{"type":428,"tag":479,"props":616,"children":617},{},[618],{"type":437,"value":619},"Revit",{"type":428,"tag":479,"props":621,"children":622},{},[623],{"type":437,"value":624},"脚本",{"type":428,"tag":479,"props":626,"children":627},{},[628],{"type":437,"value":629},"字符串",{"type":428,"tag":479,"props":631,"children":632},{},[633],{"type":437,"value":634},"附加模块",{"type":428,"tag":433,"props":636,"children":637},{},[638],{"type":437,"value":639},"可以参考一下节点布局算法。界面中的“节点清理”即节点布局：",{"type":428,"tag":433,"props":641,"children":642},{},[643],{"type":428,"tag":448,"props":644,"children":647},{"alt":645,"src":646},"after clean nodes","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270257741.png",[],{"type":428,"tag":433,"props":649,"children":650},{},[651],{"type":428,"tag":448,"props":652,"children":655},{"alt":653,"src":654},"一个 Dynamo 节点","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270309333.png",[],{"type":428,"tag":577,"props":657,"children":658},{},[659,661,666,667,672,673,678,679,684,685],{"type":437,"value":660},"\n  ",{"type":428,"tag":479,"props":662,"children":663},{},[664],{"type":437,"value":665},"名称 - 具有 Category.Name 命名约定的节点名称",{"type":437,"value":660},{"type":428,"tag":479,"props":668,"children":669},{},[670],{"type":437,"value":671},"主节点 - 节点的主体 - 在此处单击鼠标右键可显示整个节点级别的选项",{"type":437,"value":660},{"type":428,"tag":479,"props":674,"children":675},{},[676],{"type":437,"value":677},"端口（输入输出）- 导线的接受器，它们向节点提供输入数据以及节点操作的结果，有类型和值",{"type":437,"value":660},{"type":428,"tag":479,"props":680,"children":681},{},[682],{"type":437,"value":683},"连缀图标 - 表示为匹配列表输入指定的“连缀”选项（稍后再做详细介绍）",{"type":437,"value":660},{"type":428,"tag":479,"props":686,"children":687},{},[688],{"type":437,"value":689},"默认值 - 在输入端口上单击鼠标右键 - 某些节点具有可以使用也可以不使用的默认值。",{"type":428,"tag":433,"props":691,"children":692},{},[693],{"type":437,"value":694},"节点根据颜色还划分为：非活动、错误、冻结、选中、警告等状态。",{"type":428,"tag":433,"props":696,"children":697},{},[698],{"type":437,"value":699},"所有节点只分三层排列，其命名惯例为：library.category.nodeName。",{"type":428,"tag":433,"props":701,"children":702},{},[703],{"type":437,"value":704},"如何管理大量节点？通过注释标记节点功能、Watch 节点观察节点输出、Group 分组节点。",{"type":428,"tag":433,"props":706,"children":707},{},[708],{"type":437,"value":709},"因为节点的颜色已经被用来表示节点的状态，所以节点层面还缺少一种视觉方式来表示节点的类型。在 PRay 中也许可以使用图标、背景纹案之类的方案。",{"type":428,"tag":433,"props":711,"children":712},{},[713],{"type":437,"value":714},"在工程中 Dynamo 使用分组颜色来区分不用的功能区域。",{"type":428,"tag":433,"props":716,"children":717},{},[718],{"type":428,"tag":448,"props":719,"children":722},{"alt":720,"src":721},"dynamo project template","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311703670.png",[],{"type":428,"tag":433,"props":724,"children":725},{},[726],{"type":437,"value":727},"Dynamo 的节点很清晰也很漂亮：",{"type":428,"tag":433,"props":729,"children":730},{},[731],{"type":428,"tag":448,"props":732,"children":734},{"alt":421,"src":733},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270327205.png",[],{"type":428,"tag":433,"props":736,"children":737},{},[738],{"type":437,"value":739},"节点的抽象层级应该符合用户的认知层级，过高过低都不行，所以产品设计上经常会有“表达式”这么一个用来描述公式化逻辑的节点。如果要用节点把公式写出来那就太麻烦了，比如黄金螺旋的公式很简单：$x=r\\cos(\\theta)$, $y=r\\sin(\\theta)$，但是如果用节点来表达就会变得很复杂，如下图：",{"type":428,"tag":433,"props":741,"children":742},{},[743],{"type":428,"tag":448,"props":744,"children":747},{"alt":745,"src":746},"Gold Spiral","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270345013.png",[],{"type":428,"tag":433,"props":749,"children":750},{},[751],{"type":437,"value":752},"怎么处理混乱的输入？",{"type":428,"tag":433,"props":754,"children":755},{},[756],{"type":437,"value":757},"如图，有三种条件逻辑的表达方式，但是为了给这三个节点输入统一的值，输入连线处理得很难看：",{"type":428,"tag":433,"props":759,"children":760},{},[761],{"type":428,"tag":448,"props":762,"children":765},{"alt":763,"src":764},"three ways to express conditional logic","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270349782.png",[],{"type":428,"tag":433,"props":767,"children":768},{},[769],{"type":437,"value":770},"应该创建“节点分身”之类的概念，或是“幽灵节点”？操作逻辑可以是：从一个非分身节点复制出一个分身，分身和节点的数据保持一致，两者都可以修改。然后可以将分身节点拖到任意地方使用，这样就解耦了输入和使用方。不过，这样似乎会导致新的混乱，em...",{"type":428,"tag":558,"props":772,"children":774},{"id":773},"几何体",[775],{"type":437,"value":773},{"type":428,"tag":433,"props":777,"children":778},{},[779],{"type":437,"value":780},"“维数是一种开始对几何图形进行分类的便捷方法，但它不一定是最佳方法。毕竟，我们不仅使用“点”、“线”、“平面”和“方框”建模 - 如果我想要弯曲，该怎么办？”",{"type":428,"tag":433,"props":782,"children":783},{},[784],{"type":437,"value":785},"正如游戏建模中接触的“网格”的概念，Dynamo 中自有一套几何体的数据类型（估计和 Autodesk 其他产品保持一致）：",{"type":428,"tag":433,"props":787,"children":788},{},[789],{"type":428,"tag":448,"props":790,"children":793},{"alt":791,"src":792},"Geometry Data Types","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270420841.png",[],{"type":428,"tag":433,"props":795,"children":796},{},[797],{"type":437,"value":798},"之前用过 C4D 和 Blender，这些数据类型都和 Dynamo 的类似（或者说几乎一致？）",{"type":428,"tag":433,"props":800,"children":801},{},[802],{"type":428,"tag":448,"props":803,"children":806},{"alt":804,"src":805},"Geometry Types","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270423147.png",[],{"type":428,"tag":433,"props":808,"children":809},{},[810],{"type":437,"value":811},"“抽象”的数据类型不能在屏幕上预览，这和“headless”的概念很类似，都是在界面底层通过操作数据结构来创建一种更基本的“逻辑”，可以没有界面。说“可以”是因为比如“平面”之类的数据类型尽管是抽象的，但（为了操作的便利性）仍可以在界面上预览。",{"type":428,"tag":433,"props":813,"children":814},{},[815],{"type":437,"value":816},"节点冻结用于禁用当前及下游节点，可以避免修改上游节点导致下游节点重新计算带来的巨大性能开销，如下图，冻结了圆和圆锥的 Union 操作。",{"type":428,"tag":433,"props":818,"children":819},{},[820],{"type":428,"tag":448,"props":821,"children":823},{"alt":421,"src":822},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270450836.png",[],{"type":428,"tag":433,"props":825,"children":826},{},[827],{"type":437,"value":828},"Comfy UI 在跑流程时，节点上会有个进度条显示，暗示当前的执行进度。",{"type":428,"tag":433,"props":830,"children":831},{},[832],{"type":437,"value":833},"两种形式分别对应：实时预览和离线计算。鉴于 PRay 的代码编辑需要实时预览，但是节点的执行机制需要设计成离线式的，也就是全部走异步+防抖的形式。不过，这样的话又会碰到副作用的问题。.. 还是再考虑下。",{"type":428,"tag":558,"props":835,"children":837},{"id":836},"数据结构",[838],{"type":437,"value":836},{"type":428,"tag":433,"props":840,"children":841},{},[842],{"type":437,"value":843},"对于能接受列表的节点，比如 PolyCurve.ByPoints 和 Circle.ByCenterPointRadius，他们都能接受点列表作为输入，但是逻辑处理机制不同，前者按照点列表生成多段曲线，后者生成多个圆。也就是说，对于后者，似乎存在一个隐式的“循环”操作。",{"type":428,"tag":433,"props":845,"children":846},{},[847],{"type":437,"value":848},"当两个列表长度不匹配时，通过设置“连缀”选项来处理，可选“最短列表”、“笛卡尔积（叉积）”等。鉴于在非绘图绘表的 Web 数据处理一般是操作相同长度的列表，所以这个设计不能直接套用。",{"type":428,"tag":433,"props":850,"children":851},{},[852],{"type":437,"value":853},"因为用节点编排逻辑只是代码的某种子集，所以见到 Dynamo 中有“节点转换到代码”这种功能也不足为奇。在 Dynamo Primer 的“最佳实践”章节，甚至直接提到了可以使用节点到代码功能降低图形复杂度。只是，他还说节点到代码“无法轻松返回”？难道节点到代码丢失了除了节点位置之类的其他信息，或者只是单纯没有代码解析器所以提供这个功能。",{"type":428,"tag":433,"props":855,"children":856},{},[857],{"type":428,"tag":448,"props":858,"children":861},{"alt":859,"src":860},"dynamo nodes 2 codes","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311638043.png",[],{"type":428,"tag":433,"props":863,"children":864},{},[865],{"type":437,"value":866},"至于在创建、操作数据和编排逻辑这块，代码的表达性要比节点强太多了，以条件逻辑举例，见下图。",{"type":428,"tag":433,"props":868,"children":869},{},[870],{"type":428,"tag":448,"props":871,"children":874},{"alt":872,"src":873},"condition expression","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311643375.png",[],{"type":428,"tag":433,"props":876,"children":877},{},[878],{"type":437,"value":879},"那么节点强在什么地方呢？举个例子，可视化变成的一个优势是可以直观的观察到数据流，并且提供了更强的人机交互。所以，如果代码块支持用模版语法自定义变量，再由节点作为可控输入，就可以二者的优势。这其实是“函数”，也就是说，代码块本身只是代码，并没有显示的切换成“表达式”、“语句”、“函数”等模式，而传统意义上的代码中的“函数”在可视化编程中是个外显的界面概念。",{"type":428,"tag":433,"props":881,"children":882},{},[883],{"type":437,"value":884},"实际上，在 Dynamo 的“代码块”可以声明“函数”。声明后，其他代码块可以直接调用函数而无需连线。在这里，节点的操作和代码创建函数共享了一整个空间，不过事情似乎会变得更难以理解。",{"type":428,"tag":558,"props":886,"children":888},{"id":887},"扩展",[889],{"type":437,"value":887},{"type":428,"tag":433,"props":891,"children":892},{},[893],{"type":437,"value":894},"关于 Dynamo 的自定义节点，找到几个有用的库：",{"type":428,"tag":475,"props":896,"children":897},{},[898,910,922],{"type":428,"tag":479,"props":899,"children":900},{},[901,908],{"type":428,"tag":465,"props":902,"children":905},{"href":903,"rel":904},"https://data-shapes.io/blog/",[469],[906],{"type":437,"value":907},"Data Shapes",{"type":437,"value":909},"：绘图和数据处理用的节点，包含了图表、表单、地图、表格、UI 构建（用户侧的表单等）。",{"type":428,"tag":479,"props":911,"children":912},{},[913,920],{"type":428,"tag":465,"props":914,"children":917},{"href":915,"rel":916},"https://bimorph.com/bimorph-nodes/",[469],[918],{"type":437,"value":919},"BIMORPH Nodes",{"type":437,"value":921},"：包含了碰撞检测等高级功能，主要面向 CAD、Curve、Revit 之类的数据结构。",{"type":428,"tag":479,"props":923,"children":924},{},[925,932],{"type":428,"tag":465,"props":926,"children":929},{"href":927,"rel":928},"https://github.com/ksobon/Bumblebee",[469],[930],{"type":437,"value":931},"Bumblebee",{"type":437,"value":933},"：用于操作 Excel，但是最近一次提交在 2019 年。",{"type":428,"tag":433,"props":935,"children":936},{},[937],{"type":437,"value":938},"Data Shapes 太棒了，可以用图表快速分析图中的数据。但是 Github 上只有 50+ 星星，看来 Dynamo 的用户中懂代码的群体还是太小了。其实就连 Dynamo 仓库本身的 Issue 数量也才 300+（未关闭的）。",{"title":421,"searchDepth":940,"depth":940,"links":941},2,[942,943,944,945],{"id":560,"depth":940,"text":560},{"id":773,"depth":940,"text":773},{"id":836,"depth":940,"text":836},{"id":887,"depth":940,"text":887},"markdown","content:6.maps:_business:_low-code:dynamo.md","content","6.maps/_business/_low-code/dynamo.md","6.maps/_business/_low-code/dynamo","md",[953,956],{"_path":954,"title":955,"description":421},"/maps/_business/_low-code/budibase","Budibase",{"_path":957,"title":958,"description":959},"/maps/_business/low-code","低代码","无代码、低代码、高代码，这是一个围绕人机交互的有趣话题。",1738321921638]