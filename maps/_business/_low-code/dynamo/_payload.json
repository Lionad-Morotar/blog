[{"data":1,"prerenderedAt":959},["ShallowReactive",2],{"navigation":3,"/maps/_business/_low-code/dynamo":416,"/maps/_business/_low-code/dynamo-surround":951},[4,32,86,108,135,141,147,153,399,405,411],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":42,"_path":43},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":45,"_path":46},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":48,"_path":49},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":51,"_path":52},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":54,"_path":55},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":57,"_path":58},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":60,"_path":61},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":63,"_path":64},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":66,"_path":67},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":69,"_path":70},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":72,"_path":73},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":75,"_path":76},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":78,"_path":79},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":81,"_path":82},"🚝 四十二篇系列","/articles/fourty-two",{"title":84,"_path":85},"📝 技术博客归档","/articles/fold",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102,105],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107},"🖨️ any-to-base64","/tools/any-to-base64",{"title":109,"_path":110,"children":111},"吉他剧场 / Music","/music",[112,114,117,120,123,126,129,132],{"title":113,"_path":110},"🎸 FingerStyle！",{"title":115,"_path":116},"🌬️ 等待的风","/music/wind",{"title":118,"_path":119},"💕 约定的海洋","/music/ocean",{"title":121,"_path":122},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":124,"_path":125},"🌏 残酷天使的行动纲领","/music/eva",{"title":127,"_path":128},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":130,"_path":131},"🍷 Wu Wei","/music/wu-wei",{"title":133,"_path":134},"🌅 无题","/music/untitled",{"title":136,"_path":137,"children":138},"画点什么 / Paint","/paint",[139],{"title":140,"_path":137},"🚧 正在施工",{"title":142,"_path":143,"children":144},"读书笔记 / Notes","/books",[145],{"title":146,"_path":143},"📕 读书笔记",{"title":148,"_path":149,"children":150},"知识地图 / Maps","/maps",[151],{"title":152,"_path":149},"🏁 知识地图",{"title":154,"_path":155,"children":156},"零散的笔记 / Gists","/gists",[157,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":158,"_path":155},"🧊 Gists",{"title":160,"_path":161},"网站的可访问性","/gists/accessibility",{"title":163,"_path":164},"Bit","/gists/bit",{"title":166,"_path":167},"图片模糊","/gists/blur",{"title":169,"_path":170},"渲染相关笔记","/gists/c4d",{"title":172,"_path":173},"CDN 问题记录","/gists/cdn",{"title":175,"_path":176},"消毒剂","/gists/cleaner",{"title":178,"_path":179},"Windows Command","/gists/cmd",{"title":181,"_path":182},"Command","/gists/command",{"title":184,"_path":185},"复杂科学","/gists/complexity-science",{"title":187,"_path":188},"GitHub Copilot","/gists/copilot",{"title":190,"_path":191},"宇宙","/gists/cosmos",{"title":193,"_path":194},"C++","/gists/cpp",{"title":196,"_path":197},"Data Structure","/gists/data-structure",{"title":199,"_path":200},"DEPRESSION","/gists/depression",{"title":202,"_path":203},"设计模式","/gists/design-patterns",{"title":205,"_path":206},"Developer Experience","/gists/developer-experience",{"title":208,"_path":209},"Device Metrics","/gists/device-metrix",{"title":211,"_path":212},"数字化转型","/gists/digital-transformation",{"title":214,"_path":215},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":217,"_path":218},"正则表达式","/gists/eegex",{"title":220,"_path":221},"Emoji","/gists/emoji",{"title":223,"_path":224},"工程","/gists/engineering",{"title":226,"_path":227},"熵","/gists/entropy",{"title":229,"_path":230},"Environment","/gists/environment",{"title":232,"_path":233},"Erlang","/gists/erlang",{"title":235,"_path":236},"逃离塔克夫","/gists/escape-from-tarkov",{"title":238,"_path":239},"ESNext (ES6-ES11)","/gists/esnext",{"title":241,"_path":242},"Eval！","/gists/eval",{"title":244,"_path":245},"Flutter","/gists/flutter",{"title":247,"_path":248},"字体","/gists/font",{"title":250,"_path":251},"JS 函数式编程","/gists/functional",{"title":253,"_path":254},"游戏化","/gists/gamification",{"title":256,"_path":257},"Google C++ Standard","/gists/google-cpp-standard",{"title":259,"_path":260},"双向链接完全体","/gists/graph",{"title":262,"_path":263},"Hardwares","/gists/hardwares",{"title":265,"_path":266},"哈希冲突","/gists/hash-collision",{"title":268,"_path":269},"信息设计","/gists/information-design",{"title":271,"_path":272},"InstantPage","/gists/instant.page",{"title":274,"_path":275},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":277,"_path":278},"KVStore","/gists/key-value-db",{"title":280,"_path":281},"Kubernetes","/gists/kubernetes",{"title":283,"_path":284},"Makefile","/gists/makefile",{"title":286,"_path":287},"Markdown Inline Style","/gists/markdown-nice",{"title":289,"_path":290},"小程序","/gists/miniapp",{"title":292,"_path":293},"减小页面快照体积","/gists/minify-html",{"title":295,"_path":296},"mklink","/gists/mklink",{"title":298,"_path":299},"Mock","/gists/mock",{"title":301,"_path":302},"多人协作系统","/gists/multiplayer",{"title":304,"_path":305},"多端应用","/gists/multy-end-app",{"title":307,"_path":308},"神经科学","/gists/neuroscience",{"title":310,"_path":311},"OO","/gists/oo",{"title":313,"_path":314},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":316,"_path":317},"PInvoke","/gists/pinvoke",{"title":319,"_path":320},"像素","/gists/pixel",{"title":322,"_path":323},"PowerShell","/gists/powershell",{"title":325,"_path":326},"量子","/gists/quantum",{"title":328,"_path":329},"保持好奇心","/gists/questions",{"title":331,"_path":332},"React Native","/gists/react-native",{"title":334,"_path":335},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":337,"_path":338},"SEO","/gists/seo",{"title":340,"_path":341},"Shader","/gists/shader",{"title":343,"_path":344},"Shape Up","/gists/shape-up",{"title":346,"_path":347},"睡觉","/gists/sleep",{"title":349,"_path":350},"记录奇怪的问题","/gists/solved",{"title":352,"_path":353},"States","/gists/states",{"title":355,"_path":356},"Storage","/gists/storage",{"title":358,"_path":359},"音视频流处理","/gists/stream-cli",{"title":361,"_path":362},"Symbol","/gists/symbol",{"title":364,"_path":365},"系统论","/gists/systems-theory",{"title":367,"_path":368},"Taro","/gists/taro",{"title":370,"_path":371},"任务切片","/gists/task-slice",{"title":373,"_path":374},"技术偏好","/gists/tech-dudge",{"title":376,"_path":377},"Untitled","/gists/untitled",{"title":379,"_path":380},"可变字体","/gists/variable-font",{"title":382,"_path":383},"视觉错觉","/gists/visual-illusion",{"title":385,"_path":386},"SS(SSR)","/gists/vpn",{"title":388,"_path":389},"VS Code 插件开发","/gists/vscode-plugin",{"title":391,"_path":392},"Web Components","/gists/web-components",{"title":394,"_path":395},"Windows","/gists/windows",{"title":397,"_path":398},"查缺补漏","/gists/wrong",{"title":400,"_path":401,"children":402},"代码笔记 / Gists","/source-code",[403],{"title":404,"_path":401},"🚄 代码笔记",{"title":406,"_path":407,"children":408},"我 / Abount","/hire",[409],{"title":410,"_path":407},"📬 技术简历",{"title":412,"_path":413,"children":414},"todo","/todo",[415],{"title":412,"_path":413},{"_path":417,"_dir":418,"_draft":419,"_partial":420,"_locale":421,"title":422,"description":423,"body":424,"_type":945,"_id":946,"_source":947,"_file":948,"_stem":949,"_extension":950},"/maps/_business/_low-code/dynamo","_low-code",false,true,"","Dynamo","Dynamo 是一个设计类的低码产品，可以帮助你快速构建程序算法。",{"type":425,"children":426,"toc":937},"root",[427,435,441,450,457,472,527,532,537,542,551,556,561,566,574,633,638,646,654,688,693,698,703,708,713,721,726,733,738,746,751,756,764,769,774,779,784,792,797,805,810,815,822,827,832,837,842,847,852,860,865,873,878,883,888,893,932],{"type":428,"tag":429,"props":430,"children":432},"element","h2",{"id":431},"简介",[433],{"type":434,"value":431},"text",{"type":428,"tag":436,"props":437,"children":438},"p",{},[439],{"type":434,"value":440},"Dynamo 原本是 Revit 中建筑信息模型 (BIM) 的附加模块，后来发展成熟，成为一个给设计师探索可视化编程、解决问题并自行制作工具的平台。",{"type":428,"tag":442,"props":443,"children":444},"blockquote",{},[445],{"type":428,"tag":436,"props":446,"children":447},{},[448],{"type":434,"value":449},"一款可视化编程工具，旨在同时供非编程人员和编程人员使用。它使用户能够直观地查看脚本行为、定义自定义逻辑以及使用各种文本编程语言的脚本。",{"type":428,"tag":451,"props":452,"children":454},"h4",{"id":453},"dynamo-primer",[455],{"type":434,"value":456},"Dynamo Primer",{"type":428,"tag":436,"props":458,"children":459},{},[460,462,470],{"type":434,"value":461},"Autodesk 给 Dynamo 编写了一册全面指南，叫 ",{"type":428,"tag":463,"props":464,"children":468},"a",{"href":465,"rel":466},"https://primer.dynamobim.org/zh-cn/index.html",[467],"nofollow",[469],{"type":434,"value":456},{"type":434,"value":471},"。",{"type":428,"tag":473,"props":474,"children":475},"ul",{},[476,482,487,492,497,502,507,512,517,522],{"type":428,"tag":477,"props":478,"children":479},"li",{},[480],{"type":434,"value":481},"上下文：“可视化编程”的确切含义是什么？我需要了解哪些概念才能深入了解 Dynamo？",{"type":428,"tag":477,"props":483,"children":484},{},[485],{"type":434,"value":486},"快速入门：如何获取 Dynamo 并创建第一个程序？",{"type":428,"tag":477,"props":488,"children":489},{},[490],{"type":434,"value":491},"程序中的内容：Dynamo 的功能部分是什么以及如何使用它们？",{"type":428,"tag":477,"props":493,"children":494},{},[495],{"type":434,"value":496},"构建块：“数据”是什么，我可以在程序中开始使用哪些基本类型？",{"type":428,"tag":477,"props":498,"children":499},{},[500],{"type":434,"value":501},"用于设计的几何体：如何在 Dynamo 中使用几何元素？",{"type":428,"tag":477,"props":503,"children":504},{},[505],{"type":434,"value":506},"列表、列表、列表：如何管理和协调数据结构？",{"type":428,"tag":477,"props":508,"children":509},{},[510],{"type":434,"value":511},"节点中的代码：如何使用自己的代码开始扩展 Dynamo？",{"type":428,"tag":477,"props":513,"children":514},{},[515],{"type":434,"value":516},"计算 BIM: 如何将 Dynamo 与 Revit 模型结合使用？",{"type":428,"tag":477,"props":518,"children":519},{},[520],{"type":434,"value":521},"自定义节点：如何创建自己的节点？",{"type":428,"tag":477,"props":523,"children":524},{},[525],{"type":434,"value":526},"软件包：如何与社区共享我的工具？",{"type":428,"tag":436,"props":528,"children":529},{},[530],{"type":434,"value":531},"程序需要按照算法来工作，所以这些操作必然遵循输入、处理和输出的基本逻辑。",{"type":428,"tag":436,"props":533,"children":534},{},[535],{"type":434,"value":536},"编程的关键及我们会遇到的第一个障碍是：必须依靠某种形式的抽象形式，才能与计算机进行有效通信。",{"type":428,"tag":436,"props":538,"children":539},{},[540],{"type":434,"value":541},"可视化编程把描述性操作抽象成了节点（及节点关系）。Dynamo 将节点关系描述为“连接，将定义数据流”。下面是一个通过中心点和半径创建圆的例子：",{"type":428,"tag":436,"props":543,"children":544},{},[545],{"type":428,"tag":546,"props":547,"children":550},"img",{"alt":548,"src":549},"Dynamo example to create a circle","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270238695.png",[],{"type":428,"tag":436,"props":552,"children":553},{},[554],{"type":434,"value":555},"Dynamo 的开发版本叫做“bleeding edge”。出血（bleeding）是一个设计领域术语，指裁切边缘距材料边缘的距离。",{"type":428,"tag":429,"props":557,"children":559},{"id":558},"界面",[560],{"type":434,"value":558},{"type":428,"tag":436,"props":562,"children":563},{},[564],{"type":434,"value":565},"节点主要分为如下几个部分，其中，“核心”和“几何”包含最多数量的节点（“核心”是什么？）。",{"type":428,"tag":436,"props":567,"children":568},{},[569],{"type":428,"tag":546,"props":570,"children":573},{"alt":571,"src":572},"Dynamo Libs","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270249685.png",[],{"type":428,"tag":575,"props":576,"children":577},"ol",{},[578,583,588,593,598,603,608,613,618,623,628],{"type":428,"tag":477,"props":579,"children":580},{},[581],{"type":434,"value":582},"词典",{"type":428,"tag":477,"props":584,"children":585},{},[586],{"type":434,"value":587},"显示",{"type":428,"tag":477,"props":589,"children":590},{},[591],{"type":434,"value":592},"几何",{"type":428,"tag":477,"props":594,"children":595},{},[596],{"type":434,"value":597},"ImportExport",{"type":428,"tag":477,"props":599,"children":600},{},[601],{"type":434,"value":602},"输入",{"type":428,"tag":477,"props":604,"children":605},{},[606],{"type":434,"value":607},"列表",{"type":428,"tag":477,"props":609,"children":610},{},[611],{"type":434,"value":612},"匹配",{"type":428,"tag":477,"props":614,"children":615},{},[616],{"type":434,"value":617},"Revit",{"type":428,"tag":477,"props":619,"children":620},{},[621],{"type":434,"value":622},"脚本",{"type":428,"tag":477,"props":624,"children":625},{},[626],{"type":434,"value":627},"字符串",{"type":428,"tag":477,"props":629,"children":630},{},[631],{"type":434,"value":632},"附加模块",{"type":428,"tag":436,"props":634,"children":635},{},[636],{"type":434,"value":637},"可以参考一下节点布局算法。界面中的“节点清理”即节点布局：",{"type":428,"tag":436,"props":639,"children":640},{},[641],{"type":428,"tag":546,"props":642,"children":645},{"alt":643,"src":644},"after clean nodes","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270257741.png",[],{"type":428,"tag":436,"props":647,"children":648},{},[649],{"type":428,"tag":546,"props":650,"children":653},{"alt":651,"src":652},"一个 Dynamo 节点","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270309333.png",[],{"type":428,"tag":575,"props":655,"children":656},{},[657,659,664,665,670,671,676,677,682,683],{"type":434,"value":658},"\n  ",{"type":428,"tag":477,"props":660,"children":661},{},[662],{"type":434,"value":663},"名称 - 具有 Category.Name 命名约定的节点名称",{"type":434,"value":658},{"type":428,"tag":477,"props":666,"children":667},{},[668],{"type":434,"value":669},"主节点 - 节点的主体 - 在此处单击鼠标右键可显示整个节点级别的选项",{"type":434,"value":658},{"type":428,"tag":477,"props":672,"children":673},{},[674],{"type":434,"value":675},"端口（输入输出）- 导线的接受器，它们向节点提供输入数据以及节点操作的结果，有类型和值",{"type":434,"value":658},{"type":428,"tag":477,"props":678,"children":679},{},[680],{"type":434,"value":681},"连缀图标 - 表示为匹配列表输入指定的“连缀”选项（稍后再做详细介绍）",{"type":434,"value":658},{"type":428,"tag":477,"props":684,"children":685},{},[686],{"type":434,"value":687},"默认值 - 在输入端口上单击鼠标右键 - 某些节点具有可以使用也可以不使用的默认值。",{"type":428,"tag":436,"props":689,"children":690},{},[691],{"type":434,"value":692},"节点根据颜色还划分为：非活动、错误、冻结、选中、警告等状态。",{"type":428,"tag":436,"props":694,"children":695},{},[696],{"type":434,"value":697},"所有节点只分三层排列，其命名惯例为：library.category.nodeName。",{"type":428,"tag":436,"props":699,"children":700},{},[701],{"type":434,"value":702},"如何管理大量节点？通过注释标记节点功能、Watch 节点观察节点输出、Group 分组节点。",{"type":428,"tag":436,"props":704,"children":705},{},[706],{"type":434,"value":707},"因为节点的颜色已经被用来表示节点的状态，所以节点层面还缺少一种视觉方式来表示节点的类型。在 PRay 中也许可以使用图标、背景纹案之类的方案。",{"type":428,"tag":436,"props":709,"children":710},{},[711],{"type":434,"value":712},"在工程中 Dynamo 使用分组颜色来区分不用的功能区域。",{"type":428,"tag":436,"props":714,"children":715},{},[716],{"type":428,"tag":546,"props":717,"children":720},{"alt":718,"src":719},"dynamo project template","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311703670.png",[],{"type":428,"tag":436,"props":722,"children":723},{},[724],{"type":434,"value":725},"Dynamo 的节点很清晰也很漂亮：",{"type":428,"tag":436,"props":727,"children":728},{},[729],{"type":428,"tag":546,"props":730,"children":732},{"alt":421,"src":731},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270327205.png",[],{"type":428,"tag":436,"props":734,"children":735},{},[736],{"type":434,"value":737},"节点的抽象层级应该符合用户的认知层级，过高过低都不行，所以产品设计上经常会有“表达式”这么一个用来描述公式化逻辑的节点。如果要用节点把公式写出来那就太麻烦了，比如黄金螺旋的公式很简单：$x=r\\cos(\\theta)$, $y=r\\sin(\\theta)$，但是如果用节点来表达就会变得很复杂，如下图：",{"type":428,"tag":436,"props":739,"children":740},{},[741],{"type":428,"tag":546,"props":742,"children":745},{"alt":743,"src":744},"Gold Spiral","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270345013.png",[],{"type":428,"tag":436,"props":747,"children":748},{},[749],{"type":434,"value":750},"怎么处理混乱的输入？",{"type":428,"tag":436,"props":752,"children":753},{},[754],{"type":434,"value":755},"如图，有三种条件逻辑的表达方式，但是为了给这三个节点输入统一的值，输入连线处理得很难看：",{"type":428,"tag":436,"props":757,"children":758},{},[759],{"type":428,"tag":546,"props":760,"children":763},{"alt":761,"src":762},"three ways to express conditional logic","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270349782.png",[],{"type":428,"tag":436,"props":765,"children":766},{},[767],{"type":434,"value":768},"应该创建“节点分身”之类的概念，或是“幽灵节点”？操作逻辑可以是：从一个非分身节点复制出一个分身，分身和节点的数据保持一致，两者都可以修改。然后可以将分身节点拖到任意地方使用，这样就解耦了输入和使用方。不过，这样似乎会导致新的混乱，em...",{"type":428,"tag":429,"props":770,"children":772},{"id":771},"几何体",[773],{"type":434,"value":771},{"type":428,"tag":436,"props":775,"children":776},{},[777],{"type":434,"value":778},"“维数是一种开始对几何图形进行分类的便捷方法，但它不一定是最佳方法。毕竟，我们不仅使用“点”、“线”、“平面”和“方框”建模 - 如果我想要弯曲，该怎么办？”",{"type":428,"tag":436,"props":780,"children":781},{},[782],{"type":434,"value":783},"正如游戏建模中接触的“网格”的概念，Dynamo 中自有一套几何体的数据类型（估计和 Autodesk 其他产品保持一致）：",{"type":428,"tag":436,"props":785,"children":786},{},[787],{"type":428,"tag":546,"props":788,"children":791},{"alt":789,"src":790},"Geometry Data Types","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270420841.png",[],{"type":428,"tag":436,"props":793,"children":794},{},[795],{"type":434,"value":796},"之前用过 C4D 和 Blender，这些数据类型都和 Dynamo 的类似（或者说几乎一致？）",{"type":428,"tag":436,"props":798,"children":799},{},[800],{"type":428,"tag":546,"props":801,"children":804},{"alt":802,"src":803},"Geometry Types","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270423147.png",[],{"type":428,"tag":436,"props":806,"children":807},{},[808],{"type":434,"value":809},"“抽象”的数据类型不能在屏幕上预览，这和“headless”的概念很类似，都是在界面底层通过操作数据结构来创建一种更基本的“逻辑”，可以没有界面。说“可以”是因为比如“平面”之类的数据类型尽管是抽象的，但（为了操作的便利性）仍可以在界面上预览。",{"type":428,"tag":436,"props":811,"children":812},{},[813],{"type":434,"value":814},"节点冻结用于禁用当前及下游节点，可以避免修改上游节点导致下游节点重新计算带来的巨大性能开销，如下图，冻结了圆和圆锥的 Union 操作。",{"type":428,"tag":436,"props":816,"children":817},{},[818],{"type":428,"tag":546,"props":819,"children":821},{"alt":421,"src":820},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501270450836.png",[],{"type":428,"tag":436,"props":823,"children":824},{},[825],{"type":434,"value":826},"Comfy UI 在跑流程时，节点上会有个进度条显示，暗示当前的执行进度。",{"type":428,"tag":436,"props":828,"children":829},{},[830],{"type":434,"value":831},"两种形式分别对应：实时预览和离线计算。鉴于 PRay 的代码编辑需要实时预览，但是节点的执行机制需要设计成离线式的，也就是全部走异步+防抖的形式。不过，这样的话又会碰到副作用的问题。.. 还是再考虑下。",{"type":428,"tag":429,"props":833,"children":835},{"id":834},"数据结构",[836],{"type":434,"value":834},{"type":428,"tag":436,"props":838,"children":839},{},[840],{"type":434,"value":841},"对于能接受列表的节点，比如 PolyCurve.ByPoints 和 Circle.ByCenterPointRadius，他们都能接受点列表作为输入，但是逻辑处理机制不同，前者按照点列表生成多段曲线，后者生成多个圆。也就是说，对于后者，似乎存在一个隐式的“循环”操作。",{"type":428,"tag":436,"props":843,"children":844},{},[845],{"type":434,"value":846},"当两个列表长度不匹配时，通过设置“连缀”选项来处理，可选“最短列表”、“笛卡尔积（叉积）”等。鉴于在非绘图绘表的 Web 数据处理一般是操作相同长度的列表，所以这个设计不能直接套用。",{"type":428,"tag":436,"props":848,"children":849},{},[850],{"type":434,"value":851},"因为用节点编排逻辑只是代码的某种子集，所以见到 Dynamo 中有“节点转换到代码”这种功能也不足为奇。在 Dynamo Primer 的“最佳实践”章节，甚至直接提到了可以使用节点到代码功能降低图形复杂度。只是，他还说节点到代码“无法轻松返回”？难道节点到代码丢失了除了节点位置之类的其他信息，或者只是单纯没有代码解析器所以提供这个功能。",{"type":428,"tag":436,"props":853,"children":854},{},[855],{"type":428,"tag":546,"props":856,"children":859},{"alt":857,"src":858},"dynamo nodes 2 codes","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311638043.png",[],{"type":428,"tag":436,"props":861,"children":862},{},[863],{"type":434,"value":864},"至于在创建、操作数据和编排逻辑这块，代码的表达性要比节点强太多了，以条件逻辑举例，见下图。",{"type":428,"tag":436,"props":866,"children":867},{},[868],{"type":428,"tag":546,"props":869,"children":872},{"alt":870,"src":871},"condition expression","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/202501311643375.png",[],{"type":428,"tag":436,"props":874,"children":875},{},[876],{"type":434,"value":877},"那么节点强在什么地方呢？举个例子，可视化变成的一个优势是可以直观的观察到数据流，并且提供了更强的人机交互。所以，如果代码块支持用模版语法自定义变量，再由节点作为可控输入，就可以二者的优势。这其实是“函数”，也就是说，代码块本身只是代码，并没有显示的切换成“表达式”、“语句”、“函数”等模式，而传统意义上的代码中的“函数”在可视化编程中是个外显的界面概念。",{"type":428,"tag":436,"props":879,"children":880},{},[881],{"type":434,"value":882},"实际上，在 Dynamo 的“代码块”可以声明“函数”。声明后，其他代码块可以直接调用函数而无需连线。在这里，节点的操作和代码创建函数共享了一整个空间，不过事情似乎会变得更难以理解。",{"type":428,"tag":429,"props":884,"children":886},{"id":885},"扩展",[887],{"type":434,"value":885},{"type":428,"tag":436,"props":889,"children":890},{},[891],{"type":434,"value":892},"关于 Dynamo 的自定义节点，找到几个有用的库：",{"type":428,"tag":473,"props":894,"children":895},{},[896,908,920],{"type":428,"tag":477,"props":897,"children":898},{},[899,906],{"type":428,"tag":463,"props":900,"children":903},{"href":901,"rel":902},"https://data-shapes.io/blog/",[467],[904],{"type":434,"value":905},"Data Shapes",{"type":434,"value":907},"：绘图和数据处理用的节点，包含了图表、表单、地图、表格、UI 构建（用户侧的表单等）。",{"type":428,"tag":477,"props":909,"children":910},{},[911,918],{"type":428,"tag":463,"props":912,"children":915},{"href":913,"rel":914},"https://bimorph.com/bimorph-nodes/",[467],[916],{"type":434,"value":917},"BIMORPH Nodes",{"type":434,"value":919},"：包含了碰撞检测等高级功能，主要面向 CAD、Curve、Revit 之类的数据结构。",{"type":428,"tag":477,"props":921,"children":922},{},[923,930],{"type":428,"tag":463,"props":924,"children":927},{"href":925,"rel":926},"https://github.com/ksobon/Bumblebee",[467],[928],{"type":434,"value":929},"Bumblebee",{"type":434,"value":931},"：用于操作 Excel，但是最近一次提交在 2019 年。",{"type":428,"tag":436,"props":933,"children":934},{},[935],{"type":434,"value":936},"Data Shapes 太棒了，可以用图表快速分析图中的数据。但是 Github 上只有 50+ 星星，看来 Dynamo 的用户中懂代码的群体还是太小了。其实就连 Dynamo 仓库本身的 Issue 数量也才 300+（未关闭的）。",{"title":421,"searchDepth":938,"depth":938,"links":939},2,[940,941,942,943,944],{"id":431,"depth":938,"text":431},{"id":558,"depth":938,"text":558},{"id":771,"depth":938,"text":771},{"id":834,"depth":938,"text":834},{"id":885,"depth":938,"text":885},"markdown","content:6.maps:_business:_low-code:dynamo.md","content","6.maps/_business/_low-code/dynamo.md","6.maps/_business/_low-code/dynamo","md",[952,955],{"_path":953,"title":954,"description":421},"/maps/_business/_low-code/budibase","Budibase",{"_path":956,"title":957,"description":958},"/maps/_business/low-code","低代码","无代码、低代码、高代码，这是一个围绕人机交互的有趣话题。",1738319202373]