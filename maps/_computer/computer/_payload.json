[{"data":1,"prerenderedAt":412},["ShallowReactive",2],{"navigation":3,"/maps/_computer/computer":155,"/maps/_computer/computer-surround":403},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":156,"_dir":157,"_draft":158,"_partial":159,"_locale":160,"title":161,"description":162,"body":163,"_type":397,"_id":398,"_source":399,"_file":400,"_stem":401,"_extension":402},"/maps/_computer/computer","_computer",false,true,"","Computer Mind Map","计算机基础知识导图，包含进制转换、数字电路设计、原码反码补码等核心概念的详细解析。",{"type":164,"children":165,"toc":391},"root",[166,174,181,196,202,208,267,272,278,283,289,307,321,327,332,355,361,374,380],{"type":167,"tag":168,"props":169,"children":171},"element","h2",{"id":170},"进制",[172],{"type":173,"value":170},"text",{"type":167,"tag":175,"props":176,"children":178},"h4",{"id":177},"十进制如何转二进制",[179],{"type":173,"value":180},"十进制如何转二进制？",{"type":167,"tag":182,"props":183,"children":184},"ul",{},[185,191],{"type":167,"tag":186,"props":187,"children":188},"li",{},[189],{"type":173,"value":190},"整数除二倒序取余",{"type":167,"tag":186,"props":192,"children":193},{},[194],{"type":173,"value":195},"小数乘二顺序取整",{"type":167,"tag":175,"props":197,"children":199},{"id":198},"十进制转二进制的示例",[200],{"type":173,"value":201},"十进制转二进制的示例？",{"type":167,"tag":203,"props":204,"children":205},"p",{},[206],{"type":173,"value":207},"以 $(4.1)_{10}$ 为例，先算小数部分，再算整数部分：",{"type":167,"tag":209,"props":210,"children":211},"ol",{},[212,217,222,227,232,237,242,247,252,257,262],{"type":167,"tag":186,"props":213,"children":214},{},[215],{"type":173,"value":216},"$0.1;*;2;=;0.2$，得整数位 $0$，取小数位 $0.2$ 继续运算；",{"type":167,"tag":186,"props":218,"children":219},{},[220],{"type":173,"value":221},"$0.2;*;2;=;0.4$，得整数位 $0$，取小数位 $0.4$ 继续运算；",{"type":167,"tag":186,"props":223,"children":224},{},[225],{"type":173,"value":226},"$0.4;*;2;=;0.8$，得整数位 $0$，取小数位 $0.8$ 继续运算；",{"type":167,"tag":186,"props":228,"children":229},{},[230],{"type":173,"value":231},"$0.8;*;2;=;1.6$，得整数位 $1$，取小数位 $0.6$ 继续运算；",{"type":167,"tag":186,"props":233,"children":234},{},[235],{"type":173,"value":236},"$0.6;*;2;=;1.2$，得整数位 $1$，取小数位 $0.2$ 继续运算（从第二步开始循环）；",{"type":167,"tag":186,"props":238,"children":239},{},[240],{"type":173,"value":241},"得 $(0.1)_{10}$ 转为二进制的结果：$(0.0\\overline{0011})_2$",{"type":167,"tag":186,"props":243,"children":244},{},[245],{"type":173,"value":246},"$4;mod;2 = 0$，得余数 $0$，取结果 $4;/;2 = 2$ 继续运算；",{"type":167,"tag":186,"props":248,"children":249},{},[250],{"type":173,"value":251},"$2;mod;2 = 0$，得余数 $0$，取结果 $2;/;2 = 1$ 继续运算；",{"type":167,"tag":186,"props":253,"children":254},{},[255],{"type":173,"value":256},"$1;mod;2 = 1$，得余数 $1$，结束运算；",{"type":167,"tag":186,"props":258,"children":259},{},[260],{"type":173,"value":261},"得 $(4)_{10}$ 的二进制结果：$(100)_2$",{"type":167,"tag":186,"props":263,"children":264},{},[265],{"type":173,"value":266},"得 $(4.1)_{10}$ 的二进制结果：$(100.0\\overline{0011})_2$，可以用 (4.1).toString(2) 验证一下。",{"type":167,"tag":168,"props":268,"children":270},{"id":269},"数字电路",[271],{"type":173,"value":269},{"type":167,"tag":175,"props":273,"children":275},{"id":274},"为什么减法要转换为加法的形式",[276],{"type":173,"value":277},"为什么减法要转换为加法的形式？",{"type":167,"tag":203,"props":279,"children":280},{},[281],{"type":173,"value":282},"负数在用原码表示时，需要在最高位带上符号。但是加减乘法作为最基础的运算，其电路应该设计得简单，识别\"符号位\"会让基础电路变得复杂，所以需要一种算法来把基础运算转换为二进制加法。使用反码计算减法会带来正负零的问题，使用补码则不会发生异常。",{"type":167,"tag":175,"props":284,"children":286},{"id":285},"什么是原码反码和补码",[287],{"type":173,"value":288},"什么是原码反码和补码？",{"type":167,"tag":182,"props":290,"children":291},{},[292,297,302],{"type":167,"tag":186,"props":293,"children":294},{},[295],{"type":173,"value":296},"最高位为符号位,其余为数值位，这是原码",{"type":167,"tag":186,"props":298,"children":299},{},[300],{"type":173,"value":301},"正数的反码为其本身，负数的反码为值位取反",{"type":167,"tag":186,"props":303,"children":304},{},[305],{"type":173,"value":306},"正数的补码为其本身，负数的补码为其反码加一（符号位不进位）",{"type":167,"tag":203,"props":308,"children":309},{},[310,312],{"type":173,"value":311},"见：",{"type":167,"tag":313,"props":314,"children":318},"a",{"href":315,"rel":316},"http://www.atoolbox.net/Tool.php?Id=952",[317],"nofollow",[319],{"type":173,"value":320},"原码/反码/补码计算器",{"type":167,"tag":175,"props":322,"children":324},{"id":323},"使用补码进行减法的示例",[325],{"type":173,"value":326},"使用补码进行减法的示例？",{"type":167,"tag":203,"props":328,"children":329},{},[330],{"type":173,"value":331},"以四位整形举例如下，计算表达式 $5 - 2$：",{"type":167,"tag":209,"props":333,"children":334},{},[335,340,345,350],{"type":167,"tag":186,"props":336,"children":337},{},[338],{"type":173,"value":339},"将减法用加法表示为 $5 + (-2)$。",{"type":167,"tag":186,"props":341,"children":342},{},[343],{"type":173,"value":344},"$5$ 是正数，直接得补码 $0101$。",{"type":167,"tag":186,"props":346,"children":347},{},[348],{"type":173,"value":349},"$-2$ 的原码是 $1010$，数值位取反得 $1101$，最后数值位加一得补码 $1110$。",{"type":167,"tag":186,"props":351,"children":352},{},[353],{"type":173,"value":354},"补码相加，$0101 + 1110$，得 $0011$，换算回十进制，答案是 $3$。",{"type":167,"tag":175,"props":356,"children":358},{"id":357},"_8-位补码的极值是多少",[359],{"type":173,"value":360},"8 位补码的极值是多少？",{"type":167,"tag":203,"props":362,"children":363},{},[364,366,372],{"type":173,"value":365},"8 位补码正数的最大值是 $01111111$，即 $(127)",{"type":167,"tag":367,"props":368,"children":369},"em",{},[370],{"type":173,"value":371},"{10}$。因为补码没有负零，所以其负数的最小值为 $-(127 - 1)",{"type":173,"value":373},"{10}$，即 $(-128)_{10}$",{"type":167,"tag":168,"props":375,"children":377},{"id":376},"todo",[378],{"type":173,"value":379},"TODO",{"type":167,"tag":175,"props":381,"children":383},{"id":382},"原码-反码-补码详解",[384],{"type":167,"tag":313,"props":385,"children":388},{"href":386,"rel":387},"https://www.cnblogs.com/zhangziqiu/archive/2011/03/30/ComputerCode.html",[317],[389],{"type":173,"value":390},"原码, 反码, 补码详解",{"title":160,"searchDepth":392,"depth":392,"links":393},2,[394,395,396],{"id":170,"depth":392,"text":170},{"id":269,"depth":392,"text":269},{"id":376,"depth":392,"text":379},"markdown","content:6.maps:_computer:computer.md","content","6.maps/_computer/computer.md","6.maps/_computer/computer","md",[404,408],{"_path":405,"title":406,"description":407},"/maps/_company/company","公司","注册和经营的流程及注意事项",{"_path":409,"title":410,"description":411},"/maps/_computer/encoding","编码","编码是将信息从一种形式或格式转换为另一种形式或格式的过程。",1742348683241]