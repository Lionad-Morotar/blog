[{"data":1,"prerenderedAt":1461},["ShallowReactive",2],{"navigation":3,"/maps/_computer/network":416,"/maps/_computer/network-surround":1454},[4,32,86,108,135,141,147,153,399,405,411],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":42,"_path":43},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":45,"_path":46},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":48,"_path":49},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":51,"_path":52},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":54,"_path":55},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":57,"_path":58},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":60,"_path":61},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":63,"_path":64},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":66,"_path":67},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":69,"_path":70},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":72,"_path":73},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":75,"_path":76},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":78,"_path":79},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":81,"_path":82},"🚝 四十二篇系列","/articles/fourty-two",{"title":84,"_path":85},"📝 技术博客归档","/articles/fold",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102,105],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107},"🖨️ any-to-base64","/tools/any-to-base64",{"title":109,"_path":110,"children":111},"吉他剧场 / Music","/music",[112,114,117,120,123,126,129,132],{"title":113,"_path":110},"🎸 FingerStyle！",{"title":115,"_path":116},"🌬️ 等待的风","/music/wind",{"title":118,"_path":119},"💕 约定的海洋","/music/ocean",{"title":121,"_path":122},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":124,"_path":125},"🌏 残酷天使的行动纲领","/music/eva",{"title":127,"_path":128},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":130,"_path":131},"🍷 Wu Wei","/music/wu-wei",{"title":133,"_path":134},"🌅 无题","/music/untitled",{"title":136,"_path":137,"children":138},"画点什么 / Paint","/paint",[139],{"title":140,"_path":137},"🚧 正在施工",{"title":142,"_path":143,"children":144},"读书笔记 / Notes","/books",[145],{"title":146,"_path":143},"📕 读书笔记",{"title":148,"_path":149,"children":150},"知识地图 / Maps","/maps",[151],{"title":152,"_path":149},"🏁 知识地图",{"title":154,"_path":155,"children":156},"零散的笔记 / Gists","/gists",[157,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":158,"_path":155},"🧊 Gists",{"title":160,"_path":161},"网站的可访问性","/gists/accessibility",{"title":163,"_path":164},"Bit","/gists/bit",{"title":166,"_path":167},"图片模糊","/gists/blur",{"title":169,"_path":170},"渲染相关笔记","/gists/c4d",{"title":172,"_path":173},"CDN 问题记录","/gists/cdn",{"title":175,"_path":176},"消毒剂","/gists/cleaner",{"title":178,"_path":179},"Windows Command","/gists/cmd",{"title":181,"_path":182},"Command","/gists/command",{"title":184,"_path":185},"复杂科学","/gists/complexity-science",{"title":187,"_path":188},"GitHub Copilot","/gists/copilot",{"title":190,"_path":191},"宇宙","/gists/cosmos",{"title":193,"_path":194},"C++","/gists/cpp",{"title":196,"_path":197},"Data Structure","/gists/data-structure",{"title":199,"_path":200},"DEPRESSION","/gists/depression",{"title":202,"_path":203},"设计模式","/gists/design-patterns",{"title":205,"_path":206},"Developer Experience","/gists/developer-experience",{"title":208,"_path":209},"Device Metrics","/gists/device-metrix",{"title":211,"_path":212},"数字化转型","/gists/digital-transformation",{"title":214,"_path":215},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":217,"_path":218},"正则表达式","/gists/eegex",{"title":220,"_path":221},"Emoji","/gists/emoji",{"title":223,"_path":224},"工程","/gists/engineering",{"title":226,"_path":227},"熵","/gists/entropy",{"title":229,"_path":230},"Environment","/gists/environment",{"title":232,"_path":233},"Erlang","/gists/erlang",{"title":235,"_path":236},"逃离塔克夫","/gists/escape-from-tarkov",{"title":238,"_path":239},"ESNext (ES6-ES11)","/gists/esnext",{"title":241,"_path":242},"Eval！","/gists/eval",{"title":244,"_path":245},"Flutter","/gists/flutter",{"title":247,"_path":248},"字体","/gists/font",{"title":250,"_path":251},"JS 函数式编程","/gists/functional",{"title":253,"_path":254},"游戏化","/gists/gamification",{"title":256,"_path":257},"Google C++ Standard","/gists/google-cpp-standard",{"title":259,"_path":260},"双向链接完全体","/gists/graph",{"title":262,"_path":263},"Hardwares","/gists/hardwares",{"title":265,"_path":266},"哈希冲突","/gists/hash-collision",{"title":268,"_path":269},"信息设计","/gists/information-design",{"title":271,"_path":272},"InstantPage","/gists/instant.page",{"title":274,"_path":275},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":277,"_path":278},"KVStore","/gists/key-value-db",{"title":280,"_path":281},"Kubernetes","/gists/kubernetes",{"title":283,"_path":284},"Makefile","/gists/makefile",{"title":286,"_path":287},"Markdown Inline Style","/gists/markdown-nice",{"title":289,"_path":290},"小程序","/gists/miniapp",{"title":292,"_path":293},"减小页面快照体积","/gists/minify-html",{"title":295,"_path":296},"mklink","/gists/mklink",{"title":298,"_path":299},"Mock","/gists/mock",{"title":301,"_path":302},"多人协作系统","/gists/multiplayer",{"title":304,"_path":305},"多端应用","/gists/multy-end-app",{"title":307,"_path":308},"神经科学","/gists/neuroscience",{"title":310,"_path":311},"OO","/gists/oo",{"title":313,"_path":314},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":316,"_path":317},"PInvoke","/gists/pinvoke",{"title":319,"_path":320},"像素","/gists/pixel",{"title":322,"_path":323},"PowerShell","/gists/powershell",{"title":325,"_path":326},"量子","/gists/quantum",{"title":328,"_path":329},"保持好奇心","/gists/questions",{"title":331,"_path":332},"React Native","/gists/react-native",{"title":334,"_path":335},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":337,"_path":338},"SEO","/gists/seo",{"title":340,"_path":341},"Shader","/gists/shader",{"title":343,"_path":344},"Shape Up","/gists/shape-up",{"title":346,"_path":347},"睡觉","/gists/sleep",{"title":349,"_path":350},"记录奇怪的问题","/gists/solved",{"title":352,"_path":353},"States","/gists/states",{"title":355,"_path":356},"Storage","/gists/storage",{"title":358,"_path":359},"音视频流处理","/gists/stream-cli",{"title":361,"_path":362},"Symbol","/gists/symbol",{"title":364,"_path":365},"系统论","/gists/systems-theory",{"title":367,"_path":368},"Taro","/gists/taro",{"title":370,"_path":371},"任务切片","/gists/task-slice",{"title":373,"_path":374},"技术偏好","/gists/tech-dudge",{"title":376,"_path":377},"Untitled","/gists/untitled",{"title":379,"_path":380},"可变字体","/gists/variable-font",{"title":382,"_path":383},"视觉错觉","/gists/visual-illusion",{"title":385,"_path":386},"SS(SSR)","/gists/vpn",{"title":388,"_path":389},"VS Code 插件开发","/gists/vscode-plugin",{"title":391,"_path":392},"Web Components","/gists/web-components",{"title":394,"_path":395},"Windows","/gists/windows",{"title":397,"_path":398},"查缺补漏","/gists/wrong",{"title":400,"_path":401,"children":402},"代码笔记 / Gists","/source-code",[403],{"title":404,"_path":401},"🚄 代码笔记",{"title":406,"_path":407,"children":408},"我 / Abount","/hire",[409],{"title":410,"_path":407},"📬 技术简历",{"title":412,"_path":413,"children":414},"todo","/todo",[415],{"title":412,"_path":413},{"_path":417,"_dir":418,"_draft":419,"_partial":420,"_locale":421,"title":422,"description":421,"body":423,"_type":1448,"_id":1449,"_source":1450,"_file":1451,"_stem":1452,"_extension":1453},"/maps/_computer/network","_computer",false,true,"","计算机网络",{"type":424,"children":425,"toc":1429},"root",[426,433,439,446,452,461,467,473,478,492,498,506,512,517,525,531,536,544,550,555,563,569,574,594,606,612,617,640,646,652,810,816,821,826,831,837,842,848,853,861,871,877,882,888,893,899,904,927,932,937,942,947,967,973,978,986,997,1003,1014,1019,1042,1047,1054,1059,1065,1073,1087,1093,1100,1105,1110,1115,1121,1126,1133,1139,1144,1152,1158,1164,1175,1181,1186,1194,1200,1205,1216,1222,1227,1232,1238,1243,1249,1263,1274,1280,1285,1298,1304,1310,1315,1320,1326,1331,1337,1342,1347,1353,1358,1364,1369,1375,1380,1400,1411,1416],{"type":427,"tag":428,"props":429,"children":430},"element","h1",{"id":422},[431],{"type":432,"value":422},"text",{"type":427,"tag":434,"props":435,"children":437},"h2",{"id":436},"网络模型",[438],{"type":432,"value":436},{"type":427,"tag":440,"props":441,"children":443},"h4",{"id":442},"各网络层有哪些代表性的协议",[444],{"type":432,"value":445},"各网络层有哪些代表性的协议？",{"type":427,"tag":447,"props":448,"children":449},"p",{},[450],{"type":432,"value":451},"应用层有 HTTP、DNS、FTP，表示层有 SSL、TSL、base64、MIDI、JPEG，会话层有 xxx，传输层则是 TCP、UDP，网络层有 IP，数据链路层 xxx，物理层有以太网协议。",{"type":427,"tag":447,"props":453,"children":454},{},[455],{"type":427,"tag":456,"props":457,"children":460},"img",{"alt":458,"src":459},"OSI 参考模型","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620033400.png?type=win11&w=60",[],{"type":427,"tag":434,"props":462,"children":464},{"id":463},"tcp",[465],{"type":432,"value":466},"TCP",{"type":427,"tag":440,"props":468,"children":470},{"id":469},"tcpip-是什么",[471],{"type":432,"value":472},"TCP/IP 是什么？",{"type":427,"tag":447,"props":474,"children":475},{},[476],{"type":432,"value":477},"TCP/IP 协议是一个协议集。TCP/IP 包括了应用层、传输层、网络层、数据链路层和网络层，是一个四层体系结构。各层有代表性的协议有 HTTP、DNS，TLS，IP 和 xxx。",{"type":427,"tag":447,"props":479,"children":480},{},[481,483],{"type":432,"value":482},"TODO，",{"type":427,"tag":484,"props":485,"children":489},"a",{"href":486,"rel":487},"https://developer.51cto.com/article/597961.html",[488],"nofollow",[490],{"type":432,"value":491},"终于有人能把 TCP/IP 协议讲的明明白白了！",{"type":427,"tag":440,"props":493,"children":495},{"id":494},"tcp-header-由哪些部分组成",[496],{"type":432,"value":497},"TCP Header 由哪些部分组成？",{"type":427,"tag":447,"props":499,"children":500},{},[501],{"type":427,"tag":456,"props":502,"children":505},{"alt":503,"src":504},"TCP Header","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731153510.png?type=win11&w=60",[],{"type":427,"tag":440,"props":507,"children":509},{"id":508},"三次握手具体过程",[510],{"type":432,"value":511},"三次握手具体过程？",{"type":427,"tag":447,"props":513,"children":514},{},[515],{"type":432,"value":516},"从三次握手图示可以发现，仅仅是连接的建立，就需要大量时间消耗。客户端想发送数据，至少要等 1.5xRTT；服务端想发送数据，至少要 2xRTT。",{"type":427,"tag":447,"props":518,"children":519},{},[520],{"type":427,"tag":456,"props":521,"children":524},{"alt":522,"src":523},"Three-way Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731162450.png?type=win11&w=40",[],{"type":427,"tag":440,"props":526,"children":528},{"id":527},"tcp-fast-open-如何优化握手过程",[529],{"type":432,"value":530},"TCP Fast Open 如何优化握手过程？",{"type":427,"tag":447,"props":532,"children":533},{},[534],{"type":432,"value":535},"TFO 规定服务器第一次返回 ACK 时，携带一个用以标志客户端身份的 Cookie。后续客户端发送 SYN 建立连接的时候带上这个 Cookie，服务端确认身份之后，就能直接返回数据了（节约了 1.5 RTT）。",{"type":427,"tag":447,"props":537,"children":538},{},[539],{"type":427,"tag":456,"props":540,"children":543},{"alt":541,"src":542},"TFO","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807054219.png?type=win11&w=80",[],{"type":427,"tag":440,"props":545,"children":547},{"id":546},"四次挥手的具体过程",[548],{"type":432,"value":549},"四次挥手的具体过程？",{"type":427,"tag":447,"props":551,"children":552},{},[553],{"type":432,"value":554},"四次挥手如下所示。为什么建立连接要三次，而断开连接要四次请求呢？从图中可以看出，接收到 FIN 请求时，服务端立即返回 ACK 表示收到请求，但是要等自己这边剩余一些工作（可能时未发送完的请求内容）完成之后，才会返回 FIN。",{"type":427,"tag":447,"props":556,"children":557},{},[558],{"type":427,"tag":456,"props":559,"children":562},{"alt":560,"src":561},"Four-way Wavehand","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731165331.png?type=win11&w=40",[],{"type":427,"tag":440,"props":564,"children":566},{"id":565},"tcp-链接中如果某端出故障了会怎么办",[567],{"type":432,"value":568},"TCP 链接中如果某端出故障了会怎么办？",{"type":427,"tag":447,"props":570,"children":571},{},[572],{"type":432,"value":573},"会通过计时器来保证链接的稳定性。",{"type":427,"tag":575,"props":576,"children":577},"ul",{},[578,584,589],{"type":427,"tag":579,"props":580,"children":581},"li",{},[582],{"type":432,"value":583},"超时重传计时器：对方没有返回 ACK 时，发送方需要重新发送数据。一般计时器的时间选择 2RTT。",{"type":427,"tag":579,"props":585,"children":586},{},[587],{"type":432,"value":588},"2MSL 定时器：主动断开连接的一方发送 FIN 后需要等待 2MSL 时间。因为如果服务端没有收到最后一个 ACK，它将重新发送 FIN。",{"type":427,"tag":579,"props":590,"children":591},{},[592],{"type":432,"value":593},"保活计时器：每当接收方收到消息，将计时器重设为两小时。计时器到期时，每 75s 发送一次探测报文段，如果连续 10 次都没有被响应则断开连接。",{"type":427,"tag":447,"props":595,"children":596},{},[597,599],{"type":432,"value":598},"见：",{"type":427,"tag":484,"props":600,"children":603},{"href":601,"rel":602},"https://www.cnblogs.com/13224ACMer/p/6616960.html",[488],[604],{"type":432,"value":605},"TCP 四种计时器",{"type":427,"tag":434,"props":607,"children":609},{"id":608},"udp",[610],{"type":432,"value":611},"UDP",{"type":427,"tag":447,"props":613,"children":614},{},[615],{"type":432,"value":616},"UDP，即 User Datagram Protocol 用户数据报协议。数据报不保证信息的传达是否到位，所以 UDP 也被普遍称作 Unreliable Datagram Protocol。",{"type":427,"tag":575,"props":618,"children":619},{},[620,625,630,635],{"type":427,"tag":579,"props":621,"children":622},{},[623],{"type":432,"value":624},"不保证消息交付",{"type":427,"tag":579,"props":626,"children":627},{},[628],{"type":432,"value":629},"不保证交付顺序",{"type":427,"tag":579,"props":631,"children":632},{},[633],{"type":432,"value":634},"不跟踪连接状态",{"type":427,"tag":579,"props":636,"children":637},{},[638],{"type":432,"value":639},"不需要拥塞控制",{"type":427,"tag":434,"props":641,"children":643},{"id":642},"http",[644],{"type":432,"value":645},"HTTP",{"type":427,"tag":440,"props":647,"children":649},{"id":648},"有哪些常见的状态码",[650],{"type":432,"value":651},"有哪些常见的状态码？",{"type":427,"tag":653,"props":654,"children":655},"table",{},[656,675],{"type":427,"tag":657,"props":658,"children":659},"thead",{},[660],{"type":427,"tag":661,"props":662,"children":663},"tr",{},[664,670],{"type":427,"tag":665,"props":666,"children":667},"th",{},[668],{"type":432,"value":669},"状态码",{"type":427,"tag":665,"props":671,"children":672},{},[673],{"type":432,"value":674},"描述",{"type":427,"tag":676,"props":677,"children":678},"tbody",{},[679,693,706,719,732,745,758,771,784,797],{"type":427,"tag":661,"props":680,"children":681},{},[682,688],{"type":427,"tag":683,"props":684,"children":685},"td",{},[686],{"type":432,"value":687},"200",{"type":427,"tag":683,"props":689,"children":690},{},[691],{"type":432,"value":692},"成功并返回数据",{"type":427,"tag":661,"props":694,"children":695},{},[696,701],{"type":427,"tag":683,"props":697,"children":698},{},[699],{"type":432,"value":700},"301",{"type":427,"tag":683,"props":702,"children":703},{},[704],{"type":432,"value":705},"永久转移，重定向",{"type":427,"tag":661,"props":707,"children":708},{},[709,714],{"type":427,"tag":683,"props":710,"children":711},{},[712],{"type":432,"value":713},"302",{"type":427,"tag":683,"props":715,"children":716},{},[717],{"type":432,"value":718},"临时重定向",{"type":427,"tag":661,"props":720,"children":721},{},[722,727],{"type":427,"tag":683,"props":723,"children":724},{},[725],{"type":432,"value":726},"303",{"type":427,"tag":683,"props":728,"children":729},{},[730],{"type":432,"value":731},"临时重定向（客户端必须使用 Get 方法重新请求资源）",{"type":427,"tag":661,"props":733,"children":734},{},[735,740],{"type":427,"tag":683,"props":736,"children":737},{},[738],{"type":432,"value":739},"304",{"type":427,"tag":683,"props":741,"children":742},{},[743],{"type":432,"value":744},"资源未修改，可使用缓存",{"type":427,"tag":661,"props":746,"children":747},{},[748,753],{"type":427,"tag":683,"props":749,"children":750},{},[751],{"type":432,"value":752},"400",{"type":427,"tag":683,"props":754,"children":755},{},[756],{"type":432,"value":757},"请求语法错误",{"type":427,"tag":661,"props":759,"children":760},{},[761,766],{"type":427,"tag":683,"props":762,"children":763},{},[764],{"type":432,"value":765},"401",{"type":427,"tag":683,"props":767,"children":768},{},[769],{"type":432,"value":770},"要求身份认证",{"type":427,"tag":661,"props":772,"children":773},{},[774,779],{"type":427,"tag":683,"props":775,"children":776},{},[777],{"type":432,"value":778},"403",{"type":427,"tag":683,"props":780,"children":781},{},[782],{"type":432,"value":783},"请求拒绝",{"type":427,"tag":661,"props":785,"children":786},{},[787,792],{"type":427,"tag":683,"props":788,"children":789},{},[790],{"type":432,"value":791},"404",{"type":427,"tag":683,"props":793,"children":794},{},[795],{"type":432,"value":796},"资源不存在",{"type":427,"tag":661,"props":798,"children":799},{},[800,805],{"type":427,"tag":683,"props":801,"children":802},{},[803],{"type":432,"value":804},"500",{"type":427,"tag":683,"props":806,"children":807},{},[808],{"type":432,"value":809},"服务器错误",{"type":427,"tag":440,"props":811,"children":813},{"id":812},"http-报文由哪些部分组成",[814],{"type":432,"value":815},"HTTP 报文由哪些部分组成？",{"type":427,"tag":447,"props":817,"children":818},{},[819],{"type":432,"value":820},"请求报文由请求行、请求头、空行和请求数据组成，相应报文类似。",{"type":427,"tag":447,"props":822,"children":823},{},[824],{"type":432,"value":825},"请求报文实例：",{"type":427,"tag":447,"props":827,"children":828},{},[829],{"type":432,"value":830},"相应报文实例：",{"type":427,"tag":440,"props":832,"children":834},{"id":833},"http-11-对比-http-10-做了哪些改进",[835],{"type":432,"value":836},"HTTP 1.1 对比 HTTP 1.0 做了哪些改进？",{"type":427,"tag":447,"props":838,"children":839},{},[840],{"type":432,"value":841},"长链接（keep-alive）、断点续传、HTTP 缓存。",{"type":427,"tag":440,"props":843,"children":845},{"id":844},"http-缓存分几种",[846],{"type":432,"value":847},"HTTP 缓存分几种？",{"type":427,"tag":447,"props":849,"children":850},{},[851],{"type":432,"value":852},"分强缓存和协商缓存：Expires、Cache-Control、Last-Modified、Etag。",{"type":427,"tag":447,"props":854,"children":855},{},[856],{"type":427,"tag":456,"props":857,"children":860},{"alt":858,"src":859},"HTTP Cache","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220630205606.png?type=win11&w=60",[],{"type":427,"tag":447,"props":862,"children":863},{},[864,865],{"type":432,"value":482},{"type":427,"tag":484,"props":866,"children":869},{"href":867,"rel":868},"https://imweb.io/topic/55c6f9bac222e3af6ce235b9",[488],[870],{"type":432,"value":867},{"type":427,"tag":440,"props":872,"children":874},{"id":873},"强缓存和协商缓存的主要区别是",[875],{"type":432,"value":876},"强缓存和协商缓存的主要区别是？",{"type":427,"tag":447,"props":878,"children":879},{},[880],{"type":432,"value":881},"强缓存是一但匹配就无条件使用缓存，而面对协商缓存的资源，浏览器需要向服务端发请求，对比资源是否变更，并依靠服务端的响应来判断是否使用缓存。如果资源同时应用了强缓存和协商缓存，那么浏览器优先使用强缓存。",{"type":427,"tag":440,"props":883,"children":885},{"id":884},"no-store-和-no-cache-的区别",[886],{"type":432,"value":887},"no-store 和 no-cache 的区别？",{"type":427,"tag":447,"props":889,"children":890},{},[891],{"type":432,"value":892},"no-store 告诉客户端每次都在服务器取最新的资源。no-cache 也要求每次都要重新请求，但服务器可能返回 304 告诉客户端资源未改变。",{"type":427,"tag":440,"props":894,"children":896},{"id":895},"http2-的改进在哪里",[897],{"type":432,"value":898},"HTTP2 的改进在哪里？",{"type":427,"tag":447,"props":900,"children":901},{},[902],{"type":432,"value":903},"HTTP/2 主要包含以下几个方面的变化，显著增强了性能，也增加了安全性。",{"type":427,"tag":575,"props":905,"children":906},{},[907,912,917,922],{"type":427,"tag":579,"props":908,"children":909},{},[910],{"type":432,"value":911},"二进制分帧层",{"type":427,"tag":579,"props":913,"children":914},{},[915],{"type":432,"value":916},"头部压缩（HPACK、Huffman）",{"type":427,"tag":579,"props":918,"children":919},{},[920],{"type":432,"value":921},"多路复用",{"type":427,"tag":579,"props":923,"children":924},{},[925],{"type":432,"value":926},"服务端推送",{"type":427,"tag":447,"props":928,"children":929},{},[930],{"type":432,"value":931},"二进制分帧层是在应用层（HTTP）和传输层（TCP、UDP）之间新增的一个层级关系。二进制分帧层将传输的 HTTP 消息分割为更小的帧，并采用二进制格式编码传输。帧分为头部帧和消息帧。这意味着 HTTP/2 请求的所有内容都是二进制传输的。",{"type":427,"tag":447,"props":933,"children":934},{},[935],{"type":432,"value":936},"HTTP 头部被转为帧之前，会通过维护一个表结构，通过序号记录已发送的键值对。这是一种索引算法，叫 HPACK。具体的表结构分静态表和动态表，静态表给一些常用的头部标号了号，直接使用就好，动态表则是根据发送的内容动态确定的记号。需要被发送具体内容会被哈夫曼编码以减小体积。",{"type":427,"tag":447,"props":938,"children":939},{},[940],{"type":432,"value":941},"多路复用是指，多个 HTTP 请求可以在同一个 TCP 连接中并行传输。这和 HTTP 1.1 的 Connection：keep-alive 不同，keep-alive 虽然复用 TCP 连接，但是多个响应之间是串行的。",{"type":427,"tag":447,"props":943,"children":944},{},[945],{"type":432,"value":946},"建立连接后，双方通过交换 SETTING 帧，以确认双向的流量窗口控制大小。然后开始发送帧。帧可以在一个连接中根据优先级发送，或是被乱序发送，响应方也能乱序接收。由于流是双向的，只要服务端 SETTING 帧设置的流量窗口大小不为 0，服务端可按照同源策略推送资源给客户端。",{"type":427,"tag":447,"props":948,"children":949},{},[950,951,958,960],{"type":432,"value":598},{"type":427,"tag":484,"props":952,"children":955},{"href":953,"rel":954},"https://coffe1891.gitbook.io/frontend-hard-mode-interview/1/1.5.3",[488],[956],{"type":432,"value":957},"HTTP/2 和 HTTP/1.X 相比的新特性",{"type":432,"value":959},"、",{"type":427,"tag":484,"props":961,"children":964},{"href":962,"rel":963},"https://blog.csdn.net/gaoliang1719/article/details/106346201/",[488],[965],{"type":432,"value":966},"HTTP/2 协议之头部压缩",{"type":427,"tag":440,"props":968,"children":970},{"id":969},"http3-相比-http2-改变了什么东西",[971],{"type":432,"value":972},"HTTP3 相比 HTTP2 改变了什么东西？",{"type":427,"tag":447,"props":974,"children":975},{},[976],{"type":432,"value":977},"HTTP3 使用全新的传输层协议 QUIC，实现了 H2 中的流式传输（HTTP2）、多路复用（TCP）、流量控制（TCP）以及可靠性（TCP）等内容，其网络层协议应用的是 UDP 而不是 TCP，本意是用来解决 TCP 建立链接需要  1.5 RTT 延迟的问题。这种改善在移动端更加有效。",{"type":427,"tag":447,"props":979,"children":980},{},[981],{"type":427,"tag":456,"props":982,"children":985},{"alt":983,"src":984},"HTTP3 VS HTTP2 VS HTTP1.1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220621003527.png?type=draw&w=80",[],{"type":427,"tag":447,"props":987,"children":988},{},[989,990],{"type":432,"value":598},{"type":427,"tag":484,"props":991,"children":994},{"href":992,"rel":993},"https://mp.weixin.qq.com/s/40YBEWZBaHakDuRuh27fMg",[488],[995],{"type":432,"value":996},"HTTP3 发布了！",{"type":427,"tag":434,"props":998,"children":1000},{"id":999},"tls",[1001],{"type":432,"value":1002},"TLS",{"type":427,"tag":447,"props":1004,"children":1005},{},[1006,1007],{"type":432,"value":482},{"type":427,"tag":484,"props":1008,"children":1011},{"href":1009,"rel":1010},"https://www.oschina.net/translate/rfc-8446-aka-tls-1-3",[488],[1012],{"type":432,"value":1013},"详细介绍 RFC 8446（即 TLS 1.3）",{"type":427,"tag":447,"props":1015,"children":1016},{},[1017],{"type":432,"value":1018},"TLS 是一种混合式加密系统，同时使用对称加密和非对称加密。它使用非对称加密以加密对称加密所需的密钥。它有多个版本。TLS 1.3 是一种比起 TLS1.2 而言更清晰、更快速、更安全的现代化安全协议。TLS 1.2 有两点问题：1. 包括 POODLE 在内的众多可行漏洞；2. 性能低。为了改善这些问题，IETF 在 2013 年，着手 TLS 1.3 的讨论，主要改进：",{"type":427,"tag":575,"props":1020,"children":1021},{},[1022,1027,1032,1037],{"type":427,"tag":579,"props":1023,"children":1024},{},[1025],{"type":432,"value":1026},"减少握手时间",{"type":427,"tag":579,"props":1028,"children":1029},{},[1030],{"type":432,"value":1031},"加密更多的握手",{"type":427,"tag":579,"props":1033,"children":1034},{},[1035],{"type":432,"value":1036},"改善跨协议攻击的弹性",{"type":427,"tag":579,"props":1038,"children":1039},{},[1040],{"type":432,"value":1041},"删除遗留特征",{"type":427,"tag":447,"props":1043,"children":1044},{},[1045],{"type":432,"value":1046},"经过 4 年的争论。最终，形成了 RFC 8446 规范。",{"type":427,"tag":1048,"props":1049,"children":1051},"h3",{"id":1050},"tls-12-的缺陷",[1052],{"type":432,"value":1053},"TLS 1.2 的缺陷",{"type":427,"tag":447,"props":1055,"children":1056},{},[1057],{"type":432,"value":1058},"TLS 1.2 使用的加密方式有缺陷。其中，非对称加密有如 RSA 和 Diffie-Hellman 协议。",{"type":427,"tag":440,"props":1060,"children":1062},{"id":1061},"rsa",[1063],{"type":432,"value":1064},"RSA",{"type":427,"tag":447,"props":1066,"children":1067},{},[1068],{"type":427,"tag":456,"props":1069,"children":1072},{"alt":1070,"src":1071},"RSA Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082140.png?w=70",[],{"type":427,"tag":447,"props":1074,"children":1075},{},[1076,1078,1085],{"type":432,"value":1077},"RSA 不保证前向保密。即，如果有人记录了加密对话，然后获取服务器的 RSA 私钥，他们可以将对话解密。而攻击者可能只需 ",{"type":427,"tag":484,"props":1079,"children":1082},{"href":1080,"rel":1081},"https://www.wikiwand.com/zh/%E5%BF%83%E8%84%8F%E5%87%BA%E8%A1%80%E6%BC%8F%E6%B4%9E",[488],[1083],{"type":432,"value":1084},"HeartBleed 漏洞",{"type":432,"value":1086},"（缓存区过读）就可以顺利窃取私钥。",{"type":427,"tag":440,"props":1088,"children":1090},{"id":1089},"diffie-hellman",[1091],{"type":432,"value":1092},"Diffie-Hellman",{"type":427,"tag":447,"props":1094,"children":1095},{},[1096],{"type":427,"tag":456,"props":1097,"children":1099},{"alt":1092,"src":1098},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082812.png?w=70",[],{"type":427,"tag":447,"props":1101,"children":1102},{},[1103],{"type":432,"value":1104},"Diffie-Hellman 的缺陷在于，协议的某些参数不安全，且能够被操纵设置；不安全的参数能导致加密更容易被破解。",{"type":427,"tag":440,"props":1106,"children":1108},{"id":1107},"对称加密缺陷",[1109],{"type":432,"value":1107},{"type":427,"tag":447,"props":1111,"children":1112},{},[1113],{"type":432,"value":1114},"TLS 1.2 的对称加密使用的 CBC 模式密码和流式密码也有缺陷。",{"type":427,"tag":440,"props":1116,"children":1118},{"id":1117},"downgrade-attack",[1119],{"type":432,"value":1120},"Downgrade Attack",{"type":427,"tag":447,"props":1122,"children":1123},{},[1124],{"type":432,"value":1125},"由于 TLS 1.2 握手协商密钥的部分没有加密。所以中间人可以拦截客户端的请求，选择发送方和接收方都支持的弱密码，伪造请求。",{"type":427,"tag":447,"props":1127,"children":1128},{},[1129],{"type":427,"tag":456,"props":1130,"children":1132},{"alt":1120,"src":1131},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807090034.png?w=70",[],{"type":427,"tag":1048,"props":1134,"children":1136},{"id":1135},"_0-rtt",[1137],{"type":432,"value":1138},"0-RTT",{"type":427,"tag":447,"props":1140,"children":1141},{},[1142],{"type":432,"value":1143},"TLS 1.3 中，通讯双方可以得到一个“恢复主密钥”的密钥，用于从中断的连接中直接恢复通讯。但是有被拦截导致重放攻击的风险。",{"type":427,"tag":447,"props":1145,"children":1146},{},[1147],{"type":427,"tag":456,"props":1148,"children":1151},{"alt":1149,"src":1150},"0-RTT 重放攻击","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807081140.png?w=70",[],{"type":427,"tag":434,"props":1153,"children":1155},{"id":1154},"https",[1156],{"type":432,"value":1157},"HTTPS",{"type":427,"tag":1048,"props":1159,"children":1161},{"id":1160},"links",[1162],{"type":432,"value":1163},"Links",{"type":427,"tag":447,"props":1165,"children":1166},{},[1167,1168],{"type":432,"value":482},{"type":427,"tag":484,"props":1169,"children":1172},{"href":1170,"rel":1171},"https://zhuanlan.zhihu.com/p/26682342",[488],[1173],{"type":432,"value":1174},"深入理解 HTTPS 原理、过程与实践",{"type":427,"tag":440,"props":1176,"children":1178},{"id":1177},"https-的握手过程是怎样的",[1179],{"type":432,"value":1180},"HTTPS 的握手过程是怎样的？",{"type":427,"tag":447,"props":1182,"children":1183},{},[1184],{"type":432,"value":1185},"总的来说是一个非对称加密+对称加密的过程。客户端通过一个随机数加上服务器的公钥来生成预主密钥，然后双方再通过 Client Hello 和 Server Hello 时的两个随机数生成会话密钥。生成预主密钥的过程是非对称加密的，因为只有服务端用私钥才能解得客户端的随机数。而之后使用会话密钥主要是出于性能考虑。",{"type":427,"tag":447,"props":1187,"children":1188},{},[1189],{"type":427,"tag":456,"props":1190,"children":1193},{"alt":1191,"src":1192},"HTTPS 握手过程","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620024738.png",[],{"type":427,"tag":440,"props":1195,"children":1197},{"id":1196},"ca-怎么解决中间人问题",[1198],{"type":432,"value":1199},"CA 怎么解决中间人问题？",{"type":427,"tag":447,"props":1201,"children":1202},{},[1203],{"type":432,"value":1204},"CA 主要是用来防范服务器端返回 Server Hello 前就和客户端提供了假的公钥。CA 是一个可信的第三方机构，客户端想要服务器的公钥，需要从 CA 获得。CA 返回公钥以及数字签名。客户端只要拿到公钥后根据 CA 公钥对其计算获得摘要，再将摘要和签名进行对比，就能知道是否拿到了可信的公钥。",{"type":427,"tag":447,"props":1206,"children":1207},{},[1208,1209],{"type":432,"value":598},{"type":427,"tag":484,"props":1210,"children":1213},{"href":1211,"rel":1212},"https://www.jianshu.com/p/9de06222793b",[488],[1214],{"type":432,"value":1215},"HTTPS CA 原理",{"type":427,"tag":440,"props":1217,"children":1219},{"id":1218},"数字签名是什么",[1220],{"type":432,"value":1221},"数字签名是什么？",{"type":427,"tag":447,"props":1223,"children":1224},{},[1225],{"type":432,"value":1226},"数字签名是只有信息发送者才能产生的一段文本，信息接收方可以通过签名计算出接受到的文本是否经过了修改。如果我要发送 A，我会用私钥将 A 进行加密获得 B，并把 A 和 B 同时发送过去。B 就是数字签名。因为我的公钥是公开的，所以接受方可以通过使用我的公钥去计算 A，如果获得和 B 一致的结果，那么说明信息没有被篡改。",{"type":427,"tag":434,"props":1228,"children":1230},{"id":1229},"攻防",[1231],{"type":432,"value":1229},{"type":427,"tag":440,"props":1233,"children":1235},{"id":1234},"https-降级攻击的原理是什么",[1236],{"type":432,"value":1237},"HTTPS 降级攻击的原理是什么？",{"type":427,"tag":447,"props":1239,"children":1240},{},[1241],{"type":432,"value":1242},"客服端与服务端协商加密协议的过程当中，如果攻击者拦截了客户端（或操控客户端）并代替它向服务端协商使用仅支持有漏洞的协议。如果服务端同意了，那么建立连接后，攻击者就能使用该协议的已知漏洞的破解手段，去破解通讯内容了。",{"type":427,"tag":440,"props":1244,"children":1246},{"id":1245},"syn-攻击的基本原理是什么",[1247],{"type":432,"value":1248},"SYN 攻击的基本原理是什么？",{"type":427,"tag":447,"props":1250,"children":1251},{},[1252,1254,1261],{"type":432,"value":1253},"SYN 洪水攻击是 DDOS 攻击中最常见的攻击类型。攻击者向服务器发送大量伪造的 TCP 连接请求，而源 IP 是伪造的。由于服务器收不到伪造源回应的 ACK 数据包，就会不断重发。一般应对方式是：减少重发次数、使用 ",{"type":427,"tag":484,"props":1255,"children":1258},{"href":1256,"rel":1257},"https://baike.baidu.com/item/syn%20cookie/6898884?fr=aladdin",[488],[1259],{"type":432,"value":1260},"SYN Cookie",{"type":432,"value":1262},"、增加 backlog 队列长度、限制 SYN 并发数。",{"type":427,"tag":447,"props":1264,"children":1265},{},[1266,1267],{"type":432,"value":598},{"type":427,"tag":484,"props":1268,"children":1271},{"href":1269,"rel":1270},"https://www.qycn.com/about/hd/2049.html",[488],[1272],{"type":432,"value":1273},"服务器遭到 SYN 攻击该如何处理呢？",{"type":427,"tag":440,"props":1275,"children":1277},{"id":1276},"请求头加-csrf-参数为什么能防止-csrf-攻击",[1278],{"type":432,"value":1279},"请求头加 CSRF 参数为什么能防止 CSRF 攻击？",{"type":427,"tag":447,"props":1281,"children":1282},{},[1283],{"type":432,"value":1284},"跨站请求伪造是攻击者通过在钓鱼站点发起被钓网站请求（如图片地址），以达到攻击目的。防御方式一般有两种：",{"type":427,"tag":575,"props":1286,"children":1287},{},[1288,1293],{"type":427,"tag":579,"props":1289,"children":1290},{},[1291],{"type":432,"value":1292},"使用 SameSite Cookie，禁用第三方 Cookie",{"type":427,"tag":579,"props":1294,"children":1295},{},[1296],{"type":432,"value":1297},"在请求头中加入 CSRF Token，这样攻击者使用钓鱼站点发起请求时，由于不能设置请求头，所以请求在服务端会被拒绝",{"type":427,"tag":434,"props":1299,"children":1301},{"id":1300},"cdn",[1302],{"type":432,"value":1303},"CDN",{"type":427,"tag":440,"props":1305,"children":1307},{"id":1306},"cdn-有什么好处",[1308],{"type":432,"value":1309},"CDN 有什么好处？",{"type":427,"tag":447,"props":1311,"children":1312},{},[1313],{"type":432,"value":1314},"对页面加载而言，CDN 可以减少请求时间、突破浏览器同域的 TCP 并发数、节约 Cookie 带宽。",{"type":427,"tag":434,"props":1316,"children":1318},{"id":1317},"浏览器",[1319],{"type":432,"value":1317},{"type":427,"tag":440,"props":1321,"children":1323},{"id":1322},"url-由哪些部分组成",[1324],{"type":432,"value":1325},"URL 由哪些部分组成？",{"type":427,"tag":447,"props":1327,"children":1328},{},[1329],{"type":432,"value":1330},"协议头、域名、端口、目录、文件名（index.html）、页面锚、参数。",{"type":427,"tag":440,"props":1332,"children":1334},{"id":1333},"怎么做跨域",[1335],{"type":432,"value":1336},"怎么做跨域？",{"type":427,"tag":447,"props":1338,"children":1339},{},[1340],{"type":432,"value":1341},"用代理服务器、CORS、iFrame 或者 WebSocket 都可以。",{"type":427,"tag":447,"props":1343,"children":1344},{},[1345],{"type":432,"value":1346},"服务器可以忽略同源限制；WebSocket 和 CORS 不受同源影响；iFrame 需要浏览器加载一个跨域页面，然后和主页面用 postMessage 或者哈希监听的方式通信，让 iFrame 中的脚本代替主页面发送请求。",{"type":427,"tag":440,"props":1348,"children":1350},{"id":1349},"正向代理和反向代理的区别是",[1351],{"type":432,"value":1352},"正向代理和反向代理的区别是？",{"type":427,"tag":447,"props":1354,"children":1355},{},[1356],{"type":432,"value":1357},"正向代理为用户服务，反向代理为服务器服务，分别对应“VPN”和“负载均衡”的概念。",{"type":427,"tag":440,"props":1359,"children":1361},{"id":1360},"cors-运作流程是怎样的",[1362],{"type":432,"value":1363},"CORS 运作流程是怎样的？",{"type":427,"tag":447,"props":1365,"children":1366},{},[1367],{"type":432,"value":1368},"CORS 即跨域资源共享机制。浏览器在请求资源前通过携带 Origin 字段的 OPTIONS 请求向服务器索取设置有 Access-Control-Allow-Methods、Access-Control-Allow-Headers、Access-Control-Allow-Origin 的响应。在得到响应的允许后再继续发送请求。",{"type":427,"tag":440,"props":1370,"children":1372},{"id":1371},"什么是私有网络请求攻击",[1373],{"type":432,"value":1374},"什么是私有网络请求攻击？",{"type":427,"tag":447,"props":1376,"children":1377},{},[1378],{"type":432,"value":1379},"在内网域名向 localhost 发起请求就算一种私有网络请求。而恶意代码通过向比浏览器当前浏览页面的域名 IP 更私密的 IP 地址发起请求，以达到获取信息或攻击手段的方式就是私有网络请求攻击。",{"type":427,"tag":447,"props":1381,"children":1382},{},[1383,1385,1392,1394],{"type":432,"value":1384},"自 Chrome 96 后， Chrome 开始实施私有网络控制策略，需要部署以下两个请求头以解除控制：",{"type":427,"tag":1386,"props":1387,"children":1389},"code",{"className":1388},[],[1390],{"type":432,"value":1391},"Access-Control-Request-Private-Network: true",{"type":432,"value":1393}," 和 ",{"type":427,"tag":1386,"props":1395,"children":1397},{"className":1396},[],[1398],{"type":432,"value":1399},"Access-Control-Allow-Private-Network: true",{"type":427,"tag":447,"props":1401,"children":1402},{},[1403,1404],{"type":432,"value":598},{"type":427,"tag":484,"props":1405,"children":1408},{"href":1406,"rel":1407},"https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&mid=2247491913&idx=1&sn=2bb0a28358c02a8ec1832781205df72c&chksm=c2e11462f5969d74fac277131e1ba8c417ec86754b2f1b2dbe8e238ca27d5c2eaebe602ec803&token=1851580176&lang=zh_CN&scene=21#wechat_redirect",[488],[1409],{"type":432,"value":1410},"Chrome 重大更新，CORS 增加了两个新的请求头？ |  code 秘密花园",{"type":427,"tag":434,"props":1412,"children":1414},{"id":1413},"阅读更多",[1415],{"type":432,"value":1413},{"type":427,"tag":575,"props":1417,"children":1418},{},[1419],{"type":427,"tag":579,"props":1420,"children":1421},{},[1422],{"type":427,"tag":484,"props":1423,"children":1426},{"href":1424,"rel":1425},"https://juejin.im/post/6844903518826921998",[488],[1427],{"type":432,"value":1428},"为你的网站带上帽子 | 使用 helmet 保护 Express 应用",{"title":421,"searchDepth":1430,"depth":1430,"links":1431},2,[1432,1433,1434,1435,1436,1441,1444,1445,1446,1447],{"id":436,"depth":1430,"text":436},{"id":463,"depth":1430,"text":466},{"id":608,"depth":1430,"text":611},{"id":642,"depth":1430,"text":645},{"id":999,"depth":1430,"text":1002,"children":1437},[1438,1440],{"id":1050,"depth":1439,"text":1053},3,{"id":1135,"depth":1439,"text":1138},{"id":1154,"depth":1430,"text":1157,"children":1442},[1443],{"id":1160,"depth":1439,"text":1163},{"id":1229,"depth":1430,"text":1229},{"id":1300,"depth":1430,"text":1303},{"id":1317,"depth":1430,"text":1317},{"id":1413,"depth":1430,"text":1413},"markdown","content:6.maps:_computer:network.md","content","6.maps/_computer/network.md","6.maps/_computer/network","md",[1455,1458],{"_path":1456,"title":1457,"description":421},"/maps/_computer/computer","Computer Mind Map",{"_path":1459,"title":1460,"description":421},"/maps/_computer/security","Security Mind Map",1738452613506]