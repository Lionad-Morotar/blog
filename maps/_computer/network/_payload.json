[{"data":1,"prerenderedAt":1411},["Reactive",2],{"navigation":3,"/maps/_computer/network":386,"/maps/_computer/network-surround":1404},[4,32,80,96,123,129,135,369,375,381],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"Bit","/gists/bit",{"title":148,"_path":149},"图片模糊","/gists/blur",{"title":151,"_path":152},"渲染相关笔记","/gists/c4d",{"title":154,"_path":155},"CDN 问题记录","/gists/cdn",{"title":157,"_path":158},"消毒剂","/gists/cleaner",{"title":160,"_path":161},"Windows Command","/gists/cmd",{"title":163,"_path":164},"Command","/gists/command",{"title":166,"_path":167},"复杂科学","/gists/complexity-science",{"title":169,"_path":170},"宇宙","/gists/cosmos",{"title":172,"_path":173},"C++","/gists/cpp",{"title":175,"_path":176},"Data Structure","/gists/data-structure",{"title":178,"_path":179},"DEPRESSION","/gists/depression",{"title":181,"_path":182},"设计模式","/gists/design-patterns",{"title":184,"_path":185},"Developer Experience","/gists/developer-experience",{"title":187,"_path":188},"Device Metrics","/gists/device-metrix",{"title":190,"_path":191},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":193,"_path":194},"正则表达式","/gists/eegex",{"title":196,"_path":197},"Emoji","/gists/emoji",{"title":199,"_path":200},"工程","/gists/engineering",{"title":202,"_path":203},"熵","/gists/entropy",{"title":205,"_path":206},"Environment","/gists/environment",{"title":208,"_path":209},"Erlang","/gists/erlang",{"title":211,"_path":212},"逃离塔克夫","/gists/escape-from-tarkov",{"title":214,"_path":215},"ESNext (ES6-ES11)","/gists/esnext",{"title":217,"_path":218},"Eval！","/gists/eval",{"title":220,"_path":221},"Flutter","/gists/flutter",{"title":223,"_path":224},"字体","/gists/font",{"title":226,"_path":227},"JS 函数式编程","/gists/functional",{"title":229,"_path":230},"Google C++ Standard","/gists/google-cpp-standard",{"title":232,"_path":233},"双向链接完全体","/gists/graph",{"title":235,"_path":236},"Hardwares","/gists/hardwares",{"title":238,"_path":239},"哈希冲突","/gists/hash-collision",{"title":241,"_path":242},"信息设计","/gists/information-design",{"title":244,"_path":245},"InstantPage","/gists/instant.page",{"title":247,"_path":248},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":250,"_path":251},"KVStore","/gists/key-value-db",{"title":253,"_path":254},"Kubernetes","/gists/kubernetes",{"title":256,"_path":257},"Makefile","/gists/makefile",{"title":259,"_path":260},"Markdown Inline Style","/gists/markdown-nice",{"title":262,"_path":263},"小程序","/gists/miniapp",{"title":265,"_path":266},"减小页面快照体积","/gists/minify-html",{"title":268,"_path":269},"mklink","/gists/mklink",{"title":271,"_path":272},"Mock","/gists/mock",{"title":274,"_path":275},"多端应用","/gists/multy-end-app",{"title":277,"_path":278},"神经科学","/gists/neuroscience",{"title":280,"_path":281},"OO","/gists/oo",{"title":283,"_path":284},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":286,"_path":287},"人物","/gists/person",{"title":289,"_path":290},"PInvoke","/gists/pinvoke",{"title":292,"_path":293},"像素","/gists/pixel",{"title":295,"_path":296},"PowerShell","/gists/powershell",{"title":298,"_path":299},"量子","/gists/quantum",{"title":301,"_path":302},"保持好奇心","/gists/questions",{"title":304,"_path":305},"React Native","/gists/react-native",{"title":307,"_path":308},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":310,"_path":311},"SEO","/gists/seo",{"title":313,"_path":314},"Shader","/gists/shader",{"title":316,"_path":317},"Shape Up","/gists/shape-up",{"title":319,"_path":320},"睡觉","/gists/sleep",{"title":322,"_path":323},"States","/gists/states",{"title":325,"_path":326},"Storage","/gists/storage",{"title":328,"_path":329},"音视频流处理","/gists/stream-cli",{"title":331,"_path":332},"Symbol","/gists/symbol",{"title":334,"_path":335},"系统论","/gists/systems-theory",{"title":337,"_path":338},"Taro","/gists/taro",{"title":340,"_path":341},"任务切片","/gists/task-slice",{"title":343,"_path":344},"技术偏好","/gists/tech-dudge",{"title":346,"_path":347},"Untitled","/gists/untitled",{"title":349,"_path":350},"可变字体","/gists/variable-font",{"title":352,"_path":353},"视觉错觉","/gists/visual-illusion",{"title":355,"_path":356},"SS(SSR)","/gists/vpn",{"title":358,"_path":359},"VS Code 插件开发","/gists/vscode-plugin",{"title":361,"_path":362},"Web Components","/gists/web-components",{"title":364,"_path":365},"Windows","/gists/windows",{"title":367,"_path":368},"查缺补漏","/gists/wrong",{"title":370,"_path":371,"children":372},"代码笔记 / Gists","/source-code",[373],{"title":374,"_path":371},"🚄 代码笔记",{"title":376,"_path":377,"children":378},"我 / Abount","/hire",[379],{"title":380,"_path":377},"📬 技术简历",{"title":382,"_path":383,"children":384},"todo","/todo",[385],{"title":382,"_path":383},{"_path":387,"_dir":388,"_draft":389,"_partial":390,"_locale":391,"title":392,"description":391,"body":393,"_type":1399,"_id":1400,"_source":1401,"_file":1402,"_extension":1403},"/maps/_computer/network","_computer",false,true,"","计算机网络",{"type":394,"children":395,"toc":1380},"root",[396,403,409,416,422,431,437,443,448,462,468,476,482,487,495,501,506,514,520,525,533,539,544,564,576,582,587,610,616,622,624,782,788,793,798,800,805,806,812,817,823,828,836,846,852,857,863,868,874,879,902,907,912,917,922,942,948,953,961,972,978,989,994,1017,1022,1029,1034,1040,1048,1062,1068,1075,1080,1085,1090,1096,1101,1108,1114,1119,1127,1133,1139,1150,1156,1161,1169,1175,1180,1191,1197,1202,1207,1213,1218,1224,1238,1249,1255,1261,1266,1271,1277,1282,1288,1293,1298,1304,1309,1315,1320,1326,1331,1351,1362,1367],{"type":397,"tag":398,"props":399,"children":400},"element","h1",{"id":392},[401],{"type":402,"value":392},"text",{"type":397,"tag":404,"props":405,"children":407},"h2",{"id":406},"网络模型",[408],{"type":402,"value":406},{"type":397,"tag":410,"props":411,"children":413},"h4",{"id":412},"各网络层有哪些代表性的协议",[414],{"type":402,"value":415},"各网络层有哪些代表性的协议？",{"type":397,"tag":417,"props":418,"children":419},"p",{},[420],{"type":402,"value":421},"应用层有 HTTP、DNS、FTP，表示层有 SSL、TSL、base64、MIDI、JPEG，会话层有 xxx，传输层则是 TCP、UDP，网络层有 IP，数据链路层 xxx，物理层有以太网协议。",{"type":397,"tag":417,"props":423,"children":424},{},[425],{"type":397,"tag":426,"props":427,"children":430},"img",{"alt":428,"src":429},"OSI 参考模型","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620033400.png?type=win11&w=60",[],{"type":397,"tag":404,"props":432,"children":434},{"id":433},"tcp",[435],{"type":402,"value":436},"TCP",{"type":397,"tag":410,"props":438,"children":440},{"id":439},"tcpip-是什么",[441],{"type":402,"value":442},"TCP/IP 是什么？",{"type":397,"tag":417,"props":444,"children":445},{},[446],{"type":402,"value":447},"TCP/IP 协议是一个协议集。TCP/IP 包括了应用层、传输层、网络层、数据链路层和网络层，是一个四层体系结构。各层有代表性的协议有 HTTP、DNS，TLS，IP 和 xxx。",{"type":397,"tag":417,"props":449,"children":450},{},[451,453],{"type":402,"value":452},"TODO，",{"type":397,"tag":454,"props":455,"children":459},"a",{"href":456,"rel":457},"https://developer.51cto.com/article/597961.html",[458],"nofollow",[460],{"type":402,"value":461},"终于有人能把 TCP/IP 协议讲的明明白白了！",{"type":397,"tag":410,"props":463,"children":465},{"id":464},"tcp-header-由哪些部分组成",[466],{"type":402,"value":467},"TCP Header 由哪些部分组成？",{"type":397,"tag":417,"props":469,"children":470},{},[471],{"type":397,"tag":426,"props":472,"children":475},{"alt":473,"src":474},"TCP Header","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731153510.png?type=win11&w=60",[],{"type":397,"tag":410,"props":477,"children":479},{"id":478},"三次握手具体过程",[480],{"type":402,"value":481},"三次握手具体过程？",{"type":397,"tag":417,"props":483,"children":484},{},[485],{"type":402,"value":486},"从三次握手图示可以发现，仅仅是连接的建立，就需要大量时间消耗。客户端想发送数据，至少要等 1.5xRTT；服务端想发送数据，至少要 2xRTT。",{"type":397,"tag":417,"props":488,"children":489},{},[490],{"type":397,"tag":426,"props":491,"children":494},{"alt":492,"src":493},"Three-way Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731162450.png?type=win11&w=40",[],{"type":397,"tag":410,"props":496,"children":498},{"id":497},"tcp-fast-open-如何优化握手过程",[499],{"type":402,"value":500},"TCP Fast Open 如何优化握手过程？",{"type":397,"tag":417,"props":502,"children":503},{},[504],{"type":402,"value":505},"TFO 规定服务器第一次返回 ACK 时，携带一个用以标志客户端身份的 Cookie。后续客户端发送 SYN 建立连接的时候带上这个 Cookie，服务端确认身份之后，就能直接返回数据了（节约了 1.5 RTT）。",{"type":397,"tag":417,"props":507,"children":508},{},[509],{"type":397,"tag":426,"props":510,"children":513},{"alt":511,"src":512},"TFO","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807054219.png?type=win11&w=80",[],{"type":397,"tag":410,"props":515,"children":517},{"id":516},"四次挥手的具体过程",[518],{"type":402,"value":519},"四次挥手的具体过程？",{"type":397,"tag":417,"props":521,"children":522},{},[523],{"type":402,"value":524},"四次挥手如下所示。为什么建立连接要三次，而断开连接要四次请求呢？从图中可以看出，接收到 FIN 请求时，服务端立即返回 ACK 表示收到请求，但是要等自己这边剩余一些工作（可能时未发送完的请求内容）完成之后，才会返回 FIN。",{"type":397,"tag":417,"props":526,"children":527},{},[528],{"type":397,"tag":426,"props":529,"children":532},{"alt":530,"src":531},"Four-way Wavehand","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731165331.png?type=win11&w=40",[],{"type":397,"tag":410,"props":534,"children":536},{"id":535},"tcp-链接中如果某端出故障了会怎么办",[537],{"type":402,"value":538},"TCP 链接中如果某端出故障了会怎么办？",{"type":397,"tag":417,"props":540,"children":541},{},[542],{"type":402,"value":543},"会通过计时器来保证链接的稳定性。",{"type":397,"tag":545,"props":546,"children":547},"ul",{},[548,554,559],{"type":397,"tag":549,"props":550,"children":551},"li",{},[552],{"type":402,"value":553},"超时重传计时器：对方没有返回 ACK 时，发送方需要重新发送数据。一般计时器的时间选择 2RTT。",{"type":397,"tag":549,"props":555,"children":556},{},[557],{"type":402,"value":558},"2MSL 定时器：主动断开连接的一方发送 FIN 后需要等待 2MSL 时间。因为如果服务端没有收到最后一个 ACK，它将重新发送 FIN。",{"type":397,"tag":549,"props":560,"children":561},{},[562],{"type":402,"value":563},"保活计时器：每当接收方收到消息，将计时器重设为两小时。计时器到期时，每 75s 发送一次探测报文段，如果连续 10 次都没有被响应则断开连接。",{"type":397,"tag":417,"props":565,"children":566},{},[567,569],{"type":402,"value":568},"见：",{"type":397,"tag":454,"props":570,"children":573},{"href":571,"rel":572},"https://www.cnblogs.com/13224ACMer/p/6616960.html",[458],[574],{"type":402,"value":575},"TCP 四种计时器",{"type":397,"tag":404,"props":577,"children":579},{"id":578},"udp",[580],{"type":402,"value":581},"UDP",{"type":397,"tag":417,"props":583,"children":584},{},[585],{"type":402,"value":586},"UDP，即 User Datagram Protocol 用户数据报协议。数据报不保证信息的传达是否到位，所以 UDP 也被普遍称作 Unreliable Datagram Protocol。",{"type":397,"tag":545,"props":588,"children":589},{},[590,595,600,605],{"type":397,"tag":549,"props":591,"children":592},{},[593],{"type":402,"value":594},"不保证消息交付",{"type":397,"tag":549,"props":596,"children":597},{},[598],{"type":402,"value":599},"不保证交付顺序",{"type":397,"tag":549,"props":601,"children":602},{},[603],{"type":402,"value":604},"不跟踪连接状态",{"type":397,"tag":549,"props":606,"children":607},{},[608],{"type":402,"value":609},"不需要拥塞控制",{"type":397,"tag":404,"props":611,"children":613},{"id":612},"http",[614],{"type":402,"value":615},"HTTP",{"type":397,"tag":410,"props":617,"children":619},{"id":618},"有哪些常见的状态码",[620],{"type":402,"value":621},"有哪些常见的状态码？",{"type":402,"value":623},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":397,"tag":625,"props":626,"children":627},"table",{},[628,647],{"type":397,"tag":629,"props":630,"children":631},"thead",{},[632],{"type":397,"tag":633,"props":634,"children":635},"tr",{},[636,642],{"type":397,"tag":637,"props":638,"children":639},"th",{},[640],{"type":402,"value":641},"状态码",{"type":397,"tag":637,"props":643,"children":644},{},[645],{"type":402,"value":646},"描述",{"type":397,"tag":648,"props":649,"children":650},"tbody",{},[651,665,678,691,704,717,730,743,756,769],{"type":397,"tag":633,"props":652,"children":653},{},[654,660],{"type":397,"tag":655,"props":656,"children":657},"td",{},[658],{"type":402,"value":659},"200",{"type":397,"tag":655,"props":661,"children":662},{},[663],{"type":402,"value":664},"成功并返回数据",{"type":397,"tag":633,"props":666,"children":667},{},[668,673],{"type":397,"tag":655,"props":669,"children":670},{},[671],{"type":402,"value":672},"301",{"type":397,"tag":655,"props":674,"children":675},{},[676],{"type":402,"value":677},"永久转移，重定向",{"type":397,"tag":633,"props":679,"children":680},{},[681,686],{"type":397,"tag":655,"props":682,"children":683},{},[684],{"type":402,"value":685},"302",{"type":397,"tag":655,"props":687,"children":688},{},[689],{"type":402,"value":690},"临时重定向",{"type":397,"tag":633,"props":692,"children":693},{},[694,699],{"type":397,"tag":655,"props":695,"children":696},{},[697],{"type":402,"value":698},"303",{"type":397,"tag":655,"props":700,"children":701},{},[702],{"type":402,"value":703},"临时重定向（客户端必须使用 Get 方法重新请求资源）",{"type":397,"tag":633,"props":705,"children":706},{},[707,712],{"type":397,"tag":655,"props":708,"children":709},{},[710],{"type":402,"value":711},"304",{"type":397,"tag":655,"props":713,"children":714},{},[715],{"type":402,"value":716},"资源未修改，可使用缓存",{"type":397,"tag":633,"props":718,"children":719},{},[720,725],{"type":397,"tag":655,"props":721,"children":722},{},[723],{"type":402,"value":724},"400",{"type":397,"tag":655,"props":726,"children":727},{},[728],{"type":402,"value":729},"请求语法错误",{"type":397,"tag":633,"props":731,"children":732},{},[733,738],{"type":397,"tag":655,"props":734,"children":735},{},[736],{"type":402,"value":737},"401",{"type":397,"tag":655,"props":739,"children":740},{},[741],{"type":402,"value":742},"要求身份认证",{"type":397,"tag":633,"props":744,"children":745},{},[746,751],{"type":397,"tag":655,"props":747,"children":748},{},[749],{"type":402,"value":750},"403",{"type":397,"tag":655,"props":752,"children":753},{},[754],{"type":402,"value":755},"请求拒绝",{"type":397,"tag":633,"props":757,"children":758},{},[759,764],{"type":397,"tag":655,"props":760,"children":761},{},[762],{"type":402,"value":763},"404",{"type":397,"tag":655,"props":765,"children":766},{},[767],{"type":402,"value":768},"资源不存在",{"type":397,"tag":633,"props":770,"children":771},{},[772,777],{"type":397,"tag":655,"props":773,"children":774},{},[775],{"type":402,"value":776},"500",{"type":397,"tag":655,"props":778,"children":779},{},[780],{"type":402,"value":781},"服务器错误",{"type":397,"tag":410,"props":783,"children":785},{"id":784},"http-报文由哪些部分组成",[786],{"type":402,"value":787},"HTTP 报文由哪些部分组成？",{"type":397,"tag":417,"props":789,"children":790},{},[791],{"type":402,"value":792},"请求报文由请求行、请求头、空行和请求数据组成，相应报文类似。",{"type":397,"tag":417,"props":794,"children":795},{},[796],{"type":402,"value":797},"请求报文实例：",{"type":402,"value":799},"\n\n",{"type":397,"tag":417,"props":801,"children":802},{},[803],{"type":402,"value":804},"相应报文实例：",{"type":402,"value":799},{"type":397,"tag":410,"props":807,"children":809},{"id":808},"http-11-对比-http-10-做了哪些改进",[810],{"type":402,"value":811},"HTTP 1.1 对比 HTTP 1.0 做了哪些改进？",{"type":397,"tag":417,"props":813,"children":814},{},[815],{"type":402,"value":816},"长链接（keep-alive）、断点续传、HTTP 缓存。",{"type":397,"tag":410,"props":818,"children":820},{"id":819},"http-缓存分几种",[821],{"type":402,"value":822},"HTTP 缓存分几种？",{"type":397,"tag":417,"props":824,"children":825},{},[826],{"type":402,"value":827},"分强缓存和协商缓存：Expires、Cache-Control、Last-Modified、Etag。",{"type":397,"tag":417,"props":829,"children":830},{},[831],{"type":397,"tag":426,"props":832,"children":835},{"alt":833,"src":834},"HTTP Cache","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220630205606.png?type=win11&w=60",[],{"type":397,"tag":417,"props":837,"children":838},{},[839,840],{"type":402,"value":452},{"type":397,"tag":454,"props":841,"children":844},{"href":842,"rel":843},"https://imweb.io/topic/55c6f9bac222e3af6ce235b9",[458],[845],{"type":402,"value":842},{"type":397,"tag":410,"props":847,"children":849},{"id":848},"强缓存和协商缓存的主要区别是",[850],{"type":402,"value":851},"强缓存和协商缓存的主要区别是？",{"type":397,"tag":417,"props":853,"children":854},{},[855],{"type":402,"value":856},"强缓存是一但匹配就无条件使用缓存，而面对协商缓存的资源，浏览器需要向服务端发请求，对比资源是否变更，并依靠服务端的响应来判断是否使用缓存。如果资源同时应用了强缓存和协商缓存，那么浏览器优先使用强缓存。",{"type":397,"tag":410,"props":858,"children":860},{"id":859},"no-store-和-no-cache-的区别",[861],{"type":402,"value":862},"no-store 和 no-cache 的区别？",{"type":397,"tag":417,"props":864,"children":865},{},[866],{"type":402,"value":867},"no-store 告诉客户端每次都在服务器取最新的资源。no-cache 也要求每次都要重新请求，但服务器可能返回 304 告诉客户端资源未改变。",{"type":397,"tag":410,"props":869,"children":871},{"id":870},"http2-的改进在哪里",[872],{"type":402,"value":873},"HTTP2 的改进在哪里？",{"type":397,"tag":417,"props":875,"children":876},{},[877],{"type":402,"value":878},"HTTP/2 主要包含以下几个方面的变化，显著增强了性能，也增加了安全性。",{"type":397,"tag":545,"props":880,"children":881},{},[882,887,892,897],{"type":397,"tag":549,"props":883,"children":884},{},[885],{"type":402,"value":886},"二进制分帧层",{"type":397,"tag":549,"props":888,"children":889},{},[890],{"type":402,"value":891},"头部压缩（HPACK、Huffman）",{"type":397,"tag":549,"props":893,"children":894},{},[895],{"type":402,"value":896},"多路复用",{"type":397,"tag":549,"props":898,"children":899},{},[900],{"type":402,"value":901},"服务端推送",{"type":397,"tag":417,"props":903,"children":904},{},[905],{"type":402,"value":906},"二进制分帧层是在应用层（HTTP）和传输层（TCP、UDP）之间新增的一个层级关系。二进制分帧层将传输的 HTTP 消息分割为更小的帧，并采用二进制格式编码传输。帧分为头部帧和消息帧。这意味着 HTTP/2 请求的所有内容都是二进制传输的。",{"type":397,"tag":417,"props":908,"children":909},{},[910],{"type":402,"value":911},"HTTP 头部被转为帧之前，会通过维护一个表结构，通过序号记录已发送的键值对。这是一种索引算法，叫 HPACK。具体的表结构分静态表和动态表，静态表给一些常用的头部标号了号，直接使用就好，动态表则是根据发送的内容动态确定的记号。需要被发送具体内容会被哈夫曼编码以减小体积。",{"type":397,"tag":417,"props":913,"children":914},{},[915],{"type":402,"value":916},"多路复用是指，多个 HTTP 请求可以在同一个 TCP 连接中并行传输。这和 HTTP 1.1 的 Connection：keep-alive 不同，keep-alive 虽然复用 TCP 连接，但是多个响应之间是串行的。",{"type":397,"tag":417,"props":918,"children":919},{},[920],{"type":402,"value":921},"建立连接后，双方通过交换 SETTING 帧，以确认双向的流量窗口控制大小。然后开始发送帧。帧可以在一个连接中根据优先级发送，或是被乱序发送，响应方也能乱序接收。由于流是双向的，只要服务端 SETTING 帧设置的流量窗口大小不为 0，服务端可按照同源策略推送资源给客户端。",{"type":397,"tag":417,"props":923,"children":924},{},[925,926,933,935],{"type":402,"value":568},{"type":397,"tag":454,"props":927,"children":930},{"href":928,"rel":929},"https://coffe1891.gitbook.io/frontend-hard-mode-interview/1/1.5.3",[458],[931],{"type":402,"value":932},"HTTP/2 和 HTTP/1.X 相比的新特性",{"type":402,"value":934},"、",{"type":397,"tag":454,"props":936,"children":939},{"href":937,"rel":938},"https://blog.csdn.net/gaoliang1719/article/details/106346201/",[458],[940],{"type":402,"value":941},"HTTP/2 协议之头部压缩",{"type":397,"tag":410,"props":943,"children":945},{"id":944},"http3-相比-http2-改变了什么东西",[946],{"type":402,"value":947},"HTTP3 相比 HTTP2 改变了什么东西？",{"type":397,"tag":417,"props":949,"children":950},{},[951],{"type":402,"value":952},"HTTP3 使用全新的传输层协议 QUIC，实现了 H2 中的流式传输（HTTP2）、多路复用（TCP）、流量控制（TCP）以及可靠性（TCP）等内容，其网络层协议应用的是 UDP 而不是 TCP，本意是用来解决 TCP 建立链接需要  1.5 RTT 延迟的问题。这种改善在移动端更加有效。",{"type":397,"tag":417,"props":954,"children":955},{},[956],{"type":397,"tag":426,"props":957,"children":960},{"alt":958,"src":959},"HTTP3 VS HTTP2 VS HTTP1.1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220621003527.png?type=draw&w=80",[],{"type":397,"tag":417,"props":962,"children":963},{},[964,965],{"type":402,"value":568},{"type":397,"tag":454,"props":966,"children":969},{"href":967,"rel":968},"https://mp.weixin.qq.com/s/40YBEWZBaHakDuRuh27fMg",[458],[970],{"type":402,"value":971},"HTTP3 发布了！",{"type":397,"tag":404,"props":973,"children":975},{"id":974},"tls",[976],{"type":402,"value":977},"TLS",{"type":397,"tag":417,"props":979,"children":980},{},[981,982],{"type":402,"value":452},{"type":397,"tag":454,"props":983,"children":986},{"href":984,"rel":985},"https://www.oschina.net/translate/rfc-8446-aka-tls-1-3",[458],[987],{"type":402,"value":988},"详细介绍 RFC 8446（即 TLS 1.3）",{"type":397,"tag":417,"props":990,"children":991},{},[992],{"type":402,"value":993},"TLS 是一种混合式加密系统，同时使用对称加密和非对称加密。它使用非对称加密以加密对称加密所需的密钥。它有多个版本。TLS 1.3 是一种比起 TLS1.2 而言更清晰、更快速、更安全的现代化安全协议。TLS 1.2 有两点问题：1. 包括 POODLE 在内的众多可行漏洞；2. 性能低。为了改善这些问题，IETF 在 2013 年，着手 TLS 1.3 的讨论，主要改进：",{"type":397,"tag":545,"props":995,"children":996},{},[997,1002,1007,1012],{"type":397,"tag":549,"props":998,"children":999},{},[1000],{"type":402,"value":1001},"减少握手时间",{"type":397,"tag":549,"props":1003,"children":1004},{},[1005],{"type":402,"value":1006},"加密更多的握手",{"type":397,"tag":549,"props":1008,"children":1009},{},[1010],{"type":402,"value":1011},"改善跨协议攻击的弹性",{"type":397,"tag":549,"props":1013,"children":1014},{},[1015],{"type":402,"value":1016},"删除遗留特征",{"type":397,"tag":417,"props":1018,"children":1019},{},[1020],{"type":402,"value":1021},"经过 4 年的争论。最终，形成了 RFC 8446 规范。",{"type":397,"tag":1023,"props":1024,"children":1026},"h3",{"id":1025},"tls-12-的缺陷",[1027],{"type":402,"value":1028},"TLS 1.2 的缺陷",{"type":397,"tag":417,"props":1030,"children":1031},{},[1032],{"type":402,"value":1033},"TLS 1.2 使用的加密方式有缺陷。其中，非对称加密有如 RSA 和 Diffie-Hellman 协议。",{"type":397,"tag":410,"props":1035,"children":1037},{"id":1036},"rsa",[1038],{"type":402,"value":1039},"RSA",{"type":397,"tag":417,"props":1041,"children":1042},{},[1043],{"type":397,"tag":426,"props":1044,"children":1047},{"alt":1045,"src":1046},"RSA Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082140.png?w=70",[],{"type":397,"tag":417,"props":1049,"children":1050},{},[1051,1053,1060],{"type":402,"value":1052},"RSA 不保证前向保密。即，如果有人记录了加密对话，然后获取服务器的 RSA 私钥，他们可以将对话解密。而攻击者可能只需 ",{"type":397,"tag":454,"props":1054,"children":1057},{"href":1055,"rel":1056},"https://www.wikiwand.com/zh/%E5%BF%83%E8%84%8F%E5%87%BA%E8%A1%80%E6%BC%8F%E6%B4%9E",[458],[1058],{"type":402,"value":1059},"HeartBleed 漏洞",{"type":402,"value":1061},"（缓存区过读）就可以顺利窃取私钥。",{"type":397,"tag":410,"props":1063,"children":1065},{"id":1064},"diffie-hellman",[1066],{"type":402,"value":1067},"Diffie-Hellman",{"type":397,"tag":417,"props":1069,"children":1070},{},[1071],{"type":397,"tag":426,"props":1072,"children":1074},{"alt":1067,"src":1073},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082812.png?w=70",[],{"type":397,"tag":417,"props":1076,"children":1077},{},[1078],{"type":402,"value":1079},"Diffie-Hellman 的缺陷在于，协议的某些参数不安全，且能够被操纵设置；不安全的参数能导致加密更容易被破解。",{"type":397,"tag":410,"props":1081,"children":1083},{"id":1082},"对称加密缺陷",[1084],{"type":402,"value":1082},{"type":397,"tag":417,"props":1086,"children":1087},{},[1088],{"type":402,"value":1089},"TLS 1.2 的对称加密使用的 CBC 模式密码和流式密码也有缺陷。",{"type":397,"tag":410,"props":1091,"children":1093},{"id":1092},"downgrade-attack",[1094],{"type":402,"value":1095},"Downgrade Attack",{"type":397,"tag":417,"props":1097,"children":1098},{},[1099],{"type":402,"value":1100},"由于 TLS 1.2 握手协商密钥的部分没有加密。所以中间人可以拦截客户端的请求，选择发送方和接收方都支持的弱密码，伪造请求。",{"type":397,"tag":417,"props":1102,"children":1103},{},[1104],{"type":397,"tag":426,"props":1105,"children":1107},{"alt":1095,"src":1106},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807090034.png?w=70",[],{"type":397,"tag":1023,"props":1109,"children":1111},{"id":1110},"_0-rtt",[1112],{"type":402,"value":1113},"0-RTT",{"type":397,"tag":417,"props":1115,"children":1116},{},[1117],{"type":402,"value":1118},"TLS 1.3 中，通讯双方可以得到一个“恢复主密钥”的密钥，用于从中断的连接中直接恢复通讯。但是有被拦截导致重放攻击的风险。",{"type":397,"tag":417,"props":1120,"children":1121},{},[1122],{"type":397,"tag":426,"props":1123,"children":1126},{"alt":1124,"src":1125},"0-RTT 重放攻击","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807081140.png?w=70",[],{"type":397,"tag":404,"props":1128,"children":1130},{"id":1129},"https",[1131],{"type":402,"value":1132},"HTTPS",{"type":397,"tag":1023,"props":1134,"children":1136},{"id":1135},"links",[1137],{"type":402,"value":1138},"Links",{"type":397,"tag":417,"props":1140,"children":1141},{},[1142,1143],{"type":402,"value":452},{"type":397,"tag":454,"props":1144,"children":1147},{"href":1145,"rel":1146},"https://zhuanlan.zhihu.com/p/26682342",[458],[1148],{"type":402,"value":1149},"深入理解 HTTPS 原理、过程与实践",{"type":397,"tag":410,"props":1151,"children":1153},{"id":1152},"https-的握手过程是怎样的",[1154],{"type":402,"value":1155},"HTTPS 的握手过程是怎样的？",{"type":397,"tag":417,"props":1157,"children":1158},{},[1159],{"type":402,"value":1160},"总的来说是一个非对称加密+对称加密的过程。客户端通过一个随机数加上服务器的公钥来生成预主密钥，然后双方再通过 Client Hello 和 Server Hello 时的两个随机数生成会话密钥。生成预主密钥的过程是非对称加密的，因为只有服务端用私钥才能解得客户端的随机数。而之后使用会话密钥主要是出于性能考虑。",{"type":397,"tag":417,"props":1162,"children":1163},{},[1164],{"type":397,"tag":426,"props":1165,"children":1168},{"alt":1166,"src":1167},"HTTPS 握手过程","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620024738.png",[],{"type":397,"tag":410,"props":1170,"children":1172},{"id":1171},"ca-怎么解决中间人问题",[1173],{"type":402,"value":1174},"CA 怎么解决中间人问题？",{"type":397,"tag":417,"props":1176,"children":1177},{},[1178],{"type":402,"value":1179},"CA 主要是用来防范服务器端返回 Server Hello 前就和客户端提供了假的公钥。CA 是一个可信的第三方机构，客户端想要服务器的公钥，需要从 CA 获得。CA 返回公钥以及数字签名。客户端只要拿到公钥后根据 CA 公钥对其计算获得摘要，再将摘要和签名进行对比，就能知道是否拿到了可信的公钥。",{"type":397,"tag":417,"props":1181,"children":1182},{},[1183,1184],{"type":402,"value":568},{"type":397,"tag":454,"props":1185,"children":1188},{"href":1186,"rel":1187},"https://www.jianshu.com/p/9de06222793b",[458],[1189],{"type":402,"value":1190},"HTTPS CA 原理",{"type":397,"tag":410,"props":1192,"children":1194},{"id":1193},"数字签名是什么",[1195],{"type":402,"value":1196},"数字签名是什么？",{"type":397,"tag":417,"props":1198,"children":1199},{},[1200],{"type":402,"value":1201},"数字签名是只有信息发送者才能产生的一段文本，信息接收方可以通过签名计算出接受到的文本是否经过了修改。如果我要发送 A，我会用私钥将 A 进行加密获得 B，并把 A 和 B 同时发送过去。B 就是数字签名。因为我的公钥是公开的，所以接受方可以通过使用我的公钥去计算 A，如果获得和 B 一致的结果，那么说明信息没有被篡改。",{"type":397,"tag":404,"props":1203,"children":1205},{"id":1204},"攻防",[1206],{"type":402,"value":1204},{"type":397,"tag":410,"props":1208,"children":1210},{"id":1209},"https-降级攻击的原理是什么",[1211],{"type":402,"value":1212},"HTTPS 降级攻击的原理是什么？",{"type":397,"tag":417,"props":1214,"children":1215},{},[1216],{"type":402,"value":1217},"客服端与服务端协商加密协议的过程当中，如果攻击者拦截了客户端（或操控客户端）并代替它向服务端协商使用仅支持有漏洞的协议。如果服务端同意了，那么建立连接后，攻击者就能使用该协议的已知漏洞的破解手段，去破解通讯内容了。",{"type":397,"tag":410,"props":1219,"children":1221},{"id":1220},"syn-攻击的基本原理是什么",[1222],{"type":402,"value":1223},"SYN 攻击的基本原理是什么？",{"type":397,"tag":417,"props":1225,"children":1226},{},[1227,1229,1236],{"type":402,"value":1228},"SYN 洪水攻击是 DDOS 攻击中最常见的攻击类型。攻击者向服务器发送大量伪造的 TCP 连接请求，而源 IP 是伪造的。由于服务器收不到伪造源回应的 ACK 数据包，就会不断重发。一般应对方式是：减少重发次数、使用 ",{"type":397,"tag":454,"props":1230,"children":1233},{"href":1231,"rel":1232},"https://baike.baidu.com/item/syn%20cookie/6898884?fr=aladdin",[458],[1234],{"type":402,"value":1235},"SYN Cookie",{"type":402,"value":1237},"、增加 backlog 队列长度、限制 SYN 并发数。",{"type":397,"tag":417,"props":1239,"children":1240},{},[1241,1242],{"type":402,"value":568},{"type":397,"tag":454,"props":1243,"children":1246},{"href":1244,"rel":1245},"https://www.qycn.com/about/hd/2049.html",[458],[1247],{"type":402,"value":1248},"服务器遭到 SYN 攻击该如何处理呢？",{"type":397,"tag":404,"props":1250,"children":1252},{"id":1251},"cdn",[1253],{"type":402,"value":1254},"CDN",{"type":397,"tag":410,"props":1256,"children":1258},{"id":1257},"cdn-有什么好处",[1259],{"type":402,"value":1260},"CDN 有什么好处？",{"type":397,"tag":417,"props":1262,"children":1263},{},[1264],{"type":402,"value":1265},"对页面加载而言，CDN 可以减少请求时间、突破浏览器同域的 TCP 并发数、节约 Cookie 带宽。",{"type":397,"tag":404,"props":1267,"children":1269},{"id":1268},"浏览器",[1270],{"type":402,"value":1268},{"type":397,"tag":410,"props":1272,"children":1274},{"id":1273},"url-由哪些部分组成",[1275],{"type":402,"value":1276},"URL 由哪些部分组成？",{"type":397,"tag":417,"props":1278,"children":1279},{},[1280],{"type":402,"value":1281},"协议头、域名、端口、目录、文件名（index.html）、页面锚、参数。",{"type":397,"tag":410,"props":1283,"children":1285},{"id":1284},"怎么做跨域",[1286],{"type":402,"value":1287},"怎么做跨域？",{"type":397,"tag":417,"props":1289,"children":1290},{},[1291],{"type":402,"value":1292},"用代理服务器、CORS、iFrame 或者 WebSocket 都可以。",{"type":397,"tag":417,"props":1294,"children":1295},{},[1296],{"type":402,"value":1297},"服务器可以忽略同源限制；WebSocket 和 CORS 不受同源影响；iFrame 需要浏览器加载一个跨域页面，然后和主页面用 postMessage 或者哈希监听的方式通信，让 iFrame 中的脚本代替主页面发送请求。",{"type":397,"tag":410,"props":1299,"children":1301},{"id":1300},"正向代理和反向代理的区别是",[1302],{"type":402,"value":1303},"正向代理和反向代理的区别是？",{"type":397,"tag":417,"props":1305,"children":1306},{},[1307],{"type":402,"value":1308},"正向代理为用户服务，反向代理为服务器服务，分别对应“VPN”和“负载均衡”的概念。",{"type":397,"tag":410,"props":1310,"children":1312},{"id":1311},"cors-运作流程是怎样的",[1313],{"type":402,"value":1314},"CORS 运作流程是怎样的？",{"type":397,"tag":417,"props":1316,"children":1317},{},[1318],{"type":402,"value":1319},"CORS 即跨域资源共享机制。浏览器在请求资源前通过携带 Origin 字段的 OPTIONS 请求向服务器索取设置有 Access-Control-Allow-Methods、Access-Control-Allow-Headers、Access-Control-Allow-Origin 的响应。在得到响应的允许后再继续发送请求。",{"type":397,"tag":410,"props":1321,"children":1323},{"id":1322},"什么是私有网络请求攻击",[1324],{"type":402,"value":1325},"什么是私有网络请求攻击？",{"type":397,"tag":417,"props":1327,"children":1328},{},[1329],{"type":402,"value":1330},"在内网域名向 localhost 发起请求就算一种私有网络请求。而恶意代码通过向比浏览器当前浏览页面的域名 IP 更私密的 IP 地址发起请求，以达到获取信息或攻击手段的方式就是私有网络请求攻击。",{"type":397,"tag":417,"props":1332,"children":1333},{},[1334,1336,1343,1345],{"type":402,"value":1335},"自 Chrome 96 后， Chrome 开始实施私有网络控制策略，需要部署以下两个请求头以解除控制：",{"type":397,"tag":1337,"props":1338,"children":1340},"code",{"className":1339},[],[1341],{"type":402,"value":1342},"Access-Control-Request-Private-Network: true",{"type":402,"value":1344}," 和 ",{"type":397,"tag":1337,"props":1346,"children":1348},{"className":1347},[],[1349],{"type":402,"value":1350},"Access-Control-Allow-Private-Network: true",{"type":397,"tag":417,"props":1352,"children":1353},{},[1354,1355],{"type":402,"value":568},{"type":397,"tag":454,"props":1356,"children":1359},{"href":1357,"rel":1358},"https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&mid=2247491913&idx=1&sn=2bb0a28358c02a8ec1832781205df72c&chksm=c2e11462f5969d74fac277131e1ba8c417ec86754b2f1b2dbe8e238ca27d5c2eaebe602ec803&token=1851580176&lang=zh_CN&scene=21#wechat_redirect",[458],[1360],{"type":402,"value":1361},"Chrome 重大更新，CORS 增加了两个新的请求头？ |  code 秘密花园",{"type":397,"tag":404,"props":1363,"children":1365},{"id":1364},"阅读更多",[1366],{"type":402,"value":1364},{"type":397,"tag":545,"props":1368,"children":1369},{},[1370],{"type":397,"tag":549,"props":1371,"children":1372},{},[1373],{"type":397,"tag":454,"props":1374,"children":1377},{"href":1375,"rel":1376},"https://juejin.im/post/6844903518826921998",[458],[1378],{"type":402,"value":1379},"为你的网站带上帽子 | 使用 helmet 保护 Express 应用",{"title":391,"searchDepth":1381,"depth":1381,"links":1382},2,[1383,1384,1385,1386,1387,1392,1395,1396,1397,1398],{"id":406,"depth":1381,"text":406},{"id":433,"depth":1381,"text":436},{"id":578,"depth":1381,"text":581},{"id":612,"depth":1381,"text":615},{"id":974,"depth":1381,"text":977,"children":1388},[1389,1391],{"id":1025,"depth":1390,"text":1028},3,{"id":1110,"depth":1390,"text":1113},{"id":1129,"depth":1381,"text":1132,"children":1393},[1394],{"id":1135,"depth":1390,"text":1138},{"id":1204,"depth":1381,"text":1204},{"id":1251,"depth":1381,"text":1254},{"id":1268,"depth":1381,"text":1268},{"id":1364,"depth":1381,"text":1364},"markdown","content:6.maps:_computer:network.md","content","6.maps/_computer/network.md","md",[1405,1408],{"_path":1406,"title":1407,"description":391},"/maps/_computer/computer","Computer Mind Map",{"_path":1409,"title":1410,"description":391},"/maps/_computer/security","Security Mind Map",1710257748666]