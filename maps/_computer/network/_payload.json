[{"data":1,"prerenderedAt":1455},["ShallowReactive",2],{"navigation":3,"/maps/_computer/network":410,"/maps/_computer/network-surround":1448},[4,32,83,102,129,135,141,147,393,399,405],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":42,"_path":43},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":45,"_path":46},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":48,"_path":49},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":51,"_path":52},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":54,"_path":55},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":57,"_path":58},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":60,"_path":61},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":63,"_path":64},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":66,"_path":67},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":69,"_path":70},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":72,"_path":73},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":75,"_path":76},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":78,"_path":79},"🚝 四十二篇系列","/articles/fourty-two",{"title":81,"_path":82},"📝 技术博客归档","/articles/fold",{"title":84,"_path":85,"children":86},"造物 / Make","/tools",[87,90,93,96,99],{"title":88,"_path":89},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":91,"_path":92},"🌐 AnySort","/tools/anysort",{"title":94,"_path":95},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":97,"_path":98},"👓 Crapto","/tools/crypto-inline",{"title":100,"_path":101},"🖨️ any-to-base64","/tools/any-to-base64",{"title":103,"_path":104,"children":105},"吉他剧场 / Music","/music",[106,108,111,114,117,120,123,126],{"title":107,"_path":104},"🎸 FingerStyle！",{"title":109,"_path":110},"🌬️ 等待的风","/music/wind",{"title":112,"_path":113},"💕 约定的海洋","/music/ocean",{"title":115,"_path":116},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":118,"_path":119},"🌏 残酷天使的行动纲领","/music/eva",{"title":121,"_path":122},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":124,"_path":125},"🍷 Wu Wei","/music/wu-wei",{"title":127,"_path":128},"🌅 无题","/music/untitled",{"title":130,"_path":131,"children":132},"画点什么 / Paint","/paint",[133],{"title":134,"_path":131},"🚧 正在施工",{"title":136,"_path":137,"children":138},"读书笔记 / Notes","/books",[139],{"title":140,"_path":137},"📕 读书笔记",{"title":142,"_path":143,"children":144},"知识地图 / Maps","/maps",[145],{"title":146,"_path":143},"🏁 知识地图",{"title":148,"_path":149,"children":150},"零散的笔记 / Gists","/gists",[151,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390],{"title":152,"_path":149},"🧊 Gists",{"title":154,"_path":155},"网站的可访问性","/gists/accessibility",{"title":157,"_path":158},"Bit","/gists/bit",{"title":160,"_path":161},"图片模糊","/gists/blur",{"title":163,"_path":164},"渲染相关笔记","/gists/c4d",{"title":166,"_path":167},"CDN 问题记录","/gists/cdn",{"title":169,"_path":170},"消毒剂","/gists/cleaner",{"title":172,"_path":173},"Windows Command","/gists/cmd",{"title":175,"_path":176},"Command","/gists/command",{"title":178,"_path":179},"复杂科学","/gists/complexity-science",{"title":181,"_path":182},"GitHub Copilot","/gists/copilot",{"title":184,"_path":185},"宇宙","/gists/cosmos",{"title":187,"_path":188},"C++","/gists/cpp",{"title":190,"_path":191},"Data Structure","/gists/data-structure",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"设计模式","/gists/design-patterns",{"title":199,"_path":200},"Developer Experience","/gists/developer-experience",{"title":202,"_path":203},"Device Metrics","/gists/device-metrix",{"title":205,"_path":206},"数字化转型","/gists/digital-transformation",{"title":208,"_path":209},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":211,"_path":212},"正则表达式","/gists/eegex",{"title":214,"_path":215},"Emoji","/gists/emoji",{"title":217,"_path":218},"工程","/gists/engineering",{"title":220,"_path":221},"熵","/gists/entropy",{"title":223,"_path":224},"Environment","/gists/environment",{"title":226,"_path":227},"Erlang","/gists/erlang",{"title":229,"_path":230},"逃离塔克夫","/gists/escape-from-tarkov",{"title":232,"_path":233},"ESNext (ES6-ES11)","/gists/esnext",{"title":235,"_path":236},"Eval！","/gists/eval",{"title":238,"_path":239},"Flutter","/gists/flutter",{"title":241,"_path":242},"字体","/gists/font",{"title":244,"_path":245},"JS 函数式编程","/gists/functional",{"title":247,"_path":248},"游戏化","/gists/gamification",{"title":250,"_path":251},"Google C++ Standard","/gists/google-cpp-standard",{"title":253,"_path":254},"双向链接完全体","/gists/graph",{"title":256,"_path":257},"Hardwares","/gists/hardwares",{"title":259,"_path":260},"哈希冲突","/gists/hash-collision",{"title":262,"_path":263},"信息设计","/gists/information-design",{"title":265,"_path":266},"InstantPage","/gists/instant.page",{"title":268,"_path":269},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":271,"_path":272},"KVStore","/gists/key-value-db",{"title":274,"_path":275},"Kubernetes","/gists/kubernetes",{"title":277,"_path":278},"Makefile","/gists/makefile",{"title":280,"_path":281},"Markdown Inline Style","/gists/markdown-nice",{"title":283,"_path":284},"小程序","/gists/miniapp",{"title":286,"_path":287},"减小页面快照体积","/gists/minify-html",{"title":289,"_path":290},"mklink","/gists/mklink",{"title":292,"_path":293},"Mock","/gists/mock",{"title":295,"_path":296},"多人协作系统","/gists/multiplayer",{"title":298,"_path":299},"多端应用","/gists/multy-end-app",{"title":301,"_path":302},"神经科学","/gists/neuroscience",{"title":304,"_path":305},"OO","/gists/oo",{"title":307,"_path":308},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":310,"_path":311},"PInvoke","/gists/pinvoke",{"title":313,"_path":314},"像素","/gists/pixel",{"title":316,"_path":317},"PowerShell","/gists/powershell",{"title":319,"_path":320},"量子","/gists/quantum",{"title":322,"_path":323},"保持好奇心","/gists/questions",{"title":325,"_path":326},"React Native","/gists/react-native",{"title":328,"_path":329},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":331,"_path":332},"SEO","/gists/seo",{"title":334,"_path":335},"Shader","/gists/shader",{"title":337,"_path":338},"Shape Up","/gists/shape-up",{"title":340,"_path":341},"睡觉","/gists/sleep",{"title":343,"_path":344},"记录奇怪的问题","/gists/solved",{"title":346,"_path":347},"States","/gists/states",{"title":349,"_path":350},"Storage","/gists/storage",{"title":352,"_path":353},"音视频流处理","/gists/stream-cli",{"title":355,"_path":356},"Symbol","/gists/symbol",{"title":358,"_path":359},"系统论","/gists/systems-theory",{"title":361,"_path":362},"Taro","/gists/taro",{"title":364,"_path":365},"任务切片","/gists/task-slice",{"title":367,"_path":368},"技术偏好","/gists/tech-dudge",{"title":370,"_path":371},"Untitled","/gists/untitled",{"title":373,"_path":374},"可变字体","/gists/variable-font",{"title":376,"_path":377},"视觉错觉","/gists/visual-illusion",{"title":379,"_path":380},"SS(SSR)","/gists/vpn",{"title":382,"_path":383},"VS Code 插件开发","/gists/vscode-plugin",{"title":385,"_path":386},"Web Components","/gists/web-components",{"title":388,"_path":389},"Windows","/gists/windows",{"title":391,"_path":392},"查缺补漏","/gists/wrong",{"title":394,"_path":395,"children":396},"代码笔记 / Gists","/source-code",[397],{"title":398,"_path":395},"🚄 代码笔记",{"title":400,"_path":401,"children":402},"我 / Abount","/hire",[403],{"title":404,"_path":401},"📬 技术简历",{"title":406,"_path":407,"children":408},"todo","/todo",[409],{"title":406,"_path":407},{"_path":411,"_dir":412,"_draft":413,"_partial":414,"_locale":415,"title":416,"description":415,"body":417,"_type":1442,"_id":1443,"_source":1444,"_file":1445,"_stem":1446,"_extension":1447},"/maps/_computer/network","_computer",false,true,"","计算机网络",{"type":418,"children":419,"toc":1423},"root",[420,427,433,440,446,455,461,467,472,486,492,500,506,511,519,525,530,538,544,549,557,563,568,588,600,606,611,634,640,646,804,810,815,820,825,831,836,842,847,855,865,871,876,882,887,893,898,921,926,931,936,941,961,967,972,980,991,997,1008,1013,1036,1041,1048,1053,1059,1067,1081,1087,1094,1099,1104,1109,1115,1120,1127,1133,1138,1146,1152,1158,1169,1175,1180,1188,1194,1199,1210,1216,1221,1226,1232,1237,1243,1257,1268,1274,1279,1292,1298,1304,1309,1314,1320,1325,1331,1336,1341,1347,1352,1358,1363,1369,1374,1394,1405,1410],{"type":421,"tag":422,"props":423,"children":424},"element","h1",{"id":416},[425],{"type":426,"value":416},"text",{"type":421,"tag":428,"props":429,"children":431},"h2",{"id":430},"网络模型",[432],{"type":426,"value":430},{"type":421,"tag":434,"props":435,"children":437},"h4",{"id":436},"各网络层有哪些代表性的协议",[438],{"type":426,"value":439},"各网络层有哪些代表性的协议？",{"type":421,"tag":441,"props":442,"children":443},"p",{},[444],{"type":426,"value":445},"应用层有 HTTP、DNS、FTP，表示层有 SSL、TSL、base64、MIDI、JPEG，会话层有 xxx，传输层则是 TCP、UDP，网络层有 IP，数据链路层 xxx，物理层有以太网协议。",{"type":421,"tag":441,"props":447,"children":448},{},[449],{"type":421,"tag":450,"props":451,"children":454},"img",{"alt":452,"src":453},"OSI 参考模型","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620033400.png?type=win11&w=60",[],{"type":421,"tag":428,"props":456,"children":458},{"id":457},"tcp",[459],{"type":426,"value":460},"TCP",{"type":421,"tag":434,"props":462,"children":464},{"id":463},"tcpip-是什么",[465],{"type":426,"value":466},"TCP/IP 是什么？",{"type":421,"tag":441,"props":468,"children":469},{},[470],{"type":426,"value":471},"TCP/IP 协议是一个协议集。TCP/IP 包括了应用层、传输层、网络层、数据链路层和网络层，是一个四层体系结构。各层有代表性的协议有 HTTP、DNS，TLS，IP 和 xxx。",{"type":421,"tag":441,"props":473,"children":474},{},[475,477],{"type":426,"value":476},"TODO，",{"type":421,"tag":478,"props":479,"children":483},"a",{"href":480,"rel":481},"https://developer.51cto.com/article/597961.html",[482],"nofollow",[484],{"type":426,"value":485},"终于有人能把 TCP/IP 协议讲的明明白白了！",{"type":421,"tag":434,"props":487,"children":489},{"id":488},"tcp-header-由哪些部分组成",[490],{"type":426,"value":491},"TCP Header 由哪些部分组成？",{"type":421,"tag":441,"props":493,"children":494},{},[495],{"type":421,"tag":450,"props":496,"children":499},{"alt":497,"src":498},"TCP Header","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731153510.png?type=win11&w=60",[],{"type":421,"tag":434,"props":501,"children":503},{"id":502},"三次握手具体过程",[504],{"type":426,"value":505},"三次握手具体过程？",{"type":421,"tag":441,"props":507,"children":508},{},[509],{"type":426,"value":510},"从三次握手图示可以发现，仅仅是连接的建立，就需要大量时间消耗。客户端想发送数据，至少要等 1.5xRTT；服务端想发送数据，至少要 2xRTT。",{"type":421,"tag":441,"props":512,"children":513},{},[514],{"type":421,"tag":450,"props":515,"children":518},{"alt":516,"src":517},"Three-way Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731162450.png?type=win11&w=40",[],{"type":421,"tag":434,"props":520,"children":522},{"id":521},"tcp-fast-open-如何优化握手过程",[523],{"type":426,"value":524},"TCP Fast Open 如何优化握手过程？",{"type":421,"tag":441,"props":526,"children":527},{},[528],{"type":426,"value":529},"TFO 规定服务器第一次返回 ACK 时，携带一个用以标志客户端身份的 Cookie。后续客户端发送 SYN 建立连接的时候带上这个 Cookie，服务端确认身份之后，就能直接返回数据了（节约了 1.5 RTT）。",{"type":421,"tag":441,"props":531,"children":532},{},[533],{"type":421,"tag":450,"props":534,"children":537},{"alt":535,"src":536},"TFO","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807054219.png?type=win11&w=80",[],{"type":421,"tag":434,"props":539,"children":541},{"id":540},"四次挥手的具体过程",[542],{"type":426,"value":543},"四次挥手的具体过程？",{"type":421,"tag":441,"props":545,"children":546},{},[547],{"type":426,"value":548},"四次挥手如下所示。为什么建立连接要三次，而断开连接要四次请求呢？从图中可以看出，接收到 FIN 请求时，服务端立即返回 ACK 表示收到请求，但是要等自己这边剩余一些工作（可能时未发送完的请求内容）完成之后，才会返回 FIN。",{"type":421,"tag":441,"props":550,"children":551},{},[552],{"type":421,"tag":450,"props":553,"children":556},{"alt":554,"src":555},"Four-way Wavehand","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731165331.png?type=win11&w=40",[],{"type":421,"tag":434,"props":558,"children":560},{"id":559},"tcp-链接中如果某端出故障了会怎么办",[561],{"type":426,"value":562},"TCP 链接中如果某端出故障了会怎么办？",{"type":421,"tag":441,"props":564,"children":565},{},[566],{"type":426,"value":567},"会通过计时器来保证链接的稳定性。",{"type":421,"tag":569,"props":570,"children":571},"ul",{},[572,578,583],{"type":421,"tag":573,"props":574,"children":575},"li",{},[576],{"type":426,"value":577},"超时重传计时器：对方没有返回 ACK 时，发送方需要重新发送数据。一般计时器的时间选择 2RTT。",{"type":421,"tag":573,"props":579,"children":580},{},[581],{"type":426,"value":582},"2MSL 定时器：主动断开连接的一方发送 FIN 后需要等待 2MSL 时间。因为如果服务端没有收到最后一个 ACK，它将重新发送 FIN。",{"type":421,"tag":573,"props":584,"children":585},{},[586],{"type":426,"value":587},"保活计时器：每当接收方收到消息，将计时器重设为两小时。计时器到期时，每 75s 发送一次探测报文段，如果连续 10 次都没有被响应则断开连接。",{"type":421,"tag":441,"props":589,"children":590},{},[591,593],{"type":426,"value":592},"见：",{"type":421,"tag":478,"props":594,"children":597},{"href":595,"rel":596},"https://www.cnblogs.com/13224ACMer/p/6616960.html",[482],[598],{"type":426,"value":599},"TCP 四种计时器",{"type":421,"tag":428,"props":601,"children":603},{"id":602},"udp",[604],{"type":426,"value":605},"UDP",{"type":421,"tag":441,"props":607,"children":608},{},[609],{"type":426,"value":610},"UDP，即 User Datagram Protocol 用户数据报协议。数据报不保证信息的传达是否到位，所以 UDP 也被普遍称作 Unreliable Datagram Protocol。",{"type":421,"tag":569,"props":612,"children":613},{},[614,619,624,629],{"type":421,"tag":573,"props":615,"children":616},{},[617],{"type":426,"value":618},"不保证消息交付",{"type":421,"tag":573,"props":620,"children":621},{},[622],{"type":426,"value":623},"不保证交付顺序",{"type":421,"tag":573,"props":625,"children":626},{},[627],{"type":426,"value":628},"不跟踪连接状态",{"type":421,"tag":573,"props":630,"children":631},{},[632],{"type":426,"value":633},"不需要拥塞控制",{"type":421,"tag":428,"props":635,"children":637},{"id":636},"http",[638],{"type":426,"value":639},"HTTP",{"type":421,"tag":434,"props":641,"children":643},{"id":642},"有哪些常见的状态码",[644],{"type":426,"value":645},"有哪些常见的状态码？",{"type":421,"tag":647,"props":648,"children":649},"table",{},[650,669],{"type":421,"tag":651,"props":652,"children":653},"thead",{},[654],{"type":421,"tag":655,"props":656,"children":657},"tr",{},[658,664],{"type":421,"tag":659,"props":660,"children":661},"th",{},[662],{"type":426,"value":663},"状态码",{"type":421,"tag":659,"props":665,"children":666},{},[667],{"type":426,"value":668},"描述",{"type":421,"tag":670,"props":671,"children":672},"tbody",{},[673,687,700,713,726,739,752,765,778,791],{"type":421,"tag":655,"props":674,"children":675},{},[676,682],{"type":421,"tag":677,"props":678,"children":679},"td",{},[680],{"type":426,"value":681},"200",{"type":421,"tag":677,"props":683,"children":684},{},[685],{"type":426,"value":686},"成功并返回数据",{"type":421,"tag":655,"props":688,"children":689},{},[690,695],{"type":421,"tag":677,"props":691,"children":692},{},[693],{"type":426,"value":694},"301",{"type":421,"tag":677,"props":696,"children":697},{},[698],{"type":426,"value":699},"永久转移，重定向",{"type":421,"tag":655,"props":701,"children":702},{},[703,708],{"type":421,"tag":677,"props":704,"children":705},{},[706],{"type":426,"value":707},"302",{"type":421,"tag":677,"props":709,"children":710},{},[711],{"type":426,"value":712},"临时重定向",{"type":421,"tag":655,"props":714,"children":715},{},[716,721],{"type":421,"tag":677,"props":717,"children":718},{},[719],{"type":426,"value":720},"303",{"type":421,"tag":677,"props":722,"children":723},{},[724],{"type":426,"value":725},"临时重定向（客户端必须使用 Get 方法重新请求资源）",{"type":421,"tag":655,"props":727,"children":728},{},[729,734],{"type":421,"tag":677,"props":730,"children":731},{},[732],{"type":426,"value":733},"304",{"type":421,"tag":677,"props":735,"children":736},{},[737],{"type":426,"value":738},"资源未修改，可使用缓存",{"type":421,"tag":655,"props":740,"children":741},{},[742,747],{"type":421,"tag":677,"props":743,"children":744},{},[745],{"type":426,"value":746},"400",{"type":421,"tag":677,"props":748,"children":749},{},[750],{"type":426,"value":751},"请求语法错误",{"type":421,"tag":655,"props":753,"children":754},{},[755,760],{"type":421,"tag":677,"props":756,"children":757},{},[758],{"type":426,"value":759},"401",{"type":421,"tag":677,"props":761,"children":762},{},[763],{"type":426,"value":764},"要求身份认证",{"type":421,"tag":655,"props":766,"children":767},{},[768,773],{"type":421,"tag":677,"props":769,"children":770},{},[771],{"type":426,"value":772},"403",{"type":421,"tag":677,"props":774,"children":775},{},[776],{"type":426,"value":777},"请求拒绝",{"type":421,"tag":655,"props":779,"children":780},{},[781,786],{"type":421,"tag":677,"props":782,"children":783},{},[784],{"type":426,"value":785},"404",{"type":421,"tag":677,"props":787,"children":788},{},[789],{"type":426,"value":790},"资源不存在",{"type":421,"tag":655,"props":792,"children":793},{},[794,799],{"type":421,"tag":677,"props":795,"children":796},{},[797],{"type":426,"value":798},"500",{"type":421,"tag":677,"props":800,"children":801},{},[802],{"type":426,"value":803},"服务器错误",{"type":421,"tag":434,"props":805,"children":807},{"id":806},"http-报文由哪些部分组成",[808],{"type":426,"value":809},"HTTP 报文由哪些部分组成？",{"type":421,"tag":441,"props":811,"children":812},{},[813],{"type":426,"value":814},"请求报文由请求行、请求头、空行和请求数据组成，相应报文类似。",{"type":421,"tag":441,"props":816,"children":817},{},[818],{"type":426,"value":819},"请求报文实例：",{"type":421,"tag":441,"props":821,"children":822},{},[823],{"type":426,"value":824},"相应报文实例：",{"type":421,"tag":434,"props":826,"children":828},{"id":827},"http-11-对比-http-10-做了哪些改进",[829],{"type":426,"value":830},"HTTP 1.1 对比 HTTP 1.0 做了哪些改进？",{"type":421,"tag":441,"props":832,"children":833},{},[834],{"type":426,"value":835},"长链接（keep-alive）、断点续传、HTTP 缓存。",{"type":421,"tag":434,"props":837,"children":839},{"id":838},"http-缓存分几种",[840],{"type":426,"value":841},"HTTP 缓存分几种？",{"type":421,"tag":441,"props":843,"children":844},{},[845],{"type":426,"value":846},"分强缓存和协商缓存：Expires、Cache-Control、Last-Modified、Etag。",{"type":421,"tag":441,"props":848,"children":849},{},[850],{"type":421,"tag":450,"props":851,"children":854},{"alt":852,"src":853},"HTTP Cache","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220630205606.png?type=win11&w=60",[],{"type":421,"tag":441,"props":856,"children":857},{},[858,859],{"type":426,"value":476},{"type":421,"tag":478,"props":860,"children":863},{"href":861,"rel":862},"https://imweb.io/topic/55c6f9bac222e3af6ce235b9",[482],[864],{"type":426,"value":861},{"type":421,"tag":434,"props":866,"children":868},{"id":867},"强缓存和协商缓存的主要区别是",[869],{"type":426,"value":870},"强缓存和协商缓存的主要区别是？",{"type":421,"tag":441,"props":872,"children":873},{},[874],{"type":426,"value":875},"强缓存是一但匹配就无条件使用缓存，而面对协商缓存的资源，浏览器需要向服务端发请求，对比资源是否变更，并依靠服务端的响应来判断是否使用缓存。如果资源同时应用了强缓存和协商缓存，那么浏览器优先使用强缓存。",{"type":421,"tag":434,"props":877,"children":879},{"id":878},"no-store-和-no-cache-的区别",[880],{"type":426,"value":881},"no-store 和 no-cache 的区别？",{"type":421,"tag":441,"props":883,"children":884},{},[885],{"type":426,"value":886},"no-store 告诉客户端每次都在服务器取最新的资源。no-cache 也要求每次都要重新请求，但服务器可能返回 304 告诉客户端资源未改变。",{"type":421,"tag":434,"props":888,"children":890},{"id":889},"http2-的改进在哪里",[891],{"type":426,"value":892},"HTTP2 的改进在哪里？",{"type":421,"tag":441,"props":894,"children":895},{},[896],{"type":426,"value":897},"HTTP/2 主要包含以下几个方面的变化，显著增强了性能，也增加了安全性。",{"type":421,"tag":569,"props":899,"children":900},{},[901,906,911,916],{"type":421,"tag":573,"props":902,"children":903},{},[904],{"type":426,"value":905},"二进制分帧层",{"type":421,"tag":573,"props":907,"children":908},{},[909],{"type":426,"value":910},"头部压缩（HPACK、Huffman）",{"type":421,"tag":573,"props":912,"children":913},{},[914],{"type":426,"value":915},"多路复用",{"type":421,"tag":573,"props":917,"children":918},{},[919],{"type":426,"value":920},"服务端推送",{"type":421,"tag":441,"props":922,"children":923},{},[924],{"type":426,"value":925},"二进制分帧层是在应用层（HTTP）和传输层（TCP、UDP）之间新增的一个层级关系。二进制分帧层将传输的 HTTP 消息分割为更小的帧，并采用二进制格式编码传输。帧分为头部帧和消息帧。这意味着 HTTP/2 请求的所有内容都是二进制传输的。",{"type":421,"tag":441,"props":927,"children":928},{},[929],{"type":426,"value":930},"HTTP 头部被转为帧之前，会通过维护一个表结构，通过序号记录已发送的键值对。这是一种索引算法，叫 HPACK。具体的表结构分静态表和动态表，静态表给一些常用的头部标号了号，直接使用就好，动态表则是根据发送的内容动态确定的记号。需要被发送具体内容会被哈夫曼编码以减小体积。",{"type":421,"tag":441,"props":932,"children":933},{},[934],{"type":426,"value":935},"多路复用是指，多个 HTTP 请求可以在同一个 TCP 连接中并行传输。这和 HTTP 1.1 的 Connection：keep-alive 不同，keep-alive 虽然复用 TCP 连接，但是多个响应之间是串行的。",{"type":421,"tag":441,"props":937,"children":938},{},[939],{"type":426,"value":940},"建立连接后，双方通过交换 SETTING 帧，以确认双向的流量窗口控制大小。然后开始发送帧。帧可以在一个连接中根据优先级发送，或是被乱序发送，响应方也能乱序接收。由于流是双向的，只要服务端 SETTING 帧设置的流量窗口大小不为 0，服务端可按照同源策略推送资源给客户端。",{"type":421,"tag":441,"props":942,"children":943},{},[944,945,952,954],{"type":426,"value":592},{"type":421,"tag":478,"props":946,"children":949},{"href":947,"rel":948},"https://coffe1891.gitbook.io/frontend-hard-mode-interview/1/1.5.3",[482],[950],{"type":426,"value":951},"HTTP/2 和 HTTP/1.X 相比的新特性",{"type":426,"value":953},"、",{"type":421,"tag":478,"props":955,"children":958},{"href":956,"rel":957},"https://blog.csdn.net/gaoliang1719/article/details/106346201/",[482],[959],{"type":426,"value":960},"HTTP/2 协议之头部压缩",{"type":421,"tag":434,"props":962,"children":964},{"id":963},"http3-相比-http2-改变了什么东西",[965],{"type":426,"value":966},"HTTP3 相比 HTTP2 改变了什么东西？",{"type":421,"tag":441,"props":968,"children":969},{},[970],{"type":426,"value":971},"HTTP3 使用全新的传输层协议 QUIC，实现了 H2 中的流式传输（HTTP2）、多路复用（TCP）、流量控制（TCP）以及可靠性（TCP）等内容，其网络层协议应用的是 UDP 而不是 TCP，本意是用来解决 TCP 建立链接需要  1.5 RTT 延迟的问题。这种改善在移动端更加有效。",{"type":421,"tag":441,"props":973,"children":974},{},[975],{"type":421,"tag":450,"props":976,"children":979},{"alt":977,"src":978},"HTTP3 VS HTTP2 VS HTTP1.1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220621003527.png?type=draw&w=80",[],{"type":421,"tag":441,"props":981,"children":982},{},[983,984],{"type":426,"value":592},{"type":421,"tag":478,"props":985,"children":988},{"href":986,"rel":987},"https://mp.weixin.qq.com/s/40YBEWZBaHakDuRuh27fMg",[482],[989],{"type":426,"value":990},"HTTP3 发布了！",{"type":421,"tag":428,"props":992,"children":994},{"id":993},"tls",[995],{"type":426,"value":996},"TLS",{"type":421,"tag":441,"props":998,"children":999},{},[1000,1001],{"type":426,"value":476},{"type":421,"tag":478,"props":1002,"children":1005},{"href":1003,"rel":1004},"https://www.oschina.net/translate/rfc-8446-aka-tls-1-3",[482],[1006],{"type":426,"value":1007},"详细介绍 RFC 8446（即 TLS 1.3）",{"type":421,"tag":441,"props":1009,"children":1010},{},[1011],{"type":426,"value":1012},"TLS 是一种混合式加密系统，同时使用对称加密和非对称加密。它使用非对称加密以加密对称加密所需的密钥。它有多个版本。TLS 1.3 是一种比起 TLS1.2 而言更清晰、更快速、更安全的现代化安全协议。TLS 1.2 有两点问题：1. 包括 POODLE 在内的众多可行漏洞；2. 性能低。为了改善这些问题，IETF 在 2013 年，着手 TLS 1.3 的讨论，主要改进：",{"type":421,"tag":569,"props":1014,"children":1015},{},[1016,1021,1026,1031],{"type":421,"tag":573,"props":1017,"children":1018},{},[1019],{"type":426,"value":1020},"减少握手时间",{"type":421,"tag":573,"props":1022,"children":1023},{},[1024],{"type":426,"value":1025},"加密更多的握手",{"type":421,"tag":573,"props":1027,"children":1028},{},[1029],{"type":426,"value":1030},"改善跨协议攻击的弹性",{"type":421,"tag":573,"props":1032,"children":1033},{},[1034],{"type":426,"value":1035},"删除遗留特征",{"type":421,"tag":441,"props":1037,"children":1038},{},[1039],{"type":426,"value":1040},"经过 4 年的争论。最终，形成了 RFC 8446 规范。",{"type":421,"tag":1042,"props":1043,"children":1045},"h3",{"id":1044},"tls-12-的缺陷",[1046],{"type":426,"value":1047},"TLS 1.2 的缺陷",{"type":421,"tag":441,"props":1049,"children":1050},{},[1051],{"type":426,"value":1052},"TLS 1.2 使用的加密方式有缺陷。其中，非对称加密有如 RSA 和 Diffie-Hellman 协议。",{"type":421,"tag":434,"props":1054,"children":1056},{"id":1055},"rsa",[1057],{"type":426,"value":1058},"RSA",{"type":421,"tag":441,"props":1060,"children":1061},{},[1062],{"type":421,"tag":450,"props":1063,"children":1066},{"alt":1064,"src":1065},"RSA Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082140.png?w=70",[],{"type":421,"tag":441,"props":1068,"children":1069},{},[1070,1072,1079],{"type":426,"value":1071},"RSA 不保证前向保密。即，如果有人记录了加密对话，然后获取服务器的 RSA 私钥，他们可以将对话解密。而攻击者可能只需 ",{"type":421,"tag":478,"props":1073,"children":1076},{"href":1074,"rel":1075},"https://www.wikiwand.com/zh/%E5%BF%83%E8%84%8F%E5%87%BA%E8%A1%80%E6%BC%8F%E6%B4%9E",[482],[1077],{"type":426,"value":1078},"HeartBleed 漏洞",{"type":426,"value":1080},"（缓存区过读）就可以顺利窃取私钥。",{"type":421,"tag":434,"props":1082,"children":1084},{"id":1083},"diffie-hellman",[1085],{"type":426,"value":1086},"Diffie-Hellman",{"type":421,"tag":441,"props":1088,"children":1089},{},[1090],{"type":421,"tag":450,"props":1091,"children":1093},{"alt":1086,"src":1092},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082812.png?w=70",[],{"type":421,"tag":441,"props":1095,"children":1096},{},[1097],{"type":426,"value":1098},"Diffie-Hellman 的缺陷在于，协议的某些参数不安全，且能够被操纵设置；不安全的参数能导致加密更容易被破解。",{"type":421,"tag":434,"props":1100,"children":1102},{"id":1101},"对称加密缺陷",[1103],{"type":426,"value":1101},{"type":421,"tag":441,"props":1105,"children":1106},{},[1107],{"type":426,"value":1108},"TLS 1.2 的对称加密使用的 CBC 模式密码和流式密码也有缺陷。",{"type":421,"tag":434,"props":1110,"children":1112},{"id":1111},"downgrade-attack",[1113],{"type":426,"value":1114},"Downgrade Attack",{"type":421,"tag":441,"props":1116,"children":1117},{},[1118],{"type":426,"value":1119},"由于 TLS 1.2 握手协商密钥的部分没有加密。所以中间人可以拦截客户端的请求，选择发送方和接收方都支持的弱密码，伪造请求。",{"type":421,"tag":441,"props":1121,"children":1122},{},[1123],{"type":421,"tag":450,"props":1124,"children":1126},{"alt":1114,"src":1125},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807090034.png?w=70",[],{"type":421,"tag":1042,"props":1128,"children":1130},{"id":1129},"_0-rtt",[1131],{"type":426,"value":1132},"0-RTT",{"type":421,"tag":441,"props":1134,"children":1135},{},[1136],{"type":426,"value":1137},"TLS 1.3 中，通讯双方可以得到一个“恢复主密钥”的密钥，用于从中断的连接中直接恢复通讯。但是有被拦截导致重放攻击的风险。",{"type":421,"tag":441,"props":1139,"children":1140},{},[1141],{"type":421,"tag":450,"props":1142,"children":1145},{"alt":1143,"src":1144},"0-RTT 重放攻击","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807081140.png?w=70",[],{"type":421,"tag":428,"props":1147,"children":1149},{"id":1148},"https",[1150],{"type":426,"value":1151},"HTTPS",{"type":421,"tag":1042,"props":1153,"children":1155},{"id":1154},"links",[1156],{"type":426,"value":1157},"Links",{"type":421,"tag":441,"props":1159,"children":1160},{},[1161,1162],{"type":426,"value":476},{"type":421,"tag":478,"props":1163,"children":1166},{"href":1164,"rel":1165},"https://zhuanlan.zhihu.com/p/26682342",[482],[1167],{"type":426,"value":1168},"深入理解 HTTPS 原理、过程与实践",{"type":421,"tag":434,"props":1170,"children":1172},{"id":1171},"https-的握手过程是怎样的",[1173],{"type":426,"value":1174},"HTTPS 的握手过程是怎样的？",{"type":421,"tag":441,"props":1176,"children":1177},{},[1178],{"type":426,"value":1179},"总的来说是一个非对称加密+对称加密的过程。客户端通过一个随机数加上服务器的公钥来生成预主密钥，然后双方再通过 Client Hello 和 Server Hello 时的两个随机数生成会话密钥。生成预主密钥的过程是非对称加密的，因为只有服务端用私钥才能解得客户端的随机数。而之后使用会话密钥主要是出于性能考虑。",{"type":421,"tag":441,"props":1181,"children":1182},{},[1183],{"type":421,"tag":450,"props":1184,"children":1187},{"alt":1185,"src":1186},"HTTPS 握手过程","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620024738.png",[],{"type":421,"tag":434,"props":1189,"children":1191},{"id":1190},"ca-怎么解决中间人问题",[1192],{"type":426,"value":1193},"CA 怎么解决中间人问题？",{"type":421,"tag":441,"props":1195,"children":1196},{},[1197],{"type":426,"value":1198},"CA 主要是用来防范服务器端返回 Server Hello 前就和客户端提供了假的公钥。CA 是一个可信的第三方机构，客户端想要服务器的公钥，需要从 CA 获得。CA 返回公钥以及数字签名。客户端只要拿到公钥后根据 CA 公钥对其计算获得摘要，再将摘要和签名进行对比，就能知道是否拿到了可信的公钥。",{"type":421,"tag":441,"props":1200,"children":1201},{},[1202,1203],{"type":426,"value":592},{"type":421,"tag":478,"props":1204,"children":1207},{"href":1205,"rel":1206},"https://www.jianshu.com/p/9de06222793b",[482],[1208],{"type":426,"value":1209},"HTTPS CA 原理",{"type":421,"tag":434,"props":1211,"children":1213},{"id":1212},"数字签名是什么",[1214],{"type":426,"value":1215},"数字签名是什么？",{"type":421,"tag":441,"props":1217,"children":1218},{},[1219],{"type":426,"value":1220},"数字签名是只有信息发送者才能产生的一段文本，信息接收方可以通过签名计算出接受到的文本是否经过了修改。如果我要发送 A，我会用私钥将 A 进行加密获得 B，并把 A 和 B 同时发送过去。B 就是数字签名。因为我的公钥是公开的，所以接受方可以通过使用我的公钥去计算 A，如果获得和 B 一致的结果，那么说明信息没有被篡改。",{"type":421,"tag":428,"props":1222,"children":1224},{"id":1223},"攻防",[1225],{"type":426,"value":1223},{"type":421,"tag":434,"props":1227,"children":1229},{"id":1228},"https-降级攻击的原理是什么",[1230],{"type":426,"value":1231},"HTTPS 降级攻击的原理是什么？",{"type":421,"tag":441,"props":1233,"children":1234},{},[1235],{"type":426,"value":1236},"客服端与服务端协商加密协议的过程当中，如果攻击者拦截了客户端（或操控客户端）并代替它向服务端协商使用仅支持有漏洞的协议。如果服务端同意了，那么建立连接后，攻击者就能使用该协议的已知漏洞的破解手段，去破解通讯内容了。",{"type":421,"tag":434,"props":1238,"children":1240},{"id":1239},"syn-攻击的基本原理是什么",[1241],{"type":426,"value":1242},"SYN 攻击的基本原理是什么？",{"type":421,"tag":441,"props":1244,"children":1245},{},[1246,1248,1255],{"type":426,"value":1247},"SYN 洪水攻击是 DDOS 攻击中最常见的攻击类型。攻击者向服务器发送大量伪造的 TCP 连接请求，而源 IP 是伪造的。由于服务器收不到伪造源回应的 ACK 数据包，就会不断重发。一般应对方式是：减少重发次数、使用 ",{"type":421,"tag":478,"props":1249,"children":1252},{"href":1250,"rel":1251},"https://baike.baidu.com/item/syn%20cookie/6898884?fr=aladdin",[482],[1253],{"type":426,"value":1254},"SYN Cookie",{"type":426,"value":1256},"、增加 backlog 队列长度、限制 SYN 并发数。",{"type":421,"tag":441,"props":1258,"children":1259},{},[1260,1261],{"type":426,"value":592},{"type":421,"tag":478,"props":1262,"children":1265},{"href":1263,"rel":1264},"https://www.qycn.com/about/hd/2049.html",[482],[1266],{"type":426,"value":1267},"服务器遭到 SYN 攻击该如何处理呢？",{"type":421,"tag":434,"props":1269,"children":1271},{"id":1270},"请求头加-csrf-参数为什么能防止-csrf-攻击",[1272],{"type":426,"value":1273},"请求头加 CSRF 参数为什么能防止 CSRF 攻击？",{"type":421,"tag":441,"props":1275,"children":1276},{},[1277],{"type":426,"value":1278},"跨站请求伪造是攻击者通过在钓鱼站点发起被钓网站请求（如图片地址），以达到攻击目的。防御方式一般有两种：",{"type":421,"tag":569,"props":1280,"children":1281},{},[1282,1287],{"type":421,"tag":573,"props":1283,"children":1284},{},[1285],{"type":426,"value":1286},"使用 SameSite Cookie，禁用第三方 Cookie",{"type":421,"tag":573,"props":1288,"children":1289},{},[1290],{"type":426,"value":1291},"在请求头中加入 CSRF Token，这样攻击者使用钓鱼站点发起请求时，由于不能设置请求头，所以请求在服务端会被拒绝",{"type":421,"tag":428,"props":1293,"children":1295},{"id":1294},"cdn",[1296],{"type":426,"value":1297},"CDN",{"type":421,"tag":434,"props":1299,"children":1301},{"id":1300},"cdn-有什么好处",[1302],{"type":426,"value":1303},"CDN 有什么好处？",{"type":421,"tag":441,"props":1305,"children":1306},{},[1307],{"type":426,"value":1308},"对页面加载而言，CDN 可以减少请求时间、突破浏览器同域的 TCP 并发数、节约 Cookie 带宽。",{"type":421,"tag":428,"props":1310,"children":1312},{"id":1311},"浏览器",[1313],{"type":426,"value":1311},{"type":421,"tag":434,"props":1315,"children":1317},{"id":1316},"url-由哪些部分组成",[1318],{"type":426,"value":1319},"URL 由哪些部分组成？",{"type":421,"tag":441,"props":1321,"children":1322},{},[1323],{"type":426,"value":1324},"协议头、域名、端口、目录、文件名（index.html）、页面锚、参数。",{"type":421,"tag":434,"props":1326,"children":1328},{"id":1327},"怎么做跨域",[1329],{"type":426,"value":1330},"怎么做跨域？",{"type":421,"tag":441,"props":1332,"children":1333},{},[1334],{"type":426,"value":1335},"用代理服务器、CORS、iFrame 或者 WebSocket 都可以。",{"type":421,"tag":441,"props":1337,"children":1338},{},[1339],{"type":426,"value":1340},"服务器可以忽略同源限制；WebSocket 和 CORS 不受同源影响；iFrame 需要浏览器加载一个跨域页面，然后和主页面用 postMessage 或者哈希监听的方式通信，让 iFrame 中的脚本代替主页面发送请求。",{"type":421,"tag":434,"props":1342,"children":1344},{"id":1343},"正向代理和反向代理的区别是",[1345],{"type":426,"value":1346},"正向代理和反向代理的区别是？",{"type":421,"tag":441,"props":1348,"children":1349},{},[1350],{"type":426,"value":1351},"正向代理为用户服务，反向代理为服务器服务，分别对应“VPN”和“负载均衡”的概念。",{"type":421,"tag":434,"props":1353,"children":1355},{"id":1354},"cors-运作流程是怎样的",[1356],{"type":426,"value":1357},"CORS 运作流程是怎样的？",{"type":421,"tag":441,"props":1359,"children":1360},{},[1361],{"type":426,"value":1362},"CORS 即跨域资源共享机制。浏览器在请求资源前通过携带 Origin 字段的 OPTIONS 请求向服务器索取设置有 Access-Control-Allow-Methods、Access-Control-Allow-Headers、Access-Control-Allow-Origin 的响应。在得到响应的允许后再继续发送请求。",{"type":421,"tag":434,"props":1364,"children":1366},{"id":1365},"什么是私有网络请求攻击",[1367],{"type":426,"value":1368},"什么是私有网络请求攻击？",{"type":421,"tag":441,"props":1370,"children":1371},{},[1372],{"type":426,"value":1373},"在内网域名向 localhost 发起请求就算一种私有网络请求。而恶意代码通过向比浏览器当前浏览页面的域名 IP 更私密的 IP 地址发起请求，以达到获取信息或攻击手段的方式就是私有网络请求攻击。",{"type":421,"tag":441,"props":1375,"children":1376},{},[1377,1379,1386,1388],{"type":426,"value":1378},"自 Chrome 96 后， Chrome 开始实施私有网络控制策略，需要部署以下两个请求头以解除控制：",{"type":421,"tag":1380,"props":1381,"children":1383},"code",{"className":1382},[],[1384],{"type":426,"value":1385},"Access-Control-Request-Private-Network: true",{"type":426,"value":1387}," 和 ",{"type":421,"tag":1380,"props":1389,"children":1391},{"className":1390},[],[1392],{"type":426,"value":1393},"Access-Control-Allow-Private-Network: true",{"type":421,"tag":441,"props":1395,"children":1396},{},[1397,1398],{"type":426,"value":592},{"type":421,"tag":478,"props":1399,"children":1402},{"href":1400,"rel":1401},"https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&mid=2247491913&idx=1&sn=2bb0a28358c02a8ec1832781205df72c&chksm=c2e11462f5969d74fac277131e1ba8c417ec86754b2f1b2dbe8e238ca27d5c2eaebe602ec803&token=1851580176&lang=zh_CN&scene=21#wechat_redirect",[482],[1403],{"type":426,"value":1404},"Chrome 重大更新，CORS 增加了两个新的请求头？ |  code 秘密花园",{"type":421,"tag":428,"props":1406,"children":1408},{"id":1407},"阅读更多",[1409],{"type":426,"value":1407},{"type":421,"tag":569,"props":1411,"children":1412},{},[1413],{"type":421,"tag":573,"props":1414,"children":1415},{},[1416],{"type":421,"tag":478,"props":1417,"children":1420},{"href":1418,"rel":1419},"https://juejin.im/post/6844903518826921998",[482],[1421],{"type":426,"value":1422},"为你的网站带上帽子 | 使用 helmet 保护 Express 应用",{"title":415,"searchDepth":1424,"depth":1424,"links":1425},2,[1426,1427,1428,1429,1430,1435,1438,1439,1440,1441],{"id":430,"depth":1424,"text":430},{"id":457,"depth":1424,"text":460},{"id":602,"depth":1424,"text":605},{"id":636,"depth":1424,"text":639},{"id":993,"depth":1424,"text":996,"children":1431},[1432,1434],{"id":1044,"depth":1433,"text":1047},3,{"id":1129,"depth":1433,"text":1132},{"id":1148,"depth":1424,"text":1151,"children":1436},[1437],{"id":1154,"depth":1433,"text":1157},{"id":1223,"depth":1424,"text":1223},{"id":1294,"depth":1424,"text":1297},{"id":1311,"depth":1424,"text":1311},{"id":1407,"depth":1424,"text":1407},"markdown","content:6.maps:_computer:network.md","content","6.maps/_computer/network.md","6.maps/_computer/network","md",[1449,1452],{"_path":1450,"title":1451,"description":415},"/maps/_computer/computer","Computer Mind Map",{"_path":1453,"title":1454,"description":415},"/maps/_computer/security","Security Mind Map",1732808137349]