[{"data":1,"prerenderedAt":1408},["Reactive",2],{"navigation":3,"/maps/_computer/network":383,"/maps/_computer/network-surround":1401},[4,32,80,96,123,129,135,366,372,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"图片模糊","/gists/blur",{"title":148,"_path":149},"渲染相关笔记","/gists/c4d",{"title":151,"_path":152},"CDN 问题记录","/gists/cdn",{"title":154,"_path":155},"消毒剂","/gists/cleaner",{"title":157,"_path":158},"Windows Command","/gists/cmd",{"title":160,"_path":161},"Command","/gists/command",{"title":163,"_path":164},"复杂科学","/gists/complexity-science",{"title":166,"_path":167},"宇宙","/gists/cosmos",{"title":169,"_path":170},"C++","/gists/cpp",{"title":172,"_path":173},"Data Structure","/gists/data-structure",{"title":175,"_path":176},"DEPRESSION","/gists/depression",{"title":178,"_path":179},"设计模式","/gists/design-patterns",{"title":181,"_path":182},"Developer Experience","/gists/developer-experience",{"title":184,"_path":185},"Device Metrics","/gists/device-metrix",{"title":187,"_path":188},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":190,"_path":191},"正则表达式","/gists/eegex",{"title":193,"_path":194},"Emoji","/gists/emoji",{"title":196,"_path":197},"工程","/gists/engineering",{"title":199,"_path":200},"熵","/gists/entropy",{"title":202,"_path":203},"Environment","/gists/environment",{"title":205,"_path":206},"Erlang","/gists/erlang",{"title":208,"_path":209},"逃离塔克夫","/gists/escape-from-tarkov",{"title":211,"_path":212},"ESNext (ES6-ES11)","/gists/esnext",{"title":214,"_path":215},"Eval！","/gists/eval",{"title":217,"_path":218},"Flutter","/gists/flutter",{"title":220,"_path":221},"字体","/gists/font",{"title":223,"_path":224},"JS 函数式编程","/gists/functional",{"title":226,"_path":227},"Google C++ Standard","/gists/google-cpp-standard",{"title":229,"_path":230},"双向链接完全体","/gists/graph",{"title":232,"_path":233},"Hardwares","/gists/hardwares",{"title":235,"_path":236},"哈希冲突","/gists/hash-collision",{"title":238,"_path":239},"信息设计","/gists/information-design",{"title":241,"_path":242},"InstantPage","/gists/instant.page",{"title":244,"_path":245},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":247,"_path":248},"KVStore","/gists/key-value-db",{"title":250,"_path":251},"Kubernetes","/gists/kubernetes",{"title":253,"_path":254},"Makefile","/gists/makefile",{"title":256,"_path":257},"Markdown Inline Style","/gists/markdown-nice",{"title":259,"_path":260},"小程序","/gists/miniapp",{"title":262,"_path":263},"减小页面快照体积","/gists/minify-html",{"title":265,"_path":266},"mklink","/gists/mklink",{"title":268,"_path":269},"Mock","/gists/mock",{"title":271,"_path":272},"多端应用","/gists/multy-end-app",{"title":274,"_path":275},"神经科学","/gists/neuroscience",{"title":277,"_path":278},"OO","/gists/oo",{"title":280,"_path":281},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":283,"_path":284},"人物","/gists/person",{"title":286,"_path":287},"PInvoke","/gists/pinvoke",{"title":289,"_path":290},"像素","/gists/pixel",{"title":292,"_path":293},"PowerShell","/gists/powershell",{"title":295,"_path":296},"量子","/gists/quantum",{"title":298,"_path":299},"保持好奇心","/gists/questions",{"title":301,"_path":302},"React Native","/gists/react-native",{"title":304,"_path":305},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":307,"_path":308},"SEO","/gists/seo",{"title":310,"_path":311},"Shader","/gists/shader",{"title":313,"_path":314},"Shape Up","/gists/shape-up",{"title":316,"_path":317},"睡觉","/gists/sleep",{"title":319,"_path":320},"States","/gists/states",{"title":322,"_path":323},"Storage","/gists/storage",{"title":325,"_path":326},"音视频流处理","/gists/stream-cli",{"title":328,"_path":329},"Symbol","/gists/symbol",{"title":331,"_path":332},"系统论","/gists/systems-theory",{"title":334,"_path":335},"Taro","/gists/taro",{"title":337,"_path":338},"任务切片","/gists/task-slice",{"title":340,"_path":341},"技术偏好","/gists/tech-dudge",{"title":343,"_path":344},"Untitled","/gists/untitled",{"title":346,"_path":347},"可变字体","/gists/variable-font",{"title":349,"_path":350},"视觉错觉","/gists/visual-illusion",{"title":352,"_path":353},"SS(SSR)","/gists/vpn",{"title":355,"_path":356},"VS Code 插件开发","/gists/vscode-plugin",{"title":358,"_path":359},"Web Components","/gists/web-components",{"title":361,"_path":362},"Windows","/gists/windows",{"title":364,"_path":365},"查缺补漏","/gists/wrong",{"title":367,"_path":368,"children":369},"代码笔记 / Gists","/source-code",[370],{"title":371,"_path":368},"🚄 代码笔记",{"title":373,"_path":374,"children":375},"我 / Abount","/hire",[376],{"title":377,"_path":374},"📬 技术简历",{"title":379,"_path":380,"children":381},"todo","/todo",[382],{"title":379,"_path":380},{"_path":384,"_dir":385,"_draft":386,"_partial":387,"_locale":388,"title":389,"description":388,"body":390,"_type":1396,"_id":1397,"_source":1398,"_file":1399,"_extension":1400},"/maps/_computer/network","_computer",false,true,"","计算机网络",{"type":391,"children":392,"toc":1377},"root",[393,400,406,413,419,428,434,440,445,459,465,473,479,484,492,498,503,511,517,522,530,536,541,561,573,579,584,607,613,619,621,779,785,790,795,797,802,803,809,814,820,825,833,843,849,854,860,865,871,876,899,904,909,914,919,939,945,950,958,969,975,986,991,1014,1019,1026,1031,1037,1045,1059,1065,1072,1077,1082,1087,1093,1098,1105,1111,1116,1124,1130,1136,1147,1153,1158,1166,1172,1177,1188,1194,1199,1204,1210,1215,1221,1235,1246,1252,1258,1263,1268,1274,1279,1285,1290,1295,1301,1306,1312,1317,1323,1328,1348,1359,1364],{"type":394,"tag":395,"props":396,"children":397},"element","h1",{"id":389},[398],{"type":399,"value":389},"text",{"type":394,"tag":401,"props":402,"children":404},"h2",{"id":403},"网络模型",[405],{"type":399,"value":403},{"type":394,"tag":407,"props":408,"children":410},"h4",{"id":409},"各网络层有哪些代表性的协议",[411],{"type":399,"value":412},"各网络层有哪些代表性的协议？",{"type":394,"tag":414,"props":415,"children":416},"p",{},[417],{"type":399,"value":418},"应用层有 HTTP、DNS、FTP，表示层有 SSL、TSL、base64、MIDI、JPEG，会话层有 xxx，传输层则是 TCP、UDP，网络层有 IP，数据链路层 xxx，物理层有以太网协议。",{"type":394,"tag":414,"props":420,"children":421},{},[422],{"type":394,"tag":423,"props":424,"children":427},"img",{"alt":425,"src":426},"OSI 参考模型","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620033400.png?type=win11&w=60",[],{"type":394,"tag":401,"props":429,"children":431},{"id":430},"tcp",[432],{"type":399,"value":433},"TCP",{"type":394,"tag":407,"props":435,"children":437},{"id":436},"tcpip-是什么",[438],{"type":399,"value":439},"TCP/IP 是什么？",{"type":394,"tag":414,"props":441,"children":442},{},[443],{"type":399,"value":444},"TCP/IP 协议是一个协议集。TCP/IP 包括了应用层、传输层、网络层、数据链路层和网络层，是一个四层体系结构。各层有代表性的协议有 HTTP、DNS，TLS，IP 和 xxx。",{"type":394,"tag":414,"props":446,"children":447},{},[448,450],{"type":399,"value":449},"TODO，",{"type":394,"tag":451,"props":452,"children":456},"a",{"href":453,"rel":454},"https://developer.51cto.com/article/597961.html",[455],"nofollow",[457],{"type":399,"value":458},"终于有人能把 TCP/IP 协议讲的明明白白了！",{"type":394,"tag":407,"props":460,"children":462},{"id":461},"tcp-header-由哪些部分组成",[463],{"type":399,"value":464},"TCP Header 由哪些部分组成？",{"type":394,"tag":414,"props":466,"children":467},{},[468],{"type":394,"tag":423,"props":469,"children":472},{"alt":470,"src":471},"TCP Header","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731153510.png?type=win11&w=60",[],{"type":394,"tag":407,"props":474,"children":476},{"id":475},"三次握手具体过程",[477],{"type":399,"value":478},"三次握手具体过程？",{"type":394,"tag":414,"props":480,"children":481},{},[482],{"type":399,"value":483},"从三次握手图示可以发现，仅仅是连接的建立，就需要大量时间消耗。客户端想发送数据，至少要等 1.5xRTT；服务端想发送数据，至少要 2xRTT。",{"type":394,"tag":414,"props":485,"children":486},{},[487],{"type":394,"tag":423,"props":488,"children":491},{"alt":489,"src":490},"Three-way Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731162450.png?type=win11&w=40",[],{"type":394,"tag":407,"props":493,"children":495},{"id":494},"tcp-fast-open-如何优化握手过程",[496],{"type":399,"value":497},"TCP Fast Open 如何优化握手过程？",{"type":394,"tag":414,"props":499,"children":500},{},[501],{"type":399,"value":502},"TFO 规定服务器第一次返回 ACK 时，携带一个用以标志客户端身份的 Cookie。后续客户端发送 SYN 建立连接的时候带上这个 Cookie，服务端确认身份之后，就能直接返回数据了（节约了 1.5 RTT）。",{"type":394,"tag":414,"props":504,"children":505},{},[506],{"type":394,"tag":423,"props":507,"children":510},{"alt":508,"src":509},"TFO","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807054219.png?type=win11&w=80",[],{"type":394,"tag":407,"props":512,"children":514},{"id":513},"四次挥手的具体过程",[515],{"type":399,"value":516},"四次挥手的具体过程？",{"type":394,"tag":414,"props":518,"children":519},{},[520],{"type":399,"value":521},"四次挥手如下所示。为什么建立连接要三次，而断开连接要四次请求呢？从图中可以看出，接收到 FIN 请求时，服务端立即返回 ACK 表示收到请求，但是要等自己这边剩余一些工作（可能时未发送完的请求内容）完成之后，才会返回 FIN。",{"type":394,"tag":414,"props":523,"children":524},{},[525],{"type":394,"tag":423,"props":526,"children":529},{"alt":527,"src":528},"Four-way Wavehand","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731165331.png?type=win11&w=40",[],{"type":394,"tag":407,"props":531,"children":533},{"id":532},"tcp-链接中如果某端出故障了会怎么办",[534],{"type":399,"value":535},"TCP 链接中如果某端出故障了会怎么办？",{"type":394,"tag":414,"props":537,"children":538},{},[539],{"type":399,"value":540},"会通过计时器来保证链接的稳定性。",{"type":394,"tag":542,"props":543,"children":544},"ul",{},[545,551,556],{"type":394,"tag":546,"props":547,"children":548},"li",{},[549],{"type":399,"value":550},"超时重传计时器：对方没有返回 ACK 时，发送方需要重新发送数据。一般计时器的时间选择 2RTT。",{"type":394,"tag":546,"props":552,"children":553},{},[554],{"type":399,"value":555},"2MSL 定时器：主动断开连接的一方发送 FIN 后需要等待 2MSL 时间。因为如果服务端没有收到最后一个 ACK，它将重新发送 FIN。",{"type":394,"tag":546,"props":557,"children":558},{},[559],{"type":399,"value":560},"保活计时器：每当接收方收到消息，将计时器重设为两小时。计时器到期时，每 75s 发送一次探测报文段，如果连续 10 次都没有被响应则断开连接。",{"type":394,"tag":414,"props":562,"children":563},{},[564,566],{"type":399,"value":565},"见：",{"type":394,"tag":451,"props":567,"children":570},{"href":568,"rel":569},"https://www.cnblogs.com/13224ACMer/p/6616960.html",[455],[571],{"type":399,"value":572},"TCP 四种计时器",{"type":394,"tag":401,"props":574,"children":576},{"id":575},"udp",[577],{"type":399,"value":578},"UDP",{"type":394,"tag":414,"props":580,"children":581},{},[582],{"type":399,"value":583},"UDP，即 User Datagram Protocol 用户数据报协议。数据报不保证信息的传达是否到位，所以 UDP 也被普遍称作 Unreliable Datagram Protocol。",{"type":394,"tag":542,"props":585,"children":586},{},[587,592,597,602],{"type":394,"tag":546,"props":588,"children":589},{},[590],{"type":399,"value":591},"不保证消息交付",{"type":394,"tag":546,"props":593,"children":594},{},[595],{"type":399,"value":596},"不保证交付顺序",{"type":394,"tag":546,"props":598,"children":599},{},[600],{"type":399,"value":601},"不跟踪连接状态",{"type":394,"tag":546,"props":603,"children":604},{},[605],{"type":399,"value":606},"不需要拥塞控制",{"type":394,"tag":401,"props":608,"children":610},{"id":609},"http",[611],{"type":399,"value":612},"HTTP",{"type":394,"tag":407,"props":614,"children":616},{"id":615},"有哪些常见的状态码",[617],{"type":399,"value":618},"有哪些常见的状态码？",{"type":399,"value":620},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":394,"tag":622,"props":623,"children":624},"table",{},[625,644],{"type":394,"tag":626,"props":627,"children":628},"thead",{},[629],{"type":394,"tag":630,"props":631,"children":632},"tr",{},[633,639],{"type":394,"tag":634,"props":635,"children":636},"th",{},[637],{"type":399,"value":638},"状态码",{"type":394,"tag":634,"props":640,"children":641},{},[642],{"type":399,"value":643},"描述",{"type":394,"tag":645,"props":646,"children":647},"tbody",{},[648,662,675,688,701,714,727,740,753,766],{"type":394,"tag":630,"props":649,"children":650},{},[651,657],{"type":394,"tag":652,"props":653,"children":654},"td",{},[655],{"type":399,"value":656},"200",{"type":394,"tag":652,"props":658,"children":659},{},[660],{"type":399,"value":661},"成功并返回数据",{"type":394,"tag":630,"props":663,"children":664},{},[665,670],{"type":394,"tag":652,"props":666,"children":667},{},[668],{"type":399,"value":669},"301",{"type":394,"tag":652,"props":671,"children":672},{},[673],{"type":399,"value":674},"永久转移，重定向",{"type":394,"tag":630,"props":676,"children":677},{},[678,683],{"type":394,"tag":652,"props":679,"children":680},{},[681],{"type":399,"value":682},"302",{"type":394,"tag":652,"props":684,"children":685},{},[686],{"type":399,"value":687},"临时重定向",{"type":394,"tag":630,"props":689,"children":690},{},[691,696],{"type":394,"tag":652,"props":692,"children":693},{},[694],{"type":399,"value":695},"303",{"type":394,"tag":652,"props":697,"children":698},{},[699],{"type":399,"value":700},"临时重定向（客户端必须使用 Get 方法重新请求资源）",{"type":394,"tag":630,"props":702,"children":703},{},[704,709],{"type":394,"tag":652,"props":705,"children":706},{},[707],{"type":399,"value":708},"304",{"type":394,"tag":652,"props":710,"children":711},{},[712],{"type":399,"value":713},"资源未修改，可使用缓存",{"type":394,"tag":630,"props":715,"children":716},{},[717,722],{"type":394,"tag":652,"props":718,"children":719},{},[720],{"type":399,"value":721},"400",{"type":394,"tag":652,"props":723,"children":724},{},[725],{"type":399,"value":726},"请求语法错误",{"type":394,"tag":630,"props":728,"children":729},{},[730,735],{"type":394,"tag":652,"props":731,"children":732},{},[733],{"type":399,"value":734},"401",{"type":394,"tag":652,"props":736,"children":737},{},[738],{"type":399,"value":739},"要求身份认证",{"type":394,"tag":630,"props":741,"children":742},{},[743,748],{"type":394,"tag":652,"props":744,"children":745},{},[746],{"type":399,"value":747},"403",{"type":394,"tag":652,"props":749,"children":750},{},[751],{"type":399,"value":752},"请求拒绝",{"type":394,"tag":630,"props":754,"children":755},{},[756,761],{"type":394,"tag":652,"props":757,"children":758},{},[759],{"type":399,"value":760},"404",{"type":394,"tag":652,"props":762,"children":763},{},[764],{"type":399,"value":765},"资源不存在",{"type":394,"tag":630,"props":767,"children":768},{},[769,774],{"type":394,"tag":652,"props":770,"children":771},{},[772],{"type":399,"value":773},"500",{"type":394,"tag":652,"props":775,"children":776},{},[777],{"type":399,"value":778},"服务器错误",{"type":394,"tag":407,"props":780,"children":782},{"id":781},"http-报文由哪些部分组成",[783],{"type":399,"value":784},"HTTP 报文由哪些部分组成？",{"type":394,"tag":414,"props":786,"children":787},{},[788],{"type":399,"value":789},"请求报文由请求行、请求头、空行和请求数据组成，相应报文类似。",{"type":394,"tag":414,"props":791,"children":792},{},[793],{"type":399,"value":794},"请求报文实例：",{"type":399,"value":796},"\n\n",{"type":394,"tag":414,"props":798,"children":799},{},[800],{"type":399,"value":801},"相应报文实例：",{"type":399,"value":796},{"type":394,"tag":407,"props":804,"children":806},{"id":805},"http-11-对比-http-10-做了哪些改进",[807],{"type":399,"value":808},"HTTP 1.1 对比 HTTP 1.0 做了哪些改进？",{"type":394,"tag":414,"props":810,"children":811},{},[812],{"type":399,"value":813},"长链接（keep-alive）、断点续传、HTTP 缓存。",{"type":394,"tag":407,"props":815,"children":817},{"id":816},"http-缓存分几种",[818],{"type":399,"value":819},"HTTP 缓存分几种？",{"type":394,"tag":414,"props":821,"children":822},{},[823],{"type":399,"value":824},"分强缓存和协商缓存：Expires、Cache-Control、Last-Modified、Etag。",{"type":394,"tag":414,"props":826,"children":827},{},[828],{"type":394,"tag":423,"props":829,"children":832},{"alt":830,"src":831},"HTTP Cache","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220630205606.png?type=win11&w=60",[],{"type":394,"tag":414,"props":834,"children":835},{},[836,837],{"type":399,"value":449},{"type":394,"tag":451,"props":838,"children":841},{"href":839,"rel":840},"https://imweb.io/topic/55c6f9bac222e3af6ce235b9",[455],[842],{"type":399,"value":839},{"type":394,"tag":407,"props":844,"children":846},{"id":845},"强缓存和协商缓存的主要区别是",[847],{"type":399,"value":848},"强缓存和协商缓存的主要区别是？",{"type":394,"tag":414,"props":850,"children":851},{},[852],{"type":399,"value":853},"强缓存是一但匹配就无条件使用缓存，而面对协商缓存的资源，浏览器需要向服务端发请求，对比资源是否变更，并依靠服务端的响应来判断是否使用缓存。如果资源同时应用了强缓存和协商缓存，那么浏览器优先使用强缓存。",{"type":394,"tag":407,"props":855,"children":857},{"id":856},"no-store-和-no-cache-的区别",[858],{"type":399,"value":859},"no-store 和 no-cache 的区别？",{"type":394,"tag":414,"props":861,"children":862},{},[863],{"type":399,"value":864},"no-store 告诉客户端每次都在服务器取最新的资源。no-cache 也要求每次都要重新请求，但服务器可能返回 304 告诉客户端资源未改变。",{"type":394,"tag":407,"props":866,"children":868},{"id":867},"http2-的改进在哪里",[869],{"type":399,"value":870},"HTTP2 的改进在哪里？",{"type":394,"tag":414,"props":872,"children":873},{},[874],{"type":399,"value":875},"HTTP/2 主要包含以下几个方面的变化，显著增强了性能，也增加了安全性。",{"type":394,"tag":542,"props":877,"children":878},{},[879,884,889,894],{"type":394,"tag":546,"props":880,"children":881},{},[882],{"type":399,"value":883},"二进制分帧层",{"type":394,"tag":546,"props":885,"children":886},{},[887],{"type":399,"value":888},"头部压缩（HPACK、Huffman）",{"type":394,"tag":546,"props":890,"children":891},{},[892],{"type":399,"value":893},"多路复用",{"type":394,"tag":546,"props":895,"children":896},{},[897],{"type":399,"value":898},"服务端推送",{"type":394,"tag":414,"props":900,"children":901},{},[902],{"type":399,"value":903},"二进制分帧层是在应用层（HTTP）和传输层（TCP、UDP）之间新增的一个层级关系。二进制分帧层将传输的 HTTP 消息分割为更小的帧，并采用二进制格式编码传输。帧分为头部帧和消息帧。这意味着 HTTP/2 请求的所有内容都是二进制传输的。",{"type":394,"tag":414,"props":905,"children":906},{},[907],{"type":399,"value":908},"HTTP 头部被转为帧之前，会通过维护一个表结构，通过序号记录已发送的键值对。这是一种索引算法，叫 HPACK。具体的表结构分静态表和动态表，静态表给一些常用的头部标号了号，直接使用就好，动态表则是根据发送的内容动态确定的记号。需要被发送具体内容会被哈夫曼编码以减小体积。",{"type":394,"tag":414,"props":910,"children":911},{},[912],{"type":399,"value":913},"多路复用是指，多个 HTTP 请求可以在同一个 TCP 连接中并行传输。这和 HTTP 1.1 的 Connection：keep-alive 不同，keep-alive 虽然复用 TCP 连接，但是多个响应之间是串行的。",{"type":394,"tag":414,"props":915,"children":916},{},[917],{"type":399,"value":918},"建立连接后，双方通过交换 SETTING 帧，以确认双向的流量窗口控制大小。然后开始发送帧。帧可以在一个连接中根据优先级发送，或是被乱序发送，响应方也能乱序接收。由于流是双向的，只要服务端 SETTING 帧设置的流量窗口大小不为 0，服务端可按照同源策略推送资源给客户端。",{"type":394,"tag":414,"props":920,"children":921},{},[922,923,930,932],{"type":399,"value":565},{"type":394,"tag":451,"props":924,"children":927},{"href":925,"rel":926},"https://coffe1891.gitbook.io/frontend-hard-mode-interview/1/1.5.3",[455],[928],{"type":399,"value":929},"HTTP/2 和 HTTP/1.X 相比的新特性",{"type":399,"value":931},"、",{"type":394,"tag":451,"props":933,"children":936},{"href":934,"rel":935},"https://blog.csdn.net/gaoliang1719/article/details/106346201/",[455],[937],{"type":399,"value":938},"HTTP/2 协议之头部压缩",{"type":394,"tag":407,"props":940,"children":942},{"id":941},"http3-相比-http2-改变了什么东西",[943],{"type":399,"value":944},"HTTP3 相比 HTTP2 改变了什么东西？",{"type":394,"tag":414,"props":946,"children":947},{},[948],{"type":399,"value":949},"HTTP3 使用全新的传输层协议 QUIC，实现了 H2 中的流式传输（HTTP2）、多路复用（TCP）、流量控制（TCP）以及可靠性（TCP）等内容，其网络层协议应用的是 UDP 而不是 TCP，本意是用来解决 TCP 建立链接需要  1.5 RTT 延迟的问题。这种改善在移动端更加有效。",{"type":394,"tag":414,"props":951,"children":952},{},[953],{"type":394,"tag":423,"props":954,"children":957},{"alt":955,"src":956},"HTTP3 VS HTTP2 VS HTTP1.1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220621003527.png?type=draw&w=80",[],{"type":394,"tag":414,"props":959,"children":960},{},[961,962],{"type":399,"value":565},{"type":394,"tag":451,"props":963,"children":966},{"href":964,"rel":965},"https://mp.weixin.qq.com/s/40YBEWZBaHakDuRuh27fMg",[455],[967],{"type":399,"value":968},"HTTP3 发布了！",{"type":394,"tag":401,"props":970,"children":972},{"id":971},"tls",[973],{"type":399,"value":974},"TLS",{"type":394,"tag":414,"props":976,"children":977},{},[978,979],{"type":399,"value":449},{"type":394,"tag":451,"props":980,"children":983},{"href":981,"rel":982},"https://www.oschina.net/translate/rfc-8446-aka-tls-1-3",[455],[984],{"type":399,"value":985},"详细介绍 RFC 8446（即 TLS 1.3）",{"type":394,"tag":414,"props":987,"children":988},{},[989],{"type":399,"value":990},"TLS 是一种混合式加密系统，同时使用对称加密和非对称加密。它使用非对称加密以加密对称加密所需的密钥。它有多个版本。TLS 1.3 是一种比起 TLS1.2 而言更清晰、更快速、更安全的现代化安全协议。TLS 1.2 有两点问题：1. 包括 POODLE 在内的众多可行漏洞；2. 性能低。为了改善这些问题，IETF 在 2013 年，着手 TLS 1.3 的讨论，主要改进：",{"type":394,"tag":542,"props":992,"children":993},{},[994,999,1004,1009],{"type":394,"tag":546,"props":995,"children":996},{},[997],{"type":399,"value":998},"减少握手时间",{"type":394,"tag":546,"props":1000,"children":1001},{},[1002],{"type":399,"value":1003},"加密更多的握手",{"type":394,"tag":546,"props":1005,"children":1006},{},[1007],{"type":399,"value":1008},"改善跨协议攻击的弹性",{"type":394,"tag":546,"props":1010,"children":1011},{},[1012],{"type":399,"value":1013},"删除遗留特征",{"type":394,"tag":414,"props":1015,"children":1016},{},[1017],{"type":399,"value":1018},"经过 4 年的争论。最终，形成了 RFC 8446 规范。",{"type":394,"tag":1020,"props":1021,"children":1023},"h3",{"id":1022},"tls-12-的缺陷",[1024],{"type":399,"value":1025},"TLS 1.2 的缺陷",{"type":394,"tag":414,"props":1027,"children":1028},{},[1029],{"type":399,"value":1030},"TLS 1.2 使用的加密方式有缺陷。其中，非对称加密有如 RSA 和 Diffie-Hellman 协议。",{"type":394,"tag":407,"props":1032,"children":1034},{"id":1033},"rsa",[1035],{"type":399,"value":1036},"RSA",{"type":394,"tag":414,"props":1038,"children":1039},{},[1040],{"type":394,"tag":423,"props":1041,"children":1044},{"alt":1042,"src":1043},"RSA Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082140.png?w=70",[],{"type":394,"tag":414,"props":1046,"children":1047},{},[1048,1050,1057],{"type":399,"value":1049},"RSA 不保证前向保密。即，如果有人记录了加密对话，然后获取服务器的 RSA 私钥，他们可以将对话解密。而攻击者可能只需 ",{"type":394,"tag":451,"props":1051,"children":1054},{"href":1052,"rel":1053},"https://www.wikiwand.com/zh/%E5%BF%83%E8%84%8F%E5%87%BA%E8%A1%80%E6%BC%8F%E6%B4%9E",[455],[1055],{"type":399,"value":1056},"HeartBleed 漏洞",{"type":399,"value":1058},"（缓存区过读）就可以顺利窃取私钥。",{"type":394,"tag":407,"props":1060,"children":1062},{"id":1061},"diffie-hellman",[1063],{"type":399,"value":1064},"Diffie-Hellman",{"type":394,"tag":414,"props":1066,"children":1067},{},[1068],{"type":394,"tag":423,"props":1069,"children":1071},{"alt":1064,"src":1070},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082812.png?w=70",[],{"type":394,"tag":414,"props":1073,"children":1074},{},[1075],{"type":399,"value":1076},"Diffie-Hellman 的缺陷在于，协议的某些参数不安全，且能够被操纵设置；不安全的参数能导致加密更容易被破解。",{"type":394,"tag":407,"props":1078,"children":1080},{"id":1079},"对称加密缺陷",[1081],{"type":399,"value":1079},{"type":394,"tag":414,"props":1083,"children":1084},{},[1085],{"type":399,"value":1086},"TLS 1.2 的对称加密使用的 CBC 模式密码和流式密码也有缺陷。",{"type":394,"tag":407,"props":1088,"children":1090},{"id":1089},"downgrade-attack",[1091],{"type":399,"value":1092},"Downgrade Attack",{"type":394,"tag":414,"props":1094,"children":1095},{},[1096],{"type":399,"value":1097},"由于 TLS 1.2 握手协商密钥的部分没有加密。所以中间人可以拦截客户端的请求，选择发送方和接收方都支持的弱密码，伪造请求。",{"type":394,"tag":414,"props":1099,"children":1100},{},[1101],{"type":394,"tag":423,"props":1102,"children":1104},{"alt":1092,"src":1103},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807090034.png?w=70",[],{"type":394,"tag":1020,"props":1106,"children":1108},{"id":1107},"_0-rtt",[1109],{"type":399,"value":1110},"0-RTT",{"type":394,"tag":414,"props":1112,"children":1113},{},[1114],{"type":399,"value":1115},"TLS 1.3 中，通讯双方可以得到一个“恢复主密钥”的密钥，用于从中断的连接中直接恢复通讯。但是有被拦截导致重放攻击的风险。",{"type":394,"tag":414,"props":1117,"children":1118},{},[1119],{"type":394,"tag":423,"props":1120,"children":1123},{"alt":1121,"src":1122},"0-RTT 重放攻击","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807081140.png?w=70",[],{"type":394,"tag":401,"props":1125,"children":1127},{"id":1126},"https",[1128],{"type":399,"value":1129},"HTTPS",{"type":394,"tag":1020,"props":1131,"children":1133},{"id":1132},"links",[1134],{"type":399,"value":1135},"Links",{"type":394,"tag":414,"props":1137,"children":1138},{},[1139,1140],{"type":399,"value":449},{"type":394,"tag":451,"props":1141,"children":1144},{"href":1142,"rel":1143},"https://zhuanlan.zhihu.com/p/26682342",[455],[1145],{"type":399,"value":1146},"深入理解 HTTPS 原理、过程与实践",{"type":394,"tag":407,"props":1148,"children":1150},{"id":1149},"https-的握手过程是怎样的",[1151],{"type":399,"value":1152},"HTTPS 的握手过程是怎样的？",{"type":394,"tag":414,"props":1154,"children":1155},{},[1156],{"type":399,"value":1157},"总的来说是一个非对称加密+对称加密的过程。客户端通过一个随机数加上服务器的公钥来生成预主密钥，然后双方再通过 Client Hello 和 Server Hello 时的两个随机数生成会话密钥。生成预主密钥的过程是非对称加密的，因为只有服务端用私钥才能解得客户端的随机数。而之后使用会话密钥主要是出于性能考虑。",{"type":394,"tag":414,"props":1159,"children":1160},{},[1161],{"type":394,"tag":423,"props":1162,"children":1165},{"alt":1163,"src":1164},"HTTPS 握手过程","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620024738.png",[],{"type":394,"tag":407,"props":1167,"children":1169},{"id":1168},"ca-怎么解决中间人问题",[1170],{"type":399,"value":1171},"CA 怎么解决中间人问题？",{"type":394,"tag":414,"props":1173,"children":1174},{},[1175],{"type":399,"value":1176},"CA 主要是用来防范服务器端返回 Server Hello 前就和客户端提供了假的公钥。CA 是一个可信的第三方机构，客户端想要服务器的公钥，需要从 CA 获得。CA 返回公钥以及数字签名。客户端只要拿到公钥后根据 CA 公钥对其计算获得摘要，再将摘要和签名进行对比，就能知道是否拿到了可信的公钥。",{"type":394,"tag":414,"props":1178,"children":1179},{},[1180,1181],{"type":399,"value":565},{"type":394,"tag":451,"props":1182,"children":1185},{"href":1183,"rel":1184},"https://www.jianshu.com/p/9de06222793b",[455],[1186],{"type":399,"value":1187},"HTTPS CA 原理",{"type":394,"tag":407,"props":1189,"children":1191},{"id":1190},"数字签名是什么",[1192],{"type":399,"value":1193},"数字签名是什么？",{"type":394,"tag":414,"props":1195,"children":1196},{},[1197],{"type":399,"value":1198},"数字签名是只有信息发送者才能产生的一段文本，信息接收方可以通过签名计算出接受到的文本是否经过了修改。如果我要发送 A，我会用私钥将 A 进行加密获得 B，并把 A 和 B 同时发送过去。B 就是数字签名。因为我的公钥是公开的，所以接受方可以通过使用我的公钥去计算 A，如果获得和 B 一致的结果，那么说明信息没有被篡改。",{"type":394,"tag":401,"props":1200,"children":1202},{"id":1201},"攻防",[1203],{"type":399,"value":1201},{"type":394,"tag":407,"props":1205,"children":1207},{"id":1206},"https-降级攻击的原理是什么",[1208],{"type":399,"value":1209},"HTTPS 降级攻击的原理是什么？",{"type":394,"tag":414,"props":1211,"children":1212},{},[1213],{"type":399,"value":1214},"客服端与服务端协商加密协议的过程当中，如果攻击者拦截了客户端（或操控客户端）并代替它向服务端协商使用仅支持有漏洞的协议。如果服务端同意了，那么建立连接后，攻击者就能使用该协议的已知漏洞的破解手段，去破解通讯内容了。",{"type":394,"tag":407,"props":1216,"children":1218},{"id":1217},"syn-攻击的基本原理是什么",[1219],{"type":399,"value":1220},"SYN 攻击的基本原理是什么？",{"type":394,"tag":414,"props":1222,"children":1223},{},[1224,1226,1233],{"type":399,"value":1225},"SYN 洪水攻击是 DDOS 攻击中最常见的攻击类型。攻击者向服务器发送大量伪造的 TCP 连接请求，而源 IP 是伪造的。由于服务器收不到伪造源回应的 ACK 数据包，就会不断重发。一般应对方式是：减少重发次数、使用 ",{"type":394,"tag":451,"props":1227,"children":1230},{"href":1228,"rel":1229},"https://baike.baidu.com/item/syn%20cookie/6898884?fr=aladdin",[455],[1231],{"type":399,"value":1232},"SYN Cookie",{"type":399,"value":1234},"、增加 backlog 队列长度、限制 SYN 并发数。",{"type":394,"tag":414,"props":1236,"children":1237},{},[1238,1239],{"type":399,"value":565},{"type":394,"tag":451,"props":1240,"children":1243},{"href":1241,"rel":1242},"https://www.qycn.com/about/hd/2049.html",[455],[1244],{"type":399,"value":1245},"服务器遭到 SYN 攻击该如何处理呢？",{"type":394,"tag":401,"props":1247,"children":1249},{"id":1248},"cdn",[1250],{"type":399,"value":1251},"CDN",{"type":394,"tag":407,"props":1253,"children":1255},{"id":1254},"cdn-有什么好处",[1256],{"type":399,"value":1257},"CDN 有什么好处？",{"type":394,"tag":414,"props":1259,"children":1260},{},[1261],{"type":399,"value":1262},"对页面加载而言，CDN 可以减少请求时间、突破浏览器同域的 TCP 并发数、节约 Cookie 带宽。",{"type":394,"tag":401,"props":1264,"children":1266},{"id":1265},"浏览器",[1267],{"type":399,"value":1265},{"type":394,"tag":407,"props":1269,"children":1271},{"id":1270},"url-由哪些部分组成",[1272],{"type":399,"value":1273},"URL 由哪些部分组成？",{"type":394,"tag":414,"props":1275,"children":1276},{},[1277],{"type":399,"value":1278},"协议头、域名、端口、目录、文件名（index.html）、页面锚、参数。",{"type":394,"tag":407,"props":1280,"children":1282},{"id":1281},"怎么做跨域",[1283],{"type":399,"value":1284},"怎么做跨域？",{"type":394,"tag":414,"props":1286,"children":1287},{},[1288],{"type":399,"value":1289},"用代理服务器、CORS、iFrame 或者 WebSocket 都可以。",{"type":394,"tag":414,"props":1291,"children":1292},{},[1293],{"type":399,"value":1294},"服务器可以忽略同源限制；WebSocket 和 CORS 不受同源影响；iFrame 需要浏览器加载一个跨域页面，然后和主页面用 postMessage 或者哈希监听的方式通信，让 iFrame 中的脚本代替主页面发送请求。",{"type":394,"tag":407,"props":1296,"children":1298},{"id":1297},"正向代理和反向代理的区别是",[1299],{"type":399,"value":1300},"正向代理和反向代理的区别是？",{"type":394,"tag":414,"props":1302,"children":1303},{},[1304],{"type":399,"value":1305},"正向代理为用户服务，反向代理为服务器服务，分别对应“VPN”和“负载均衡”的概念。",{"type":394,"tag":407,"props":1307,"children":1309},{"id":1308},"cors-运作流程是怎样的",[1310],{"type":399,"value":1311},"CORS 运作流程是怎样的？",{"type":394,"tag":414,"props":1313,"children":1314},{},[1315],{"type":399,"value":1316},"CORS 即跨域资源共享机制。浏览器在请求资源前通过携带 Origin 字段的 OPTIONS 请求向服务器索取设置有 Access-Control-Allow-Methods、Access-Control-Allow-Headers、Access-Control-Allow-Origin 的响应。在得到响应的允许后再继续发送请求。",{"type":394,"tag":407,"props":1318,"children":1320},{"id":1319},"什么是私有网络请求攻击",[1321],{"type":399,"value":1322},"什么是私有网络请求攻击？",{"type":394,"tag":414,"props":1324,"children":1325},{},[1326],{"type":399,"value":1327},"在内网域名向 localhost 发起请求就算一种私有网络请求。而恶意代码通过向比浏览器当前浏览页面的域名 IP 更私密的 IP 地址发起请求，以达到获取信息或攻击手段的方式就是私有网络请求攻击。",{"type":394,"tag":414,"props":1329,"children":1330},{},[1331,1333,1340,1342],{"type":399,"value":1332},"自 Chrome 96 后， Chrome 开始实施私有网络控制策略，需要部署以下两个请求头以解除控制：",{"type":394,"tag":1334,"props":1335,"children":1337},"code",{"className":1336},[],[1338],{"type":399,"value":1339},"Access-Control-Request-Private-Network: true",{"type":399,"value":1341}," 和 ",{"type":394,"tag":1334,"props":1343,"children":1345},{"className":1344},[],[1346],{"type":399,"value":1347},"Access-Control-Allow-Private-Network: true",{"type":394,"tag":414,"props":1349,"children":1350},{},[1351,1352],{"type":399,"value":565},{"type":394,"tag":451,"props":1353,"children":1356},{"href":1354,"rel":1355},"https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&mid=2247491913&idx=1&sn=2bb0a28358c02a8ec1832781205df72c&chksm=c2e11462f5969d74fac277131e1ba8c417ec86754b2f1b2dbe8e238ca27d5c2eaebe602ec803&token=1851580176&lang=zh_CN&scene=21#wechat_redirect",[455],[1357],{"type":399,"value":1358},"Chrome 重大更新，CORS 增加了两个新的请求头？ |  code 秘密花园",{"type":394,"tag":401,"props":1360,"children":1362},{"id":1361},"阅读更多",[1363],{"type":399,"value":1361},{"type":394,"tag":542,"props":1365,"children":1366},{},[1367],{"type":394,"tag":546,"props":1368,"children":1369},{},[1370],{"type":394,"tag":451,"props":1371,"children":1374},{"href":1372,"rel":1373},"https://juejin.im/post/6844903518826921998",[455],[1375],{"type":399,"value":1376},"为你的网站带上帽子 | 使用 helmet 保护 Express 应用",{"title":388,"searchDepth":1378,"depth":1378,"links":1379},2,[1380,1381,1382,1383,1384,1389,1392,1393,1394,1395],{"id":403,"depth":1378,"text":403},{"id":430,"depth":1378,"text":433},{"id":575,"depth":1378,"text":578},{"id":609,"depth":1378,"text":612},{"id":971,"depth":1378,"text":974,"children":1385},[1386,1388],{"id":1022,"depth":1387,"text":1025},3,{"id":1107,"depth":1387,"text":1110},{"id":1126,"depth":1378,"text":1129,"children":1390},[1391],{"id":1132,"depth":1387,"text":1135},{"id":1201,"depth":1378,"text":1201},{"id":1248,"depth":1378,"text":1251},{"id":1265,"depth":1378,"text":1265},{"id":1361,"depth":1378,"text":1361},"markdown","content:6.maps:_computer:network.md","content","6.maps/_computer/network.md","md",[1402,1405],{"_path":1403,"title":1404,"description":388},"/maps/_computer/computer","Computer Mind Map",{"_path":1406,"title":1407,"description":388},"/maps/_computer/security","Security Mind Map",1708107598326]