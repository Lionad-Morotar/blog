[{"data":1,"prerenderedAt":1427},["ShallowReactive",2],{"navigation":3,"/maps/_computer/network":384,"/maps/_computer/network-surround":1418},[4,35,86,105,132,138,144,150,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":205,"_path":206},"正则表达式","/gists/eegex",{"title":208,"_path":209},"Emoji","/gists/emoji",{"title":211,"_path":212},"工程","/gists/engineering",{"title":214,"_path":215},"熵","/gists/entropy",{"title":217,"_path":218},"Environment","/gists/environment",{"title":220,"_path":221},"Erlang","/gists/erlang",{"title":223,"_path":224},"逃离塔克夫","/gists/escape-from-tarkov",{"title":226,"_path":227},"ESNext (ES6-ES11)","/gists/esnext",{"title":229,"_path":230},"Eval！","/gists/eval",{"title":232,"_path":233},"Flutter","/gists/flutter",{"title":235,"_path":236},"字体","/gists/font",{"title":238,"_path":239},"JS 函数式编程","/gists/functional",{"title":241,"_path":242},"游戏化","/gists/gamification",{"title":244,"_path":245},"Google C++ Standard","/gists/google-cpp-standard",{"title":247,"_path":248},"双向链接完全体","/gists/graph",{"title":250,"_path":251},"Hardwares","/gists/hardwares",{"title":253,"_path":254},"哈希冲突","/gists/hash-collision",{"title":256,"_path":257},"信息设计","/gists/information-design",{"title":259,"_path":260},"InstantPage","/gists/instant.page",{"title":262,"_path":263},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":265,"_path":266},"KVStore","/gists/key-value-db",{"title":268,"_path":269},"Kubernetes","/gists/kubernetes",{"title":271,"_path":272},"Makefile","/gists/makefile",{"title":274,"_path":275},"Markdown Inline Style","/gists/markdown-nice",{"title":277,"_path":278},"减小页面快照体积","/gists/minify-html",{"title":280,"_path":281},"mklink","/gists/mklink",{"title":283,"_path":284},"Mock","/gists/mock",{"title":286,"_path":287},"多人协作系统","/gists/multiplayer",{"title":289,"_path":290},"多端应用","/gists/multy-end-app",{"title":292,"_path":293},"神经科学","/gists/neuroscience",{"title":295,"_path":296},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":298,"_path":299},"PInvoke","/gists/pinvoke",{"title":301,"_path":302},"像素","/gists/pixel",{"title":304,"_path":305},"PowerShell","/gists/powershell",{"title":307,"_path":308},"量子","/gists/quantum",{"title":310,"_path":311},"保持好奇心","/gists/questions",{"title":313,"_path":314},"React Native","/gists/react-native",{"title":316,"_path":317},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":319,"_path":320},"SEO","/gists/seo",{"title":322,"_path":323},"Shader","/gists/shader",{"title":325,"_path":326},"Shape Up","/gists/shape-up",{"title":328,"_path":329},"睡觉","/gists/sleep",{"title":331,"_path":332},"记录奇怪的问题","/gists/solved",{"title":334,"_path":335},"States","/gists/states",{"title":337,"_path":338},"Storage","/gists/storage",{"title":340,"_path":341},"音视频流处理","/gists/stream-cli",{"title":343,"_path":344},"Symbol","/gists/symbol",{"title":346,"_path":347},"系统论","/gists/systems-theory",{"title":349,"_path":350},"任务切片","/gists/task-slice",{"title":352,"_path":353},"技术偏好","/gists/tech-dudge",{"title":355,"_path":356},"Untitled","/gists/untitled",{"title":358,"_path":359},"可变字体","/gists/variable-font",{"title":361,"_path":362},"视觉错觉","/gists/visual-illusion",{"title":364,"_path":365},"SS(SSR)","/gists/vpn",{"title":367,"_path":368},"VS Code 插件开发","/gists/vscode-plugin",{"title":370,"_path":371},"Web Components","/gists/web-components",{"title":373,"_path":374},"Windows","/gists/windows",{"title":376,"_path":377},"查缺补漏","/gists/wrong",{"title":379,"_path":380,"children":381},"我 / About","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"_path":385,"_dir":386,"_draft":387,"_partial":388,"_locale":389,"title":390,"description":391,"body":392,"_type":1412,"_id":1413,"_source":1414,"_file":1415,"_stem":1416,"_extension":1417},"/maps/_computer/network","_computer",false,true,"","计算机网络","计算机网络基础知识全览，包含 TCP/IP、HTTP、HTTPS、TLS 等协议的详细解析，以及网络安全、CDN、跨域等实践内容。",{"type":393,"children":394,"toc":1393},"root",[395,403,410,416,425,431,437,442,456,462,470,476,481,489,495,500,508,514,519,527,533,538,558,570,576,581,604,610,616,774,780,785,790,795,801,806,812,817,825,835,841,846,852,857,863,868,891,896,901,906,911,931,937,942,950,961,967,978,983,1006,1011,1018,1023,1029,1037,1051,1057,1064,1069,1074,1079,1085,1090,1097,1103,1108,1116,1122,1128,1139,1145,1150,1158,1164,1169,1180,1186,1191,1196,1202,1207,1213,1227,1238,1244,1249,1262,1268,1274,1279,1284,1290,1295,1301,1306,1311,1317,1322,1328,1333,1339,1344,1364,1375,1380],{"type":396,"tag":397,"props":398,"children":400},"element","h2",{"id":399},"网络模型",[401],{"type":402,"value":399},"text",{"type":396,"tag":404,"props":405,"children":407},"h4",{"id":406},"各网络层有哪些代表性的协议",[408],{"type":402,"value":409},"各网络层有哪些代表性的协议？",{"type":396,"tag":411,"props":412,"children":413},"p",{},[414],{"type":402,"value":415},"应用层有 HTTP、DNS、FTP，表示层有 SSL、TSL、base64、MIDI、JPEG，会话层有 xxx，传输层则是 TCP、UDP，网络层有 IP，数据链路层 xxx，物理层有以太网协议。",{"type":396,"tag":411,"props":417,"children":418},{},[419],{"type":396,"tag":420,"props":421,"children":424},"img",{"alt":422,"src":423},"OSI 参考模型","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620033400.png?type=win11&w=60",[],{"type":396,"tag":397,"props":426,"children":428},{"id":427},"tcp",[429],{"type":402,"value":430},"TCP",{"type":396,"tag":404,"props":432,"children":434},{"id":433},"tcpip-是什么",[435],{"type":402,"value":436},"TCP/IP 是什么？",{"type":396,"tag":411,"props":438,"children":439},{},[440],{"type":402,"value":441},"TCP/IP 协议是一个协议集。TCP/IP 包括了应用层、传输层、网络层、数据链路层和网络层，是一个四层体系结构。各层有代表性的协议有 HTTP、DNS，TLS，IP 和 xxx。",{"type":396,"tag":411,"props":443,"children":444},{},[445,447],{"type":402,"value":446},"TODO，",{"type":396,"tag":448,"props":449,"children":453},"a",{"href":450,"rel":451},"https://developer.51cto.com/article/597961.html",[452],"nofollow",[454],{"type":402,"value":455},"终于有人能把 TCP/IP 协议讲的明明白白了！",{"type":396,"tag":404,"props":457,"children":459},{"id":458},"tcp-header-由哪些部分组成",[460],{"type":402,"value":461},"TCP Header 由哪些部分组成？",{"type":396,"tag":411,"props":463,"children":464},{},[465],{"type":396,"tag":420,"props":466,"children":469},{"alt":467,"src":468},"TCP Header","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731153510.png?type=win11&w=60",[],{"type":396,"tag":404,"props":471,"children":473},{"id":472},"三次握手具体过程",[474],{"type":402,"value":475},"三次握手具体过程？",{"type":396,"tag":411,"props":477,"children":478},{},[479],{"type":402,"value":480},"从三次握手图示可以发现，仅仅是连接的建立，就需要大量时间消耗。客户端想发送数据，至少要等 1.5xRTT；服务端想发送数据，至少要 2xRTT。",{"type":396,"tag":411,"props":482,"children":483},{},[484],{"type":396,"tag":420,"props":485,"children":488},{"alt":486,"src":487},"Three-way Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731162450.png?type=win11&w=40",[],{"type":396,"tag":404,"props":490,"children":492},{"id":491},"tcp-fast-open-如何优化握手过程",[493],{"type":402,"value":494},"TCP Fast Open 如何优化握手过程？",{"type":396,"tag":411,"props":496,"children":497},{},[498],{"type":402,"value":499},"TFO 规定服务器第一次返回 ACK 时，携带一个用以标志客户端身份的 Cookie。后续客户端发送 SYN 建立连接的时候带上这个 Cookie，服务端确认身份之后，就能直接返回数据了（节约了 1.5 RTT）。",{"type":396,"tag":411,"props":501,"children":502},{},[503],{"type":396,"tag":420,"props":504,"children":507},{"alt":505,"src":506},"TFO","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807054219.png?type=win11&w=80",[],{"type":396,"tag":404,"props":509,"children":511},{"id":510},"四次挥手的具体过程",[512],{"type":402,"value":513},"四次挥手的具体过程？",{"type":396,"tag":411,"props":515,"children":516},{},[517],{"type":402,"value":518},"四次挥手如下所示。为什么建立连接要三次，而断开连接要四次请求呢？从图中可以看出，接收到 FIN 请求时，服务端立即返回 ACK 表示收到请求，但是要等自己这边剩余一些工作（可能时未发送完的请求内容）完成之后，才会返回 FIN。",{"type":396,"tag":411,"props":520,"children":521},{},[522],{"type":396,"tag":420,"props":523,"children":526},{"alt":524,"src":525},"Four-way Wavehand","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731165331.png?type=win11&w=40",[],{"type":396,"tag":404,"props":528,"children":530},{"id":529},"tcp-链接中如果某端出故障了会怎么办",[531],{"type":402,"value":532},"TCP 链接中如果某端出故障了会怎么办？",{"type":396,"tag":411,"props":534,"children":535},{},[536],{"type":402,"value":537},"会通过计时器来保证链接的稳定性。",{"type":396,"tag":539,"props":540,"children":541},"ul",{},[542,548,553],{"type":396,"tag":543,"props":544,"children":545},"li",{},[546],{"type":402,"value":547},"超时重传计时器：对方没有返回 ACK 时，发送方需要重新发送数据。一般计时器的时间选择 2RTT。",{"type":396,"tag":543,"props":549,"children":550},{},[551],{"type":402,"value":552},"2MSL 定时器：主动断开连接的一方发送 FIN 后需要等待 2MSL 时间。因为如果服务端没有收到最后一个 ACK，它将重新发送 FIN。",{"type":396,"tag":543,"props":554,"children":555},{},[556],{"type":402,"value":557},"保活计时器：每当接收方收到消息，将计时器重设为两小时。计时器到期时，每 75s 发送一次探测报文段，如果连续 10 次都没有被响应则断开连接。",{"type":396,"tag":411,"props":559,"children":560},{},[561,563],{"type":402,"value":562},"见：",{"type":396,"tag":448,"props":564,"children":567},{"href":565,"rel":566},"https://www.cnblogs.com/13224ACMer/p/6616960.html",[452],[568],{"type":402,"value":569},"TCP 四种计时器",{"type":396,"tag":397,"props":571,"children":573},{"id":572},"udp",[574],{"type":402,"value":575},"UDP",{"type":396,"tag":411,"props":577,"children":578},{},[579],{"type":402,"value":580},"UDP，即 User Datagram Protocol 用户数据报协议。数据报不保证信息的传达是否到位，所以 UDP 也被普遍称作 Unreliable Datagram Protocol。",{"type":396,"tag":539,"props":582,"children":583},{},[584,589,594,599],{"type":396,"tag":543,"props":585,"children":586},{},[587],{"type":402,"value":588},"不保证消息交付",{"type":396,"tag":543,"props":590,"children":591},{},[592],{"type":402,"value":593},"不保证交付顺序",{"type":396,"tag":543,"props":595,"children":596},{},[597],{"type":402,"value":598},"不跟踪连接状态",{"type":396,"tag":543,"props":600,"children":601},{},[602],{"type":402,"value":603},"不需要拥塞控制",{"type":396,"tag":397,"props":605,"children":607},{"id":606},"http",[608],{"type":402,"value":609},"HTTP",{"type":396,"tag":404,"props":611,"children":613},{"id":612},"有哪些常见的状态码",[614],{"type":402,"value":615},"有哪些常见的状态码？",{"type":396,"tag":617,"props":618,"children":619},"table",{},[620,639],{"type":396,"tag":621,"props":622,"children":623},"thead",{},[624],{"type":396,"tag":625,"props":626,"children":627},"tr",{},[628,634],{"type":396,"tag":629,"props":630,"children":631},"th",{},[632],{"type":402,"value":633},"状态码",{"type":396,"tag":629,"props":635,"children":636},{},[637],{"type":402,"value":638},"描述",{"type":396,"tag":640,"props":641,"children":642},"tbody",{},[643,657,670,683,696,709,722,735,748,761],{"type":396,"tag":625,"props":644,"children":645},{},[646,652],{"type":396,"tag":647,"props":648,"children":649},"td",{},[650],{"type":402,"value":651},"200",{"type":396,"tag":647,"props":653,"children":654},{},[655],{"type":402,"value":656},"成功并返回数据",{"type":396,"tag":625,"props":658,"children":659},{},[660,665],{"type":396,"tag":647,"props":661,"children":662},{},[663],{"type":402,"value":664},"301",{"type":396,"tag":647,"props":666,"children":667},{},[668],{"type":402,"value":669},"永久转移，重定向",{"type":396,"tag":625,"props":671,"children":672},{},[673,678],{"type":396,"tag":647,"props":674,"children":675},{},[676],{"type":402,"value":677},"302",{"type":396,"tag":647,"props":679,"children":680},{},[681],{"type":402,"value":682},"临时重定向",{"type":396,"tag":625,"props":684,"children":685},{},[686,691],{"type":396,"tag":647,"props":687,"children":688},{},[689],{"type":402,"value":690},"303",{"type":396,"tag":647,"props":692,"children":693},{},[694],{"type":402,"value":695},"临时重定向（客户端必须使用 Get 方法重新请求资源）",{"type":396,"tag":625,"props":697,"children":698},{},[699,704],{"type":396,"tag":647,"props":700,"children":701},{},[702],{"type":402,"value":703},"304",{"type":396,"tag":647,"props":705,"children":706},{},[707],{"type":402,"value":708},"资源未修改，可使用缓存",{"type":396,"tag":625,"props":710,"children":711},{},[712,717],{"type":396,"tag":647,"props":713,"children":714},{},[715],{"type":402,"value":716},"400",{"type":396,"tag":647,"props":718,"children":719},{},[720],{"type":402,"value":721},"请求语法错误",{"type":396,"tag":625,"props":723,"children":724},{},[725,730],{"type":396,"tag":647,"props":726,"children":727},{},[728],{"type":402,"value":729},"401",{"type":396,"tag":647,"props":731,"children":732},{},[733],{"type":402,"value":734},"要求身份认证",{"type":396,"tag":625,"props":736,"children":737},{},[738,743],{"type":396,"tag":647,"props":739,"children":740},{},[741],{"type":402,"value":742},"403",{"type":396,"tag":647,"props":744,"children":745},{},[746],{"type":402,"value":747},"请求拒绝",{"type":396,"tag":625,"props":749,"children":750},{},[751,756],{"type":396,"tag":647,"props":752,"children":753},{},[754],{"type":402,"value":755},"404",{"type":396,"tag":647,"props":757,"children":758},{},[759],{"type":402,"value":760},"资源不存在",{"type":396,"tag":625,"props":762,"children":763},{},[764,769],{"type":396,"tag":647,"props":765,"children":766},{},[767],{"type":402,"value":768},"500",{"type":396,"tag":647,"props":770,"children":771},{},[772],{"type":402,"value":773},"服务器错误",{"type":396,"tag":404,"props":775,"children":777},{"id":776},"http-报文由哪些部分组成",[778],{"type":402,"value":779},"HTTP 报文由哪些部分组成？",{"type":396,"tag":411,"props":781,"children":782},{},[783],{"type":402,"value":784},"请求报文由请求行、请求头、空行和请求数据组成，相应报文类似。",{"type":396,"tag":411,"props":786,"children":787},{},[788],{"type":402,"value":789},"请求报文实例：",{"type":396,"tag":411,"props":791,"children":792},{},[793],{"type":402,"value":794},"相应报文实例：",{"type":396,"tag":404,"props":796,"children":798},{"id":797},"http-11-对比-http-10-做了哪些改进",[799],{"type":402,"value":800},"HTTP 1.1 对比 HTTP 1.0 做了哪些改进？",{"type":396,"tag":411,"props":802,"children":803},{},[804],{"type":402,"value":805},"长链接（keep-alive）、断点续传、HTTP 缓存。",{"type":396,"tag":404,"props":807,"children":809},{"id":808},"http-缓存分几种",[810],{"type":402,"value":811},"HTTP 缓存分几种？",{"type":396,"tag":411,"props":813,"children":814},{},[815],{"type":402,"value":816},"分强缓存和协商缓存：Expires、Cache-Control、Last-Modified、Etag。",{"type":396,"tag":411,"props":818,"children":819},{},[820],{"type":396,"tag":420,"props":821,"children":824},{"alt":822,"src":823},"HTTP Cache","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220630205606.png?type=win11&w=60",[],{"type":396,"tag":411,"props":826,"children":827},{},[828,829],{"type":402,"value":446},{"type":396,"tag":448,"props":830,"children":833},{"href":831,"rel":832},"https://imweb.io/topic/55c6f9bac222e3af6ce235b9",[452],[834],{"type":402,"value":831},{"type":396,"tag":404,"props":836,"children":838},{"id":837},"强缓存和协商缓存的主要区别是",[839],{"type":402,"value":840},"强缓存和协商缓存的主要区别是？",{"type":396,"tag":411,"props":842,"children":843},{},[844],{"type":402,"value":845},"强缓存是一但匹配就无条件使用缓存，而面对协商缓存的资源，浏览器需要向服务端发请求，对比资源是否变更，并依靠服务端的响应来判断是否使用缓存。如果资源同时应用了强缓存和协商缓存，那么浏览器优先使用强缓存。",{"type":396,"tag":404,"props":847,"children":849},{"id":848},"no-store-和-no-cache-的区别",[850],{"type":402,"value":851},"no-store 和 no-cache 的区别？",{"type":396,"tag":411,"props":853,"children":854},{},[855],{"type":402,"value":856},"no-store 告诉客户端每次都在服务器取最新的资源。no-cache 也要求每次都要重新请求，但服务器可能返回 304 告诉客户端资源未改变。",{"type":396,"tag":404,"props":858,"children":860},{"id":859},"http2-的改进在哪里",[861],{"type":402,"value":862},"HTTP2 的改进在哪里？",{"type":396,"tag":411,"props":864,"children":865},{},[866],{"type":402,"value":867},"HTTP/2 主要包含以下几个方面的变化，显著增强了性能，也增加了安全性。",{"type":396,"tag":539,"props":869,"children":870},{},[871,876,881,886],{"type":396,"tag":543,"props":872,"children":873},{},[874],{"type":402,"value":875},"二进制分帧层",{"type":396,"tag":543,"props":877,"children":878},{},[879],{"type":402,"value":880},"头部压缩（HPACK、Huffman）",{"type":396,"tag":543,"props":882,"children":883},{},[884],{"type":402,"value":885},"多路复用",{"type":396,"tag":543,"props":887,"children":888},{},[889],{"type":402,"value":890},"服务端推送",{"type":396,"tag":411,"props":892,"children":893},{},[894],{"type":402,"value":895},"二进制分帧层是在应用层（HTTP）和传输层（TCP、UDP）之间新增的一个层级关系。二进制分帧层将传输的 HTTP 消息分割为更小的帧，并采用二进制格式编码传输。帧分为头部帧和消息帧。这意味着 HTTP/2 请求的所有内容都是二进制传输的。",{"type":396,"tag":411,"props":897,"children":898},{},[899],{"type":402,"value":900},"HTTP 头部被转为帧之前，会通过维护一个表结构，通过序号记录已发送的键值对。这是一种索引算法，叫 HPACK。具体的表结构分静态表和动态表，静态表给一些常用的头部标号了号，直接使用就好，动态表则是根据发送的内容动态确定的记号。需要被发送具体内容会被哈夫曼编码以减小体积。",{"type":396,"tag":411,"props":902,"children":903},{},[904],{"type":402,"value":905},"多路复用是指，多个 HTTP 请求可以在同一个 TCP 连接中并行传输。这和 HTTP 1.1 的 Connection：keep-alive 不同，keep-alive 虽然复用 TCP 连接，但是多个响应之间是串行的。",{"type":396,"tag":411,"props":907,"children":908},{},[909],{"type":402,"value":910},"建立连接后，双方通过交换 SETTING 帧，以确认双向的流量窗口控制大小。然后开始发送帧。帧可以在一个连接中根据优先级发送，或是被乱序发送，响应方也能乱序接收。由于流是双向的，只要服务端 SETTING 帧设置的流量窗口大小不为 0，服务端可按照同源策略推送资源给客户端。",{"type":396,"tag":411,"props":912,"children":913},{},[914,915,922,924],{"type":402,"value":562},{"type":396,"tag":448,"props":916,"children":919},{"href":917,"rel":918},"https://coffe1891.gitbook.io/frontend-hard-mode-interview/1/1.5.3",[452],[920],{"type":402,"value":921},"HTTP/2 和 HTTP/1.X 相比的新特性",{"type":402,"value":923},"、",{"type":396,"tag":448,"props":925,"children":928},{"href":926,"rel":927},"https://blog.csdn.net/gaoliang1719/article/details/106346201/",[452],[929],{"type":402,"value":930},"HTTP/2 协议之头部压缩",{"type":396,"tag":404,"props":932,"children":934},{"id":933},"http3-相比-http2-改变了什么东西",[935],{"type":402,"value":936},"HTTP3 相比 HTTP2 改变了什么东西？",{"type":396,"tag":411,"props":938,"children":939},{},[940],{"type":402,"value":941},"HTTP3 使用全新的传输层协议 QUIC，实现了 H2 中的流式传输（HTTP2）、多路复用（TCP）、流量控制（TCP）以及可靠性（TCP）等内容，其网络层协议应用的是 UDP 而不是 TCP，本意是用来解决 TCP 建立链接需要  1.5 RTT 延迟的问题。这种改善在移动端更加有效。",{"type":396,"tag":411,"props":943,"children":944},{},[945],{"type":396,"tag":420,"props":946,"children":949},{"alt":947,"src":948},"HTTP3 VS HTTP2 VS HTTP1.1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220621003527.png?type=draw&w=80",[],{"type":396,"tag":411,"props":951,"children":952},{},[953,954],{"type":402,"value":562},{"type":396,"tag":448,"props":955,"children":958},{"href":956,"rel":957},"https://mp.weixin.qq.com/s/40YBEWZBaHakDuRuh27fMg",[452],[959],{"type":402,"value":960},"HTTP3 发布了！",{"type":396,"tag":397,"props":962,"children":964},{"id":963},"tls",[965],{"type":402,"value":966},"TLS",{"type":396,"tag":411,"props":968,"children":969},{},[970,971],{"type":402,"value":446},{"type":396,"tag":448,"props":972,"children":975},{"href":973,"rel":974},"https://www.oschina.net/translate/rfc-8446-aka-tls-1-3",[452],[976],{"type":402,"value":977},"详细介绍 RFC 8446（即 TLS 1.3）",{"type":396,"tag":411,"props":979,"children":980},{},[981],{"type":402,"value":982},"TLS 是一种混合式加密系统，同时使用对称加密和非对称加密。它使用非对称加密以加密对称加密所需的密钥。它有多个版本。TLS 1.3 是一种比起 TLS1.2 而言更清晰、更快速、更安全的现代化安全协议。TLS 1.2 有两点问题：1. 包括 POODLE 在内的众多可行漏洞；2. 性能低。为了改善这些问题，IETF 在 2013 年，着手 TLS 1.3 的讨论，主要改进：",{"type":396,"tag":539,"props":984,"children":985},{},[986,991,996,1001],{"type":396,"tag":543,"props":987,"children":988},{},[989],{"type":402,"value":990},"减少握手时间",{"type":396,"tag":543,"props":992,"children":993},{},[994],{"type":402,"value":995},"加密更多的握手",{"type":396,"tag":543,"props":997,"children":998},{},[999],{"type":402,"value":1000},"改善跨协议攻击的弹性",{"type":396,"tag":543,"props":1002,"children":1003},{},[1004],{"type":402,"value":1005},"删除遗留特征",{"type":396,"tag":411,"props":1007,"children":1008},{},[1009],{"type":402,"value":1010},"经过 4 年的争论。最终，形成了 RFC 8446 规范。",{"type":396,"tag":1012,"props":1013,"children":1015},"h3",{"id":1014},"tls-12-的缺陷",[1016],{"type":402,"value":1017},"TLS 1.2 的缺陷",{"type":396,"tag":411,"props":1019,"children":1020},{},[1021],{"type":402,"value":1022},"TLS 1.2 使用的加密方式有缺陷。其中，非对称加密有如 RSA 和 Diffie-Hellman 协议。",{"type":396,"tag":404,"props":1024,"children":1026},{"id":1025},"rsa",[1027],{"type":402,"value":1028},"RSA",{"type":396,"tag":411,"props":1030,"children":1031},{},[1032],{"type":396,"tag":420,"props":1033,"children":1036},{"alt":1034,"src":1035},"RSA Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082140.png?w=70",[],{"type":396,"tag":411,"props":1038,"children":1039},{},[1040,1042,1049],{"type":402,"value":1041},"RSA 不保证前向保密。即，如果有人记录了加密对话，然后获取服务器的 RSA 私钥，他们可以将对话解密。而攻击者可能只需 ",{"type":396,"tag":448,"props":1043,"children":1046},{"href":1044,"rel":1045},"https://www.wikiwand.com/zh/%E5%BF%83%E8%84%8F%E5%87%BA%E8%A1%80%E6%BC%8F%E6%B4%9E",[452],[1047],{"type":402,"value":1048},"HeartBleed 漏洞",{"type":402,"value":1050},"（缓存区过读）就可以顺利窃取私钥。",{"type":396,"tag":404,"props":1052,"children":1054},{"id":1053},"diffie-hellman",[1055],{"type":402,"value":1056},"Diffie-Hellman",{"type":396,"tag":411,"props":1058,"children":1059},{},[1060],{"type":396,"tag":420,"props":1061,"children":1063},{"alt":1056,"src":1062},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082812.png?w=70",[],{"type":396,"tag":411,"props":1065,"children":1066},{},[1067],{"type":402,"value":1068},"Diffie-Hellman 的缺陷在于，协议的某些参数不安全，且能够被操纵设置；不安全的参数能导致加密更容易被破解。",{"type":396,"tag":404,"props":1070,"children":1072},{"id":1071},"对称加密缺陷",[1073],{"type":402,"value":1071},{"type":396,"tag":411,"props":1075,"children":1076},{},[1077],{"type":402,"value":1078},"TLS 1.2 的对称加密使用的 CBC 模式密码和流式密码也有缺陷。",{"type":396,"tag":404,"props":1080,"children":1082},{"id":1081},"downgrade-attack",[1083],{"type":402,"value":1084},"Downgrade Attack",{"type":396,"tag":411,"props":1086,"children":1087},{},[1088],{"type":402,"value":1089},"由于 TLS 1.2 握手协商密钥的部分没有加密。所以中间人可以拦截客户端的请求，选择发送方和接收方都支持的弱密码，伪造请求。",{"type":396,"tag":411,"props":1091,"children":1092},{},[1093],{"type":396,"tag":420,"props":1094,"children":1096},{"alt":1084,"src":1095},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807090034.png?w=70",[],{"type":396,"tag":1012,"props":1098,"children":1100},{"id":1099},"_0-rtt",[1101],{"type":402,"value":1102},"0-RTT",{"type":396,"tag":411,"props":1104,"children":1105},{},[1106],{"type":402,"value":1107},"TLS 1.3 中，通讯双方可以得到一个“恢复主密钥”的密钥，用于从中断的连接中直接恢复通讯。但是有被拦截导致重放攻击的风险。",{"type":396,"tag":411,"props":1109,"children":1110},{},[1111],{"type":396,"tag":420,"props":1112,"children":1115},{"alt":1113,"src":1114},"0-RTT 重放攻击","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807081140.png?w=70",[],{"type":396,"tag":397,"props":1117,"children":1119},{"id":1118},"https",[1120],{"type":402,"value":1121},"HTTPS",{"type":396,"tag":1012,"props":1123,"children":1125},{"id":1124},"links",[1126],{"type":402,"value":1127},"Links",{"type":396,"tag":411,"props":1129,"children":1130},{},[1131,1132],{"type":402,"value":446},{"type":396,"tag":448,"props":1133,"children":1136},{"href":1134,"rel":1135},"https://zhuanlan.zhihu.com/p/26682342",[452],[1137],{"type":402,"value":1138},"深入理解 HTTPS 原理、过程与实践",{"type":396,"tag":404,"props":1140,"children":1142},{"id":1141},"https-的握手过程是怎样的",[1143],{"type":402,"value":1144},"HTTPS 的握手过程是怎样的？",{"type":396,"tag":411,"props":1146,"children":1147},{},[1148],{"type":402,"value":1149},"总的来说是一个非对称加密+对称加密的过程。客户端通过一个随机数加上服务器的公钥来生成预主密钥，然后双方再通过 Client Hello 和 Server Hello 时的两个随机数生成会话密钥。生成预主密钥的过程是非对称加密的，因为只有服务端用私钥才能解得客户端的随机数。而之后使用会话密钥主要是出于性能考虑。",{"type":396,"tag":411,"props":1151,"children":1152},{},[1153],{"type":396,"tag":420,"props":1154,"children":1157},{"alt":1155,"src":1156},"HTTPS 握手过程","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620024738.png",[],{"type":396,"tag":404,"props":1159,"children":1161},{"id":1160},"ca-怎么解决中间人问题",[1162],{"type":402,"value":1163},"CA 怎么解决中间人问题？",{"type":396,"tag":411,"props":1165,"children":1166},{},[1167],{"type":402,"value":1168},"CA 主要是用来防范服务器端返回 Server Hello 前就和客户端提供了假的公钥。CA 是一个可信的第三方机构，客户端想要服务器的公钥，需要从 CA 获得。CA 返回公钥以及数字签名。客户端只要拿到公钥后根据 CA 公钥对其计算获得摘要，再将摘要和签名进行对比，就能知道是否拿到了可信的公钥。",{"type":396,"tag":411,"props":1170,"children":1171},{},[1172,1173],{"type":402,"value":562},{"type":396,"tag":448,"props":1174,"children":1177},{"href":1175,"rel":1176},"https://www.jianshu.com/p/9de06222793b",[452],[1178],{"type":402,"value":1179},"HTTPS CA 原理",{"type":396,"tag":404,"props":1181,"children":1183},{"id":1182},"数字签名是什么",[1184],{"type":402,"value":1185},"数字签名是什么？",{"type":396,"tag":411,"props":1187,"children":1188},{},[1189],{"type":402,"value":1190},"数字签名是只有信息发送者才能产生的一段文本，信息接收方可以通过签名计算出接受到的文本是否经过了修改。如果我要发送 A，我会用私钥将 A 进行加密获得 B，并把 A 和 B 同时发送过去。B 就是数字签名。因为我的公钥是公开的，所以接受方可以通过使用我的公钥去计算 A，如果获得和 B 一致的结果，那么说明信息没有被篡改。",{"type":396,"tag":397,"props":1192,"children":1194},{"id":1193},"攻防",[1195],{"type":402,"value":1193},{"type":396,"tag":404,"props":1197,"children":1199},{"id":1198},"https-降级攻击的原理是什么",[1200],{"type":402,"value":1201},"HTTPS 降级攻击的原理是什么？",{"type":396,"tag":411,"props":1203,"children":1204},{},[1205],{"type":402,"value":1206},"客服端与服务端协商加密协议的过程当中，如果攻击者拦截了客户端（或操控客户端）并代替它向服务端协商使用仅支持有漏洞的协议。如果服务端同意了，那么建立连接后，攻击者就能使用该协议的已知漏洞的破解手段，去破解通讯内容了。",{"type":396,"tag":404,"props":1208,"children":1210},{"id":1209},"syn-攻击的基本原理是什么",[1211],{"type":402,"value":1212},"SYN 攻击的基本原理是什么？",{"type":396,"tag":411,"props":1214,"children":1215},{},[1216,1218,1225],{"type":402,"value":1217},"SYN 洪水攻击是 DDOS 攻击中最常见的攻击类型。攻击者向服务器发送大量伪造的 TCP 连接请求，而源 IP 是伪造的。由于服务器收不到伪造源回应的 ACK 数据包，就会不断重发。一般应对方式是：减少重发次数、使用 ",{"type":396,"tag":448,"props":1219,"children":1222},{"href":1220,"rel":1221},"https://baike.baidu.com/item/syn%20cookie/6898884?fr=aladdin",[452],[1223],{"type":402,"value":1224},"SYN Cookie",{"type":402,"value":1226},"、增加 backlog 队列长度、限制 SYN 并发数。",{"type":396,"tag":411,"props":1228,"children":1229},{},[1230,1231],{"type":402,"value":562},{"type":396,"tag":448,"props":1232,"children":1235},{"href":1233,"rel":1234},"https://www.qycn.com/about/hd/2049.html",[452],[1236],{"type":402,"value":1237},"服务器遭到 SYN 攻击该如何处理呢？",{"type":396,"tag":404,"props":1239,"children":1241},{"id":1240},"请求头加-csrf-参数为什么能防止-csrf-攻击",[1242],{"type":402,"value":1243},"请求头加 CSRF 参数为什么能防止 CSRF 攻击？",{"type":396,"tag":411,"props":1245,"children":1246},{},[1247],{"type":402,"value":1248},"跨站请求伪造是攻击者通过在钓鱼站点发起被钓网站请求（如图片地址），以达到攻击目的。防御方式一般有两种：",{"type":396,"tag":539,"props":1250,"children":1251},{},[1252,1257],{"type":396,"tag":543,"props":1253,"children":1254},{},[1255],{"type":402,"value":1256},"使用 SameSite Cookie，禁用第三方 Cookie",{"type":396,"tag":543,"props":1258,"children":1259},{},[1260],{"type":402,"value":1261},"在请求头中加入 CSRF Token，这样攻击者使用钓鱼站点发起请求时，由于不能设置请求头，所以请求在服务端会被拒绝",{"type":396,"tag":397,"props":1263,"children":1265},{"id":1264},"cdn",[1266],{"type":402,"value":1267},"CDN",{"type":396,"tag":404,"props":1269,"children":1271},{"id":1270},"cdn-有什么好处",[1272],{"type":402,"value":1273},"CDN 有什么好处？",{"type":396,"tag":411,"props":1275,"children":1276},{},[1277],{"type":402,"value":1278},"对页面加载而言，CDN 可以减少请求时间、突破浏览器同域的 TCP 并发数、节约 Cookie 带宽。",{"type":396,"tag":397,"props":1280,"children":1282},{"id":1281},"浏览器",[1283],{"type":402,"value":1281},{"type":396,"tag":404,"props":1285,"children":1287},{"id":1286},"url-由哪些部分组成",[1288],{"type":402,"value":1289},"URL 由哪些部分组成？",{"type":396,"tag":411,"props":1291,"children":1292},{},[1293],{"type":402,"value":1294},"协议头、域名、端口、目录、文件名（index.html）、页面锚、参数。",{"type":396,"tag":404,"props":1296,"children":1298},{"id":1297},"怎么做跨域",[1299],{"type":402,"value":1300},"怎么做跨域？",{"type":396,"tag":411,"props":1302,"children":1303},{},[1304],{"type":402,"value":1305},"用代理服务器、CORS、iFrame 或者 WebSocket 都可以。",{"type":396,"tag":411,"props":1307,"children":1308},{},[1309],{"type":402,"value":1310},"服务器可以忽略同源限制；WebSocket 和 CORS 不受同源影响；iFrame 需要浏览器加载一个跨域页面，然后和主页面用 postMessage 或者哈希监听的方式通信，让 iFrame 中的脚本代替主页面发送请求。",{"type":396,"tag":404,"props":1312,"children":1314},{"id":1313},"正向代理和反向代理的区别是",[1315],{"type":402,"value":1316},"正向代理和反向代理的区别是？",{"type":396,"tag":411,"props":1318,"children":1319},{},[1320],{"type":402,"value":1321},"正向代理为用户服务，反向代理为服务器服务，分别对应“VPN”和“负载均衡”的概念。",{"type":396,"tag":404,"props":1323,"children":1325},{"id":1324},"cors-运作流程是怎样的",[1326],{"type":402,"value":1327},"CORS 运作流程是怎样的？",{"type":396,"tag":411,"props":1329,"children":1330},{},[1331],{"type":402,"value":1332},"CORS 即跨域资源共享机制。浏览器在请求资源前通过携带 Origin 字段的 OPTIONS 请求向服务器索取设置有 Access-Control-Allow-Methods、Access-Control-Allow-Headers、Access-Control-Allow-Origin 的响应。在得到响应的允许后再继续发送请求。",{"type":396,"tag":404,"props":1334,"children":1336},{"id":1335},"什么是私有网络请求攻击",[1337],{"type":402,"value":1338},"什么是私有网络请求攻击？",{"type":396,"tag":411,"props":1340,"children":1341},{},[1342],{"type":402,"value":1343},"在内网域名向 localhost 发起请求就算一种私有网络请求。而恶意代码通过向比浏览器当前浏览页面的域名 IP 更私密的 IP 地址发起请求，以达到获取信息或攻击手段的方式就是私有网络请求攻击。",{"type":396,"tag":411,"props":1345,"children":1346},{},[1347,1349,1356,1358],{"type":402,"value":1348},"自 Chrome 96 后， Chrome 开始实施私有网络控制策略，需要部署以下两个请求头以解除控制：",{"type":396,"tag":1350,"props":1351,"children":1353},"code",{"className":1352},[],[1354],{"type":402,"value":1355},"Access-Control-Request-Private-Network: true",{"type":402,"value":1357}," 和 ",{"type":396,"tag":1350,"props":1359,"children":1361},{"className":1360},[],[1362],{"type":402,"value":1363},"Access-Control-Allow-Private-Network: true",{"type":396,"tag":411,"props":1365,"children":1366},{},[1367,1368],{"type":402,"value":562},{"type":396,"tag":448,"props":1369,"children":1372},{"href":1370,"rel":1371},"https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&mid=2247491913&idx=1&sn=2bb0a28358c02a8ec1832781205df72c&chksm=c2e11462f5969d74fac277131e1ba8c417ec86754b2f1b2dbe8e238ca27d5c2eaebe602ec803&token=1851580176&lang=zh_CN&scene=21#wechat_redirect",[452],[1373],{"type":402,"value":1374},"Chrome 重大更新，CORS 增加了两个新的请求头？ |  code 秘密花园",{"type":396,"tag":397,"props":1376,"children":1378},{"id":1377},"阅读更多",[1379],{"type":402,"value":1377},{"type":396,"tag":539,"props":1381,"children":1382},{},[1383],{"type":396,"tag":543,"props":1384,"children":1385},{},[1386],{"type":396,"tag":448,"props":1387,"children":1390},{"href":1388,"rel":1389},"https://juejin.im/post/6844903518826921998",[452],[1391],{"type":402,"value":1392},"为你的网站带上帽子 | 使用 helmet 保护 Express 应用",{"title":389,"searchDepth":1394,"depth":1394,"links":1395},2,[1396,1397,1398,1399,1400,1405,1408,1409,1410,1411],{"id":399,"depth":1394,"text":399},{"id":427,"depth":1394,"text":430},{"id":572,"depth":1394,"text":575},{"id":606,"depth":1394,"text":609},{"id":963,"depth":1394,"text":966,"children":1401},[1402,1404],{"id":1014,"depth":1403,"text":1017},3,{"id":1099,"depth":1403,"text":1102},{"id":1118,"depth":1394,"text":1121,"children":1406},[1407],{"id":1124,"depth":1403,"text":1127},{"id":1193,"depth":1394,"text":1193},{"id":1264,"depth":1394,"text":1267},{"id":1281,"depth":1394,"text":1281},{"id":1377,"depth":1394,"text":1377},"markdown","content:6.maps:_computer:network.md","content","6.maps/_computer/network.md","6.maps/_computer/network","md",[1419,1423],{"_path":1420,"title":1421,"description":1422},"/maps/_computer/computer","Computer Mind Map","计算机基础知识导图，包含进制转换、数字电路设计、原码反码补码等核心概念的详细解析。",{"_path":1424,"title":1425,"description":1426},"/maps/_computer/security","Security Mind Map","网络安全知识导图，包含 XSS、CSRF、CSS Exfiltration 等常见攻击手段的原理分析和防范措施。",1742040366407]