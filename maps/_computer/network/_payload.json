[{"data":1,"prerenderedAt":1436},["ShallowReactive",2],{"navigation":3,"/maps/_computer/network":393,"/maps/_computer/network-surround":1427},[4,35,86,105,132,138,144,150,387],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"数字化转型","/gists/digital-transformation",{"title":205,"_path":206},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":208,"_path":209},"正则表达式","/gists/eegex",{"title":211,"_path":212},"Emoji","/gists/emoji",{"title":214,"_path":215},"工程","/gists/engineering",{"title":217,"_path":218},"熵","/gists/entropy",{"title":220,"_path":221},"Environment","/gists/environment",{"title":223,"_path":224},"Erlang","/gists/erlang",{"title":226,"_path":227},"逃离塔克夫","/gists/escape-from-tarkov",{"title":229,"_path":230},"ESNext (ES6-ES11)","/gists/esnext",{"title":232,"_path":233},"Eval！","/gists/eval",{"title":235,"_path":236},"Flutter","/gists/flutter",{"title":238,"_path":239},"字体","/gists/font",{"title":241,"_path":242},"JS 函数式编程","/gists/functional",{"title":244,"_path":245},"游戏化","/gists/gamification",{"title":247,"_path":248},"Google C++ Standard","/gists/google-cpp-standard",{"title":250,"_path":251},"双向链接完全体","/gists/graph",{"title":253,"_path":254},"Hardwares","/gists/hardwares",{"title":256,"_path":257},"哈希冲突","/gists/hash-collision",{"title":259,"_path":260},"信息设计","/gists/information-design",{"title":262,"_path":263},"InstantPage","/gists/instant.page",{"title":265,"_path":266},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":268,"_path":269},"KVStore","/gists/key-value-db",{"title":271,"_path":272},"Kubernetes","/gists/kubernetes",{"title":274,"_path":275},"Makefile","/gists/makefile",{"title":277,"_path":278},"Markdown Inline Style","/gists/markdown-nice",{"title":280,"_path":281},"小程序","/gists/miniapp",{"title":283,"_path":284},"减小页面快照体积","/gists/minify-html",{"title":286,"_path":287},"mklink","/gists/mklink",{"title":289,"_path":290},"Mock","/gists/mock",{"title":292,"_path":293},"多人协作系统","/gists/multiplayer",{"title":295,"_path":296},"多端应用","/gists/multy-end-app",{"title":298,"_path":299},"神经科学","/gists/neuroscience",{"title":301,"_path":302},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":304,"_path":305},"PInvoke","/gists/pinvoke",{"title":307,"_path":308},"像素","/gists/pixel",{"title":310,"_path":311},"PowerShell","/gists/powershell",{"title":313,"_path":314},"量子","/gists/quantum",{"title":316,"_path":317},"保持好奇心","/gists/questions",{"title":319,"_path":320},"React Native","/gists/react-native",{"title":322,"_path":323},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":325,"_path":326},"SEO","/gists/seo",{"title":328,"_path":329},"Shader","/gists/shader",{"title":331,"_path":332},"Shape Up","/gists/shape-up",{"title":334,"_path":335},"睡觉","/gists/sleep",{"title":337,"_path":338},"记录奇怪的问题","/gists/solved",{"title":340,"_path":341},"States","/gists/states",{"title":343,"_path":344},"Storage","/gists/storage",{"title":346,"_path":347},"音视频流处理","/gists/stream-cli",{"title":349,"_path":350},"Symbol","/gists/symbol",{"title":352,"_path":353},"系统论","/gists/systems-theory",{"title":355,"_path":356},"Taro","/gists/taro",{"title":358,"_path":359},"任务切片","/gists/task-slice",{"title":361,"_path":362},"技术偏好","/gists/tech-dudge",{"title":364,"_path":365},"Untitled","/gists/untitled",{"title":367,"_path":368},"可变字体","/gists/variable-font",{"title":370,"_path":371},"视觉错觉","/gists/visual-illusion",{"title":373,"_path":374},"SS(SSR)","/gists/vpn",{"title":376,"_path":377},"VS Code 插件开发","/gists/vscode-plugin",{"title":379,"_path":380},"Web Components","/gists/web-components",{"title":382,"_path":383},"Windows","/gists/windows",{"title":385,"_path":386},"查缺补漏","/gists/wrong",{"title":388,"_path":389,"children":390},"我 / About","/hire",[391],{"title":392,"_path":389},"📬 技术简历",{"_path":394,"_dir":395,"_draft":396,"_partial":397,"_locale":398,"title":399,"description":400,"body":401,"_type":1421,"_id":1422,"_source":1423,"_file":1424,"_stem":1425,"_extension":1426},"/maps/_computer/network","_computer",false,true,"","计算机网络","计算机网络基础知识全览，包含 TCP/IP、HTTP、HTTPS、TLS 等协议的详细解析，以及网络安全、CDN、跨域等实践内容。",{"type":402,"children":403,"toc":1402},"root",[404,412,419,425,434,440,446,451,465,471,479,485,490,498,504,509,517,523,528,536,542,547,567,579,585,590,613,619,625,783,789,794,799,804,810,815,821,826,834,844,850,855,861,866,872,877,900,905,910,915,920,940,946,951,959,970,976,987,992,1015,1020,1027,1032,1038,1046,1060,1066,1073,1078,1083,1088,1094,1099,1106,1112,1117,1125,1131,1137,1148,1154,1159,1167,1173,1178,1189,1195,1200,1205,1211,1216,1222,1236,1247,1253,1258,1271,1277,1283,1288,1293,1299,1304,1310,1315,1320,1326,1331,1337,1342,1348,1353,1373,1384,1389],{"type":405,"tag":406,"props":407,"children":409},"element","h2",{"id":408},"网络模型",[410],{"type":411,"value":408},"text",{"type":405,"tag":413,"props":414,"children":416},"h4",{"id":415},"各网络层有哪些代表性的协议",[417],{"type":411,"value":418},"各网络层有哪些代表性的协议？",{"type":405,"tag":420,"props":421,"children":422},"p",{},[423],{"type":411,"value":424},"应用层有 HTTP、DNS、FTP，表示层有 SSL、TSL、base64、MIDI、JPEG，会话层有 xxx，传输层则是 TCP、UDP，网络层有 IP，数据链路层 xxx，物理层有以太网协议。",{"type":405,"tag":420,"props":426,"children":427},{},[428],{"type":405,"tag":429,"props":430,"children":433},"img",{"alt":431,"src":432},"OSI 参考模型","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620033400.png?type=win11&w=60",[],{"type":405,"tag":406,"props":435,"children":437},{"id":436},"tcp",[438],{"type":411,"value":439},"TCP",{"type":405,"tag":413,"props":441,"children":443},{"id":442},"tcpip-是什么",[444],{"type":411,"value":445},"TCP/IP 是什么？",{"type":405,"tag":420,"props":447,"children":448},{},[449],{"type":411,"value":450},"TCP/IP 协议是一个协议集。TCP/IP 包括了应用层、传输层、网络层、数据链路层和网络层，是一个四层体系结构。各层有代表性的协议有 HTTP、DNS，TLS，IP 和 xxx。",{"type":405,"tag":420,"props":452,"children":453},{},[454,456],{"type":411,"value":455},"TODO，",{"type":405,"tag":457,"props":458,"children":462},"a",{"href":459,"rel":460},"https://developer.51cto.com/article/597961.html",[461],"nofollow",[463],{"type":411,"value":464},"终于有人能把 TCP/IP 协议讲的明明白白了！",{"type":405,"tag":413,"props":466,"children":468},{"id":467},"tcp-header-由哪些部分组成",[469],{"type":411,"value":470},"TCP Header 由哪些部分组成？",{"type":405,"tag":420,"props":472,"children":473},{},[474],{"type":405,"tag":429,"props":475,"children":478},{"alt":476,"src":477},"TCP Header","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731153510.png?type=win11&w=60",[],{"type":405,"tag":413,"props":480,"children":482},{"id":481},"三次握手具体过程",[483],{"type":411,"value":484},"三次握手具体过程？",{"type":405,"tag":420,"props":486,"children":487},{},[488],{"type":411,"value":489},"从三次握手图示可以发现，仅仅是连接的建立，就需要大量时间消耗。客户端想发送数据，至少要等 1.5xRTT；服务端想发送数据，至少要 2xRTT。",{"type":405,"tag":420,"props":491,"children":492},{},[493],{"type":405,"tag":429,"props":494,"children":497},{"alt":495,"src":496},"Three-way Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731162450.png?type=win11&w=40",[],{"type":405,"tag":413,"props":499,"children":501},{"id":500},"tcp-fast-open-如何优化握手过程",[502],{"type":411,"value":503},"TCP Fast Open 如何优化握手过程？",{"type":405,"tag":420,"props":505,"children":506},{},[507],{"type":411,"value":508},"TFO 规定服务器第一次返回 ACK 时，携带一个用以标志客户端身份的 Cookie。后续客户端发送 SYN 建立连接的时候带上这个 Cookie，服务端确认身份之后，就能直接返回数据了（节约了 1.5 RTT）。",{"type":405,"tag":420,"props":510,"children":511},{},[512],{"type":405,"tag":429,"props":513,"children":516},{"alt":514,"src":515},"TFO","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807054219.png?type=win11&w=80",[],{"type":405,"tag":413,"props":518,"children":520},{"id":519},"四次挥手的具体过程",[521],{"type":411,"value":522},"四次挥手的具体过程？",{"type":405,"tag":420,"props":524,"children":525},{},[526],{"type":411,"value":527},"四次挥手如下所示。为什么建立连接要三次，而断开连接要四次请求呢？从图中可以看出，接收到 FIN 请求时，服务端立即返回 ACK 表示收到请求，但是要等自己这边剩余一些工作（可能时未发送完的请求内容）完成之后，才会返回 FIN。",{"type":405,"tag":420,"props":529,"children":530},{},[531],{"type":405,"tag":429,"props":532,"children":535},{"alt":533,"src":534},"Four-way Wavehand","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200731165331.png?type=win11&w=40",[],{"type":405,"tag":413,"props":537,"children":539},{"id":538},"tcp-链接中如果某端出故障了会怎么办",[540],{"type":411,"value":541},"TCP 链接中如果某端出故障了会怎么办？",{"type":405,"tag":420,"props":543,"children":544},{},[545],{"type":411,"value":546},"会通过计时器来保证链接的稳定性。",{"type":405,"tag":548,"props":549,"children":550},"ul",{},[551,557,562],{"type":405,"tag":552,"props":553,"children":554},"li",{},[555],{"type":411,"value":556},"超时重传计时器：对方没有返回 ACK 时，发送方需要重新发送数据。一般计时器的时间选择 2RTT。",{"type":405,"tag":552,"props":558,"children":559},{},[560],{"type":411,"value":561},"2MSL 定时器：主动断开连接的一方发送 FIN 后需要等待 2MSL 时间。因为如果服务端没有收到最后一个 ACK，它将重新发送 FIN。",{"type":405,"tag":552,"props":563,"children":564},{},[565],{"type":411,"value":566},"保活计时器：每当接收方收到消息，将计时器重设为两小时。计时器到期时，每 75s 发送一次探测报文段，如果连续 10 次都没有被响应则断开连接。",{"type":405,"tag":420,"props":568,"children":569},{},[570,572],{"type":411,"value":571},"见：",{"type":405,"tag":457,"props":573,"children":576},{"href":574,"rel":575},"https://www.cnblogs.com/13224ACMer/p/6616960.html",[461],[577],{"type":411,"value":578},"TCP 四种计时器",{"type":405,"tag":406,"props":580,"children":582},{"id":581},"udp",[583],{"type":411,"value":584},"UDP",{"type":405,"tag":420,"props":586,"children":587},{},[588],{"type":411,"value":589},"UDP，即 User Datagram Protocol 用户数据报协议。数据报不保证信息的传达是否到位，所以 UDP 也被普遍称作 Unreliable Datagram Protocol。",{"type":405,"tag":548,"props":591,"children":592},{},[593,598,603,608],{"type":405,"tag":552,"props":594,"children":595},{},[596],{"type":411,"value":597},"不保证消息交付",{"type":405,"tag":552,"props":599,"children":600},{},[601],{"type":411,"value":602},"不保证交付顺序",{"type":405,"tag":552,"props":604,"children":605},{},[606],{"type":411,"value":607},"不跟踪连接状态",{"type":405,"tag":552,"props":609,"children":610},{},[611],{"type":411,"value":612},"不需要拥塞控制",{"type":405,"tag":406,"props":614,"children":616},{"id":615},"http",[617],{"type":411,"value":618},"HTTP",{"type":405,"tag":413,"props":620,"children":622},{"id":621},"有哪些常见的状态码",[623],{"type":411,"value":624},"有哪些常见的状态码？",{"type":405,"tag":626,"props":627,"children":628},"table",{},[629,648],{"type":405,"tag":630,"props":631,"children":632},"thead",{},[633],{"type":405,"tag":634,"props":635,"children":636},"tr",{},[637,643],{"type":405,"tag":638,"props":639,"children":640},"th",{},[641],{"type":411,"value":642},"状态码",{"type":405,"tag":638,"props":644,"children":645},{},[646],{"type":411,"value":647},"描述",{"type":405,"tag":649,"props":650,"children":651},"tbody",{},[652,666,679,692,705,718,731,744,757,770],{"type":405,"tag":634,"props":653,"children":654},{},[655,661],{"type":405,"tag":656,"props":657,"children":658},"td",{},[659],{"type":411,"value":660},"200",{"type":405,"tag":656,"props":662,"children":663},{},[664],{"type":411,"value":665},"成功并返回数据",{"type":405,"tag":634,"props":667,"children":668},{},[669,674],{"type":405,"tag":656,"props":670,"children":671},{},[672],{"type":411,"value":673},"301",{"type":405,"tag":656,"props":675,"children":676},{},[677],{"type":411,"value":678},"永久转移，重定向",{"type":405,"tag":634,"props":680,"children":681},{},[682,687],{"type":405,"tag":656,"props":683,"children":684},{},[685],{"type":411,"value":686},"302",{"type":405,"tag":656,"props":688,"children":689},{},[690],{"type":411,"value":691},"临时重定向",{"type":405,"tag":634,"props":693,"children":694},{},[695,700],{"type":405,"tag":656,"props":696,"children":697},{},[698],{"type":411,"value":699},"303",{"type":405,"tag":656,"props":701,"children":702},{},[703],{"type":411,"value":704},"临时重定向（客户端必须使用 Get 方法重新请求资源）",{"type":405,"tag":634,"props":706,"children":707},{},[708,713],{"type":405,"tag":656,"props":709,"children":710},{},[711],{"type":411,"value":712},"304",{"type":405,"tag":656,"props":714,"children":715},{},[716],{"type":411,"value":717},"资源未修改，可使用缓存",{"type":405,"tag":634,"props":719,"children":720},{},[721,726],{"type":405,"tag":656,"props":722,"children":723},{},[724],{"type":411,"value":725},"400",{"type":405,"tag":656,"props":727,"children":728},{},[729],{"type":411,"value":730},"请求语法错误",{"type":405,"tag":634,"props":732,"children":733},{},[734,739],{"type":405,"tag":656,"props":735,"children":736},{},[737],{"type":411,"value":738},"401",{"type":405,"tag":656,"props":740,"children":741},{},[742],{"type":411,"value":743},"要求身份认证",{"type":405,"tag":634,"props":745,"children":746},{},[747,752],{"type":405,"tag":656,"props":748,"children":749},{},[750],{"type":411,"value":751},"403",{"type":405,"tag":656,"props":753,"children":754},{},[755],{"type":411,"value":756},"请求拒绝",{"type":405,"tag":634,"props":758,"children":759},{},[760,765],{"type":405,"tag":656,"props":761,"children":762},{},[763],{"type":411,"value":764},"404",{"type":405,"tag":656,"props":766,"children":767},{},[768],{"type":411,"value":769},"资源不存在",{"type":405,"tag":634,"props":771,"children":772},{},[773,778],{"type":405,"tag":656,"props":774,"children":775},{},[776],{"type":411,"value":777},"500",{"type":405,"tag":656,"props":779,"children":780},{},[781],{"type":411,"value":782},"服务器错误",{"type":405,"tag":413,"props":784,"children":786},{"id":785},"http-报文由哪些部分组成",[787],{"type":411,"value":788},"HTTP 报文由哪些部分组成？",{"type":405,"tag":420,"props":790,"children":791},{},[792],{"type":411,"value":793},"请求报文由请求行、请求头、空行和请求数据组成，相应报文类似。",{"type":405,"tag":420,"props":795,"children":796},{},[797],{"type":411,"value":798},"请求报文实例：",{"type":405,"tag":420,"props":800,"children":801},{},[802],{"type":411,"value":803},"相应报文实例：",{"type":405,"tag":413,"props":805,"children":807},{"id":806},"http-11-对比-http-10-做了哪些改进",[808],{"type":411,"value":809},"HTTP 1.1 对比 HTTP 1.0 做了哪些改进？",{"type":405,"tag":420,"props":811,"children":812},{},[813],{"type":411,"value":814},"长链接（keep-alive）、断点续传、HTTP 缓存。",{"type":405,"tag":413,"props":816,"children":818},{"id":817},"http-缓存分几种",[819],{"type":411,"value":820},"HTTP 缓存分几种？",{"type":405,"tag":420,"props":822,"children":823},{},[824],{"type":411,"value":825},"分强缓存和协商缓存：Expires、Cache-Control、Last-Modified、Etag。",{"type":405,"tag":420,"props":827,"children":828},{},[829],{"type":405,"tag":429,"props":830,"children":833},{"alt":831,"src":832},"HTTP Cache","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220630205606.png?type=win11&w=60",[],{"type":405,"tag":420,"props":835,"children":836},{},[837,838],{"type":411,"value":455},{"type":405,"tag":457,"props":839,"children":842},{"href":840,"rel":841},"https://imweb.io/topic/55c6f9bac222e3af6ce235b9",[461],[843],{"type":411,"value":840},{"type":405,"tag":413,"props":845,"children":847},{"id":846},"强缓存和协商缓存的主要区别是",[848],{"type":411,"value":849},"强缓存和协商缓存的主要区别是？",{"type":405,"tag":420,"props":851,"children":852},{},[853],{"type":411,"value":854},"强缓存是一但匹配就无条件使用缓存，而面对协商缓存的资源，浏览器需要向服务端发请求，对比资源是否变更，并依靠服务端的响应来判断是否使用缓存。如果资源同时应用了强缓存和协商缓存，那么浏览器优先使用强缓存。",{"type":405,"tag":413,"props":856,"children":858},{"id":857},"no-store-和-no-cache-的区别",[859],{"type":411,"value":860},"no-store 和 no-cache 的区别？",{"type":405,"tag":420,"props":862,"children":863},{},[864],{"type":411,"value":865},"no-store 告诉客户端每次都在服务器取最新的资源。no-cache 也要求每次都要重新请求，但服务器可能返回 304 告诉客户端资源未改变。",{"type":405,"tag":413,"props":867,"children":869},{"id":868},"http2-的改进在哪里",[870],{"type":411,"value":871},"HTTP2 的改进在哪里？",{"type":405,"tag":420,"props":873,"children":874},{},[875],{"type":411,"value":876},"HTTP/2 主要包含以下几个方面的变化，显著增强了性能，也增加了安全性。",{"type":405,"tag":548,"props":878,"children":879},{},[880,885,890,895],{"type":405,"tag":552,"props":881,"children":882},{},[883],{"type":411,"value":884},"二进制分帧层",{"type":405,"tag":552,"props":886,"children":887},{},[888],{"type":411,"value":889},"头部压缩（HPACK、Huffman）",{"type":405,"tag":552,"props":891,"children":892},{},[893],{"type":411,"value":894},"多路复用",{"type":405,"tag":552,"props":896,"children":897},{},[898],{"type":411,"value":899},"服务端推送",{"type":405,"tag":420,"props":901,"children":902},{},[903],{"type":411,"value":904},"二进制分帧层是在应用层（HTTP）和传输层（TCP、UDP）之间新增的一个层级关系。二进制分帧层将传输的 HTTP 消息分割为更小的帧，并采用二进制格式编码传输。帧分为头部帧和消息帧。这意味着 HTTP/2 请求的所有内容都是二进制传输的。",{"type":405,"tag":420,"props":906,"children":907},{},[908],{"type":411,"value":909},"HTTP 头部被转为帧之前，会通过维护一个表结构，通过序号记录已发送的键值对。这是一种索引算法，叫 HPACK。具体的表结构分静态表和动态表，静态表给一些常用的头部标号了号，直接使用就好，动态表则是根据发送的内容动态确定的记号。需要被发送具体内容会被哈夫曼编码以减小体积。",{"type":405,"tag":420,"props":911,"children":912},{},[913],{"type":411,"value":914},"多路复用是指，多个 HTTP 请求可以在同一个 TCP 连接中并行传输。这和 HTTP 1.1 的 Connection：keep-alive 不同，keep-alive 虽然复用 TCP 连接，但是多个响应之间是串行的。",{"type":405,"tag":420,"props":916,"children":917},{},[918],{"type":411,"value":919},"建立连接后，双方通过交换 SETTING 帧，以确认双向的流量窗口控制大小。然后开始发送帧。帧可以在一个连接中根据优先级发送，或是被乱序发送，响应方也能乱序接收。由于流是双向的，只要服务端 SETTING 帧设置的流量窗口大小不为 0，服务端可按照同源策略推送资源给客户端。",{"type":405,"tag":420,"props":921,"children":922},{},[923,924,931,933],{"type":411,"value":571},{"type":405,"tag":457,"props":925,"children":928},{"href":926,"rel":927},"https://coffe1891.gitbook.io/frontend-hard-mode-interview/1/1.5.3",[461],[929],{"type":411,"value":930},"HTTP/2 和 HTTP/1.X 相比的新特性",{"type":411,"value":932},"、",{"type":405,"tag":457,"props":934,"children":937},{"href":935,"rel":936},"https://blog.csdn.net/gaoliang1719/article/details/106346201/",[461],[938],{"type":411,"value":939},"HTTP/2 协议之头部压缩",{"type":405,"tag":413,"props":941,"children":943},{"id":942},"http3-相比-http2-改变了什么东西",[944],{"type":411,"value":945},"HTTP3 相比 HTTP2 改变了什么东西？",{"type":405,"tag":420,"props":947,"children":948},{},[949],{"type":411,"value":950},"HTTP3 使用全新的传输层协议 QUIC，实现了 H2 中的流式传输（HTTP2）、多路复用（TCP）、流量控制（TCP）以及可靠性（TCP）等内容，其网络层协议应用的是 UDP 而不是 TCP，本意是用来解决 TCP 建立链接需要  1.5 RTT 延迟的问题。这种改善在移动端更加有效。",{"type":405,"tag":420,"props":952,"children":953},{},[954],{"type":405,"tag":429,"props":955,"children":958},{"alt":956,"src":957},"HTTP3 VS HTTP2 VS HTTP1.1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220621003527.png?type=draw&w=80",[],{"type":405,"tag":420,"props":960,"children":961},{},[962,963],{"type":411,"value":571},{"type":405,"tag":457,"props":964,"children":967},{"href":965,"rel":966},"https://mp.weixin.qq.com/s/40YBEWZBaHakDuRuh27fMg",[461],[968],{"type":411,"value":969},"HTTP3 发布了！",{"type":405,"tag":406,"props":971,"children":973},{"id":972},"tls",[974],{"type":411,"value":975},"TLS",{"type":405,"tag":420,"props":977,"children":978},{},[979,980],{"type":411,"value":455},{"type":405,"tag":457,"props":981,"children":984},{"href":982,"rel":983},"https://www.oschina.net/translate/rfc-8446-aka-tls-1-3",[461],[985],{"type":411,"value":986},"详细介绍 RFC 8446（即 TLS 1.3）",{"type":405,"tag":420,"props":988,"children":989},{},[990],{"type":411,"value":991},"TLS 是一种混合式加密系统，同时使用对称加密和非对称加密。它使用非对称加密以加密对称加密所需的密钥。它有多个版本。TLS 1.3 是一种比起 TLS1.2 而言更清晰、更快速、更安全的现代化安全协议。TLS 1.2 有两点问题：1. 包括 POODLE 在内的众多可行漏洞；2. 性能低。为了改善这些问题，IETF 在 2013 年，着手 TLS 1.3 的讨论，主要改进：",{"type":405,"tag":548,"props":993,"children":994},{},[995,1000,1005,1010],{"type":405,"tag":552,"props":996,"children":997},{},[998],{"type":411,"value":999},"减少握手时间",{"type":405,"tag":552,"props":1001,"children":1002},{},[1003],{"type":411,"value":1004},"加密更多的握手",{"type":405,"tag":552,"props":1006,"children":1007},{},[1008],{"type":411,"value":1009},"改善跨协议攻击的弹性",{"type":405,"tag":552,"props":1011,"children":1012},{},[1013],{"type":411,"value":1014},"删除遗留特征",{"type":405,"tag":420,"props":1016,"children":1017},{},[1018],{"type":411,"value":1019},"经过 4 年的争论。最终，形成了 RFC 8446 规范。",{"type":405,"tag":1021,"props":1022,"children":1024},"h3",{"id":1023},"tls-12-的缺陷",[1025],{"type":411,"value":1026},"TLS 1.2 的缺陷",{"type":405,"tag":420,"props":1028,"children":1029},{},[1030],{"type":411,"value":1031},"TLS 1.2 使用的加密方式有缺陷。其中，非对称加密有如 RSA 和 Diffie-Hellman 协议。",{"type":405,"tag":413,"props":1033,"children":1035},{"id":1034},"rsa",[1036],{"type":411,"value":1037},"RSA",{"type":405,"tag":420,"props":1039,"children":1040},{},[1041],{"type":405,"tag":429,"props":1042,"children":1045},{"alt":1043,"src":1044},"RSA Handshake","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082140.png?w=70",[],{"type":405,"tag":420,"props":1047,"children":1048},{},[1049,1051,1058],{"type":411,"value":1050},"RSA 不保证前向保密。即，如果有人记录了加密对话，然后获取服务器的 RSA 私钥，他们可以将对话解密。而攻击者可能只需 ",{"type":405,"tag":457,"props":1052,"children":1055},{"href":1053,"rel":1054},"https://www.wikiwand.com/zh/%E5%BF%83%E8%84%8F%E5%87%BA%E8%A1%80%E6%BC%8F%E6%B4%9E",[461],[1056],{"type":411,"value":1057},"HeartBleed 漏洞",{"type":411,"value":1059},"（缓存区过读）就可以顺利窃取私钥。",{"type":405,"tag":413,"props":1061,"children":1063},{"id":1062},"diffie-hellman",[1064],{"type":411,"value":1065},"Diffie-Hellman",{"type":405,"tag":420,"props":1067,"children":1068},{},[1069],{"type":405,"tag":429,"props":1070,"children":1072},{"alt":1065,"src":1071},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807082812.png?w=70",[],{"type":405,"tag":420,"props":1074,"children":1075},{},[1076],{"type":411,"value":1077},"Diffie-Hellman 的缺陷在于，协议的某些参数不安全，且能够被操纵设置；不安全的参数能导致加密更容易被破解。",{"type":405,"tag":413,"props":1079,"children":1081},{"id":1080},"对称加密缺陷",[1082],{"type":411,"value":1080},{"type":405,"tag":420,"props":1084,"children":1085},{},[1086],{"type":411,"value":1087},"TLS 1.2 的对称加密使用的 CBC 模式密码和流式密码也有缺陷。",{"type":405,"tag":413,"props":1089,"children":1091},{"id":1090},"downgrade-attack",[1092],{"type":411,"value":1093},"Downgrade Attack",{"type":405,"tag":420,"props":1095,"children":1096},{},[1097],{"type":411,"value":1098},"由于 TLS 1.2 握手协商密钥的部分没有加密。所以中间人可以拦截客户端的请求，选择发送方和接收方都支持的弱密码，伪造请求。",{"type":405,"tag":420,"props":1100,"children":1101},{},[1102],{"type":405,"tag":429,"props":1103,"children":1105},{"alt":1093,"src":1104},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807090034.png?w=70",[],{"type":405,"tag":1021,"props":1107,"children":1109},{"id":1108},"_0-rtt",[1110],{"type":411,"value":1111},"0-RTT",{"type":405,"tag":420,"props":1113,"children":1114},{},[1115],{"type":411,"value":1116},"TLS 1.3 中，通讯双方可以得到一个“恢复主密钥”的密钥，用于从中断的连接中直接恢复通讯。但是有被拦截导致重放攻击的风险。",{"type":405,"tag":420,"props":1118,"children":1119},{},[1120],{"type":405,"tag":429,"props":1121,"children":1124},{"alt":1122,"src":1123},"0-RTT 重放攻击","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20200807081140.png?w=70",[],{"type":405,"tag":406,"props":1126,"children":1128},{"id":1127},"https",[1129],{"type":411,"value":1130},"HTTPS",{"type":405,"tag":1021,"props":1132,"children":1134},{"id":1133},"links",[1135],{"type":411,"value":1136},"Links",{"type":405,"tag":420,"props":1138,"children":1139},{},[1140,1141],{"type":411,"value":455},{"type":405,"tag":457,"props":1142,"children":1145},{"href":1143,"rel":1144},"https://zhuanlan.zhihu.com/p/26682342",[461],[1146],{"type":411,"value":1147},"深入理解 HTTPS 原理、过程与实践",{"type":405,"tag":413,"props":1149,"children":1151},{"id":1150},"https-的握手过程是怎样的",[1152],{"type":411,"value":1153},"HTTPS 的握手过程是怎样的？",{"type":405,"tag":420,"props":1155,"children":1156},{},[1157],{"type":411,"value":1158},"总的来说是一个非对称加密+对称加密的过程。客户端通过一个随机数加上服务器的公钥来生成预主密钥，然后双方再通过 Client Hello 和 Server Hello 时的两个随机数生成会话密钥。生成预主密钥的过程是非对称加密的，因为只有服务端用私钥才能解得客户端的随机数。而之后使用会话密钥主要是出于性能考虑。",{"type":405,"tag":420,"props":1160,"children":1161},{},[1162],{"type":405,"tag":429,"props":1163,"children":1166},{"alt":1164,"src":1165},"HTTPS 握手过程","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220620024738.png",[],{"type":405,"tag":413,"props":1168,"children":1170},{"id":1169},"ca-怎么解决中间人问题",[1171],{"type":411,"value":1172},"CA 怎么解决中间人问题？",{"type":405,"tag":420,"props":1174,"children":1175},{},[1176],{"type":411,"value":1177},"CA 主要是用来防范服务器端返回 Server Hello 前就和客户端提供了假的公钥。CA 是一个可信的第三方机构，客户端想要服务器的公钥，需要从 CA 获得。CA 返回公钥以及数字签名。客户端只要拿到公钥后根据 CA 公钥对其计算获得摘要，再将摘要和签名进行对比，就能知道是否拿到了可信的公钥。",{"type":405,"tag":420,"props":1179,"children":1180},{},[1181,1182],{"type":411,"value":571},{"type":405,"tag":457,"props":1183,"children":1186},{"href":1184,"rel":1185},"https://www.jianshu.com/p/9de06222793b",[461],[1187],{"type":411,"value":1188},"HTTPS CA 原理",{"type":405,"tag":413,"props":1190,"children":1192},{"id":1191},"数字签名是什么",[1193],{"type":411,"value":1194},"数字签名是什么？",{"type":405,"tag":420,"props":1196,"children":1197},{},[1198],{"type":411,"value":1199},"数字签名是只有信息发送者才能产生的一段文本，信息接收方可以通过签名计算出接受到的文本是否经过了修改。如果我要发送 A，我会用私钥将 A 进行加密获得 B，并把 A 和 B 同时发送过去。B 就是数字签名。因为我的公钥是公开的，所以接受方可以通过使用我的公钥去计算 A，如果获得和 B 一致的结果，那么说明信息没有被篡改。",{"type":405,"tag":406,"props":1201,"children":1203},{"id":1202},"攻防",[1204],{"type":411,"value":1202},{"type":405,"tag":413,"props":1206,"children":1208},{"id":1207},"https-降级攻击的原理是什么",[1209],{"type":411,"value":1210},"HTTPS 降级攻击的原理是什么？",{"type":405,"tag":420,"props":1212,"children":1213},{},[1214],{"type":411,"value":1215},"客服端与服务端协商加密协议的过程当中，如果攻击者拦截了客户端（或操控客户端）并代替它向服务端协商使用仅支持有漏洞的协议。如果服务端同意了，那么建立连接后，攻击者就能使用该协议的已知漏洞的破解手段，去破解通讯内容了。",{"type":405,"tag":413,"props":1217,"children":1219},{"id":1218},"syn-攻击的基本原理是什么",[1220],{"type":411,"value":1221},"SYN 攻击的基本原理是什么？",{"type":405,"tag":420,"props":1223,"children":1224},{},[1225,1227,1234],{"type":411,"value":1226},"SYN 洪水攻击是 DDOS 攻击中最常见的攻击类型。攻击者向服务器发送大量伪造的 TCP 连接请求，而源 IP 是伪造的。由于服务器收不到伪造源回应的 ACK 数据包，就会不断重发。一般应对方式是：减少重发次数、使用 ",{"type":405,"tag":457,"props":1228,"children":1231},{"href":1229,"rel":1230},"https://baike.baidu.com/item/syn%20cookie/6898884?fr=aladdin",[461],[1232],{"type":411,"value":1233},"SYN Cookie",{"type":411,"value":1235},"、增加 backlog 队列长度、限制 SYN 并发数。",{"type":405,"tag":420,"props":1237,"children":1238},{},[1239,1240],{"type":411,"value":571},{"type":405,"tag":457,"props":1241,"children":1244},{"href":1242,"rel":1243},"https://www.qycn.com/about/hd/2049.html",[461],[1245],{"type":411,"value":1246},"服务器遭到 SYN 攻击该如何处理呢？",{"type":405,"tag":413,"props":1248,"children":1250},{"id":1249},"请求头加-csrf-参数为什么能防止-csrf-攻击",[1251],{"type":411,"value":1252},"请求头加 CSRF 参数为什么能防止 CSRF 攻击？",{"type":405,"tag":420,"props":1254,"children":1255},{},[1256],{"type":411,"value":1257},"跨站请求伪造是攻击者通过在钓鱼站点发起被钓网站请求（如图片地址），以达到攻击目的。防御方式一般有两种：",{"type":405,"tag":548,"props":1259,"children":1260},{},[1261,1266],{"type":405,"tag":552,"props":1262,"children":1263},{},[1264],{"type":411,"value":1265},"使用 SameSite Cookie，禁用第三方 Cookie",{"type":405,"tag":552,"props":1267,"children":1268},{},[1269],{"type":411,"value":1270},"在请求头中加入 CSRF Token，这样攻击者使用钓鱼站点发起请求时，由于不能设置请求头，所以请求在服务端会被拒绝",{"type":405,"tag":406,"props":1272,"children":1274},{"id":1273},"cdn",[1275],{"type":411,"value":1276},"CDN",{"type":405,"tag":413,"props":1278,"children":1280},{"id":1279},"cdn-有什么好处",[1281],{"type":411,"value":1282},"CDN 有什么好处？",{"type":405,"tag":420,"props":1284,"children":1285},{},[1286],{"type":411,"value":1287},"对页面加载而言，CDN 可以减少请求时间、突破浏览器同域的 TCP 并发数、节约 Cookie 带宽。",{"type":405,"tag":406,"props":1289,"children":1291},{"id":1290},"浏览器",[1292],{"type":411,"value":1290},{"type":405,"tag":413,"props":1294,"children":1296},{"id":1295},"url-由哪些部分组成",[1297],{"type":411,"value":1298},"URL 由哪些部分组成？",{"type":405,"tag":420,"props":1300,"children":1301},{},[1302],{"type":411,"value":1303},"协议头、域名、端口、目录、文件名（index.html）、页面锚、参数。",{"type":405,"tag":413,"props":1305,"children":1307},{"id":1306},"怎么做跨域",[1308],{"type":411,"value":1309},"怎么做跨域？",{"type":405,"tag":420,"props":1311,"children":1312},{},[1313],{"type":411,"value":1314},"用代理服务器、CORS、iFrame 或者 WebSocket 都可以。",{"type":405,"tag":420,"props":1316,"children":1317},{},[1318],{"type":411,"value":1319},"服务器可以忽略同源限制；WebSocket 和 CORS 不受同源影响；iFrame 需要浏览器加载一个跨域页面，然后和主页面用 postMessage 或者哈希监听的方式通信，让 iFrame 中的脚本代替主页面发送请求。",{"type":405,"tag":413,"props":1321,"children":1323},{"id":1322},"正向代理和反向代理的区别是",[1324],{"type":411,"value":1325},"正向代理和反向代理的区别是？",{"type":405,"tag":420,"props":1327,"children":1328},{},[1329],{"type":411,"value":1330},"正向代理为用户服务，反向代理为服务器服务，分别对应“VPN”和“负载均衡”的概念。",{"type":405,"tag":413,"props":1332,"children":1334},{"id":1333},"cors-运作流程是怎样的",[1335],{"type":411,"value":1336},"CORS 运作流程是怎样的？",{"type":405,"tag":420,"props":1338,"children":1339},{},[1340],{"type":411,"value":1341},"CORS 即跨域资源共享机制。浏览器在请求资源前通过携带 Origin 字段的 OPTIONS 请求向服务器索取设置有 Access-Control-Allow-Methods、Access-Control-Allow-Headers、Access-Control-Allow-Origin 的响应。在得到响应的允许后再继续发送请求。",{"type":405,"tag":413,"props":1343,"children":1345},{"id":1344},"什么是私有网络请求攻击",[1346],{"type":411,"value":1347},"什么是私有网络请求攻击？",{"type":405,"tag":420,"props":1349,"children":1350},{},[1351],{"type":411,"value":1352},"在内网域名向 localhost 发起请求就算一种私有网络请求。而恶意代码通过向比浏览器当前浏览页面的域名 IP 更私密的 IP 地址发起请求，以达到获取信息或攻击手段的方式就是私有网络请求攻击。",{"type":405,"tag":420,"props":1354,"children":1355},{},[1356,1358,1365,1367],{"type":411,"value":1357},"自 Chrome 96 后， Chrome 开始实施私有网络控制策略，需要部署以下两个请求头以解除控制：",{"type":405,"tag":1359,"props":1360,"children":1362},"code",{"className":1361},[],[1363],{"type":411,"value":1364},"Access-Control-Request-Private-Network: true",{"type":411,"value":1366}," 和 ",{"type":405,"tag":1359,"props":1368,"children":1370},{"className":1369},[],[1371],{"type":411,"value":1372},"Access-Control-Allow-Private-Network: true",{"type":405,"tag":420,"props":1374,"children":1375},{},[1376,1377],{"type":411,"value":571},{"type":405,"tag":457,"props":1378,"children":1381},{"href":1379,"rel":1380},"https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&mid=2247491913&idx=1&sn=2bb0a28358c02a8ec1832781205df72c&chksm=c2e11462f5969d74fac277131e1ba8c417ec86754b2f1b2dbe8e238ca27d5c2eaebe602ec803&token=1851580176&lang=zh_CN&scene=21#wechat_redirect",[461],[1382],{"type":411,"value":1383},"Chrome 重大更新，CORS 增加了两个新的请求头？ |  code 秘密花园",{"type":405,"tag":406,"props":1385,"children":1387},{"id":1386},"阅读更多",[1388],{"type":411,"value":1386},{"type":405,"tag":548,"props":1390,"children":1391},{},[1392],{"type":405,"tag":552,"props":1393,"children":1394},{},[1395],{"type":405,"tag":457,"props":1396,"children":1399},{"href":1397,"rel":1398},"https://juejin.im/post/6844903518826921998",[461],[1400],{"type":411,"value":1401},"为你的网站带上帽子 | 使用 helmet 保护 Express 应用",{"title":398,"searchDepth":1403,"depth":1403,"links":1404},2,[1405,1406,1407,1408,1409,1414,1417,1418,1419,1420],{"id":408,"depth":1403,"text":408},{"id":436,"depth":1403,"text":439},{"id":581,"depth":1403,"text":584},{"id":615,"depth":1403,"text":618},{"id":972,"depth":1403,"text":975,"children":1410},[1411,1413],{"id":1023,"depth":1412,"text":1026},3,{"id":1108,"depth":1412,"text":1111},{"id":1127,"depth":1403,"text":1130,"children":1415},[1416],{"id":1133,"depth":1412,"text":1136},{"id":1202,"depth":1403,"text":1202},{"id":1273,"depth":1403,"text":1276},{"id":1290,"depth":1403,"text":1290},{"id":1386,"depth":1403,"text":1386},"markdown","content:6.maps:_computer:network.md","content","6.maps/_computer/network.md","6.maps/_computer/network","md",[1428,1432],{"_path":1429,"title":1430,"description":1431},"/maps/_computer/computer","Computer Mind Map","计算机基础知识导图，包含进制转换、数字电路设计、原码反码补码等核心概念的详细解析。",{"_path":1433,"title":1434,"description":1435},"/maps/_computer/security","Security Mind Map","网络安全知识导图，包含 XSS、CSRF、CSS Exfiltration 等常见攻击手段的原理分析和防范措施。",1741604955266]