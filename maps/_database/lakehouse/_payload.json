[{"data":1,"prerenderedAt":1023},["ShallowReactive",2],{"navigation":3,"/maps/_database/lakehouse":155,"/maps/_database/lakehouse-surround":1014},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":156,"_dir":157,"_draft":158,"_partial":159,"_locale":160,"title":161,"description":162,"body":163,"_type":1008,"_id":1009,"_source":1010,"_file":1011,"_stem":1012,"_extension":1013},"/maps/_database/lakehouse","_database",false,true,"","Lakehouse","一种新型的数据管理架构，它结合了数据湖（Data Lake）和数据仓库（Data Warehouse）的优点，为现代数据分析和管理提供了一个统一的平台。",{"type":164,"children":165,"toc":1005},"root",[166,175,290,296,479,485,502,764,770,775,793,799,804,809,815,939,944],{"type":167,"tag":168,"props":169,"children":171},"element","h4",{"id":170},"lakehouse-架构的关键特性",[172],{"type":173,"value":174},"text","Lakehouse 架构的关键特性？",{"type":167,"tag":176,"props":177,"children":178},"ol",{},[179,205,222,239,256,273],{"type":167,"tag":180,"props":181,"children":182},"li",{},[183,189,191],{"type":167,"tag":184,"props":185,"children":186},"strong",{},[187],{"type":173,"value":188},"单一存储层",{"type":173,"value":190},"：\n",{"type":167,"tag":192,"props":193,"children":194},"ul",{},[195,200],{"type":167,"tag":180,"props":196,"children":197},{},[198],{"type":173,"value":199},"将所有类型的数据（结构化、半结构化、非结构化）存储在一个单一层中（通常是云存储）。",{"type":167,"tag":180,"props":201,"children":202},{},[203],{"type":173,"value":204},"这种方式消除了数据在数据湖和数据仓库之间来回移动的需要。",{"type":167,"tag":180,"props":206,"children":207},{},[208,213,214],{"type":167,"tag":184,"props":209,"children":210},{},[211],{"type":173,"value":212},"支持事务",{"type":173,"value":190},{"type":167,"tag":192,"props":215,"children":216},{},[217],{"type":167,"tag":180,"props":218,"children":219},{},[220],{"type":173,"value":221},"Lakehouse 支持类似数据库的事务性操作，例如 ACID（Atomicity, Consistency, Isolation, Durability），确保数据的一致性和可靠性。",{"type":167,"tag":180,"props":223,"children":224},{},[225,230,231],{"type":167,"tag":184,"props":226,"children":227},{},[228],{"type":173,"value":229},"灵活性和可扩展性",{"type":173,"value":190},{"type":167,"tag":192,"props":232,"children":233},{},[234],{"type":167,"tag":180,"props":235,"children":236},{},[237],{"type":173,"value":238},"Lakehouse 能够存储各种不同格式的数据，同时具备数据湖的存储可扩展性，适合大规模数据处理。",{"type":167,"tag":180,"props":240,"children":241},{},[242,247,248],{"type":167,"tag":184,"props":243,"children":244},{},[245],{"type":173,"value":246},"治理与元数据管理",{"type":173,"value":190},{"type":167,"tag":192,"props":249,"children":250},{},[251],{"type":167,"tag":180,"props":252,"children":253},{},[254],{"type":173,"value":255},"提供良好的数据治理能力（例如访问控制、审计、安全性）和元数据支持，方便用户管理数据资产。",{"type":167,"tag":180,"props":257,"children":258},{},[259,264,265],{"type":167,"tag":184,"props":260,"children":261},{},[262],{"type":173,"value":263},"高性能计算",{"type":173,"value":190},{"type":167,"tag":192,"props":266,"children":267},{},[268],{"type":167,"tag":180,"props":269,"children":270},{},[271],{"type":173,"value":272},"引入了优化的查询引擎，可以快速处理大规模数据，满足实时数据分析的需求。",{"type":167,"tag":180,"props":274,"children":275},{},[276,281,282],{"type":167,"tag":184,"props":277,"children":278},{},[279],{"type":173,"value":280},"支持多种数据工作负载",{"type":173,"value":190},{"type":167,"tag":192,"props":283,"children":284},{},[285],{"type":167,"tag":180,"props":286,"children":287},{},[288],{"type":173,"value":289},"同时支持流式数据（Streaming）和批量数据（Batch）处理，满足数据科学、机器学习、商业智能等不同场景的需要。",{"type":167,"tag":168,"props":291,"children":293},{"id":292},"对比-lakehouse数据湖和数据仓库",[294],{"type":173,"value":295},"对比 Lakehouse、数据湖和数据仓库？",{"type":167,"tag":297,"props":298,"children":299},"table",{},[300,340],{"type":167,"tag":301,"props":302,"children":303},"thead",{},[304],{"type":167,"tag":305,"props":306,"children":307},"tr",{},[308,317,325,333],{"type":167,"tag":309,"props":310,"children":311},"th",{},[312],{"type":167,"tag":184,"props":313,"children":314},{},[315],{"type":173,"value":316},"特性",{"type":167,"tag":309,"props":318,"children":319},{},[320],{"type":167,"tag":184,"props":321,"children":322},{},[323],{"type":173,"value":324},"数据湖",{"type":167,"tag":309,"props":326,"children":327},{},[328],{"type":167,"tag":184,"props":329,"children":330},{},[331],{"type":173,"value":332},"数据仓库",{"type":167,"tag":309,"props":334,"children":335},{},[336],{"type":167,"tag":184,"props":337,"children":338},{},[339],{"type":173,"value":161},{"type":167,"tag":341,"props":342,"children":343},"tbody",{},[344,368,390,413,436,457],{"type":167,"tag":305,"props":345,"children":346},{},[347,353,358,363],{"type":167,"tag":348,"props":349,"children":350},"td",{},[351],{"type":173,"value":352},"数据类型",{"type":167,"tag":348,"props":354,"children":355},{},[356],{"type":173,"value":357},"结构化、半结构化、非结构化",{"type":167,"tag":348,"props":359,"children":360},{},[361],{"type":173,"value":362},"主要是结构化数据",{"type":167,"tag":348,"props":364,"children":365},{},[366],{"type":173,"value":367},"结构化及非结构化数据",{"type":167,"tag":305,"props":369,"children":370},{},[371,376,381,386],{"type":167,"tag":348,"props":372,"children":373},{},[374],{"type":173,"value":375},"存储/计算分离",{"type":167,"tag":348,"props":377,"children":378},{},[379],{"type":173,"value":380},"是",{"type":167,"tag":348,"props":382,"children":383},{},[384],{"type":173,"value":385},"部分支持",{"type":167,"tag":348,"props":387,"children":388},{},[389],{"type":173,"value":380},{"type":167,"tag":305,"props":391,"children":392},{},[393,398,403,408],{"type":167,"tag":348,"props":394,"children":395},{},[396],{"type":173,"value":397},"成本",{"type":167,"tag":348,"props":399,"children":400},{},[401],{"type":173,"value":402},"成本相对较低",{"type":167,"tag":348,"props":404,"children":405},{},[406],{"type":173,"value":407},"成本较高",{"type":167,"tag":348,"props":409,"children":410},{},[411],{"type":173,"value":412},"成本适中",{"type":167,"tag":305,"props":414,"children":415},{},[416,421,426,431],{"type":167,"tag":348,"props":417,"children":418},{},[419],{"type":173,"value":420},"查询性能",{"type":167,"tag":348,"props":422,"children":423},{},[424],{"type":173,"value":425},"较差",{"type":167,"tag":348,"props":427,"children":428},{},[429],{"type":173,"value":430},"很高",{"type":167,"tag":348,"props":432,"children":433},{},[434],{"type":173,"value":435},"较高",{"type":167,"tag":305,"props":437,"children":438},{},[439,444,448,453],{"type":167,"tag":348,"props":440,"children":441},{},[442],{"type":173,"value":443},"数据治理",{"type":167,"tag":348,"props":445,"children":446},{},[447],{"type":173,"value":425},{"type":167,"tag":348,"props":449,"children":450},{},[451],{"type":173,"value":452},"很好",{"type":167,"tag":348,"props":454,"children":455},{},[456],{"type":173,"value":452},{"type":167,"tag":305,"props":458,"children":459},{},[460,465,470,475],{"type":167,"tag":348,"props":461,"children":462},{},[463],{"type":173,"value":464},"扩展性",{"type":167,"tag":348,"props":466,"children":467},{},[468],{"type":173,"value":469},"高",{"type":167,"tag":348,"props":471,"children":472},{},[473],{"type":173,"value":474},"中等",{"type":167,"tag":348,"props":476,"children":477},{},[478],{"type":173,"value":469},{"type":167,"tag":168,"props":480,"children":482},{"id":481},"什么是-open-format",[483],{"type":173,"value":484},"什么是 Open Format？",{"type":167,"tag":486,"props":487,"children":488},"p",{},[489,491,500],{"type":173,"value":490},"Open Format 指的是一种开放的数据存储格式，具有以下特点：它不依赖于特定的供应商或专有技术，能够在不同的数据平台、工具和系统之间实现互操作性和兼容性。常见的 Open Format 示例包括 ",{"type":167,"tag":492,"props":493,"children":497},"a",{"href":494,"rel":495},"https://paimon.apache.org/",[496],"nofollow",[498],{"type":173,"value":499},"Paimon",{"type":173,"value":501},"、Apache Parquet、Apache ORC 和 Avro，这些格式通常被广泛用于支持现代的数据架构，例如数据湖和 Lakehouse。作为开放标准，Open Format 需要保证标准化、平台无关、易于扩展和高性能等特性。",{"type":167,"tag":297,"props":503,"children":504},{},[505,548],{"type":167,"tag":301,"props":506,"children":507},{},[508],{"type":167,"tag":305,"props":509,"children":510},{},[511,516,524,532,540],{"type":167,"tag":309,"props":512,"children":513},{},[514],{"type":173,"value":515},"格式 / 特性",{"type":167,"tag":309,"props":517,"children":518},{},[519],{"type":167,"tag":184,"props":520,"children":521},{},[522],{"type":173,"value":523},"Apache Paimon",{"type":167,"tag":309,"props":525,"children":526},{},[527],{"type":167,"tag":184,"props":528,"children":529},{},[530],{"type":173,"value":531},"Apache Parquet",{"type":167,"tag":309,"props":533,"children":534},{},[535],{"type":167,"tag":184,"props":536,"children":537},{},[538],{"type":173,"value":539},"Apache ORC",{"type":167,"tag":309,"props":541,"children":542},{},[543],{"type":167,"tag":184,"props":544,"children":545},{},[546],{"type":173,"value":547},"Avro",{"type":167,"tag":341,"props":549,"children":550},{},[551,581,612,642,672,703,733],{"type":167,"tag":305,"props":552,"children":553},{},[554,562,567,572,576],{"type":167,"tag":348,"props":555,"children":556},{},[557],{"type":167,"tag":184,"props":558,"children":559},{},[560],{"type":173,"value":561},"存储方式",{"type":167,"tag":348,"props":563,"children":564},{},[565],{"type":173,"value":566},"表格式 （基于文件存储 + 索引）",{"type":167,"tag":348,"props":568,"children":569},{},[570],{"type":173,"value":571},"列式文件存储",{"type":167,"tag":348,"props":573,"children":574},{},[575],{"type":173,"value":571},{"type":167,"tag":348,"props":577,"children":578},{},[579],{"type":173,"value":580},"行式文件存储",{"type":167,"tag":305,"props":582,"children":583},{},[584,592,597,602,607],{"type":167,"tag":348,"props":585,"children":586},{},[587],{"type":167,"tag":184,"props":588,"children":589},{},[590],{"type":173,"value":591},"主要应用场景",{"type":167,"tag":348,"props":593,"children":594},{},[595],{"type":173,"value":596},"流批一体、实时数据湖/数仓，ACID 表管理",{"type":167,"tag":348,"props":598,"children":599},{},[600],{"type":173,"value":601},"大数据离线分析、OLAP、云数仓",{"type":167,"tag":348,"props":603,"children":604},{},[605],{"type":173,"value":606},"Hive/Spark OLAP 场景",{"type":167,"tag":348,"props":608,"children":609},{},[610],{"type":173,"value":611},"分布式消息、跨服务数据交换",{"type":167,"tag":305,"props":613,"children":614},{},[615,623,628,633,637],{"type":167,"tag":348,"props":616,"children":617},{},[618],{"type":167,"tag":184,"props":619,"children":620},{},[621],{"type":173,"value":622},"ACID 事务 / 更新能力",{"type":167,"tag":348,"props":624,"children":625},{},[626],{"type":173,"value":627},"原生支持",{"type":167,"tag":348,"props":629,"children":630},{},[631],{"type":173,"value":632},"无（需第三方表格式或管理层）",{"type":167,"tag":348,"props":634,"children":635},{},[636],{"type":173,"value":632},{"type":167,"tag":348,"props":638,"children":639},{},[640],{"type":173,"value":641},"无（主要是行级序列化）",{"type":167,"tag":305,"props":643,"children":644},{},[645,653,658,663,667],{"type":167,"tag":348,"props":646,"children":647},{},[648],{"type":167,"tag":184,"props":649,"children":650},{},[651],{"type":173,"value":652},"实时/流式数据支持",{"type":167,"tag":348,"props":654,"children":655},{},[656],{"type":173,"value":657},"原生支持，对 Flink 有深度优化",{"type":167,"tag":348,"props":659,"children":660},{},[661],{"type":173,"value":662},"不直接支持，需要额外框架封装",{"type":167,"tag":348,"props":664,"children":665},{},[666],{"type":173,"value":662},{"type":167,"tag":348,"props":668,"children":669},{},[670],{"type":173,"value":671},"常用于消息流，但无列式存储优势",{"type":167,"tag":305,"props":673,"children":674},{},[675,683,688,693,698],{"type":167,"tag":348,"props":676,"children":677},{},[678],{"type":167,"tag":184,"props":679,"children":680},{},[681],{"type":173,"value":682},"生态与兼容性",{"type":167,"tag":348,"props":684,"children":685},{},[686],{"type":173,"value":687},"成熟度上升中，与 Flink 紧密结合",{"type":167,"tag":348,"props":689,"children":690},{},[691],{"type":173,"value":692},"非常成熟，Spark/Hive/Presto 等均支持",{"type":167,"tag":348,"props":694,"children":695},{},[696],{"type":173,"value":697},"主要在 Hadoop/Hive/Tez/Spark 等生态",{"type":167,"tag":348,"props":699,"children":700},{},[701],{"type":173,"value":702},"与 Kafka/Schema Registry 兼容性佳",{"type":167,"tag":305,"props":704,"children":705},{},[706,714,719,724,728],{"type":167,"tag":348,"props":707,"children":708},{},[709],{"type":167,"tag":184,"props":710,"children":711},{},[712],{"type":173,"value":713},"适用数据规模",{"type":167,"tag":348,"props":715,"children":716},{},[717],{"type":173,"value":718},"TB ~ PB 级，实时 & 离线融合",{"type":167,"tag":348,"props":720,"children":721},{},[722],{"type":173,"value":723},"TB ~ PB 级，主要面向批处理",{"type":167,"tag":348,"props":725,"children":726},{},[727],{"type":173,"value":723},{"type":167,"tag":348,"props":729,"children":730},{},[731],{"type":173,"value":732},"MB ~ GB 级，消息或中小规模数据",{"type":167,"tag":305,"props":734,"children":735},{},[736,744,749,754,759],{"type":167,"tag":348,"props":737,"children":738},{},[739],{"type":167,"tag":184,"props":740,"children":741},{},[742],{"type":173,"value":743},"谓词下推 / 索引",{"type":167,"tag":348,"props":745,"children":746},{},[747],{"type":173,"value":748},"内置索引机制，支持高并发写入",{"type":167,"tag":348,"props":750,"children":751},{},[752],{"type":173,"value":753},"支持列级统计与谓词下推",{"type":167,"tag":348,"props":755,"children":756},{},[757],{"type":173,"value":758},"强大的谓词下推与统计信息",{"type":167,"tag":348,"props":760,"children":761},{},[762],{"type":173,"value":763},"无列式谓词下推",{"type":167,"tag":168,"props":765,"children":767},{"id":766},"ai-agent-怎么利用-lakehouse-里面的数据",[768],{"type":173,"value":769},"AI Agent 怎么利用 Lakehouse 里面的数据？",{"type":167,"tag":486,"props":771,"children":772},{},[773],{"type":173,"value":774},"通用做法是多模态数据放到 OSS，结构化数据放数仓。但就链路细节上而言目前还不是很成熟。",{"type":167,"tag":192,"props":776,"children":777},{},[778,783,788],{"type":167,"tag":180,"props":779,"children":780},{},[781],{"type":173,"value":782},"对非结构化数据的量的占比较大，甚至达到 80% 以上。",{"type":167,"tag":180,"props":784,"children":785},{},[786],{"type":173,"value":787},"目前观察到的是对大量元数据实时的请求、解析受到挑战。探索方向仍处于聚合、预聚合和如何利用缓存。",{"type":167,"tag":180,"props":789,"children":790},{},[791],{"type":173,"value":792},"如何高效检索非结构化数据。",{"type":167,"tag":168,"props":794,"children":796},{"id":795},"paimon-logsystem-时数据新鲜度分析",[797],{"type":173,"value":798},"Paimon + LogSystem 时数据新鲜度分析？",{"type":167,"tag":486,"props":800,"children":801},{},[802],{"type":173,"value":803},"分钟级新鲜度。秒级新鲜度可选择 Kafka + 流存储。",{"type":167,"tag":486,"props":805,"children":806},{},[807],{"type":173,"value":808},"Paimon 在流式更新的同时，仍然保证数据一致性。由于实时不断写入小文件不可避免。Paimon 提供了小文件合并（Compaction）功能，用于周期性合并文件，避免数据查询时过多文件带来的延迟。在实际生产环境中，一般会设定一个合并周期（例如几分钟或更长），在保证最新数据能被快速查询的同时，又兼顾查询性能。如果要求极致的实时性，可适当缩短合并周期，但要平衡对写入性能和资源消耗的影响。",{"type":167,"tag":168,"props":810,"children":812},{"id":811},"湖仓常见的数据分层方式",[813],{"type":173,"value":814},"湖仓常见的数据分层方式？",{"type":167,"tag":176,"props":816,"children":817},{},[818,839,860,881,902,923],{"type":167,"tag":180,"props":819,"children":820},{},[821,826],{"type":167,"tag":184,"props":822,"children":823},{},[824],{"type":173,"value":825},"ODS（Operational Data Store） / 原始层",{"type":167,"tag":192,"props":827,"children":828},{},[829,834],{"type":167,"tag":180,"props":830,"children":831},{},[832],{"type":173,"value":833},"存放原始数据，通常与源系统保持一致或仅做简单的去重、清洗。",{"type":167,"tag":180,"props":835,"children":836},{},[837],{"type":173,"value":838},"特点：保持冗余和完整，保证数据的新鲜度，方便后续处理时“回溯”。",{"type":167,"tag":180,"props":840,"children":841},{},[842,847],{"type":167,"tag":184,"props":843,"children":844},{},[845],{"type":173,"value":846},"DWD（Data Warehouse Detail） / 明细层",{"type":167,"tag":192,"props":848,"children":849},{},[850,855],{"type":167,"tag":180,"props":851,"children":852},{},[853],{"type":173,"value":854},"在原始数据的基础上进行标准化、去重、关联、补充字段等处理，主要保持“明细级”的完整信息。",{"type":167,"tag":180,"props":856,"children":857},{},[858],{"type":173,"value":859},"特点：数据质量更高，表结构优化，适合详细分析或为上层聚合提供基础。",{"type":167,"tag":180,"props":861,"children":862},{},[863,868],{"type":167,"tag":184,"props":864,"children":865},{},[866],{"type":173,"value":867},"DWS（Data Warehouse Summary） / 汇总层",{"type":167,"tag":192,"props":869,"children":870},{},[871,876],{"type":167,"tag":180,"props":872,"children":873},{},[874],{"type":173,"value":875},"将明细层的数据按照一定主题或指标进行聚合、汇总。",{"type":167,"tag":180,"props":877,"children":878},{},[879],{"type":173,"value":880},"特点：进一步降低数据粒度，高效支持常见的聚合查询、指标分析等。",{"type":167,"tag":180,"props":882,"children":883},{},[884,889],{"type":167,"tag":184,"props":885,"children":886},{},[887],{"type":173,"value":888},"ADS（Application Data Store） / 应用层",{"type":167,"tag":192,"props":890,"children":891},{},[892,897],{"type":167,"tag":180,"props":893,"children":894},{},[895],{"type":173,"value":896},"面向特定应用或报表需求，对数据进行定制化加工，通常是对特定主题或指标的深度加工或计算结果。",{"type":167,"tag":180,"props":898,"children":899},{},[900],{"type":173,"value":901},"特点：业务访问速度快、查询逻辑简单，但一般复用性较低。",{"type":167,"tag":180,"props":903,"children":904},{},[905,910],{"type":167,"tag":184,"props":906,"children":907},{},[908],{"type":173,"value":909},"DIM（Dimension Table） / 维表层",{"type":167,"tag":192,"props":911,"children":912},{},[913,918],{"type":167,"tag":180,"props":914,"children":915},{},[916],{"type":173,"value":917},"存放企业常用的维度或参考表，例如用户信息维表、商品信息维表、地理区域维表等。",{"type":167,"tag":180,"props":919,"children":920},{},[921],{"type":173,"value":922},"特点：在各个层的 ETL 过程中被频繁连接或关联，用于补充或映射数据属性。",{"type":167,"tag":180,"props":924,"children":925},{},[926,931],{"type":167,"tag":184,"props":927,"children":928},{},[929],{"type":173,"value":930},"DM（Data Mart） / 数据集市层",{"type":167,"tag":192,"props":932,"children":933},{},[934],{"type":167,"tag":180,"props":935,"children":936},{},[937],{"type":173,"value":938},"有些企业还会将面向特定部门或特定业务主题的数据称为“数据集市”。与 ADS 类似，主要服务于某类精细化分析或应用。",{"type":167,"tag":486,"props":940,"children":941},{},[942],{"type":173,"value":943},"实际应用场景：",{"type":167,"tag":176,"props":945,"children":946},{},[947,963,984],{"type":167,"tag":180,"props":948,"children":949},{},[950,955],{"type":167,"tag":184,"props":951,"children":952},{},[953],{"type":173,"value":954},"离线分析与商业智能",{"type":167,"tag":192,"props":956,"children":957},{},[958],{"type":167,"tag":180,"props":959,"children":960},{},[961],{"type":173,"value":962},"通过 ODS → DWD → DWS → ADS 的方式，先保证原始数据的完整性，然后逐层进行聚合，在应用层直接服务于 BI 报表、管理仪表盘等。",{"type":167,"tag":180,"props":964,"children":965},{},[966,971],{"type":167,"tag":184,"props":967,"children":968},{},[969],{"type":173,"value":970},"实时数据分析",{"type":167,"tag":192,"props":972,"children":973},{},[974,979],{"type":167,"tag":180,"props":975,"children":976},{},[977],{"type":173,"value":978},"有些分层架构中会增加流数据的处理层（Streaming Layer），如存储在 Kafka、Flink 等流式平台，结合实时湖仓（如 Paimon、Kafka + Iceberg、Delta Lake 等）实现实时更新。",{"type":167,"tag":180,"props":980,"children":981},{},[982],{"type":173,"value":983},"分层思路同样适用，只不过在流处理场景下，数据处理频率更高、延迟更低。",{"type":167,"tag":180,"props":985,"children":986},{},[987,992],{"type":167,"tag":184,"props":988,"children":989},{},[990],{"type":173,"value":991},"数据挖掘与机器学习",{"type":167,"tag":192,"props":993,"children":994},{},[995,1000],{"type":167,"tag":180,"props":996,"children":997},{},[998],{"type":173,"value":999},"通过维度和事实数据的明细层（DWD）获取丰富、干净的特征数据，为机器学习训练集提供持续更新的基础；",{"type":167,"tag":180,"props":1001,"children":1002},{},[1003],{"type":173,"value":1004},"也可将挖掘后的结果或特征输出到应用层（ADS）或其他平台，供下游使用。",{"title":160,"searchDepth":1006,"depth":1006,"links":1007},2,[],"markdown","content:6.maps:_database:lakehouse.md","content","6.maps/_database/lakehouse.md","6.maps/_database/lakehouse","md",[1015,1019],{"_path":1016,"title":1017,"description":1018},"/maps/_cross-platform/taro","Taro","Taro 是一个多端开发解决方案，支持用 React/Vue/Nerv 等框架开发小程序、H5、App 等应用。",{"_path":1020,"title":1021,"description":1022},"/maps/_database/redis","Redis","About Redis",1742348692699]