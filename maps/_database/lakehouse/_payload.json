[{"data":1,"prerenderedAt":1029},["ShallowReactive",2],{"navigation":3,"/maps/_database/lakehouse":161,"/maps/_database/lakehouse-surround":1020},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":1014,"_id":1015,"_source":1016,"_file":1017,"_stem":1018,"_extension":1019},"/maps/_database/lakehouse","_database",false,true,"","Lakehouse","一种新型的数据管理架构，它结合了数据湖（Data Lake）和数据仓库（Data Warehouse）的优点，为现代数据分析和管理提供了一个统一的平台。",{"type":170,"children":171,"toc":1011},"root",[172,181,296,302,485,491,508,770,776,781,799,805,810,815,821,945,950],{"type":173,"tag":174,"props":175,"children":177},"element","h4",{"id":176},"lakehouse-架构的关键特性",[178],{"type":179,"value":180},"text","Lakehouse 架构的关键特性？",{"type":173,"tag":182,"props":183,"children":184},"ol",{},[185,211,228,245,262,279],{"type":173,"tag":186,"props":187,"children":188},"li",{},[189,195,197],{"type":173,"tag":190,"props":191,"children":192},"strong",{},[193],{"type":179,"value":194},"单一存储层",{"type":179,"value":196},"：\n",{"type":173,"tag":198,"props":199,"children":200},"ul",{},[201,206],{"type":173,"tag":186,"props":202,"children":203},{},[204],{"type":179,"value":205},"将所有类型的数据（结构化、半结构化、非结构化）存储在一个单一层中（通常是云存储）。",{"type":173,"tag":186,"props":207,"children":208},{},[209],{"type":179,"value":210},"这种方式消除了数据在数据湖和数据仓库之间来回移动的需要。",{"type":173,"tag":186,"props":212,"children":213},{},[214,219,220],{"type":173,"tag":190,"props":215,"children":216},{},[217],{"type":179,"value":218},"支持事务",{"type":179,"value":196},{"type":173,"tag":198,"props":221,"children":222},{},[223],{"type":173,"tag":186,"props":224,"children":225},{},[226],{"type":179,"value":227},"Lakehouse 支持类似数据库的事务性操作，例如 ACID（Atomicity, Consistency, Isolation, Durability），确保数据的一致性和可靠性。",{"type":173,"tag":186,"props":229,"children":230},{},[231,236,237],{"type":173,"tag":190,"props":232,"children":233},{},[234],{"type":179,"value":235},"灵活性和可扩展性",{"type":179,"value":196},{"type":173,"tag":198,"props":238,"children":239},{},[240],{"type":173,"tag":186,"props":241,"children":242},{},[243],{"type":179,"value":244},"Lakehouse 能够存储各种不同格式的数据，同时具备数据湖的存储可扩展性，适合大规模数据处理。",{"type":173,"tag":186,"props":246,"children":247},{},[248,253,254],{"type":173,"tag":190,"props":249,"children":250},{},[251],{"type":179,"value":252},"治理与元数据管理",{"type":179,"value":196},{"type":173,"tag":198,"props":255,"children":256},{},[257],{"type":173,"tag":186,"props":258,"children":259},{},[260],{"type":179,"value":261},"提供良好的数据治理能力（例如访问控制、审计、安全性）和元数据支持，方便用户管理数据资产。",{"type":173,"tag":186,"props":263,"children":264},{},[265,270,271],{"type":173,"tag":190,"props":266,"children":267},{},[268],{"type":179,"value":269},"高性能计算",{"type":179,"value":196},{"type":173,"tag":198,"props":272,"children":273},{},[274],{"type":173,"tag":186,"props":275,"children":276},{},[277],{"type":179,"value":278},"引入了优化的查询引擎，可以快速处理大规模数据，满足实时数据分析的需求。",{"type":173,"tag":186,"props":280,"children":281},{},[282,287,288],{"type":173,"tag":190,"props":283,"children":284},{},[285],{"type":179,"value":286},"支持多种数据工作负载",{"type":179,"value":196},{"type":173,"tag":198,"props":289,"children":290},{},[291],{"type":173,"tag":186,"props":292,"children":293},{},[294],{"type":179,"value":295},"同时支持流式数据（Streaming）和批量数据（Batch）处理，满足数据科学、机器学习、商业智能等不同场景的需要。",{"type":173,"tag":174,"props":297,"children":299},{"id":298},"对比-lakehouse数据湖和数据仓库",[300],{"type":179,"value":301},"对比 Lakehouse、数据湖和数据仓库？",{"type":173,"tag":303,"props":304,"children":305},"table",{},[306,346],{"type":173,"tag":307,"props":308,"children":309},"thead",{},[310],{"type":173,"tag":311,"props":312,"children":313},"tr",{},[314,323,331,339],{"type":173,"tag":315,"props":316,"children":317},"th",{},[318],{"type":173,"tag":190,"props":319,"children":320},{},[321],{"type":179,"value":322},"特性",{"type":173,"tag":315,"props":324,"children":325},{},[326],{"type":173,"tag":190,"props":327,"children":328},{},[329],{"type":179,"value":330},"数据湖",{"type":173,"tag":315,"props":332,"children":333},{},[334],{"type":173,"tag":190,"props":335,"children":336},{},[337],{"type":179,"value":338},"数据仓库",{"type":173,"tag":315,"props":340,"children":341},{},[342],{"type":173,"tag":190,"props":343,"children":344},{},[345],{"type":179,"value":167},{"type":173,"tag":347,"props":348,"children":349},"tbody",{},[350,374,396,419,442,463],{"type":173,"tag":311,"props":351,"children":352},{},[353,359,364,369],{"type":173,"tag":354,"props":355,"children":356},"td",{},[357],{"type":179,"value":358},"数据类型",{"type":173,"tag":354,"props":360,"children":361},{},[362],{"type":179,"value":363},"结构化、半结构化、非结构化",{"type":173,"tag":354,"props":365,"children":366},{},[367],{"type":179,"value":368},"主要是结构化数据",{"type":173,"tag":354,"props":370,"children":371},{},[372],{"type":179,"value":373},"结构化及非结构化数据",{"type":173,"tag":311,"props":375,"children":376},{},[377,382,387,392],{"type":173,"tag":354,"props":378,"children":379},{},[380],{"type":179,"value":381},"存储/计算分离",{"type":173,"tag":354,"props":383,"children":384},{},[385],{"type":179,"value":386},"是",{"type":173,"tag":354,"props":388,"children":389},{},[390],{"type":179,"value":391},"部分支持",{"type":173,"tag":354,"props":393,"children":394},{},[395],{"type":179,"value":386},{"type":173,"tag":311,"props":397,"children":398},{},[399,404,409,414],{"type":173,"tag":354,"props":400,"children":401},{},[402],{"type":179,"value":403},"成本",{"type":173,"tag":354,"props":405,"children":406},{},[407],{"type":179,"value":408},"成本相对较低",{"type":173,"tag":354,"props":410,"children":411},{},[412],{"type":179,"value":413},"成本较高",{"type":173,"tag":354,"props":415,"children":416},{},[417],{"type":179,"value":418},"成本适中",{"type":173,"tag":311,"props":420,"children":421},{},[422,427,432,437],{"type":173,"tag":354,"props":423,"children":424},{},[425],{"type":179,"value":426},"查询性能",{"type":173,"tag":354,"props":428,"children":429},{},[430],{"type":179,"value":431},"较差",{"type":173,"tag":354,"props":433,"children":434},{},[435],{"type":179,"value":436},"很高",{"type":173,"tag":354,"props":438,"children":439},{},[440],{"type":179,"value":441},"较高",{"type":173,"tag":311,"props":443,"children":444},{},[445,450,454,459],{"type":173,"tag":354,"props":446,"children":447},{},[448],{"type":179,"value":449},"数据治理",{"type":173,"tag":354,"props":451,"children":452},{},[453],{"type":179,"value":431},{"type":173,"tag":354,"props":455,"children":456},{},[457],{"type":179,"value":458},"很好",{"type":173,"tag":354,"props":460,"children":461},{},[462],{"type":179,"value":458},{"type":173,"tag":311,"props":464,"children":465},{},[466,471,476,481],{"type":173,"tag":354,"props":467,"children":468},{},[469],{"type":179,"value":470},"扩展性",{"type":173,"tag":354,"props":472,"children":473},{},[474],{"type":179,"value":475},"高",{"type":173,"tag":354,"props":477,"children":478},{},[479],{"type":179,"value":480},"中等",{"type":173,"tag":354,"props":482,"children":483},{},[484],{"type":179,"value":475},{"type":173,"tag":174,"props":486,"children":488},{"id":487},"什么是-open-format",[489],{"type":179,"value":490},"什么是 Open Format？",{"type":173,"tag":492,"props":493,"children":494},"p",{},[495,497,506],{"type":179,"value":496},"Open Format 指的是一种开放的数据存储格式，具有以下特点：它不依赖于特定的供应商或专有技术，能够在不同的数据平台、工具和系统之间实现互操作性和兼容性。常见的 Open Format 示例包括 ",{"type":173,"tag":498,"props":499,"children":503},"a",{"href":500,"rel":501},"https://paimon.apache.org/",[502],"nofollow",[504],{"type":179,"value":505},"Paimon",{"type":179,"value":507},"、Apache Parquet、Apache ORC 和 Avro，这些格式通常被广泛用于支持现代的数据架构，例如数据湖和 Lakehouse。作为开放标准，Open Format 需要保证标准化、平台无关、易于扩展和高性能等特性。",{"type":173,"tag":303,"props":509,"children":510},{},[511,554],{"type":173,"tag":307,"props":512,"children":513},{},[514],{"type":173,"tag":311,"props":515,"children":516},{},[517,522,530,538,546],{"type":173,"tag":315,"props":518,"children":519},{},[520],{"type":179,"value":521},"格式 / 特性",{"type":173,"tag":315,"props":523,"children":524},{},[525],{"type":173,"tag":190,"props":526,"children":527},{},[528],{"type":179,"value":529},"Apache Paimon",{"type":173,"tag":315,"props":531,"children":532},{},[533],{"type":173,"tag":190,"props":534,"children":535},{},[536],{"type":179,"value":537},"Apache Parquet",{"type":173,"tag":315,"props":539,"children":540},{},[541],{"type":173,"tag":190,"props":542,"children":543},{},[544],{"type":179,"value":545},"Apache ORC",{"type":173,"tag":315,"props":547,"children":548},{},[549],{"type":173,"tag":190,"props":550,"children":551},{},[552],{"type":179,"value":553},"Avro",{"type":173,"tag":347,"props":555,"children":556},{},[557,587,618,648,678,709,739],{"type":173,"tag":311,"props":558,"children":559},{},[560,568,573,578,582],{"type":173,"tag":354,"props":561,"children":562},{},[563],{"type":173,"tag":190,"props":564,"children":565},{},[566],{"type":179,"value":567},"存储方式",{"type":173,"tag":354,"props":569,"children":570},{},[571],{"type":179,"value":572},"表格式 （基于文件存储 + 索引）",{"type":173,"tag":354,"props":574,"children":575},{},[576],{"type":179,"value":577},"列式文件存储",{"type":173,"tag":354,"props":579,"children":580},{},[581],{"type":179,"value":577},{"type":173,"tag":354,"props":583,"children":584},{},[585],{"type":179,"value":586},"行式文件存储",{"type":173,"tag":311,"props":588,"children":589},{},[590,598,603,608,613],{"type":173,"tag":354,"props":591,"children":592},{},[593],{"type":173,"tag":190,"props":594,"children":595},{},[596],{"type":179,"value":597},"主要应用场景",{"type":173,"tag":354,"props":599,"children":600},{},[601],{"type":179,"value":602},"流批一体、实时数据湖/数仓，ACID 表管理",{"type":173,"tag":354,"props":604,"children":605},{},[606],{"type":179,"value":607},"大数据离线分析、OLAP、云数仓",{"type":173,"tag":354,"props":609,"children":610},{},[611],{"type":179,"value":612},"Hive/Spark OLAP 场景",{"type":173,"tag":354,"props":614,"children":615},{},[616],{"type":179,"value":617},"分布式消息、跨服务数据交换",{"type":173,"tag":311,"props":619,"children":620},{},[621,629,634,639,643],{"type":173,"tag":354,"props":622,"children":623},{},[624],{"type":173,"tag":190,"props":625,"children":626},{},[627],{"type":179,"value":628},"ACID 事务 / 更新能力",{"type":173,"tag":354,"props":630,"children":631},{},[632],{"type":179,"value":633},"原生支持",{"type":173,"tag":354,"props":635,"children":636},{},[637],{"type":179,"value":638},"无（需第三方表格式或管理层）",{"type":173,"tag":354,"props":640,"children":641},{},[642],{"type":179,"value":638},{"type":173,"tag":354,"props":644,"children":645},{},[646],{"type":179,"value":647},"无（主要是行级序列化）",{"type":173,"tag":311,"props":649,"children":650},{},[651,659,664,669,673],{"type":173,"tag":354,"props":652,"children":653},{},[654],{"type":173,"tag":190,"props":655,"children":656},{},[657],{"type":179,"value":658},"实时/流式数据支持",{"type":173,"tag":354,"props":660,"children":661},{},[662],{"type":179,"value":663},"原生支持，对 Flink 有深度优化",{"type":173,"tag":354,"props":665,"children":666},{},[667],{"type":179,"value":668},"不直接支持，需要额外框架封装",{"type":173,"tag":354,"props":670,"children":671},{},[672],{"type":179,"value":668},{"type":173,"tag":354,"props":674,"children":675},{},[676],{"type":179,"value":677},"常用于消息流，但无列式存储优势",{"type":173,"tag":311,"props":679,"children":680},{},[681,689,694,699,704],{"type":173,"tag":354,"props":682,"children":683},{},[684],{"type":173,"tag":190,"props":685,"children":686},{},[687],{"type":179,"value":688},"生态与兼容性",{"type":173,"tag":354,"props":690,"children":691},{},[692],{"type":179,"value":693},"成熟度上升中，与 Flink 紧密结合",{"type":173,"tag":354,"props":695,"children":696},{},[697],{"type":179,"value":698},"非常成熟，Spark/Hive/Presto 等均支持",{"type":173,"tag":354,"props":700,"children":701},{},[702],{"type":179,"value":703},"主要在 Hadoop/Hive/Tez/Spark 等生态",{"type":173,"tag":354,"props":705,"children":706},{},[707],{"type":179,"value":708},"与 Kafka/Schema Registry 兼容性佳",{"type":173,"tag":311,"props":710,"children":711},{},[712,720,725,730,734],{"type":173,"tag":354,"props":713,"children":714},{},[715],{"type":173,"tag":190,"props":716,"children":717},{},[718],{"type":179,"value":719},"适用数据规模",{"type":173,"tag":354,"props":721,"children":722},{},[723],{"type":179,"value":724},"TB ~ PB 级，实时 & 离线融合",{"type":173,"tag":354,"props":726,"children":727},{},[728],{"type":179,"value":729},"TB ~ PB 级，主要面向批处理",{"type":173,"tag":354,"props":731,"children":732},{},[733],{"type":179,"value":729},{"type":173,"tag":354,"props":735,"children":736},{},[737],{"type":179,"value":738},"MB ~ GB 级，消息或中小规模数据",{"type":173,"tag":311,"props":740,"children":741},{},[742,750,755,760,765],{"type":173,"tag":354,"props":743,"children":744},{},[745],{"type":173,"tag":190,"props":746,"children":747},{},[748],{"type":179,"value":749},"谓词下推 / 索引",{"type":173,"tag":354,"props":751,"children":752},{},[753],{"type":179,"value":754},"内置索引机制，支持高并发写入",{"type":173,"tag":354,"props":756,"children":757},{},[758],{"type":179,"value":759},"支持列级统计与谓词下推",{"type":173,"tag":354,"props":761,"children":762},{},[763],{"type":179,"value":764},"强大的谓词下推与统计信息",{"type":173,"tag":354,"props":766,"children":767},{},[768],{"type":179,"value":769},"无列式谓词下推",{"type":173,"tag":174,"props":771,"children":773},{"id":772},"ai-agent-怎么利用-lakehouse-里面的数据",[774],{"type":179,"value":775},"AI Agent 怎么利用 Lakehouse 里面的数据？",{"type":173,"tag":492,"props":777,"children":778},{},[779],{"type":179,"value":780},"通用做法是多模态数据放到 OSS，结构化数据放数仓。但就链路细节上而言目前还不是很成熟。",{"type":173,"tag":198,"props":782,"children":783},{},[784,789,794],{"type":173,"tag":186,"props":785,"children":786},{},[787],{"type":179,"value":788},"对非结构化数据的量的占比较大，甚至达到 80% 以上。",{"type":173,"tag":186,"props":790,"children":791},{},[792],{"type":179,"value":793},"目前观察到的是对大量元数据实时的请求、解析受到挑战。探索方向仍处于聚合、预聚合和如何利用缓存。",{"type":173,"tag":186,"props":795,"children":796},{},[797],{"type":179,"value":798},"如何高效检索非结构化数据。",{"type":173,"tag":174,"props":800,"children":802},{"id":801},"paimon-logsystem-时数据新鲜度分析",[803],{"type":179,"value":804},"Paimon + LogSystem 时数据新鲜度分析？",{"type":173,"tag":492,"props":806,"children":807},{},[808],{"type":179,"value":809},"分钟级新鲜度。秒级新鲜度可选择 Kafka + 流存储。",{"type":173,"tag":492,"props":811,"children":812},{},[813],{"type":179,"value":814},"Paimon 在流式更新的同时，仍然保证数据一致性。由于实时不断写入小文件不可避免。Paimon 提供了小文件合并（Compaction）功能，用于周期性合并文件，避免数据查询时过多文件带来的延迟。在实际生产环境中，一般会设定一个合并周期（例如几分钟或更长），在保证最新数据能被快速查询的同时，又兼顾查询性能。如果要求极致的实时性，可适当缩短合并周期，但要平衡对写入性能和资源消耗的影响。",{"type":173,"tag":174,"props":816,"children":818},{"id":817},"湖仓常见的数据分层方式",[819],{"type":179,"value":820},"湖仓常见的数据分层方式？",{"type":173,"tag":182,"props":822,"children":823},{},[824,845,866,887,908,929],{"type":173,"tag":186,"props":825,"children":826},{},[827,832],{"type":173,"tag":190,"props":828,"children":829},{},[830],{"type":179,"value":831},"ODS（Operational Data Store） / 原始层",{"type":173,"tag":198,"props":833,"children":834},{},[835,840],{"type":173,"tag":186,"props":836,"children":837},{},[838],{"type":179,"value":839},"存放原始数据，通常与源系统保持一致或仅做简单的去重、清洗。",{"type":173,"tag":186,"props":841,"children":842},{},[843],{"type":179,"value":844},"特点：保持冗余和完整，保证数据的新鲜度，方便后续处理时“回溯”。",{"type":173,"tag":186,"props":846,"children":847},{},[848,853],{"type":173,"tag":190,"props":849,"children":850},{},[851],{"type":179,"value":852},"DWD（Data Warehouse Detail） / 明细层",{"type":173,"tag":198,"props":854,"children":855},{},[856,861],{"type":173,"tag":186,"props":857,"children":858},{},[859],{"type":179,"value":860},"在原始数据的基础上进行标准化、去重、关联、补充字段等处理，主要保持“明细级”的完整信息。",{"type":173,"tag":186,"props":862,"children":863},{},[864],{"type":179,"value":865},"特点：数据质量更高，表结构优化，适合详细分析或为上层聚合提供基础。",{"type":173,"tag":186,"props":867,"children":868},{},[869,874],{"type":173,"tag":190,"props":870,"children":871},{},[872],{"type":179,"value":873},"DWS（Data Warehouse Summary） / 汇总层",{"type":173,"tag":198,"props":875,"children":876},{},[877,882],{"type":173,"tag":186,"props":878,"children":879},{},[880],{"type":179,"value":881},"将明细层的数据按照一定主题或指标进行聚合、汇总。",{"type":173,"tag":186,"props":883,"children":884},{},[885],{"type":179,"value":886},"特点：进一步降低数据粒度，高效支持常见的聚合查询、指标分析等。",{"type":173,"tag":186,"props":888,"children":889},{},[890,895],{"type":173,"tag":190,"props":891,"children":892},{},[893],{"type":179,"value":894},"ADS（Application Data Store） / 应用层",{"type":173,"tag":198,"props":896,"children":897},{},[898,903],{"type":173,"tag":186,"props":899,"children":900},{},[901],{"type":179,"value":902},"面向特定应用或报表需求，对数据进行定制化加工，通常是对特定主题或指标的深度加工或计算结果。",{"type":173,"tag":186,"props":904,"children":905},{},[906],{"type":179,"value":907},"特点：业务访问速度快、查询逻辑简单，但一般复用性较低。",{"type":173,"tag":186,"props":909,"children":910},{},[911,916],{"type":173,"tag":190,"props":912,"children":913},{},[914],{"type":179,"value":915},"DIM（Dimension Table） / 维表层",{"type":173,"tag":198,"props":917,"children":918},{},[919,924],{"type":173,"tag":186,"props":920,"children":921},{},[922],{"type":179,"value":923},"存放企业常用的维度或参考表，例如用户信息维表、商品信息维表、地理区域维表等。",{"type":173,"tag":186,"props":925,"children":926},{},[927],{"type":179,"value":928},"特点：在各个层的 ETL 过程中被频繁连接或关联，用于补充或映射数据属性。",{"type":173,"tag":186,"props":930,"children":931},{},[932,937],{"type":173,"tag":190,"props":933,"children":934},{},[935],{"type":179,"value":936},"DM（Data Mart） / 数据集市层",{"type":173,"tag":198,"props":938,"children":939},{},[940],{"type":173,"tag":186,"props":941,"children":942},{},[943],{"type":179,"value":944},"有些企业还会将面向特定部门或特定业务主题的数据称为“数据集市”。与 ADS 类似，主要服务于某类精细化分析或应用。",{"type":173,"tag":492,"props":946,"children":947},{},[948],{"type":179,"value":949},"实际应用场景：",{"type":173,"tag":182,"props":951,"children":952},{},[953,969,990],{"type":173,"tag":186,"props":954,"children":955},{},[956,961],{"type":173,"tag":190,"props":957,"children":958},{},[959],{"type":179,"value":960},"离线分析与商业智能",{"type":173,"tag":198,"props":962,"children":963},{},[964],{"type":173,"tag":186,"props":965,"children":966},{},[967],{"type":179,"value":968},"通过 ODS → DWD → DWS → ADS 的方式，先保证原始数据的完整性，然后逐层进行聚合，在应用层直接服务于 BI 报表、管理仪表盘等。",{"type":173,"tag":186,"props":970,"children":971},{},[972,977],{"type":173,"tag":190,"props":973,"children":974},{},[975],{"type":179,"value":976},"实时数据分析",{"type":173,"tag":198,"props":978,"children":979},{},[980,985],{"type":173,"tag":186,"props":981,"children":982},{},[983],{"type":179,"value":984},"有些分层架构中会增加流数据的处理层（Streaming Layer），如存储在 Kafka、Flink 等流式平台，结合实时湖仓（如 Paimon、Kafka + Iceberg、Delta Lake 等）实现实时更新。",{"type":173,"tag":186,"props":986,"children":987},{},[988],{"type":179,"value":989},"分层思路同样适用，只不过在流处理场景下，数据处理频率更高、延迟更低。",{"type":173,"tag":186,"props":991,"children":992},{},[993,998],{"type":173,"tag":190,"props":994,"children":995},{},[996],{"type":179,"value":997},"数据挖掘与机器学习",{"type":173,"tag":198,"props":999,"children":1000},{},[1001,1006],{"type":173,"tag":186,"props":1002,"children":1003},{},[1004],{"type":179,"value":1005},"通过维度和事实数据的明细层（DWD）获取丰富、干净的特征数据，为机器学习训练集提供持续更新的基础；",{"type":173,"tag":186,"props":1007,"children":1008},{},[1009],{"type":179,"value":1010},"也可将挖掘后的结果或特征输出到应用层（ADS）或其他平台，供下游使用。",{"title":166,"searchDepth":1012,"depth":1012,"links":1013},2,[],"markdown","content:6.maps:_database:lakehouse.md","content","6.maps/_database/lakehouse.md","6.maps/_database/lakehouse","md",[1021,1025],{"_path":1022,"title":1023,"description":1024},"/maps/_cross-platform/taro","Taro","Taro 是一个多端开发解决方案，支持用 React/Vue/Nerv 等框架开发小程序、H5、App 等应用。",{"_path":1026,"title":1027,"description":1028},"/maps/_database/redis","Redis","About Redis",1750854656929]