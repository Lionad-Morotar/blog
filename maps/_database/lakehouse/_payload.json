[{"data":1,"prerenderedAt":1252},["ShallowReactive",2],{"navigation":3,"/maps/_database/lakehouse":384,"/maps/_database/lakehouse-surround":1243},[4,35,86,105,132,138,144,150,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":205,"_path":206},"正则表达式","/gists/eegex",{"title":208,"_path":209},"Emoji","/gists/emoji",{"title":211,"_path":212},"工程","/gists/engineering",{"title":214,"_path":215},"熵","/gists/entropy",{"title":217,"_path":218},"Environment","/gists/environment",{"title":220,"_path":221},"Erlang","/gists/erlang",{"title":223,"_path":224},"逃离塔克夫","/gists/escape-from-tarkov",{"title":226,"_path":227},"ESNext (ES6-ES11)","/gists/esnext",{"title":229,"_path":230},"Eval！","/gists/eval",{"title":232,"_path":233},"Flutter","/gists/flutter",{"title":235,"_path":236},"字体","/gists/font",{"title":238,"_path":239},"JS 函数式编程","/gists/functional",{"title":241,"_path":242},"游戏化","/gists/gamification",{"title":244,"_path":245},"Google C++ Standard","/gists/google-cpp-standard",{"title":247,"_path":248},"双向链接完全体","/gists/graph",{"title":250,"_path":251},"Hardwares","/gists/hardwares",{"title":253,"_path":254},"哈希冲突","/gists/hash-collision",{"title":256,"_path":257},"信息设计","/gists/information-design",{"title":259,"_path":260},"InstantPage","/gists/instant.page",{"title":262,"_path":263},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":265,"_path":266},"KVStore","/gists/key-value-db",{"title":268,"_path":269},"Kubernetes","/gists/kubernetes",{"title":271,"_path":272},"Makefile","/gists/makefile",{"title":274,"_path":275},"Markdown Inline Style","/gists/markdown-nice",{"title":277,"_path":278},"减小页面快照体积","/gists/minify-html",{"title":280,"_path":281},"mklink","/gists/mklink",{"title":283,"_path":284},"Mock","/gists/mock",{"title":286,"_path":287},"多人协作系统","/gists/multiplayer",{"title":289,"_path":290},"多端应用","/gists/multy-end-app",{"title":292,"_path":293},"神经科学","/gists/neuroscience",{"title":295,"_path":296},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":298,"_path":299},"PInvoke","/gists/pinvoke",{"title":301,"_path":302},"像素","/gists/pixel",{"title":304,"_path":305},"PowerShell","/gists/powershell",{"title":307,"_path":308},"量子","/gists/quantum",{"title":310,"_path":311},"保持好奇心","/gists/questions",{"title":313,"_path":314},"React Native","/gists/react-native",{"title":316,"_path":317},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":319,"_path":320},"SEO","/gists/seo",{"title":322,"_path":323},"Shader","/gists/shader",{"title":325,"_path":326},"Shape Up","/gists/shape-up",{"title":328,"_path":329},"睡觉","/gists/sleep",{"title":331,"_path":332},"记录奇怪的问题","/gists/solved",{"title":334,"_path":335},"States","/gists/states",{"title":337,"_path":338},"Storage","/gists/storage",{"title":340,"_path":341},"音视频流处理","/gists/stream-cli",{"title":343,"_path":344},"Symbol","/gists/symbol",{"title":346,"_path":347},"系统论","/gists/systems-theory",{"title":349,"_path":350},"任务切片","/gists/task-slice",{"title":352,"_path":353},"技术偏好","/gists/tech-dudge",{"title":355,"_path":356},"Untitled","/gists/untitled",{"title":358,"_path":359},"可变字体","/gists/variable-font",{"title":361,"_path":362},"视觉错觉","/gists/visual-illusion",{"title":364,"_path":365},"SS(SSR)","/gists/vpn",{"title":367,"_path":368},"VS Code 插件开发","/gists/vscode-plugin",{"title":370,"_path":371},"Web Components","/gists/web-components",{"title":373,"_path":374},"Windows","/gists/windows",{"title":376,"_path":377},"查缺补漏","/gists/wrong",{"title":379,"_path":380,"children":381},"我 / About","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"_path":385,"_dir":386,"_draft":387,"_partial":388,"_locale":389,"title":390,"description":391,"body":392,"_type":1237,"_id":1238,"_source":1239,"_file":1240,"_stem":1241,"_extension":1242},"/maps/_database/lakehouse","_database",false,true,"","Lakehouse","一种新型的数据管理架构，它结合了数据湖（Data Lake）和数据仓库（Data Warehouse）的优点，为现代数据分析和管理提供了一个统一的平台。",{"type":393,"children":394,"toc":1234},"root",[395,404,519,525,708,714,731,993,999,1004,1022,1028,1033,1038,1044,1168,1173],{"type":396,"tag":397,"props":398,"children":400},"element","h4",{"id":399},"lakehouse-架构的关键特性",[401],{"type":402,"value":403},"text","Lakehouse 架构的关键特性？",{"type":396,"tag":405,"props":406,"children":407},"ol",{},[408,434,451,468,485,502],{"type":396,"tag":409,"props":410,"children":411},"li",{},[412,418,420],{"type":396,"tag":413,"props":414,"children":415},"strong",{},[416],{"type":402,"value":417},"单一存储层",{"type":402,"value":419},"：\n",{"type":396,"tag":421,"props":422,"children":423},"ul",{},[424,429],{"type":396,"tag":409,"props":425,"children":426},{},[427],{"type":402,"value":428},"将所有类型的数据（结构化、半结构化、非结构化）存储在一个单一层中（通常是云存储）。",{"type":396,"tag":409,"props":430,"children":431},{},[432],{"type":402,"value":433},"这种方式消除了数据在数据湖和数据仓库之间来回移动的需要。",{"type":396,"tag":409,"props":435,"children":436},{},[437,442,443],{"type":396,"tag":413,"props":438,"children":439},{},[440],{"type":402,"value":441},"支持事务",{"type":402,"value":419},{"type":396,"tag":421,"props":444,"children":445},{},[446],{"type":396,"tag":409,"props":447,"children":448},{},[449],{"type":402,"value":450},"Lakehouse 支持类似数据库的事务性操作，例如 ACID（Atomicity, Consistency, Isolation, Durability），确保数据的一致性和可靠性。",{"type":396,"tag":409,"props":452,"children":453},{},[454,459,460],{"type":396,"tag":413,"props":455,"children":456},{},[457],{"type":402,"value":458},"灵活性和可扩展性",{"type":402,"value":419},{"type":396,"tag":421,"props":461,"children":462},{},[463],{"type":396,"tag":409,"props":464,"children":465},{},[466],{"type":402,"value":467},"Lakehouse 能够存储各种不同格式的数据，同时具备数据湖的存储可扩展性，适合大规模数据处理。",{"type":396,"tag":409,"props":469,"children":470},{},[471,476,477],{"type":396,"tag":413,"props":472,"children":473},{},[474],{"type":402,"value":475},"治理与元数据管理",{"type":402,"value":419},{"type":396,"tag":421,"props":478,"children":479},{},[480],{"type":396,"tag":409,"props":481,"children":482},{},[483],{"type":402,"value":484},"提供良好的数据治理能力（例如访问控制、审计、安全性）和元数据支持，方便用户管理数据资产。",{"type":396,"tag":409,"props":486,"children":487},{},[488,493,494],{"type":396,"tag":413,"props":489,"children":490},{},[491],{"type":402,"value":492},"高性能计算",{"type":402,"value":419},{"type":396,"tag":421,"props":495,"children":496},{},[497],{"type":396,"tag":409,"props":498,"children":499},{},[500],{"type":402,"value":501},"引入了优化的查询引擎，可以快速处理大规模数据，满足实时数据分析的需求。",{"type":396,"tag":409,"props":503,"children":504},{},[505,510,511],{"type":396,"tag":413,"props":506,"children":507},{},[508],{"type":402,"value":509},"支持多种数据工作负载",{"type":402,"value":419},{"type":396,"tag":421,"props":512,"children":513},{},[514],{"type":396,"tag":409,"props":515,"children":516},{},[517],{"type":402,"value":518},"同时支持流式数据（Streaming）和批量数据（Batch）处理，满足数据科学、机器学习、商业智能等不同场景的需要。",{"type":396,"tag":397,"props":520,"children":522},{"id":521},"对比-lakehouse数据湖和数据仓库",[523],{"type":402,"value":524},"对比 Lakehouse、数据湖和数据仓库？",{"type":396,"tag":526,"props":527,"children":528},"table",{},[529,569],{"type":396,"tag":530,"props":531,"children":532},"thead",{},[533],{"type":396,"tag":534,"props":535,"children":536},"tr",{},[537,546,554,562],{"type":396,"tag":538,"props":539,"children":540},"th",{},[541],{"type":396,"tag":413,"props":542,"children":543},{},[544],{"type":402,"value":545},"特性",{"type":396,"tag":538,"props":547,"children":548},{},[549],{"type":396,"tag":413,"props":550,"children":551},{},[552],{"type":402,"value":553},"数据湖",{"type":396,"tag":538,"props":555,"children":556},{},[557],{"type":396,"tag":413,"props":558,"children":559},{},[560],{"type":402,"value":561},"数据仓库",{"type":396,"tag":538,"props":563,"children":564},{},[565],{"type":396,"tag":413,"props":566,"children":567},{},[568],{"type":402,"value":390},{"type":396,"tag":570,"props":571,"children":572},"tbody",{},[573,597,619,642,665,686],{"type":396,"tag":534,"props":574,"children":575},{},[576,582,587,592],{"type":396,"tag":577,"props":578,"children":579},"td",{},[580],{"type":402,"value":581},"数据类型",{"type":396,"tag":577,"props":583,"children":584},{},[585],{"type":402,"value":586},"结构化、半结构化、非结构化",{"type":396,"tag":577,"props":588,"children":589},{},[590],{"type":402,"value":591},"主要是结构化数据",{"type":396,"tag":577,"props":593,"children":594},{},[595],{"type":402,"value":596},"结构化及非结构化数据",{"type":396,"tag":534,"props":598,"children":599},{},[600,605,610,615],{"type":396,"tag":577,"props":601,"children":602},{},[603],{"type":402,"value":604},"存储/计算分离",{"type":396,"tag":577,"props":606,"children":607},{},[608],{"type":402,"value":609},"是",{"type":396,"tag":577,"props":611,"children":612},{},[613],{"type":402,"value":614},"部分支持",{"type":396,"tag":577,"props":616,"children":617},{},[618],{"type":402,"value":609},{"type":396,"tag":534,"props":620,"children":621},{},[622,627,632,637],{"type":396,"tag":577,"props":623,"children":624},{},[625],{"type":402,"value":626},"成本",{"type":396,"tag":577,"props":628,"children":629},{},[630],{"type":402,"value":631},"成本相对较低",{"type":396,"tag":577,"props":633,"children":634},{},[635],{"type":402,"value":636},"成本较高",{"type":396,"tag":577,"props":638,"children":639},{},[640],{"type":402,"value":641},"成本适中",{"type":396,"tag":534,"props":643,"children":644},{},[645,650,655,660],{"type":396,"tag":577,"props":646,"children":647},{},[648],{"type":402,"value":649},"查询性能",{"type":396,"tag":577,"props":651,"children":652},{},[653],{"type":402,"value":654},"较差",{"type":396,"tag":577,"props":656,"children":657},{},[658],{"type":402,"value":659},"很高",{"type":396,"tag":577,"props":661,"children":662},{},[663],{"type":402,"value":664},"较高",{"type":396,"tag":534,"props":666,"children":667},{},[668,673,677,682],{"type":396,"tag":577,"props":669,"children":670},{},[671],{"type":402,"value":672},"数据治理",{"type":396,"tag":577,"props":674,"children":675},{},[676],{"type":402,"value":654},{"type":396,"tag":577,"props":678,"children":679},{},[680],{"type":402,"value":681},"很好",{"type":396,"tag":577,"props":683,"children":684},{},[685],{"type":402,"value":681},{"type":396,"tag":534,"props":687,"children":688},{},[689,694,699,704],{"type":396,"tag":577,"props":690,"children":691},{},[692],{"type":402,"value":693},"扩展性",{"type":396,"tag":577,"props":695,"children":696},{},[697],{"type":402,"value":698},"高",{"type":396,"tag":577,"props":700,"children":701},{},[702],{"type":402,"value":703},"中等",{"type":396,"tag":577,"props":705,"children":706},{},[707],{"type":402,"value":698},{"type":396,"tag":397,"props":709,"children":711},{"id":710},"什么是-open-format",[712],{"type":402,"value":713},"什么是 Open Format？",{"type":396,"tag":715,"props":716,"children":717},"p",{},[718,720,729],{"type":402,"value":719},"Open Format 指的是一种开放的数据存储格式，具有以下特点：它不依赖于特定的供应商或专有技术，能够在不同的数据平台、工具和系统之间实现互操作性和兼容性。常见的 Open Format 示例包括 ",{"type":396,"tag":721,"props":722,"children":726},"a",{"href":723,"rel":724},"https://paimon.apache.org/",[725],"nofollow",[727],{"type":402,"value":728},"Paimon",{"type":402,"value":730},"、Apache Parquet、Apache ORC 和 Avro，这些格式通常被广泛用于支持现代的数据架构，例如数据湖和 Lakehouse。作为开放标准，Open Format 需要保证标准化、平台无关、易于扩展和高性能等特性。",{"type":396,"tag":526,"props":732,"children":733},{},[734,777],{"type":396,"tag":530,"props":735,"children":736},{},[737],{"type":396,"tag":534,"props":738,"children":739},{},[740,745,753,761,769],{"type":396,"tag":538,"props":741,"children":742},{},[743],{"type":402,"value":744},"格式 / 特性",{"type":396,"tag":538,"props":746,"children":747},{},[748],{"type":396,"tag":413,"props":749,"children":750},{},[751],{"type":402,"value":752},"Apache Paimon",{"type":396,"tag":538,"props":754,"children":755},{},[756],{"type":396,"tag":413,"props":757,"children":758},{},[759],{"type":402,"value":760},"Apache Parquet",{"type":396,"tag":538,"props":762,"children":763},{},[764],{"type":396,"tag":413,"props":765,"children":766},{},[767],{"type":402,"value":768},"Apache ORC",{"type":396,"tag":538,"props":770,"children":771},{},[772],{"type":396,"tag":413,"props":773,"children":774},{},[775],{"type":402,"value":776},"Avro",{"type":396,"tag":570,"props":778,"children":779},{},[780,810,841,871,901,932,962],{"type":396,"tag":534,"props":781,"children":782},{},[783,791,796,801,805],{"type":396,"tag":577,"props":784,"children":785},{},[786],{"type":396,"tag":413,"props":787,"children":788},{},[789],{"type":402,"value":790},"存储方式",{"type":396,"tag":577,"props":792,"children":793},{},[794],{"type":402,"value":795},"表格式 （基于文件存储 + 索引）",{"type":396,"tag":577,"props":797,"children":798},{},[799],{"type":402,"value":800},"列式文件存储",{"type":396,"tag":577,"props":802,"children":803},{},[804],{"type":402,"value":800},{"type":396,"tag":577,"props":806,"children":807},{},[808],{"type":402,"value":809},"行式文件存储",{"type":396,"tag":534,"props":811,"children":812},{},[813,821,826,831,836],{"type":396,"tag":577,"props":814,"children":815},{},[816],{"type":396,"tag":413,"props":817,"children":818},{},[819],{"type":402,"value":820},"主要应用场景",{"type":396,"tag":577,"props":822,"children":823},{},[824],{"type":402,"value":825},"流批一体、实时数据湖/数仓，ACID 表管理",{"type":396,"tag":577,"props":827,"children":828},{},[829],{"type":402,"value":830},"大数据离线分析、OLAP、云数仓",{"type":396,"tag":577,"props":832,"children":833},{},[834],{"type":402,"value":835},"Hive/Spark OLAP 场景",{"type":396,"tag":577,"props":837,"children":838},{},[839],{"type":402,"value":840},"分布式消息、跨服务数据交换",{"type":396,"tag":534,"props":842,"children":843},{},[844,852,857,862,866],{"type":396,"tag":577,"props":845,"children":846},{},[847],{"type":396,"tag":413,"props":848,"children":849},{},[850],{"type":402,"value":851},"ACID 事务 / 更新能力",{"type":396,"tag":577,"props":853,"children":854},{},[855],{"type":402,"value":856},"原生支持",{"type":396,"tag":577,"props":858,"children":859},{},[860],{"type":402,"value":861},"无（需第三方表格式或管理层）",{"type":396,"tag":577,"props":863,"children":864},{},[865],{"type":402,"value":861},{"type":396,"tag":577,"props":867,"children":868},{},[869],{"type":402,"value":870},"无（主要是行级序列化）",{"type":396,"tag":534,"props":872,"children":873},{},[874,882,887,892,896],{"type":396,"tag":577,"props":875,"children":876},{},[877],{"type":396,"tag":413,"props":878,"children":879},{},[880],{"type":402,"value":881},"实时/流式数据支持",{"type":396,"tag":577,"props":883,"children":884},{},[885],{"type":402,"value":886},"原生支持，对 Flink 有深度优化",{"type":396,"tag":577,"props":888,"children":889},{},[890],{"type":402,"value":891},"不直接支持，需要额外框架封装",{"type":396,"tag":577,"props":893,"children":894},{},[895],{"type":402,"value":891},{"type":396,"tag":577,"props":897,"children":898},{},[899],{"type":402,"value":900},"常用于消息流，但无列式存储优势",{"type":396,"tag":534,"props":902,"children":903},{},[904,912,917,922,927],{"type":396,"tag":577,"props":905,"children":906},{},[907],{"type":396,"tag":413,"props":908,"children":909},{},[910],{"type":402,"value":911},"生态与兼容性",{"type":396,"tag":577,"props":913,"children":914},{},[915],{"type":402,"value":916},"成熟度上升中，与 Flink 紧密结合",{"type":396,"tag":577,"props":918,"children":919},{},[920],{"type":402,"value":921},"非常成熟，Spark/Hive/Presto 等均支持",{"type":396,"tag":577,"props":923,"children":924},{},[925],{"type":402,"value":926},"主要在 Hadoop/Hive/Tez/Spark 等生态",{"type":396,"tag":577,"props":928,"children":929},{},[930],{"type":402,"value":931},"与 Kafka/Schema Registry 兼容性佳",{"type":396,"tag":534,"props":933,"children":934},{},[935,943,948,953,957],{"type":396,"tag":577,"props":936,"children":937},{},[938],{"type":396,"tag":413,"props":939,"children":940},{},[941],{"type":402,"value":942},"适用数据规模",{"type":396,"tag":577,"props":944,"children":945},{},[946],{"type":402,"value":947},"TB ~ PB 级，实时 & 离线融合",{"type":396,"tag":577,"props":949,"children":950},{},[951],{"type":402,"value":952},"TB ~ PB 级，主要面向批处理",{"type":396,"tag":577,"props":954,"children":955},{},[956],{"type":402,"value":952},{"type":396,"tag":577,"props":958,"children":959},{},[960],{"type":402,"value":961},"MB ~ GB 级，消息或中小规模数据",{"type":396,"tag":534,"props":963,"children":964},{},[965,973,978,983,988],{"type":396,"tag":577,"props":966,"children":967},{},[968],{"type":396,"tag":413,"props":969,"children":970},{},[971],{"type":402,"value":972},"谓词下推 / 索引",{"type":396,"tag":577,"props":974,"children":975},{},[976],{"type":402,"value":977},"内置索引机制，支持高并发写入",{"type":396,"tag":577,"props":979,"children":980},{},[981],{"type":402,"value":982},"支持列级统计与谓词下推",{"type":396,"tag":577,"props":984,"children":985},{},[986],{"type":402,"value":987},"强大的谓词下推与统计信息",{"type":396,"tag":577,"props":989,"children":990},{},[991],{"type":402,"value":992},"无列式谓词下推",{"type":396,"tag":397,"props":994,"children":996},{"id":995},"ai-agent-怎么利用-lakehouse-里面的数据",[997],{"type":402,"value":998},"AI Agent 怎么利用 Lakehouse 里面的数据？",{"type":396,"tag":715,"props":1000,"children":1001},{},[1002],{"type":402,"value":1003},"通用做法是多模态数据放到 OSS，结构化数据放数仓。但就链路细节上而言目前还不是很成熟。",{"type":396,"tag":421,"props":1005,"children":1006},{},[1007,1012,1017],{"type":396,"tag":409,"props":1008,"children":1009},{},[1010],{"type":402,"value":1011},"对非结构化数据的量的占比较大，甚至达到 80% 以上。",{"type":396,"tag":409,"props":1013,"children":1014},{},[1015],{"type":402,"value":1016},"目前观察到的是对大量元数据实时的请求、解析受到挑战。探索方向仍处于聚合、预聚合和如何利用缓存。",{"type":396,"tag":409,"props":1018,"children":1019},{},[1020],{"type":402,"value":1021},"如何高效检索非结构化数据。",{"type":396,"tag":397,"props":1023,"children":1025},{"id":1024},"paimon-logsystem-时数据新鲜度分析",[1026],{"type":402,"value":1027},"Paimon + LogSystem 时数据新鲜度分析？",{"type":396,"tag":715,"props":1029,"children":1030},{},[1031],{"type":402,"value":1032},"分钟级新鲜度。秒级新鲜度可选择 Kafka + 流存储。",{"type":396,"tag":715,"props":1034,"children":1035},{},[1036],{"type":402,"value":1037},"Paimon 在流式更新的同时，仍然保证数据一致性。由于实时不断写入小文件不可避免。Paimon 提供了小文件合并（Compaction）功能，用于周期性合并文件，避免数据查询时过多文件带来的延迟。在实际生产环境中，一般会设定一个合并周期（例如几分钟或更长），在保证最新数据能被快速查询的同时，又兼顾查询性能。如果要求极致的实时性，可适当缩短合并周期，但要平衡对写入性能和资源消耗的影响。",{"type":396,"tag":397,"props":1039,"children":1041},{"id":1040},"湖仓常见的数据分层方式",[1042],{"type":402,"value":1043},"湖仓常见的数据分层方式？",{"type":396,"tag":405,"props":1045,"children":1046},{},[1047,1068,1089,1110,1131,1152],{"type":396,"tag":409,"props":1048,"children":1049},{},[1050,1055],{"type":396,"tag":413,"props":1051,"children":1052},{},[1053],{"type":402,"value":1054},"ODS（Operational Data Store） / 原始层",{"type":396,"tag":421,"props":1056,"children":1057},{},[1058,1063],{"type":396,"tag":409,"props":1059,"children":1060},{},[1061],{"type":402,"value":1062},"存放原始数据，通常与源系统保持一致或仅做简单的去重、清洗。",{"type":396,"tag":409,"props":1064,"children":1065},{},[1066],{"type":402,"value":1067},"特点：保持冗余和完整，保证数据的新鲜度，方便后续处理时“回溯”。",{"type":396,"tag":409,"props":1069,"children":1070},{},[1071,1076],{"type":396,"tag":413,"props":1072,"children":1073},{},[1074],{"type":402,"value":1075},"DWD（Data Warehouse Detail） / 明细层",{"type":396,"tag":421,"props":1077,"children":1078},{},[1079,1084],{"type":396,"tag":409,"props":1080,"children":1081},{},[1082],{"type":402,"value":1083},"在原始数据的基础上进行标准化、去重、关联、补充字段等处理，主要保持“明细级”的完整信息。",{"type":396,"tag":409,"props":1085,"children":1086},{},[1087],{"type":402,"value":1088},"特点：数据质量更高，表结构优化，适合详细分析或为上层聚合提供基础。",{"type":396,"tag":409,"props":1090,"children":1091},{},[1092,1097],{"type":396,"tag":413,"props":1093,"children":1094},{},[1095],{"type":402,"value":1096},"DWS（Data Warehouse Summary） / 汇总层",{"type":396,"tag":421,"props":1098,"children":1099},{},[1100,1105],{"type":396,"tag":409,"props":1101,"children":1102},{},[1103],{"type":402,"value":1104},"将明细层的数据按照一定主题或指标进行聚合、汇总。",{"type":396,"tag":409,"props":1106,"children":1107},{},[1108],{"type":402,"value":1109},"特点：进一步降低数据粒度，高效支持常见的聚合查询、指标分析等。",{"type":396,"tag":409,"props":1111,"children":1112},{},[1113,1118],{"type":396,"tag":413,"props":1114,"children":1115},{},[1116],{"type":402,"value":1117},"ADS（Application Data Store） / 应用层",{"type":396,"tag":421,"props":1119,"children":1120},{},[1121,1126],{"type":396,"tag":409,"props":1122,"children":1123},{},[1124],{"type":402,"value":1125},"面向特定应用或报表需求，对数据进行定制化加工，通常是对特定主题或指标的深度加工或计算结果。",{"type":396,"tag":409,"props":1127,"children":1128},{},[1129],{"type":402,"value":1130},"特点：业务访问速度快、查询逻辑简单，但一般复用性较低。",{"type":396,"tag":409,"props":1132,"children":1133},{},[1134,1139],{"type":396,"tag":413,"props":1135,"children":1136},{},[1137],{"type":402,"value":1138},"DIM（Dimension Table） / 维表层",{"type":396,"tag":421,"props":1140,"children":1141},{},[1142,1147],{"type":396,"tag":409,"props":1143,"children":1144},{},[1145],{"type":402,"value":1146},"存放企业常用的维度或参考表，例如用户信息维表、商品信息维表、地理区域维表等。",{"type":396,"tag":409,"props":1148,"children":1149},{},[1150],{"type":402,"value":1151},"特点：在各个层的 ETL 过程中被频繁连接或关联，用于补充或映射数据属性。",{"type":396,"tag":409,"props":1153,"children":1154},{},[1155,1160],{"type":396,"tag":413,"props":1156,"children":1157},{},[1158],{"type":402,"value":1159},"DM（Data Mart） / 数据集市层",{"type":396,"tag":421,"props":1161,"children":1162},{},[1163],{"type":396,"tag":409,"props":1164,"children":1165},{},[1166],{"type":402,"value":1167},"有些企业还会将面向特定部门或特定业务主题的数据称为“数据集市”。与 ADS 类似，主要服务于某类精细化分析或应用。",{"type":396,"tag":715,"props":1169,"children":1170},{},[1171],{"type":402,"value":1172},"实际应用场景：",{"type":396,"tag":405,"props":1174,"children":1175},{},[1176,1192,1213],{"type":396,"tag":409,"props":1177,"children":1178},{},[1179,1184],{"type":396,"tag":413,"props":1180,"children":1181},{},[1182],{"type":402,"value":1183},"离线分析与商业智能",{"type":396,"tag":421,"props":1185,"children":1186},{},[1187],{"type":396,"tag":409,"props":1188,"children":1189},{},[1190],{"type":402,"value":1191},"通过 ODS → DWD → DWS → ADS 的方式，先保证原始数据的完整性，然后逐层进行聚合，在应用层直接服务于 BI 报表、管理仪表盘等。",{"type":396,"tag":409,"props":1193,"children":1194},{},[1195,1200],{"type":396,"tag":413,"props":1196,"children":1197},{},[1198],{"type":402,"value":1199},"实时数据分析",{"type":396,"tag":421,"props":1201,"children":1202},{},[1203,1208],{"type":396,"tag":409,"props":1204,"children":1205},{},[1206],{"type":402,"value":1207},"有些分层架构中会增加流数据的处理层（Streaming Layer），如存储在 Kafka、Flink 等流式平台，结合实时湖仓（如 Paimon、Kafka + Iceberg、Delta Lake 等）实现实时更新。",{"type":396,"tag":409,"props":1209,"children":1210},{},[1211],{"type":402,"value":1212},"分层思路同样适用，只不过在流处理场景下，数据处理频率更高、延迟更低。",{"type":396,"tag":409,"props":1214,"children":1215},{},[1216,1221],{"type":396,"tag":413,"props":1217,"children":1218},{},[1219],{"type":402,"value":1220},"数据挖掘与机器学习",{"type":396,"tag":421,"props":1222,"children":1223},{},[1224,1229],{"type":396,"tag":409,"props":1225,"children":1226},{},[1227],{"type":402,"value":1228},"通过维度和事实数据的明细层（DWD）获取丰富、干净的特征数据，为机器学习训练集提供持续更新的基础；",{"type":396,"tag":409,"props":1230,"children":1231},{},[1232],{"type":402,"value":1233},"也可将挖掘后的结果或特征输出到应用层（ADS）或其他平台，供下游使用。",{"title":389,"searchDepth":1235,"depth":1235,"links":1236},2,[],"markdown","content:6.maps:_database:lakehouse.md","content","6.maps/_database/lakehouse.md","6.maps/_database/lakehouse","md",[1244,1248],{"_path":1245,"title":1246,"description":1247},"/maps/_cross-platform/taro","Taro","Taro 是一个多端开发解决方案，支持用 React/Vue/Nerv 等框架开发小程序、H5、App 等应用。",{"_path":1249,"title":1250,"description":1251},"/maps/_database/redis","Redis","About Redis",1742040374665]