[{"data":1,"prerenderedAt":1026},["ShallowReactive",2],{"navigation":3,"/maps/_database/lakehouse":158,"/maps/_database/lakehouse-surround":1017},[4,35,89,95,122,128,152],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":45,"_path":46},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":48,"_path":49},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":51,"_path":52},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":54,"_path":55},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":57,"_path":58},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":60,"_path":61},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":63,"_path":64},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":66,"_path":67},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":69,"_path":70},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":72,"_path":73},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":75,"_path":76},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":78,"_path":79},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":81,"_path":82},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":84,"_path":85},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":87,"_path":88},"📝 技术博客归档","/articles/archive",{"title":90,"_path":91,"children":92},"读书笔记 / Notes","/books",[93],{"title":94,"_path":91},"📕 读书笔记",{"title":96,"_path":97,"children":98},"吉他剧场 / Music","/music",[99,101,104,107,110,113,116,119],{"title":100,"_path":97},"🎸 FingerStyle！",{"title":102,"_path":103},"🌬️ 等待的风","/music/wind",{"title":105,"_path":106},"💕 约定的海洋","/music/ocean",{"title":108,"_path":109},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":111,"_path":112},"🌏 残酷天使的行动纲领","/music/eva",{"title":114,"_path":115},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":117,"_path":118},"🍷 Wu Wei","/music/wu-wei",{"title":120,"_path":121},"🌅 无题","/music/untitled",{"title":123,"_path":124,"children":125},"知识地图 / Maps","/maps",[126],{"title":127,"_path":124},"🏁 知识地图",{"title":129,"_path":130,"children":131},"造物 / Make","/tools",[132,134,137,140,143,146,149],{"title":133,"_path":130},"🧰 工具收集",{"title":135,"_path":136},"📕 博客","/tools/blog",{"title":138,"_path":139},"🥥 Coconut","/tools/coconut",{"title":141,"_path":142},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":144,"_path":145},"🌐 AnySort","/tools/anysort",{"title":147,"_path":148},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":150,"_path":151},"👓 Crapto","/tools/crypto-inline",{"title":153,"_path":154,"children":155},"我 / About","/hire",[156],{"title":157,"_path":154},"📬 技术简历",{"_path":159,"_dir":160,"_draft":161,"_partial":162,"_locale":163,"title":164,"description":165,"body":166,"_type":1011,"_id":1012,"_source":1013,"_file":1014,"_stem":1015,"_extension":1016},"/maps/_database/lakehouse","_database",false,true,"","Lakehouse","一种新型的数据管理架构，它结合了数据湖（Data Lake）和数据仓库（Data Warehouse）的优点，为现代数据分析和管理提供了一个统一的平台。",{"type":167,"children":168,"toc":1008},"root",[169,178,293,299,482,488,505,767,773,778,796,802,807,812,818,942,947],{"type":170,"tag":171,"props":172,"children":174},"element","h4",{"id":173},"lakehouse-架构的关键特性",[175],{"type":176,"value":177},"text","Lakehouse 架构的关键特性？",{"type":170,"tag":179,"props":180,"children":181},"ol",{},[182,208,225,242,259,276],{"type":170,"tag":183,"props":184,"children":185},"li",{},[186,192,194],{"type":170,"tag":187,"props":188,"children":189},"strong",{},[190],{"type":176,"value":191},"单一存储层",{"type":176,"value":193},"：\n",{"type":170,"tag":195,"props":196,"children":197},"ul",{},[198,203],{"type":170,"tag":183,"props":199,"children":200},{},[201],{"type":176,"value":202},"将所有类型的数据（结构化、半结构化、非结构化）存储在一个单一层中（通常是云存储）。",{"type":170,"tag":183,"props":204,"children":205},{},[206],{"type":176,"value":207},"这种方式消除了数据在数据湖和数据仓库之间来回移动的需要。",{"type":170,"tag":183,"props":209,"children":210},{},[211,216,217],{"type":170,"tag":187,"props":212,"children":213},{},[214],{"type":176,"value":215},"支持事务",{"type":176,"value":193},{"type":170,"tag":195,"props":218,"children":219},{},[220],{"type":170,"tag":183,"props":221,"children":222},{},[223],{"type":176,"value":224},"Lakehouse 支持类似数据库的事务性操作，例如 ACID（Atomicity, Consistency, Isolation, Durability），确保数据的一致性和可靠性。",{"type":170,"tag":183,"props":226,"children":227},{},[228,233,234],{"type":170,"tag":187,"props":229,"children":230},{},[231],{"type":176,"value":232},"灵活性和可扩展性",{"type":176,"value":193},{"type":170,"tag":195,"props":235,"children":236},{},[237],{"type":170,"tag":183,"props":238,"children":239},{},[240],{"type":176,"value":241},"Lakehouse 能够存储各种不同格式的数据，同时具备数据湖的存储可扩展性，适合大规模数据处理。",{"type":170,"tag":183,"props":243,"children":244},{},[245,250,251],{"type":170,"tag":187,"props":246,"children":247},{},[248],{"type":176,"value":249},"治理与元数据管理",{"type":176,"value":193},{"type":170,"tag":195,"props":252,"children":253},{},[254],{"type":170,"tag":183,"props":255,"children":256},{},[257],{"type":176,"value":258},"提供良好的数据治理能力（例如访问控制、审计、安全性）和元数据支持，方便用户管理数据资产。",{"type":170,"tag":183,"props":260,"children":261},{},[262,267,268],{"type":170,"tag":187,"props":263,"children":264},{},[265],{"type":176,"value":266},"高性能计算",{"type":176,"value":193},{"type":170,"tag":195,"props":269,"children":270},{},[271],{"type":170,"tag":183,"props":272,"children":273},{},[274],{"type":176,"value":275},"引入了优化的查询引擎，可以快速处理大规模数据，满足实时数据分析的需求。",{"type":170,"tag":183,"props":277,"children":278},{},[279,284,285],{"type":170,"tag":187,"props":280,"children":281},{},[282],{"type":176,"value":283},"支持多种数据工作负载",{"type":176,"value":193},{"type":170,"tag":195,"props":286,"children":287},{},[288],{"type":170,"tag":183,"props":289,"children":290},{},[291],{"type":176,"value":292},"同时支持流式数据（Streaming）和批量数据（Batch）处理，满足数据科学、机器学习、商业智能等不同场景的需要。",{"type":170,"tag":171,"props":294,"children":296},{"id":295},"对比-lakehouse数据湖和数据仓库",[297],{"type":176,"value":298},"对比 Lakehouse、数据湖和数据仓库？",{"type":170,"tag":300,"props":301,"children":302},"table",{},[303,343],{"type":170,"tag":304,"props":305,"children":306},"thead",{},[307],{"type":170,"tag":308,"props":309,"children":310},"tr",{},[311,320,328,336],{"type":170,"tag":312,"props":313,"children":314},"th",{},[315],{"type":170,"tag":187,"props":316,"children":317},{},[318],{"type":176,"value":319},"特性",{"type":170,"tag":312,"props":321,"children":322},{},[323],{"type":170,"tag":187,"props":324,"children":325},{},[326],{"type":176,"value":327},"数据湖",{"type":170,"tag":312,"props":329,"children":330},{},[331],{"type":170,"tag":187,"props":332,"children":333},{},[334],{"type":176,"value":335},"数据仓库",{"type":170,"tag":312,"props":337,"children":338},{},[339],{"type":170,"tag":187,"props":340,"children":341},{},[342],{"type":176,"value":164},{"type":170,"tag":344,"props":345,"children":346},"tbody",{},[347,371,393,416,439,460],{"type":170,"tag":308,"props":348,"children":349},{},[350,356,361,366],{"type":170,"tag":351,"props":352,"children":353},"td",{},[354],{"type":176,"value":355},"数据类型",{"type":170,"tag":351,"props":357,"children":358},{},[359],{"type":176,"value":360},"结构化、半结构化、非结构化",{"type":170,"tag":351,"props":362,"children":363},{},[364],{"type":176,"value":365},"主要是结构化数据",{"type":170,"tag":351,"props":367,"children":368},{},[369],{"type":176,"value":370},"结构化及非结构化数据",{"type":170,"tag":308,"props":372,"children":373},{},[374,379,384,389],{"type":170,"tag":351,"props":375,"children":376},{},[377],{"type":176,"value":378},"存储/计算分离",{"type":170,"tag":351,"props":380,"children":381},{},[382],{"type":176,"value":383},"是",{"type":170,"tag":351,"props":385,"children":386},{},[387],{"type":176,"value":388},"部分支持",{"type":170,"tag":351,"props":390,"children":391},{},[392],{"type":176,"value":383},{"type":170,"tag":308,"props":394,"children":395},{},[396,401,406,411],{"type":170,"tag":351,"props":397,"children":398},{},[399],{"type":176,"value":400},"成本",{"type":170,"tag":351,"props":402,"children":403},{},[404],{"type":176,"value":405},"成本相对较低",{"type":170,"tag":351,"props":407,"children":408},{},[409],{"type":176,"value":410},"成本较高",{"type":170,"tag":351,"props":412,"children":413},{},[414],{"type":176,"value":415},"成本适中",{"type":170,"tag":308,"props":417,"children":418},{},[419,424,429,434],{"type":170,"tag":351,"props":420,"children":421},{},[422],{"type":176,"value":423},"查询性能",{"type":170,"tag":351,"props":425,"children":426},{},[427],{"type":176,"value":428},"较差",{"type":170,"tag":351,"props":430,"children":431},{},[432],{"type":176,"value":433},"很高",{"type":170,"tag":351,"props":435,"children":436},{},[437],{"type":176,"value":438},"较高",{"type":170,"tag":308,"props":440,"children":441},{},[442,447,451,456],{"type":170,"tag":351,"props":443,"children":444},{},[445],{"type":176,"value":446},"数据治理",{"type":170,"tag":351,"props":448,"children":449},{},[450],{"type":176,"value":428},{"type":170,"tag":351,"props":452,"children":453},{},[454],{"type":176,"value":455},"很好",{"type":170,"tag":351,"props":457,"children":458},{},[459],{"type":176,"value":455},{"type":170,"tag":308,"props":461,"children":462},{},[463,468,473,478],{"type":170,"tag":351,"props":464,"children":465},{},[466],{"type":176,"value":467},"扩展性",{"type":170,"tag":351,"props":469,"children":470},{},[471],{"type":176,"value":472},"高",{"type":170,"tag":351,"props":474,"children":475},{},[476],{"type":176,"value":477},"中等",{"type":170,"tag":351,"props":479,"children":480},{},[481],{"type":176,"value":472},{"type":170,"tag":171,"props":483,"children":485},{"id":484},"什么是-open-format",[486],{"type":176,"value":487},"什么是 Open Format？",{"type":170,"tag":489,"props":490,"children":491},"p",{},[492,494,503],{"type":176,"value":493},"Open Format 指的是一种开放的数据存储格式，具有以下特点：它不依赖于特定的供应商或专有技术，能够在不同的数据平台、工具和系统之间实现互操作性和兼容性。常见的 Open Format 示例包括 ",{"type":170,"tag":495,"props":496,"children":500},"a",{"href":497,"rel":498},"https://paimon.apache.org/",[499],"nofollow",[501],{"type":176,"value":502},"Paimon",{"type":176,"value":504},"、Apache Parquet、Apache ORC 和 Avro，这些格式通常被广泛用于支持现代的数据架构，例如数据湖和 Lakehouse。作为开放标准，Open Format 需要保证标准化、平台无关、易于扩展和高性能等特性。",{"type":170,"tag":300,"props":506,"children":507},{},[508,551],{"type":170,"tag":304,"props":509,"children":510},{},[511],{"type":170,"tag":308,"props":512,"children":513},{},[514,519,527,535,543],{"type":170,"tag":312,"props":515,"children":516},{},[517],{"type":176,"value":518},"格式 / 特性",{"type":170,"tag":312,"props":520,"children":521},{},[522],{"type":170,"tag":187,"props":523,"children":524},{},[525],{"type":176,"value":526},"Apache Paimon",{"type":170,"tag":312,"props":528,"children":529},{},[530],{"type":170,"tag":187,"props":531,"children":532},{},[533],{"type":176,"value":534},"Apache Parquet",{"type":170,"tag":312,"props":536,"children":537},{},[538],{"type":170,"tag":187,"props":539,"children":540},{},[541],{"type":176,"value":542},"Apache ORC",{"type":170,"tag":312,"props":544,"children":545},{},[546],{"type":170,"tag":187,"props":547,"children":548},{},[549],{"type":176,"value":550},"Avro",{"type":170,"tag":344,"props":552,"children":553},{},[554,584,615,645,675,706,736],{"type":170,"tag":308,"props":555,"children":556},{},[557,565,570,575,579],{"type":170,"tag":351,"props":558,"children":559},{},[560],{"type":170,"tag":187,"props":561,"children":562},{},[563],{"type":176,"value":564},"存储方式",{"type":170,"tag":351,"props":566,"children":567},{},[568],{"type":176,"value":569},"表格式 （基于文件存储 + 索引）",{"type":170,"tag":351,"props":571,"children":572},{},[573],{"type":176,"value":574},"列式文件存储",{"type":170,"tag":351,"props":576,"children":577},{},[578],{"type":176,"value":574},{"type":170,"tag":351,"props":580,"children":581},{},[582],{"type":176,"value":583},"行式文件存储",{"type":170,"tag":308,"props":585,"children":586},{},[587,595,600,605,610],{"type":170,"tag":351,"props":588,"children":589},{},[590],{"type":170,"tag":187,"props":591,"children":592},{},[593],{"type":176,"value":594},"主要应用场景",{"type":170,"tag":351,"props":596,"children":597},{},[598],{"type":176,"value":599},"流批一体、实时数据湖/数仓，ACID 表管理",{"type":170,"tag":351,"props":601,"children":602},{},[603],{"type":176,"value":604},"大数据离线分析、OLAP、云数仓",{"type":170,"tag":351,"props":606,"children":607},{},[608],{"type":176,"value":609},"Hive/Spark OLAP 场景",{"type":170,"tag":351,"props":611,"children":612},{},[613],{"type":176,"value":614},"分布式消息、跨服务数据交换",{"type":170,"tag":308,"props":616,"children":617},{},[618,626,631,636,640],{"type":170,"tag":351,"props":619,"children":620},{},[621],{"type":170,"tag":187,"props":622,"children":623},{},[624],{"type":176,"value":625},"ACID 事务 / 更新能力",{"type":170,"tag":351,"props":627,"children":628},{},[629],{"type":176,"value":630},"原生支持",{"type":170,"tag":351,"props":632,"children":633},{},[634],{"type":176,"value":635},"无（需第三方表格式或管理层）",{"type":170,"tag":351,"props":637,"children":638},{},[639],{"type":176,"value":635},{"type":170,"tag":351,"props":641,"children":642},{},[643],{"type":176,"value":644},"无（主要是行级序列化）",{"type":170,"tag":308,"props":646,"children":647},{},[648,656,661,666,670],{"type":170,"tag":351,"props":649,"children":650},{},[651],{"type":170,"tag":187,"props":652,"children":653},{},[654],{"type":176,"value":655},"实时/流式数据支持",{"type":170,"tag":351,"props":657,"children":658},{},[659],{"type":176,"value":660},"原生支持，对 Flink 有深度优化",{"type":170,"tag":351,"props":662,"children":663},{},[664],{"type":176,"value":665},"不直接支持，需要额外框架封装",{"type":170,"tag":351,"props":667,"children":668},{},[669],{"type":176,"value":665},{"type":170,"tag":351,"props":671,"children":672},{},[673],{"type":176,"value":674},"常用于消息流，但无列式存储优势",{"type":170,"tag":308,"props":676,"children":677},{},[678,686,691,696,701],{"type":170,"tag":351,"props":679,"children":680},{},[681],{"type":170,"tag":187,"props":682,"children":683},{},[684],{"type":176,"value":685},"生态与兼容性",{"type":170,"tag":351,"props":687,"children":688},{},[689],{"type":176,"value":690},"成熟度上升中，与 Flink 紧密结合",{"type":170,"tag":351,"props":692,"children":693},{},[694],{"type":176,"value":695},"非常成熟，Spark/Hive/Presto 等均支持",{"type":170,"tag":351,"props":697,"children":698},{},[699],{"type":176,"value":700},"主要在 Hadoop/Hive/Tez/Spark 等生态",{"type":170,"tag":351,"props":702,"children":703},{},[704],{"type":176,"value":705},"与 Kafka/Schema Registry 兼容性佳",{"type":170,"tag":308,"props":707,"children":708},{},[709,717,722,727,731],{"type":170,"tag":351,"props":710,"children":711},{},[712],{"type":170,"tag":187,"props":713,"children":714},{},[715],{"type":176,"value":716},"适用数据规模",{"type":170,"tag":351,"props":718,"children":719},{},[720],{"type":176,"value":721},"TB ~ PB 级，实时 & 离线融合",{"type":170,"tag":351,"props":723,"children":724},{},[725],{"type":176,"value":726},"TB ~ PB 级，主要面向批处理",{"type":170,"tag":351,"props":728,"children":729},{},[730],{"type":176,"value":726},{"type":170,"tag":351,"props":732,"children":733},{},[734],{"type":176,"value":735},"MB ~ GB 级，消息或中小规模数据",{"type":170,"tag":308,"props":737,"children":738},{},[739,747,752,757,762],{"type":170,"tag":351,"props":740,"children":741},{},[742],{"type":170,"tag":187,"props":743,"children":744},{},[745],{"type":176,"value":746},"谓词下推 / 索引",{"type":170,"tag":351,"props":748,"children":749},{},[750],{"type":176,"value":751},"内置索引机制，支持高并发写入",{"type":170,"tag":351,"props":753,"children":754},{},[755],{"type":176,"value":756},"支持列级统计与谓词下推",{"type":170,"tag":351,"props":758,"children":759},{},[760],{"type":176,"value":761},"强大的谓词下推与统计信息",{"type":170,"tag":351,"props":763,"children":764},{},[765],{"type":176,"value":766},"无列式谓词下推",{"type":170,"tag":171,"props":768,"children":770},{"id":769},"ai-agent-怎么利用-lakehouse-里面的数据",[771],{"type":176,"value":772},"AI Agent 怎么利用 Lakehouse 里面的数据？",{"type":170,"tag":489,"props":774,"children":775},{},[776],{"type":176,"value":777},"通用做法是多模态数据放到 OSS，结构化数据放数仓。但就链路细节上而言目前还不是很成熟。",{"type":170,"tag":195,"props":779,"children":780},{},[781,786,791],{"type":170,"tag":183,"props":782,"children":783},{},[784],{"type":176,"value":785},"对非结构化数据的量的占比较大，甚至达到 80% 以上。",{"type":170,"tag":183,"props":787,"children":788},{},[789],{"type":176,"value":790},"目前观察到的是对大量元数据实时的请求、解析受到挑战。探索方向仍处于聚合、预聚合和如何利用缓存。",{"type":170,"tag":183,"props":792,"children":793},{},[794],{"type":176,"value":795},"如何高效检索非结构化数据。",{"type":170,"tag":171,"props":797,"children":799},{"id":798},"paimon-logsystem-时数据新鲜度分析",[800],{"type":176,"value":801},"Paimon + LogSystem 时数据新鲜度分析？",{"type":170,"tag":489,"props":803,"children":804},{},[805],{"type":176,"value":806},"分钟级新鲜度。秒级新鲜度可选择 Kafka + 流存储。",{"type":170,"tag":489,"props":808,"children":809},{},[810],{"type":176,"value":811},"Paimon 在流式更新的同时，仍然保证数据一致性。由于实时不断写入小文件不可避免。Paimon 提供了小文件合并（Compaction）功能，用于周期性合并文件，避免数据查询时过多文件带来的延迟。在实际生产环境中，一般会设定一个合并周期（例如几分钟或更长），在保证最新数据能被快速查询的同时，又兼顾查询性能。如果要求极致的实时性，可适当缩短合并周期，但要平衡对写入性能和资源消耗的影响。",{"type":170,"tag":171,"props":813,"children":815},{"id":814},"湖仓常见的数据分层方式",[816],{"type":176,"value":817},"湖仓常见的数据分层方式？",{"type":170,"tag":179,"props":819,"children":820},{},[821,842,863,884,905,926],{"type":170,"tag":183,"props":822,"children":823},{},[824,829],{"type":170,"tag":187,"props":825,"children":826},{},[827],{"type":176,"value":828},"ODS（Operational Data Store） / 原始层",{"type":170,"tag":195,"props":830,"children":831},{},[832,837],{"type":170,"tag":183,"props":833,"children":834},{},[835],{"type":176,"value":836},"存放原始数据，通常与源系统保持一致或仅做简单的去重、清洗。",{"type":170,"tag":183,"props":838,"children":839},{},[840],{"type":176,"value":841},"特点：保持冗余和完整，保证数据的新鲜度，方便后续处理时“回溯”。",{"type":170,"tag":183,"props":843,"children":844},{},[845,850],{"type":170,"tag":187,"props":846,"children":847},{},[848],{"type":176,"value":849},"DWD（Data Warehouse Detail） / 明细层",{"type":170,"tag":195,"props":851,"children":852},{},[853,858],{"type":170,"tag":183,"props":854,"children":855},{},[856],{"type":176,"value":857},"在原始数据的基础上进行标准化、去重、关联、补充字段等处理，主要保持“明细级”的完整信息。",{"type":170,"tag":183,"props":859,"children":860},{},[861],{"type":176,"value":862},"特点：数据质量更高，表结构优化，适合详细分析或为上层聚合提供基础。",{"type":170,"tag":183,"props":864,"children":865},{},[866,871],{"type":170,"tag":187,"props":867,"children":868},{},[869],{"type":176,"value":870},"DWS（Data Warehouse Summary） / 汇总层",{"type":170,"tag":195,"props":872,"children":873},{},[874,879],{"type":170,"tag":183,"props":875,"children":876},{},[877],{"type":176,"value":878},"将明细层的数据按照一定主题或指标进行聚合、汇总。",{"type":170,"tag":183,"props":880,"children":881},{},[882],{"type":176,"value":883},"特点：进一步降低数据粒度，高效支持常见的聚合查询、指标分析等。",{"type":170,"tag":183,"props":885,"children":886},{},[887,892],{"type":170,"tag":187,"props":888,"children":889},{},[890],{"type":176,"value":891},"ADS（Application Data Store） / 应用层",{"type":170,"tag":195,"props":893,"children":894},{},[895,900],{"type":170,"tag":183,"props":896,"children":897},{},[898],{"type":176,"value":899},"面向特定应用或报表需求，对数据进行定制化加工，通常是对特定主题或指标的深度加工或计算结果。",{"type":170,"tag":183,"props":901,"children":902},{},[903],{"type":176,"value":904},"特点：业务访问速度快、查询逻辑简单，但一般复用性较低。",{"type":170,"tag":183,"props":906,"children":907},{},[908,913],{"type":170,"tag":187,"props":909,"children":910},{},[911],{"type":176,"value":912},"DIM（Dimension Table） / 维表层",{"type":170,"tag":195,"props":914,"children":915},{},[916,921],{"type":170,"tag":183,"props":917,"children":918},{},[919],{"type":176,"value":920},"存放企业常用的维度或参考表，例如用户信息维表、商品信息维表、地理区域维表等。",{"type":170,"tag":183,"props":922,"children":923},{},[924],{"type":176,"value":925},"特点：在各个层的 ETL 过程中被频繁连接或关联，用于补充或映射数据属性。",{"type":170,"tag":183,"props":927,"children":928},{},[929,934],{"type":170,"tag":187,"props":930,"children":931},{},[932],{"type":176,"value":933},"DM（Data Mart） / 数据集市层",{"type":170,"tag":195,"props":935,"children":936},{},[937],{"type":170,"tag":183,"props":938,"children":939},{},[940],{"type":176,"value":941},"有些企业还会将面向特定部门或特定业务主题的数据称为“数据集市”。与 ADS 类似，主要服务于某类精细化分析或应用。",{"type":170,"tag":489,"props":943,"children":944},{},[945],{"type":176,"value":946},"实际应用场景：",{"type":170,"tag":179,"props":948,"children":949},{},[950,966,987],{"type":170,"tag":183,"props":951,"children":952},{},[953,958],{"type":170,"tag":187,"props":954,"children":955},{},[956],{"type":176,"value":957},"离线分析与商业智能",{"type":170,"tag":195,"props":959,"children":960},{},[961],{"type":170,"tag":183,"props":962,"children":963},{},[964],{"type":176,"value":965},"通过 ODS → DWD → DWS → ADS 的方式，先保证原始数据的完整性，然后逐层进行聚合，在应用层直接服务于 BI 报表、管理仪表盘等。",{"type":170,"tag":183,"props":967,"children":968},{},[969,974],{"type":170,"tag":187,"props":970,"children":971},{},[972],{"type":176,"value":973},"实时数据分析",{"type":170,"tag":195,"props":975,"children":976},{},[977,982],{"type":170,"tag":183,"props":978,"children":979},{},[980],{"type":176,"value":981},"有些分层架构中会增加流数据的处理层（Streaming Layer），如存储在 Kafka、Flink 等流式平台，结合实时湖仓（如 Paimon、Kafka + Iceberg、Delta Lake 等）实现实时更新。",{"type":170,"tag":183,"props":983,"children":984},{},[985],{"type":176,"value":986},"分层思路同样适用，只不过在流处理场景下，数据处理频率更高、延迟更低。",{"type":170,"tag":183,"props":988,"children":989},{},[990,995],{"type":170,"tag":187,"props":991,"children":992},{},[993],{"type":176,"value":994},"数据挖掘与机器学习",{"type":170,"tag":195,"props":996,"children":997},{},[998,1003],{"type":170,"tag":183,"props":999,"children":1000},{},[1001],{"type":176,"value":1002},"通过维度和事实数据的明细层（DWD）获取丰富、干净的特征数据，为机器学习训练集提供持续更新的基础；",{"type":170,"tag":183,"props":1004,"children":1005},{},[1006],{"type":176,"value":1007},"也可将挖掘后的结果或特征输出到应用层（ADS）或其他平台，供下游使用。",{"title":163,"searchDepth":1009,"depth":1009,"links":1010},2,[],"markdown","content:6.maps:_database:lakehouse.md","content","6.maps/_database/lakehouse.md","6.maps/_database/lakehouse","md",[1018,1022],{"_path":1019,"title":1020,"description":1021},"/maps/_cross-platform/taro","Taro","Taro 是一个多端开发解决方案，支持用 React/Vue/Nerv 等框架开发小程序、H5、App 等应用。",{"_path":1023,"title":1024,"description":1025},"/maps/_database/redis","Redis","About Redis",1748756321000]