[{"data":1,"prerenderedAt":319},["ShallowReactive",2],{"navigation":3,"/maps/_server/nodejs":161,"/maps/_server/nodejs-surround":311},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":305,"_id":306,"_source":307,"_file":308,"_stem":309,"_extension":310},"/maps/_server/nodejs","_server",false,true,"","NodeJS","NodeJS 是一个非阻塞 IO、事件驱动的服务端 JS 运行环境。",{"type":170,"children":171,"toc":298},"root",[172,180,187,192,198,203,209,214,220,226,231,237,242,248,253,259,265,270,284,289],{"type":173,"tag":174,"props":175,"children":177},"element","h2",{"id":176},"简介",[178],{"type":179,"value":176},"text",{"type":173,"tag":181,"props":182,"children":184},"h4",{"id":183},"nodejs-是什么",[185],{"type":179,"value":186},"NodeJS 是什么？",{"type":173,"tag":188,"props":189,"children":190},"p",{},[191],{"type":179,"value":168},{"type":173,"tag":181,"props":193,"children":195},{"id":194},"非阻塞-io-是什么",[196],{"type":179,"value":197},"非阻塞 IO 是什么？",{"type":173,"tag":188,"props":199,"children":200},{},[201],{"type":179,"value":202},"非阻塞 IO 意味着在执行 IO 操作时，将耗时任务以异步的方式交给子线程处理，等完成之后再通过回调的方式继续执行后续代码。",{"type":173,"tag":181,"props":204,"children":206},{"id":205},"事件循环机制和浏览器中有什么不同",[207],{"type":179,"value":208},"事件循环机制和浏览器中有什么不同？",{"type":173,"tag":188,"props":210,"children":211},{},[212],{"type":179,"value":213},"TODO，类似但稍有区别。",{"type":173,"tag":174,"props":215,"children":217},{"id":216},"v8",[218],{"type":179,"value":219},"V8",{"type":173,"tag":181,"props":221,"children":223},{"id":222},"引擎的垃圾回收机制有了解吗",[224],{"type":179,"value":225},"引擎的垃圾回收机制有了解吗？",{"type":173,"tag":188,"props":227,"children":228},{},[229],{"type":179,"value":230},"V8 使用分代回收机制，将内存分为新生代和老生代空间，分别用不同的算法进行 GC。新生代空间每个周期都会触发 ScavengeGC，俗称小周期。如果两个周期内都没被清除的变量则转移到老生代内存中。老生代空间则使用标记清除算法（和标记紧缩算法）进行清理。",{"type":173,"tag":181,"props":232,"children":234},{"id":233},"新生代空间的-gc-过程是怎样的",[235],{"type":179,"value":236},"新生代空间的 GC 过程是怎样的？",{"type":173,"tag":188,"props":238,"children":239},{},[240],{"type":179,"value":241},"新生代空间通常只有 1-8 MB，被划分为两个等大的区域，出区和入区。新增变量放到入区中。一但入区满了，便把活跃对象复制到出区中，删除不活跃对象（紧缩过程）并交换出区入区，如此称为一个周期。如果活跃对象再两个周期内都没有被清除，则转移只老生代内存中。",{"type":173,"tag":181,"props":243,"children":245},{"id":244},"老生代空间的-gc-过程是怎样的",[246],{"type":179,"value":247},"老生代空间的 GC 过程是怎样的？",{"type":173,"tag":188,"props":249,"children":250},{},[251],{"type":179,"value":252},"老生代空间的 GC 分标记和清除（或紧缩）两个阶段。每次循环，标记算法会将一个对象从队列中取出，将它以及邻接对象标记。到了清除阶段，未被标记的对象都将被删除。如果清楚阶段额外执行紧缩过程，则会尝试将零散的对象移动成连续的整体，以解决内存碎片化问题。为了优化老生代空间 GC 的“全停顿”，V8 将老生代空间的标记过程拆分为了子步骤，这样就可以将标记算法穿插在其它任务过程中执行。",{"type":173,"tag":174,"props":254,"children":256},{"id":255},"api",[257],{"type":179,"value":258},"API",{"type":173,"tag":181,"props":260,"children":262},{"id":261},"nodevm-是什么",[263],{"type":179,"value":264},"node:vm 是什么？",{"type":173,"tag":188,"props":266,"children":267},{},[268],{"type":179,"value":269},"node:vm 模块允许在 V8 虚拟机上下文中编译和运行代码，上下文中的任何属性都被视为全局变量，对全局变量任何改动也反映到上下文对象中。但是 node:vm 不是一个安全机制，不应该使用它来运行不受信任的代码。",{"type":173,"tag":188,"props":271,"children":272},{},[273,275],{"type":179,"value":274},"见：",{"type":173,"tag":276,"props":277,"children":281},"a",{"href":278,"rel":279},"http://nodejs.cn/api/vm.html#vm_vm_executing_javascript",[280],"nofollow",[282],{"type":179,"value":283},"VM",{"type":173,"tag":174,"props":285,"children":287},{"id":286},"源码解析",[288],{"type":179,"value":286},{"type":173,"tag":188,"props":290,"children":291},{},[292],{"type":173,"tag":276,"props":293,"children":295},{"href":294},"/maps/_server/nodejs/source/require",[296],{"type":179,"value":297},"NodeJS | require",{"title":166,"searchDepth":299,"depth":299,"links":300},2,[301,302,303,304],{"id":176,"depth":299,"text":176},{"id":216,"depth":299,"text":219},{"id":255,"depth":299,"text":258},{"id":286,"depth":299,"text":286},"markdown","content:6.maps:_server:nodejs:index.md","content","6.maps/_server/nodejs/index.md","6.maps/_server/nodejs/index","md",[312,316],{"_path":313,"title":314,"description":315},"/maps/_seo/seo","搜索引擎优化","搜索引擎优化包含了对网站内容的基本元素的一系列改动，这些改动通常相互作用，提高用户体验以及增加网站在自然搜索结果中的排名。",{"_path":294,"title":317,"description":318},"NodeJS Require","NodeJS 模块导入的源码解析",1749722328705]