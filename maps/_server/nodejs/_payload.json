[{"data":1,"prerenderedAt":313},["ShallowReactive",2],{"navigation":3,"/maps/_server/nodejs":155,"/maps/_server/nodejs-surround":305},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":156,"_dir":157,"_draft":158,"_partial":159,"_locale":160,"title":161,"description":162,"body":163,"_type":299,"_id":300,"_source":301,"_file":302,"_stem":303,"_extension":304},"/maps/_server/nodejs","_server",false,true,"","NodeJS","NodeJS 是一个非阻塞 IO、事件驱动的服务端 JS 运行环境。",{"type":164,"children":165,"toc":292},"root",[166,174,181,186,192,197,203,208,214,220,225,231,236,242,247,253,259,264,278,283],{"type":167,"tag":168,"props":169,"children":171},"element","h2",{"id":170},"简介",[172],{"type":173,"value":170},"text",{"type":167,"tag":175,"props":176,"children":178},"h4",{"id":177},"nodejs-是什么",[179],{"type":173,"value":180},"NodeJS 是什么？",{"type":167,"tag":182,"props":183,"children":184},"p",{},[185],{"type":173,"value":162},{"type":167,"tag":175,"props":187,"children":189},{"id":188},"非阻塞-io-是什么",[190],{"type":173,"value":191},"非阻塞 IO 是什么？",{"type":167,"tag":182,"props":193,"children":194},{},[195],{"type":173,"value":196},"非阻塞 IO 意味着在执行 IO 操作时，将耗时任务以异步的方式交给子线程处理，等完成之后再通过回调的方式继续执行后续代码。",{"type":167,"tag":175,"props":198,"children":200},{"id":199},"事件循环机制和浏览器中有什么不同",[201],{"type":173,"value":202},"事件循环机制和浏览器中有什么不同？",{"type":167,"tag":182,"props":204,"children":205},{},[206],{"type":173,"value":207},"TODO，类似但稍有区别。",{"type":167,"tag":168,"props":209,"children":211},{"id":210},"v8",[212],{"type":173,"value":213},"V8",{"type":167,"tag":175,"props":215,"children":217},{"id":216},"引擎的垃圾回收机制有了解吗",[218],{"type":173,"value":219},"引擎的垃圾回收机制有了解吗？",{"type":167,"tag":182,"props":221,"children":222},{},[223],{"type":173,"value":224},"V8 使用分代回收机制，将内存分为新生代和老生代空间，分别用不同的算法进行 GC。新生代空间每个周期都会触发 ScavengeGC，俗称小周期。如果两个周期内都没被清除的变量则转移到老生代内存中。老生代空间则使用标记清除算法（和标记紧缩算法）进行清理。",{"type":167,"tag":175,"props":226,"children":228},{"id":227},"新生代空间的-gc-过程是怎样的",[229],{"type":173,"value":230},"新生代空间的 GC 过程是怎样的？",{"type":167,"tag":182,"props":232,"children":233},{},[234],{"type":173,"value":235},"新生代空间通常只有 1-8 MB，被划分为两个等大的区域，出区和入区。新增变量放到入区中。一但入区满了，便把活跃对象复制到出区中，删除不活跃对象（紧缩过程）并交换出区入区，如此称为一个周期。如果活跃对象再两个周期内都没有被清除，则转移只老生代内存中。",{"type":167,"tag":175,"props":237,"children":239},{"id":238},"老生代空间的-gc-过程是怎样的",[240],{"type":173,"value":241},"老生代空间的 GC 过程是怎样的？",{"type":167,"tag":182,"props":243,"children":244},{},[245],{"type":173,"value":246},"老生代空间的 GC 分标记和清除（或紧缩）两个阶段。每次循环，标记算法会将一个对象从队列中取出，将它以及邻接对象标记。到了清除阶段，未被标记的对象都将被删除。如果清楚阶段额外执行紧缩过程，则会尝试将零散的对象移动成连续的整体，以解决内存碎片化问题。为了优化老生代空间 GC 的“全停顿”，V8 将老生代空间的标记过程拆分为了子步骤，这样就可以将标记算法穿插在其它任务过程中执行。",{"type":167,"tag":168,"props":248,"children":250},{"id":249},"api",[251],{"type":173,"value":252},"API",{"type":167,"tag":175,"props":254,"children":256},{"id":255},"nodevm-是什么",[257],{"type":173,"value":258},"node:vm 是什么？",{"type":167,"tag":182,"props":260,"children":261},{},[262],{"type":173,"value":263},"node:vm 模块允许在 V8 虚拟机上下文中编译和运行代码，上下文中的任何属性都被视为全局变量，对全局变量任何改动也反映到上下文对象中。但是 node:vm 不是一个安全机制，不应该使用它来运行不受信任的代码。",{"type":167,"tag":182,"props":265,"children":266},{},[267,269],{"type":173,"value":268},"见：",{"type":167,"tag":270,"props":271,"children":275},"a",{"href":272,"rel":273},"http://nodejs.cn/api/vm.html#vm_vm_executing_javascript",[274],"nofollow",[276],{"type":173,"value":277},"VM",{"type":167,"tag":168,"props":279,"children":281},{"id":280},"源码解析",[282],{"type":173,"value":280},{"type":167,"tag":182,"props":284,"children":285},{},[286],{"type":167,"tag":270,"props":287,"children":289},{"href":288},"/maps/_server/nodejs/source/require",[290],{"type":173,"value":291},"NodeJS | require",{"title":160,"searchDepth":293,"depth":293,"links":294},2,[295,296,297,298],{"id":170,"depth":293,"text":170},{"id":210,"depth":293,"text":213},{"id":249,"depth":293,"text":252},{"id":280,"depth":293,"text":280},"markdown","content:6.maps:_server:nodejs:index.md","content","6.maps/_server/nodejs/index.md","6.maps/_server/nodejs/index","md",[306,310],{"_path":307,"title":308,"description":309},"/maps/_seo/seo","搜索引擎优化","搜索引擎优化包含了对网站内容的基本元素的一系列改动，这些改动通常相互作用，提高用户体验以及增加网站在自然搜索结果中的排名。",{"_path":288,"title":311,"description":312},"NodeJS Require","NodeJS 模块导入的源码解析",1742348683056]