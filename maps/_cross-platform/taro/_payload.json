[{"data":1,"prerenderedAt":2175},["ShallowReactive",2],{"navigation":3,"/maps/_cross-platform/taro":158,"/maps/_cross-platform/taro-surround":2166},[4,35,89,95,122,128,152],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🌪️ tailwind4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":45,"_path":46},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":48,"_path":49},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":51,"_path":52},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":54,"_path":55},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":57,"_path":58},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":60,"_path":61},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":63,"_path":64},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":66,"_path":67},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":69,"_path":70},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":72,"_path":73},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":75,"_path":76},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":78,"_path":79},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":81,"_path":82},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":84,"_path":85},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":87,"_path":88},"📝 技术博客归档","/articles/archive",{"title":90,"_path":91,"children":92},"读书笔记 / Notes","/books",[93],{"title":94,"_path":91},"📕 读书笔记",{"title":96,"_path":97,"children":98},"吉他剧场 / Music","/music",[99,101,104,107,110,113,116,119],{"title":100,"_path":97},"🎸 FingerStyle！",{"title":102,"_path":103},"🌬️ 等待的风","/music/wind",{"title":105,"_path":106},"💕 约定的海洋","/music/ocean",{"title":108,"_path":109},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":111,"_path":112},"🌏 残酷天使的行动纲领","/music/eva",{"title":114,"_path":115},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":117,"_path":118},"🍷 Wu Wei","/music/wu-wei",{"title":120,"_path":121},"🌅 无题","/music/untitled",{"title":123,"_path":124,"children":125},"知识地图 / Maps","/maps",[126],{"title":127,"_path":124},"🏁 知识地图",{"title":129,"_path":130,"children":131},"造物 / Make","/tools",[132,134,137,140,143,146,149],{"title":133,"_path":130},"🧰 工具收集",{"title":135,"_path":136},"📕 博客","/tools/blog",{"title":138,"_path":139},"🥥 Coconut","/tools/coconut",{"title":141,"_path":142},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":144,"_path":145},"🌐 AnySort","/tools/anysort",{"title":147,"_path":148},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":150,"_path":151},"👓 Crapto","/tools/crypto-inline",{"title":153,"_path":154,"children":155},"我 / About","/hire",[156],{"title":157,"_path":154},"📬 技术简历",{"_path":159,"_dir":160,"_draft":161,"_partial":162,"_locale":163,"title":164,"description":165,"body":166,"_type":2160,"_id":2161,"_source":2162,"_file":2163,"_stem":2164,"_extension":2165},"/maps/_cross-platform/taro","_cross-platform",false,true,"","Taro","Taro 是一个多端开发解决方案，支持用 React/Vue/Nerv 等框架开发小程序、H5、App 等应用。",{"type":167,"children":168,"toc":2158},"root",[169,184,194,199,297,305,310,318,327,332,340,345,353,358,366,371,379,392,397,402,713,721,726,730,741,744,752,757,765,770,778,783,791,796,804,809,1184,1792,1800,1805,1808,1818,1823,1831,1839,1844,1852,1860,1868,1876,1884,1889,1894,1902,1907,1915,1923,1931,1939,1944,1952,1957,1965,1973,1976,1984,1992,1997,2005,2013,2018,2021,2032,2037,2045,2048,2053,2073,2081,2084,2095,2099,2103,2112,2115,2120,2129,2136,2145,2152],{"type":170,"tag":171,"props":172,"children":174},"element","h4",{"id":173},"官方博客汇总",[175],{"type":170,"tag":176,"props":177,"children":181},"a",{"href":178,"rel":179},"https://taro-docs.jd.com/taro/blog/2018-06-07-Taro",[180],"nofollow",[182],{"type":183,"value":173},"text",{"type":170,"tag":185,"props":186,"children":187},"p",{},[188],{"type":170,"tag":189,"props":190,"children":191},"q",{},[192],{"type":183,"value":193},"而对于微信小程序而言，使用 React 完全没有办法进行开发——直到我们从 codemod 得到灵感：“在一个优秀且严格的规范限制下，从更高抽象的视角（语法树）来看，每个人写的代码都差不多”。",{"type":170,"tag":185,"props":195,"children":196},{},[197],{"type":183,"value":198},"Codemod 就是一段正则脚本。其实在乘云的时候我好像也在某个项目迁移到百度小程序时干过这事儿。",{"type":170,"tag":200,"props":201,"children":205},"pre",{"className":202,"code":203,"language":204,"meta":163,"style":163},"language-shell shiki shiki-themes material-theme-lighter github-light github-dark monokai","codemod -m -d /home/jrosenstein/www --extensions php,html \\\n    '\u003Cfont *color=\"?(.*?)\"?>(.*?)\u003C/font>' \\\n    '\u003Cspan style=\"color: \\1;\">\\2\u003C/span>'\n","shell",[206],{"type":170,"tag":207,"props":208,"children":209},"code",{"__ignoreMap":163},[210,255,279],{"type":170,"tag":211,"props":212,"children":215},"span",{"class":213,"line":214},"line",1,[216,222,228,233,239,244,249],{"type":170,"tag":211,"props":217,"children":219},{"style":218},"--shiki-light:#E2931D;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[220],{"type":183,"value":221},"codemod",{"type":170,"tag":211,"props":223,"children":225},{"style":224},"--shiki-light:#91B859;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[226],{"type":183,"value":227}," -m",{"type":170,"tag":211,"props":229,"children":230},{"style":224},[231],{"type":183,"value":232}," -d",{"type":170,"tag":211,"props":234,"children":236},{"style":235},"--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[237],{"type":183,"value":238}," /home/jrosenstein/www",{"type":170,"tag":211,"props":240,"children":241},{"style":224},[242],{"type":183,"value":243}," --extensions",{"type":170,"tag":211,"props":245,"children":246},{"style":235},[247],{"type":183,"value":248}," php,html",{"type":170,"tag":211,"props":250,"children":252},{"style":251},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[253],{"type":183,"value":254}," \\\n",{"type":170,"tag":211,"props":256,"children":258},{"class":213,"line":257},2,[259,265,270,275],{"type":170,"tag":211,"props":260,"children":262},{"style":261},"--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[263],{"type":183,"value":264},"    '",{"type":170,"tag":211,"props":266,"children":267},{"style":235},[268],{"type":183,"value":269},"\u003Cfont *color=\"?(.*?)\"?>(.*?)\u003C/font>",{"type":170,"tag":211,"props":271,"children":272},{"style":261},[273],{"type":183,"value":274},"'",{"type":170,"tag":211,"props":276,"children":277},{"style":251},[278],{"type":183,"value":254},{"type":170,"tag":211,"props":280,"children":282},{"class":213,"line":281},3,[283,287,292],{"type":170,"tag":211,"props":284,"children":285},{"style":261},[286],{"type":183,"value":264},{"type":170,"tag":211,"props":288,"children":289},{"style":235},[290],{"type":183,"value":291},"\u003Cspan style=\"color: \\1;\">\\2\u003C/span>",{"type":170,"tag":211,"props":293,"children":294},{"style":261},[295],{"type":183,"value":296},"'\n",{"type":170,"tag":185,"props":298,"children":299},{},[300],{"type":170,"tag":189,"props":301,"children":302},{},[303],{"type":183,"value":304},"从开发的角度来说，小程序的开发体验就非常值得商榷了，不仅语法上显得有些不伦不类，而且有些莫名其妙的坑也经常让人不经意间感叹一下和谐社会，从市面上层出不穷的小程序开发框架就可见一斑。",{"type":170,"tag":185,"props":306,"children":307},{},[308],{"type":183,"value":309},"依赖管理混乱；不能用 CSS 预处理器或 CSS Module；ES6 支持度低。.. 这些其实是小程序 IDE 的问题，如果小程序的开发一开始就是确定一套规范，使用 JS 开发，然后围绕代码产出一套 IDE 插件（类似 Vue + Vue SFC + VS Code 插件），那会少很多麻烦。最要命的是，所有人都知道微信的这个“独特的” DSL 中间层其实就是开发的性能瓶颈所在。虽然说 Taro 博客从写从数百个 Nerv 组件编译到微信只要几十秒，但这背后的成本其实是 Taro 团队，甚至整个社区要为微信小程序填坑投入人力资源。如果按照“不符合直觉的坑才是真坑”的原则来说，上面提到的微信小程序的这些缺陷还不算坑，但它确实浪费了许多人的时间。",{"type":170,"tag":185,"props":311,"children":312},{},[313],{"type":170,"tag":189,"props":314,"children":315},{},[316],{"type":183,"value":317},"每调用一次 setData，小程序内部都会将该部分数据在逻辑层（运行环境 JSCore）进行类似序列化的操作，将数据转换成字符串形式传递给视图层（运行环境 WebView），视图层通过反序列化拿到数据后再进行页面渲染",{"type":170,"tag":185,"props":319,"children":320},{},[321],{"type":170,"tag":322,"props":323,"children":326},"img",{"alt":324,"src":325},"WebView & JSCore in mini-program","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616093203.png",[],{"type":170,"tag":185,"props":328,"children":329},{},[330],{"type":183,"value":331},"Taro 会自动把多次 setData 合并，并且剔出只发生了改变的部分，即数据 diff。这个算法有意思，TODO。",{"type":170,"tag":185,"props":333,"children":334},{},[335],{"type":170,"tag":189,"props":336,"children":337},{},[338],{"type":183,"value":339},"Template 模板方案是一个失败的组件化方案，Taro 开源初期的 Bug 主要来源于此。因为这一方案将 JS 逻辑与模板拆分开了，需要手工来保证 JS 与模板中数据一致，这样在循环组件渲染、组件多重嵌套的情况下，要保证组件正确渲染与 props 正确传递的难度非常大，实现的成本也非常高。",{"type":170,"tag":185,"props":341,"children":342},{},[343],{"type":183,"value":344},"其实吧，还是 IDE 的锅。同样是 string-based 的 Vuex 就不会用这种问题，如果说 Vuex 太轻无法和 Template 作为一个量级的比较的话，那么 HTML 和 CSS 脱离了 IDE 也是 string-based 的。",{"type":170,"tag":185,"props":346,"children":347},{},[348],{"type":170,"tag":322,"props":349,"children":352},{"alt":350,"src":351},"Taro UI","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616094000.png",[],{"type":170,"tag":185,"props":354,"children":355},{},[356],{"type":183,"value":357},"Taro UI 这个组件划分思路可以给 Lego Editor 做参考。",{"type":170,"tag":185,"props":359,"children":360},{},[361],{"type":170,"tag":189,"props":362,"children":363},{},[364],{"type":183,"value":365},"模态框等组件无法遮挡 input、textarea 等原生组件，造成穿透效果。 可喜的是，微信官方团队已经在改善该问题，对小程序原生组件引入了同层渲染模式。",{"type":170,"tag":185,"props":367,"children":368},{},[369],{"type":183,"value":370},"这个好像是说 cover-view 吧？",{"type":170,"tag":185,"props":372,"children":373},{},[374],{"type":170,"tag":189,"props":375,"children":376},{},[377],{"type":183,"value":378},"事实上，@tarojs/components 的源码本身是使用 ESM 规范的，所以只要让 webpack 直接解析组件库的源码，我们立即就可以享受到 webpack 自带 treeshaking 带来的好处了。",{"type":170,"tag":185,"props":380,"children":381},{},[382,387],{"type":170,"tag":322,"props":383,"children":386},{"alt":384,"src":385},"Taro UI ESM","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616100229.png",[],{"type":170,"tag":322,"props":388,"children":391},{"alt":389,"src":390},"Taro UI package.json","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616100235.png",[],{"type":170,"tag":185,"props":393,"children":394},{},[395],{"type":183,"value":396},"记得没错的话，ElementUI 的按需引入依赖插件 babel-plugin-component，把 import { A } from 'element' 转换为类似 import A from 'element/a' 的形式。",{"type":170,"tag":185,"props":398,"children":399},{},[400],{"type":183,"value":401},"Taro 的 API 的摇树优化，也是通过 babel 插件实现的，但和 ElementUI 不一样。插件会把把 Taro.xxx 这种属性调用单独提取并转换。这些属性是 Taro 编译时通过 Rollup 导出的。呐呐，复杂度开始变大了。不过感觉也很有意思。",{"type":170,"tag":200,"props":403,"children":407},{"className":404,"code":405,"language":406,"meta":163,"style":163},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","// 编译前\nimport Taro from '@tarojs/taro-h5';\nTaro.initPxTransform({});\nTaro.setStorage()\nTaro['getStorage']()\n\n// 编译后\nimport Taro, { setStorage as _setStorage, getStorage as _getStorage } from '@tarojs/taro-h5';\nTaro.initPxTransform({});\n_setStorage();\n_getStorage();\n","js",[408],{"type":170,"tag":207,"props":409,"children":410},{"__ignoreMap":163},[411,420,460,497,519,546,555,564,646,678,696],{"type":170,"tag":211,"props":412,"children":413},{"class":213,"line":214},[414],{"type":170,"tag":211,"props":415,"children":417},{"style":416},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[418],{"type":183,"value":419},"// 编译前\n",{"type":170,"tag":211,"props":421,"children":422},{"class":213,"line":257},[423,429,435,440,445,450,454],{"type":170,"tag":211,"props":424,"children":426},{"style":425},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[427],{"type":183,"value":428},"import",{"type":170,"tag":211,"props":430,"children":432},{"style":431},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[433],{"type":183,"value":434}," Taro ",{"type":170,"tag":211,"props":436,"children":437},{"style":425},[438],{"type":183,"value":439},"from",{"type":170,"tag":211,"props":441,"children":442},{"style":261},[443],{"type":183,"value":444}," '",{"type":170,"tag":211,"props":446,"children":447},{"style":235},[448],{"type":183,"value":449},"@tarojs/taro-h5",{"type":170,"tag":211,"props":451,"children":452},{"style":261},[453],{"type":183,"value":274},{"type":170,"tag":211,"props":455,"children":457},{"style":456},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[458],{"type":183,"value":459},";\n",{"type":170,"tag":211,"props":461,"children":462},{"class":213,"line":281},[463,467,472,478,483,488,493],{"type":170,"tag":211,"props":464,"children":465},{"style":431},[466],{"type":183,"value":164},{"type":170,"tag":211,"props":468,"children":469},{"style":456},[470],{"type":183,"value":471},".",{"type":170,"tag":211,"props":473,"children":475},{"style":474},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[476],{"type":183,"value":477},"initPxTransform",{"type":170,"tag":211,"props":479,"children":480},{"style":431},[481],{"type":183,"value":482},"(",{"type":170,"tag":211,"props":484,"children":485},{"style":456},[486],{"type":183,"value":487},"{}",{"type":170,"tag":211,"props":489,"children":490},{"style":431},[491],{"type":183,"value":492},")",{"type":170,"tag":211,"props":494,"children":495},{"style":456},[496],{"type":183,"value":459},{"type":170,"tag":211,"props":498,"children":500},{"class":213,"line":499},4,[501,505,509,514],{"type":170,"tag":211,"props":502,"children":503},{"style":431},[504],{"type":183,"value":164},{"type":170,"tag":211,"props":506,"children":507},{"style":456},[508],{"type":183,"value":471},{"type":170,"tag":211,"props":510,"children":511},{"style":474},[512],{"type":183,"value":513},"setStorage",{"type":170,"tag":211,"props":515,"children":516},{"style":431},[517],{"type":183,"value":518},"()\n",{"type":170,"tag":211,"props":520,"children":522},{"class":213,"line":521},5,[523,528,532,537,541],{"type":170,"tag":211,"props":524,"children":525},{"style":431},[526],{"type":183,"value":527},"Taro[",{"type":170,"tag":211,"props":529,"children":530},{"style":261},[531],{"type":183,"value":274},{"type":170,"tag":211,"props":533,"children":534},{"style":235},[535],{"type":183,"value":536},"getStorage",{"type":170,"tag":211,"props":538,"children":539},{"style":261},[540],{"type":183,"value":274},{"type":170,"tag":211,"props":542,"children":543},{"style":431},[544],{"type":183,"value":545},"]()\n",{"type":170,"tag":211,"props":547,"children":549},{"class":213,"line":548},6,[550],{"type":170,"tag":211,"props":551,"children":552},{"emptyLinePlaceholder":162},[553],{"type":183,"value":554},"\n",{"type":170,"tag":211,"props":556,"children":558},{"class":213,"line":557},7,[559],{"type":170,"tag":211,"props":560,"children":561},{"style":416},[562],{"type":183,"value":563},"// 编译后\n",{"type":170,"tag":211,"props":565,"children":567},{"class":213,"line":566},8,[568,572,577,582,587,592,597,602,606,611,615,620,625,630,634,638,642],{"type":170,"tag":211,"props":569,"children":570},{"style":425},[571],{"type":183,"value":428},{"type":170,"tag":211,"props":573,"children":574},{"style":431},[575],{"type":183,"value":576}," Taro",{"type":170,"tag":211,"props":578,"children":579},{"style":456},[580],{"type":183,"value":581},",",{"type":170,"tag":211,"props":583,"children":584},{"style":456},[585],{"type":183,"value":586}," {",{"type":170,"tag":211,"props":588,"children":589},{"style":431},[590],{"type":183,"value":591}," setStorage",{"type":170,"tag":211,"props":593,"children":594},{"style":425},[595],{"type":183,"value":596}," as",{"type":170,"tag":211,"props":598,"children":599},{"style":431},[600],{"type":183,"value":601}," _setStorage",{"type":170,"tag":211,"props":603,"children":604},{"style":456},[605],{"type":183,"value":581},{"type":170,"tag":211,"props":607,"children":608},{"style":431},[609],{"type":183,"value":610}," getStorage",{"type":170,"tag":211,"props":612,"children":613},{"style":425},[614],{"type":183,"value":596},{"type":170,"tag":211,"props":616,"children":617},{"style":431},[618],{"type":183,"value":619}," _getStorage",{"type":170,"tag":211,"props":621,"children":622},{"style":456},[623],{"type":183,"value":624}," }",{"type":170,"tag":211,"props":626,"children":627},{"style":425},[628],{"type":183,"value":629}," from",{"type":170,"tag":211,"props":631,"children":632},{"style":261},[633],{"type":183,"value":444},{"type":170,"tag":211,"props":635,"children":636},{"style":235},[637],{"type":183,"value":449},{"type":170,"tag":211,"props":639,"children":640},{"style":261},[641],{"type":183,"value":274},{"type":170,"tag":211,"props":643,"children":644},{"style":456},[645],{"type":183,"value":459},{"type":170,"tag":211,"props":647,"children":649},{"class":213,"line":648},9,[650,654,658,662,666,670,674],{"type":170,"tag":211,"props":651,"children":652},{"style":431},[653],{"type":183,"value":164},{"type":170,"tag":211,"props":655,"children":656},{"style":456},[657],{"type":183,"value":471},{"type":170,"tag":211,"props":659,"children":660},{"style":474},[661],{"type":183,"value":477},{"type":170,"tag":211,"props":663,"children":664},{"style":431},[665],{"type":183,"value":482},{"type":170,"tag":211,"props":667,"children":668},{"style":456},[669],{"type":183,"value":487},{"type":170,"tag":211,"props":671,"children":672},{"style":431},[673],{"type":183,"value":492},{"type":170,"tag":211,"props":675,"children":676},{"style":456},[677],{"type":183,"value":459},{"type":170,"tag":211,"props":679,"children":681},{"class":213,"line":680},10,[682,687,692],{"type":170,"tag":211,"props":683,"children":684},{"style":474},[685],{"type":183,"value":686},"_setStorage",{"type":170,"tag":211,"props":688,"children":689},{"style":431},[690],{"type":183,"value":691},"()",{"type":170,"tag":211,"props":693,"children":694},{"style":456},[695],{"type":183,"value":459},{"type":170,"tag":211,"props":697,"children":699},{"class":213,"line":698},11,[700,705,709],{"type":170,"tag":211,"props":701,"children":702},{"style":474},[703],{"type":183,"value":704},"_getStorage",{"type":170,"tag":211,"props":706,"children":707},{"style":431},[708],{"type":183,"value":691},{"type":170,"tag":211,"props":710,"children":711},{"style":456},[712],{"type":183,"value":459},{"type":170,"tag":185,"props":714,"children":715},{},[716],{"type":170,"tag":189,"props":717,"children":718},{},[719],{"type":183,"value":720},"Taro 会默认将 clickHandler 的作用域绑定为当前组件实例，但是这并不符合 React 中的实际情况，所以，在 1.3 版本中，我们对这一问题进行了修复，现在 JSX 中的事件监听函数必须绑定作用域，否则就会报错。",{"type":170,"tag":185,"props":722,"children":723},{},[724],{"type":183,"value":725},"说前端是魔法，也就是说，你正在写的这些稀奇古怪的好用的东西居然是通过插件完成的，一但其中某个插件设计思路发生了变动，你就只能死熬过痛苦的应变期。",{"type":170,"tag":727,"props":728,"children":729},"hr",{},[],{"type":170,"tag":731,"props":732,"children":734},"h5",{"id":733},"小程序多端框架全面测评",[735],{"type":170,"tag":176,"props":736,"children":739},{"href":737,"rel":738},"https://developers.weixin.qq.com/community/develop/article/doc/000eaadb944de06374485c3ed51813",[180],[740],{"type":183,"value":733},{"type":170,"tag":727,"props":742,"children":743},{},[],{"type":170,"tag":185,"props":745,"children":746},{},[747],{"type":170,"tag":189,"props":748,"children":749},{},[750],{"type":183,"value":751},"最开始小程序就是为了微型创新型业务打造的一个框架，最多只能运行 1m 的包。可是后来发现很多厂商把越来越多的业务搬到了小程序上，小程序的能力也在不断地开放，变得越来越强大。于是后来打包限制上升到了 2m，然后引入了分包，现在已经已经可以上传 8m 的小程序。其实这个体积已经可以实现非常巨型非常复杂的业务了。就从 Taro 的用户来看，例如京东购物小程序和 58 同城小程序不管从代码的数量还是复杂度都不亚于 PC 端业务，所以我们可以说前端开发的复杂度正在向小程序端转移。",{"type":170,"tag":185,"props":753,"children":754},{},[755],{"type":183,"value":756},"这应该是让人感到不安的事实。",{"type":170,"tag":185,"props":758,"children":759},{},[760],{"type":170,"tag":189,"props":761,"children":762},{},[763],{"type":183,"value":764},"Dan Abramov 在 2018 年的 ReactConf 向大家首次介绍了 React Hooks：“很多新手应该会被 Class 组件绑定事件的 this 迷惑过，绑定事件可以用 bind，可以直接写箭头函数，也可以写类属性函数，但到底哪种方法才是最好的呢？而到了 ES 2018，class 还有多种语法，例如装饰器，例如 private fileds 这些奇奇怪怪的语法也为新手增加了更多的困惑。”",{"type":170,"tag":185,"props":766,"children":767},{},[768],{"type":183,"value":769},"说“新手”意味着“熟练的开发需要对糟糕的设计保持容忍，当他习以为常的时候就变成老手了”。把“新手”替换成“开发者”可能是更正确的价值观。",{"type":170,"tag":185,"props":771,"children":772},{},[773],{"type":170,"tag":189,"props":774,"children":775},{},[776],{"type":183,"value":777},"熟悉小程序原生开发的同学可能会知道，所有 props 的传递都会被小程序序列化掉，如果传递了一个复杂的对象最终会变成一个 JSON。",{"type":170,"tag":185,"props":779,"children":780},{},[781],{"type":183,"value":782},"用 Taro 的 context 则没有这层限制。Context 可以支持传递复杂对象，很好奇是怎么实现的，TODO。",{"type":170,"tag":185,"props":784,"children":785},{},[786],{"type":170,"tag":322,"props":787,"children":790},{"alt":788,"src":789},"VueConf China 2019 - Why Hooks","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616104055.png",[],{"type":170,"tag":185,"props":792,"children":793},{},[794],{"type":183,"value":795},"有点类似继承多个类、多重继承和类组合。",{"type":170,"tag":185,"props":797,"children":798},{},[799],{"type":170,"tag":189,"props":800,"children":801},{},[802],{"type":183,"value":803},"简单来说，Hooks 就是一组在 React 组件中运行的函数，让你在不编写 Class 的情况下使用 state 及其它特性。",{"type":170,"tag":185,"props":805,"children":806},{},[807],{"type":183,"value":808},"原来 Taro 1.3 就支持 Hooks 了，那时候好像正好准备离职了，没看到这东西。Taro 的文档简单介绍了 Hooks 的原理：Hooks 是一个全局维护的状态栈，每次新运行的 useState 会新增一个 Hook，并返回 initialState 和 changeInitialState 组成的元组，而后者会把新增 Hook 时所依赖的函数（也就是组件）CurrentOwner 记录到下一次需要更新的队列中。",{"type":170,"tag":200,"props":810,"children":812},{"className":404,"code":811,"language":406,"meta":163,"style":163},"function getHook (): Hook {\n  if (CurrentOwner.current === null) {\n    throw new Error(`invalid hooks call: hooks can only be called in a taro component.`)\n  }\n  const index = CurrentOwner.index++ // hook 在该 Taro 函数中的 ID\n  const hooks: Hook[] = CurrentOwner.current.hooks // 所有的 hooks\n  if (index >= hooks.length) { // 如果 hook 还没有创建\n    hooks.push({} as Hook) // 对象就是 hook 的内部状态\n  }\n  return hooks[index] // 返回正在执行的 hook 状态\n}\n",[813],{"type":170,"tag":207,"props":814,"children":815},{"__ignoreMap":163},[816,852,901,942,950,993,1049,1096,1138,1145,1176],{"type":170,"tag":211,"props":817,"children":818},{"class":213,"line":214},[819,825,830,835,841,847],{"type":170,"tag":211,"props":820,"children":822},{"style":821},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[823],{"type":183,"value":824},"function",{"type":170,"tag":211,"props":826,"children":827},{"style":474},[828],{"type":183,"value":829}," getHook",{"type":170,"tag":211,"props":831,"children":832},{"style":456},[833],{"type":183,"value":834}," ()",{"type":170,"tag":211,"props":836,"children":838},{"style":837},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[839],{"type":183,"value":840},":",{"type":170,"tag":211,"props":842,"children":844},{"style":843},"--shiki-light:#E2931D;--shiki-light-text-decoration:inherit;--shiki-default:#6F42C1;--shiki-default-text-decoration:inherit;--shiki-dark:#B392F0;--shiki-dark-text-decoration:inherit;--shiki-sepia:#A6E22E;--shiki-sepia-text-decoration:underline",[845],{"type":183,"value":846}," Hook",{"type":170,"tag":211,"props":848,"children":849},{"style":456},[850],{"type":183,"value":851}," {\n",{"type":170,"tag":211,"props":853,"children":854},{"class":213,"line":257},[855,860,866,871,875,880,885,891,896],{"type":170,"tag":211,"props":856,"children":857},{"style":425},[858],{"type":183,"value":859},"  if",{"type":170,"tag":211,"props":861,"children":863},{"style":862},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[864],{"type":183,"value":865}," (",{"type":170,"tag":211,"props":867,"children":868},{"style":431},[869],{"type":183,"value":870},"CurrentOwner",{"type":170,"tag":211,"props":872,"children":873},{"style":456},[874],{"type":183,"value":471},{"type":170,"tag":211,"props":876,"children":877},{"style":431},[878],{"type":183,"value":879},"current",{"type":170,"tag":211,"props":881,"children":882},{"style":837},[883],{"type":183,"value":884}," ===",{"type":170,"tag":211,"props":886,"children":888},{"style":887},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[889],{"type":183,"value":890}," null",{"type":170,"tag":211,"props":892,"children":893},{"style":862},[894],{"type":183,"value":895},") ",{"type":170,"tag":211,"props":897,"children":898},{"style":456},[899],{"type":183,"value":900},"{\n",{"type":170,"tag":211,"props":902,"children":903},{"class":213,"line":281},[904,909,914,919,923,928,933,937],{"type":170,"tag":211,"props":905,"children":906},{"style":425},[907],{"type":183,"value":908},"    throw",{"type":170,"tag":211,"props":910,"children":911},{"style":837},[912],{"type":183,"value":913}," new",{"type":170,"tag":211,"props":915,"children":916},{"style":474},[917],{"type":183,"value":918}," Error",{"type":170,"tag":211,"props":920,"children":921},{"style":862},[922],{"type":183,"value":482},{"type":170,"tag":211,"props":924,"children":925},{"style":261},[926],{"type":183,"value":927},"`",{"type":170,"tag":211,"props":929,"children":930},{"style":235},[931],{"type":183,"value":932},"invalid hooks call: hooks can only be called in a taro component.",{"type":170,"tag":211,"props":934,"children":935},{"style":261},[936],{"type":183,"value":927},{"type":170,"tag":211,"props":938,"children":939},{"style":862},[940],{"type":183,"value":941},")\n",{"type":170,"tag":211,"props":943,"children":944},{"class":213,"line":499},[945],{"type":170,"tag":211,"props":946,"children":947},{"style":456},[948],{"type":183,"value":949},"  }\n",{"type":170,"tag":211,"props":951,"children":952},{"class":213,"line":521},[953,958,964,969,974,978,983,988],{"type":170,"tag":211,"props":954,"children":955},{"style":821},[956],{"type":183,"value":957},"  const",{"type":170,"tag":211,"props":959,"children":961},{"style":960},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[962],{"type":183,"value":963}," index",{"type":170,"tag":211,"props":965,"children":966},{"style":837},[967],{"type":183,"value":968}," =",{"type":170,"tag":211,"props":970,"children":971},{"style":431},[972],{"type":183,"value":973}," CurrentOwner",{"type":170,"tag":211,"props":975,"children":976},{"style":456},[977],{"type":183,"value":471},{"type":170,"tag":211,"props":979,"children":980},{"style":431},[981],{"type":183,"value":982},"index",{"type":170,"tag":211,"props":984,"children":985},{"style":837},[986],{"type":183,"value":987},"++",{"type":170,"tag":211,"props":989,"children":990},{"style":416},[991],{"type":183,"value":992}," // hook 在该 Taro 函数中的 ID\n",{"type":170,"tag":211,"props":994,"children":995},{"class":213,"line":548},[996,1000,1005,1009,1013,1018,1023,1027,1031,1035,1039,1044],{"type":170,"tag":211,"props":997,"children":998},{"style":821},[999],{"type":183,"value":957},{"type":170,"tag":211,"props":1001,"children":1002},{"style":960},[1003],{"type":183,"value":1004}," hooks",{"type":170,"tag":211,"props":1006,"children":1007},{"style":837},[1008],{"type":183,"value":840},{"type":170,"tag":211,"props":1010,"children":1011},{"style":843},[1012],{"type":183,"value":846},{"type":170,"tag":211,"props":1014,"children":1015},{"style":862},[1016],{"type":183,"value":1017},"[] ",{"type":170,"tag":211,"props":1019,"children":1020},{"style":837},[1021],{"type":183,"value":1022},"=",{"type":170,"tag":211,"props":1024,"children":1025},{"style":431},[1026],{"type":183,"value":973},{"type":170,"tag":211,"props":1028,"children":1029},{"style":456},[1030],{"type":183,"value":471},{"type":170,"tag":211,"props":1032,"children":1033},{"style":431},[1034],{"type":183,"value":879},{"type":170,"tag":211,"props":1036,"children":1037},{"style":456},[1038],{"type":183,"value":471},{"type":170,"tag":211,"props":1040,"children":1041},{"style":431},[1042],{"type":183,"value":1043},"hooks",{"type":170,"tag":211,"props":1045,"children":1046},{"style":416},[1047],{"type":183,"value":1048}," // 所有的 hooks\n",{"type":170,"tag":211,"props":1050,"children":1051},{"class":213,"line":557},[1052,1056,1060,1064,1069,1073,1077,1082,1086,1091],{"type":170,"tag":211,"props":1053,"children":1054},{"style":425},[1055],{"type":183,"value":859},{"type":170,"tag":211,"props":1057,"children":1058},{"style":862},[1059],{"type":183,"value":865},{"type":170,"tag":211,"props":1061,"children":1062},{"style":431},[1063],{"type":183,"value":982},{"type":170,"tag":211,"props":1065,"children":1066},{"style":837},[1067],{"type":183,"value":1068}," >=",{"type":170,"tag":211,"props":1070,"children":1071},{"style":431},[1072],{"type":183,"value":1004},{"type":170,"tag":211,"props":1074,"children":1075},{"style":456},[1076],{"type":183,"value":471},{"type":170,"tag":211,"props":1078,"children":1079},{"style":960},[1080],{"type":183,"value":1081},"length",{"type":170,"tag":211,"props":1083,"children":1084},{"style":862},[1085],{"type":183,"value":895},{"type":170,"tag":211,"props":1087,"children":1088},{"style":456},[1089],{"type":183,"value":1090},"{",{"type":170,"tag":211,"props":1092,"children":1093},{"style":416},[1094],{"type":183,"value":1095}," // 如果 hook 还没有创建\n",{"type":170,"tag":211,"props":1097,"children":1098},{"class":213,"line":566},[1099,1104,1108,1113,1117,1121,1125,1129,1133],{"type":170,"tag":211,"props":1100,"children":1101},{"style":431},[1102],{"type":183,"value":1103},"    hooks",{"type":170,"tag":211,"props":1105,"children":1106},{"style":456},[1107],{"type":183,"value":471},{"type":170,"tag":211,"props":1109,"children":1110},{"style":474},[1111],{"type":183,"value":1112},"push",{"type":170,"tag":211,"props":1114,"children":1115},{"style":862},[1116],{"type":183,"value":482},{"type":170,"tag":211,"props":1118,"children":1119},{"style":456},[1120],{"type":183,"value":487},{"type":170,"tag":211,"props":1122,"children":1123},{"style":425},[1124],{"type":183,"value":596},{"type":170,"tag":211,"props":1126,"children":1127},{"style":843},[1128],{"type":183,"value":846},{"type":170,"tag":211,"props":1130,"children":1131},{"style":862},[1132],{"type":183,"value":895},{"type":170,"tag":211,"props":1134,"children":1135},{"style":416},[1136],{"type":183,"value":1137},"// 对象就是 hook 的内部状态\n",{"type":170,"tag":211,"props":1139,"children":1140},{"class":213,"line":648},[1141],{"type":170,"tag":211,"props":1142,"children":1143},{"style":456},[1144],{"type":183,"value":949},{"type":170,"tag":211,"props":1146,"children":1147},{"class":213,"line":680},[1148,1153,1157,1162,1166,1171],{"type":170,"tag":211,"props":1149,"children":1150},{"style":425},[1151],{"type":183,"value":1152},"  return",{"type":170,"tag":211,"props":1154,"children":1155},{"style":431},[1156],{"type":183,"value":1004},{"type":170,"tag":211,"props":1158,"children":1159},{"style":862},[1160],{"type":183,"value":1161},"[",{"type":170,"tag":211,"props":1163,"children":1164},{"style":431},[1165],{"type":183,"value":982},{"type":170,"tag":211,"props":1167,"children":1168},{"style":862},[1169],{"type":183,"value":1170},"] ",{"type":170,"tag":211,"props":1172,"children":1173},{"style":416},[1174],{"type":183,"value":1175},"// 返回正在执行的 hook 状态\n",{"type":170,"tag":211,"props":1177,"children":1178},{"class":213,"line":698},[1179],{"type":170,"tag":211,"props":1180,"children":1181},{"style":456},[1182],{"type":183,"value":1183},"}\n",{"type":170,"tag":200,"props":1185,"children":1187},{"className":404,"code":1186,"language":406,"meta":163,"style":163},"function useState\u003CS> (initialState: S | (() => S)): [S, Dispatch\u003CSetStateAction\u003CS>>] {\n  if (isFunction(initialState)) { // 如果 initialState 是函数\n    initialState = initialState() // 就直接执行\n  }\n  const hook = getHook() as HookState\u003CS> // 找到该函数中对应的 hook\n  if (isUndefined(hook.state)) { // 如果 hook 还没有状态\n    hook.component = Current.current! // 正在执行的 Taro 函数，缓存起来\n    hook.state = [ // hook.state 就是我们要返回的元组\n      initialState,\n      (action) => {\n        hook.state[0] = isFunction(action) ? action(hook.state[0]) : action\n        enqueueRender(hook.component) // 加入更新队列\n      }\n    ]\n  }\n  return hook.state // 已经创建 hook 就直接返回\n}\n",[1188],{"type":170,"tag":207,"props":1189,"children":1190},{"__ignoreMap":163},[1191,1319,1357,1384,1391,1442,1489,1533,1562,1575,1600,1699,1733,1742,1751,1759,1784],{"type":170,"tag":211,"props":1192,"children":1193},{"class":213,"line":214},[1194,1198,1203,1208,1213,1218,1222,1228,1232,1237,1242,1246,1250,1255,1259,1263,1267,1271,1276,1280,1284,1289,1293,1298,1302,1306,1311,1315],{"type":170,"tag":211,"props":1195,"children":1196},{"style":821},[1197],{"type":183,"value":824},{"type":170,"tag":211,"props":1199,"children":1200},{"style":474},[1201],{"type":183,"value":1202}," useState",{"type":170,"tag":211,"props":1204,"children":1205},{"style":456},[1206],{"type":183,"value":1207},"\u003C",{"type":170,"tag":211,"props":1209,"children":1210},{"style":843},[1211],{"type":183,"value":1212},"S",{"type":170,"tag":211,"props":1214,"children":1215},{"style":456},[1216],{"type":183,"value":1217},">",{"type":170,"tag":211,"props":1219,"children":1220},{"style":456},[1221],{"type":183,"value":865},{"type":170,"tag":211,"props":1223,"children":1225},{"style":1224},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[1226],{"type":183,"value":1227},"initialState",{"type":170,"tag":211,"props":1229,"children":1230},{"style":837},[1231],{"type":183,"value":840},{"type":170,"tag":211,"props":1233,"children":1234},{"style":843},[1235],{"type":183,"value":1236}," S",{"type":170,"tag":211,"props":1238,"children":1239},{"style":837},[1240],{"type":183,"value":1241}," |",{"type":170,"tag":211,"props":1243,"children":1244},{"style":431},[1245],{"type":183,"value":865},{"type":170,"tag":211,"props":1247,"children":1248},{"style":456},[1249],{"type":183,"value":691},{"type":170,"tag":211,"props":1251,"children":1252},{"style":821},[1253],{"type":183,"value":1254}," =>",{"type":170,"tag":211,"props":1256,"children":1257},{"style":843},[1258],{"type":183,"value":1236},{"type":170,"tag":211,"props":1260,"children":1261},{"style":431},[1262],{"type":183,"value":492},{"type":170,"tag":211,"props":1264,"children":1265},{"style":456},[1266],{"type":183,"value":492},{"type":170,"tag":211,"props":1268,"children":1269},{"style":837},[1270],{"type":183,"value":840},{"type":170,"tag":211,"props":1272,"children":1273},{"style":431},[1274],{"type":183,"value":1275}," [",{"type":170,"tag":211,"props":1277,"children":1278},{"style":843},[1279],{"type":183,"value":1212},{"type":170,"tag":211,"props":1281,"children":1282},{"style":456},[1283],{"type":183,"value":581},{"type":170,"tag":211,"props":1285,"children":1286},{"style":843},[1287],{"type":183,"value":1288}," Dispatch",{"type":170,"tag":211,"props":1290,"children":1291},{"style":456},[1292],{"type":183,"value":1207},{"type":170,"tag":211,"props":1294,"children":1295},{"style":843},[1296],{"type":183,"value":1297},"SetStateAction",{"type":170,"tag":211,"props":1299,"children":1300},{"style":456},[1301],{"type":183,"value":1207},{"type":170,"tag":211,"props":1303,"children":1304},{"style":843},[1305],{"type":183,"value":1212},{"type":170,"tag":211,"props":1307,"children":1308},{"style":456},[1309],{"type":183,"value":1310},">>",{"type":170,"tag":211,"props":1312,"children":1313},{"style":431},[1314],{"type":183,"value":1170},{"type":170,"tag":211,"props":1316,"children":1317},{"style":456},[1318],{"type":183,"value":900},{"type":170,"tag":211,"props":1320,"children":1321},{"class":213,"line":257},[1322,1326,1330,1335,1339,1343,1348,1352],{"type":170,"tag":211,"props":1323,"children":1324},{"style":425},[1325],{"type":183,"value":859},{"type":170,"tag":211,"props":1327,"children":1328},{"style":862},[1329],{"type":183,"value":865},{"type":170,"tag":211,"props":1331,"children":1332},{"style":474},[1333],{"type":183,"value":1334},"isFunction",{"type":170,"tag":211,"props":1336,"children":1337},{"style":862},[1338],{"type":183,"value":482},{"type":170,"tag":211,"props":1340,"children":1341},{"style":431},[1342],{"type":183,"value":1227},{"type":170,"tag":211,"props":1344,"children":1345},{"style":862},[1346],{"type":183,"value":1347},")) ",{"type":170,"tag":211,"props":1349,"children":1350},{"style":456},[1351],{"type":183,"value":1090},{"type":170,"tag":211,"props":1353,"children":1354},{"style":416},[1355],{"type":183,"value":1356}," // 如果 initialState 是函数\n",{"type":170,"tag":211,"props":1358,"children":1359},{"class":213,"line":281},[1360,1365,1369,1374,1379],{"type":170,"tag":211,"props":1361,"children":1362},{"style":431},[1363],{"type":183,"value":1364},"    initialState",{"type":170,"tag":211,"props":1366,"children":1367},{"style":837},[1368],{"type":183,"value":968},{"type":170,"tag":211,"props":1370,"children":1371},{"style":474},[1372],{"type":183,"value":1373}," initialState",{"type":170,"tag":211,"props":1375,"children":1376},{"style":862},[1377],{"type":183,"value":1378},"() ",{"type":170,"tag":211,"props":1380,"children":1381},{"style":416},[1382],{"type":183,"value":1383},"// 就直接执行\n",{"type":170,"tag":211,"props":1385,"children":1386},{"class":213,"line":499},[1387],{"type":170,"tag":211,"props":1388,"children":1389},{"style":456},[1390],{"type":183,"value":949},{"type":170,"tag":211,"props":1392,"children":1393},{"class":213,"line":521},[1394,1398,1403,1407,1411,1415,1420,1425,1429,1433,1437],{"type":170,"tag":211,"props":1395,"children":1396},{"style":821},[1397],{"type":183,"value":957},{"type":170,"tag":211,"props":1399,"children":1400},{"style":960},[1401],{"type":183,"value":1402}," hook",{"type":170,"tag":211,"props":1404,"children":1405},{"style":837},[1406],{"type":183,"value":968},{"type":170,"tag":211,"props":1408,"children":1409},{"style":474},[1410],{"type":183,"value":829},{"type":170,"tag":211,"props":1412,"children":1413},{"style":862},[1414],{"type":183,"value":1378},{"type":170,"tag":211,"props":1416,"children":1417},{"style":425},[1418],{"type":183,"value":1419},"as",{"type":170,"tag":211,"props":1421,"children":1422},{"style":843},[1423],{"type":183,"value":1424}," HookState",{"type":170,"tag":211,"props":1426,"children":1427},{"style":456},[1428],{"type":183,"value":1207},{"type":170,"tag":211,"props":1430,"children":1431},{"style":843},[1432],{"type":183,"value":1212},{"type":170,"tag":211,"props":1434,"children":1435},{"style":456},[1436],{"type":183,"value":1217},{"type":170,"tag":211,"props":1438,"children":1439},{"style":416},[1440],{"type":183,"value":1441}," // 找到该函数中对应的 hook\n",{"type":170,"tag":211,"props":1443,"children":1444},{"class":213,"line":548},[1445,1449,1453,1458,1462,1467,1471,1476,1480,1484],{"type":170,"tag":211,"props":1446,"children":1447},{"style":425},[1448],{"type":183,"value":859},{"type":170,"tag":211,"props":1450,"children":1451},{"style":862},[1452],{"type":183,"value":865},{"type":170,"tag":211,"props":1454,"children":1455},{"style":474},[1456],{"type":183,"value":1457},"isUndefined",{"type":170,"tag":211,"props":1459,"children":1460},{"style":862},[1461],{"type":183,"value":482},{"type":170,"tag":211,"props":1463,"children":1464},{"style":431},[1465],{"type":183,"value":1466},"hook",{"type":170,"tag":211,"props":1468,"children":1469},{"style":456},[1470],{"type":183,"value":471},{"type":170,"tag":211,"props":1472,"children":1473},{"style":431},[1474],{"type":183,"value":1475},"state",{"type":170,"tag":211,"props":1477,"children":1478},{"style":862},[1479],{"type":183,"value":1347},{"type":170,"tag":211,"props":1481,"children":1482},{"style":456},[1483],{"type":183,"value":1090},{"type":170,"tag":211,"props":1485,"children":1486},{"style":416},[1487],{"type":183,"value":1488}," // 如果 hook 还没有状态\n",{"type":170,"tag":211,"props":1490,"children":1491},{"class":213,"line":557},[1492,1497,1501,1506,1510,1515,1519,1523,1528],{"type":170,"tag":211,"props":1493,"children":1494},{"style":431},[1495],{"type":183,"value":1496},"    hook",{"type":170,"tag":211,"props":1498,"children":1499},{"style":456},[1500],{"type":183,"value":471},{"type":170,"tag":211,"props":1502,"children":1503},{"style":431},[1504],{"type":183,"value":1505},"component",{"type":170,"tag":211,"props":1507,"children":1508},{"style":837},[1509],{"type":183,"value":968},{"type":170,"tag":211,"props":1511,"children":1512},{"style":431},[1513],{"type":183,"value":1514}," Current",{"type":170,"tag":211,"props":1516,"children":1517},{"style":456},[1518],{"type":183,"value":471},{"type":170,"tag":211,"props":1520,"children":1521},{"style":431},[1522],{"type":183,"value":879},{"type":170,"tag":211,"props":1524,"children":1525},{"style":837},[1526],{"type":183,"value":1527},"!",{"type":170,"tag":211,"props":1529,"children":1530},{"style":416},[1531],{"type":183,"value":1532}," // 正在执行的 Taro 函数，缓存起来\n",{"type":170,"tag":211,"props":1534,"children":1535},{"class":213,"line":566},[1536,1540,1544,1548,1552,1557],{"type":170,"tag":211,"props":1537,"children":1538},{"style":431},[1539],{"type":183,"value":1496},{"type":170,"tag":211,"props":1541,"children":1542},{"style":456},[1543],{"type":183,"value":471},{"type":170,"tag":211,"props":1545,"children":1546},{"style":431},[1547],{"type":183,"value":1475},{"type":170,"tag":211,"props":1549,"children":1550},{"style":837},[1551],{"type":183,"value":968},{"type":170,"tag":211,"props":1553,"children":1554},{"style":862},[1555],{"type":183,"value":1556}," [ ",{"type":170,"tag":211,"props":1558,"children":1559},{"style":416},[1560],{"type":183,"value":1561},"// hook.state 就是我们要返回的元组\n",{"type":170,"tag":211,"props":1563,"children":1564},{"class":213,"line":648},[1565,1570],{"type":170,"tag":211,"props":1566,"children":1567},{"style":431},[1568],{"type":183,"value":1569},"      initialState",{"type":170,"tag":211,"props":1571,"children":1572},{"style":456},[1573],{"type":183,"value":1574},",\n",{"type":170,"tag":211,"props":1576,"children":1577},{"class":213,"line":680},[1578,1583,1588,1592,1596],{"type":170,"tag":211,"props":1579,"children":1580},{"style":456},[1581],{"type":183,"value":1582},"      (",{"type":170,"tag":211,"props":1584,"children":1585},{"style":1224},[1586],{"type":183,"value":1587},"action",{"type":170,"tag":211,"props":1589,"children":1590},{"style":456},[1591],{"type":183,"value":492},{"type":170,"tag":211,"props":1593,"children":1594},{"style":821},[1595],{"type":183,"value":1254},{"type":170,"tag":211,"props":1597,"children":1598},{"style":456},[1599],{"type":183,"value":851},{"type":170,"tag":211,"props":1601,"children":1602},{"class":213,"line":698},[1603,1608,1612,1616,1620,1626,1630,1634,1639,1643,1647,1651,1656,1661,1665,1669,1673,1677,1681,1685,1690,1694],{"type":170,"tag":211,"props":1604,"children":1605},{"style":431},[1606],{"type":183,"value":1607},"        hook",{"type":170,"tag":211,"props":1609,"children":1610},{"style":456},[1611],{"type":183,"value":471},{"type":170,"tag":211,"props":1613,"children":1614},{"style":431},[1615],{"type":183,"value":1475},{"type":170,"tag":211,"props":1617,"children":1618},{"style":862},[1619],{"type":183,"value":1161},{"type":170,"tag":211,"props":1621,"children":1623},{"style":1622},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1624],{"type":183,"value":1625},"0",{"type":170,"tag":211,"props":1627,"children":1628},{"style":862},[1629],{"type":183,"value":1170},{"type":170,"tag":211,"props":1631,"children":1632},{"style":837},[1633],{"type":183,"value":1022},{"type":170,"tag":211,"props":1635,"children":1636},{"style":474},[1637],{"type":183,"value":1638}," isFunction",{"type":170,"tag":211,"props":1640,"children":1641},{"style":862},[1642],{"type":183,"value":482},{"type":170,"tag":211,"props":1644,"children":1645},{"style":431},[1646],{"type":183,"value":1587},{"type":170,"tag":211,"props":1648,"children":1649},{"style":862},[1650],{"type":183,"value":895},{"type":170,"tag":211,"props":1652,"children":1653},{"style":837},[1654],{"type":183,"value":1655},"?",{"type":170,"tag":211,"props":1657,"children":1658},{"style":474},[1659],{"type":183,"value":1660}," action",{"type":170,"tag":211,"props":1662,"children":1663},{"style":862},[1664],{"type":183,"value":482},{"type":170,"tag":211,"props":1666,"children":1667},{"style":431},[1668],{"type":183,"value":1466},{"type":170,"tag":211,"props":1670,"children":1671},{"style":456},[1672],{"type":183,"value":471},{"type":170,"tag":211,"props":1674,"children":1675},{"style":431},[1676],{"type":183,"value":1475},{"type":170,"tag":211,"props":1678,"children":1679},{"style":862},[1680],{"type":183,"value":1161},{"type":170,"tag":211,"props":1682,"children":1683},{"style":1622},[1684],{"type":183,"value":1625},{"type":170,"tag":211,"props":1686,"children":1687},{"style":862},[1688],{"type":183,"value":1689},"]) ",{"type":170,"tag":211,"props":1691,"children":1692},{"style":837},[1693],{"type":183,"value":840},{"type":170,"tag":211,"props":1695,"children":1696},{"style":431},[1697],{"type":183,"value":1698}," action\n",{"type":170,"tag":211,"props":1700,"children":1702},{"class":213,"line":1701},12,[1703,1708,1712,1716,1720,1724,1728],{"type":170,"tag":211,"props":1704,"children":1705},{"style":474},[1706],{"type":183,"value":1707},"        enqueueRender",{"type":170,"tag":211,"props":1709,"children":1710},{"style":862},[1711],{"type":183,"value":482},{"type":170,"tag":211,"props":1713,"children":1714},{"style":431},[1715],{"type":183,"value":1466},{"type":170,"tag":211,"props":1717,"children":1718},{"style":456},[1719],{"type":183,"value":471},{"type":170,"tag":211,"props":1721,"children":1722},{"style":431},[1723],{"type":183,"value":1505},{"type":170,"tag":211,"props":1725,"children":1726},{"style":862},[1727],{"type":183,"value":895},{"type":170,"tag":211,"props":1729,"children":1730},{"style":416},[1731],{"type":183,"value":1732},"// 加入更新队列\n",{"type":170,"tag":211,"props":1734,"children":1736},{"class":213,"line":1735},13,[1737],{"type":170,"tag":211,"props":1738,"children":1739},{"style":456},[1740],{"type":183,"value":1741},"      }\n",{"type":170,"tag":211,"props":1743,"children":1745},{"class":213,"line":1744},14,[1746],{"type":170,"tag":211,"props":1747,"children":1748},{"style":862},[1749],{"type":183,"value":1750},"    ]\n",{"type":170,"tag":211,"props":1752,"children":1754},{"class":213,"line":1753},15,[1755],{"type":170,"tag":211,"props":1756,"children":1757},{"style":456},[1758],{"type":183,"value":949},{"type":170,"tag":211,"props":1760,"children":1762},{"class":213,"line":1761},16,[1763,1767,1771,1775,1779],{"type":170,"tag":211,"props":1764,"children":1765},{"style":425},[1766],{"type":183,"value":1152},{"type":170,"tag":211,"props":1768,"children":1769},{"style":431},[1770],{"type":183,"value":1402},{"type":170,"tag":211,"props":1772,"children":1773},{"style":456},[1774],{"type":183,"value":471},{"type":170,"tag":211,"props":1776,"children":1777},{"style":431},[1778],{"type":183,"value":1475},{"type":170,"tag":211,"props":1780,"children":1781},{"style":416},[1782],{"type":183,"value":1783}," // 已经创建 hook 就直接返回\n",{"type":170,"tag":211,"props":1785,"children":1787},{"class":213,"line":1786},17,[1788],{"type":170,"tag":211,"props":1789,"children":1790},{"style":456},[1791],{"type":183,"value":1183},{"type":170,"tag":185,"props":1793,"children":1794},{},[1795],{"type":170,"tag":189,"props":1796,"children":1797},{},[1798],{"type":183,"value":1799},"在 2018 年 Ember.js 的作者提出过一个观点，Compilers are the New Frameworks，编译器即框架。什么意思呢？就拿 React 来举例，单单一个 React 其实没什么用，你还需要配合 create-react-app, eslint-plugin-react-hooks, prettier 等等编译相关的工具最终才能构成一个框架。而到了 2019 年，我想提出一个新概念，叫框架即生态。就拿 Taro 来说，使用 Taro 你可以复用 React 生态的东西，同时 Taro 还有 taro doctor，Taro 开发者社区，Taro 物料市场，还有腾讯小程序·云开发等等多个合作伙伴一起构成了 Taro 生态，而整个 Taro 生态才是框架。",{"type":170,"tag":185,"props":1801,"children":1802},{},[1803],{"type":183,"value":1804},"前端是魔法的第二证据。",{"type":170,"tag":727,"props":1806,"children":1807},{},[],{"type":170,"tag":731,"props":1809,"children":1811},{"id":1810},"小程序跨框架开发的探索与实践",[1812],{"type":170,"tag":176,"props":1813,"children":1816},{"href":1814,"rel":1815},"https://taro-docs.jd.com/taro/blog/2020-01-02-gmtc",[180],[1817],{"type":183,"value":1810},{"type":170,"tag":185,"props":1819,"children":1820},{},[1821],{"type":183,"value":1822},"这篇文章也存放在 Taro 的博客中，不过因为太好了，所以单独列标题标注。",{"type":170,"tag":185,"props":1824,"children":1825},{},[1826],{"type":170,"tag":189,"props":1827,"children":1828},{},[1829],{"type":183,"value":1830},"微信小程序主要分为 逻辑层 和 视图层，以及在他们之下的原生部分。逻辑层主要负责 JS 运行，视图层主要负责页面的渲染，它们之间主要通过 Event 和 Data 进行通信，同时通过 JSBridge 调用原生的 API。",{"type":170,"tag":185,"props":1832,"children":1833},{},[1834],{"type":170,"tag":322,"props":1835,"children":1838},{"alt":1836,"src":1837},"mini-program architecture","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616180504.png",[],{"type":170,"tag":185,"props":1840,"children":1841},{},[1842],{"type":183,"value":1843},"Taro 架构划分为：编译时、运行时两个步骤。早期 Taro（v1.3）编译时主要是将 Taro 代码转换成小程序代码，运行时则是进行生命周期、事件、data 等数据对接。",{"type":170,"tag":185,"props":1845,"children":1846},{},[1847],{"type":170,"tag":189,"props":1848,"children":1849},{},[1850],{"type":183,"value":1851},"Taro 的编译时使用 babel-parser 将 Taro 代码解析成抽象语法树，然后通过 babel-types 对抽象语法树进行一系列修改、转换操作，最后再通过 babel-generate 生成对应的目标代码。",{"type":170,"tag":185,"props":1853,"children":1854},{},[1855],{"type":170,"tag":322,"props":1856,"children":1859},{"alt":1857,"src":1858},"BABEL","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616122609.png",[],{"type":170,"tag":185,"props":1861,"children":1862},{},[1863],{"type":170,"tag":189,"props":1864,"children":1865},{},[1866],{"type":183,"value":1867},"整个 Taro 当前架构的特点是：重编译时，轻运行时、编译后代码与 React 无关、直接使用 Babel 编译。",{"type":170,"tag":185,"props":1869,"children":1870},{},[1871],{"type":170,"tag":189,"props":1872,"children":1873},{},[1874],{"type":183,"value":1875},"mpvue 和 Taro 在编译时最大的区别是， Taro 将 JSX 编译成 小程序模版，而 mpvue 是将 Vue 模版编译成 小程序模版。由于 Vue 模版和 小程序模版的相似性，mpvue 在这一块的工作量比 Taro 少得多。",{"type":170,"tag":185,"props":1877,"children":1878},{},[1879],{"type":170,"tag":322,"props":1880,"children":1883},{"alt":1881,"src":1882},"mpvue template vs Vue template","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616182544.png",[],{"type":170,"tag":185,"props":1885,"children":1886},{},[1887],{"type":183,"value":1888},"实话说，这个区别好比微信小程序 vs xxx 小程序。",{"type":170,"tag":185,"props":1890,"children":1891},{},[1892],{"type":183,"value":1893},"运行时原理都好鸡贼！Taro 编译后会在 React 的 createComponent 中对接事件和生命周期，砍了 render 函数；mpvue 在 new Vue 时会同步创建小程序页面 new Page；patch 方法也被拦截了，不再更改 DOM，而是调用 setData 更改数据。",{"type":170,"tag":185,"props":1895,"children":1896},{},[1897],{"type":170,"tag":322,"props":1898,"children":1901},{"alt":1899,"src":1900},"mpvue runtime architecture","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616123350.png",[],{"type":170,"tag":185,"props":1903,"children":1904},{},[1905],{"type":183,"value":1906},"新的 Taro 架构实现了 taro-runtime 包，用来模拟了一套最简的 DOM/BOM API（1000 loc）。再配合 taro-react，重写 render（其实是用作 ReactDOM.render 的补充），以连接 react-reconciler 到 taro-runtime。所有的 JSX Node 都会在 render 时调用 taro-runtime 的 createReactPage 方法在创建 Page 时渲染为微信的 template。这样就走通了 React 在小程序端的运行环境。Vue 类似，区别只是 taro-runtime 中的 createVuePage。",{"type":170,"tag":185,"props":1908,"children":1909},{},[1910],{"type":170,"tag":322,"props":1911,"children":1914},{"alt":1912,"src":1913},"JSX Node -> MiniProgram Template","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616183851.png",[],{"type":170,"tag":185,"props":1916,"children":1917},{},[1918],{"type":170,"tag":322,"props":1919,"children":1922},{"alt":1920,"src":1921},"Taro React Runtime","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616183924.png",[],{"type":170,"tag":185,"props":1924,"children":1925},{},[1926],{"type":170,"tag":189,"props":1927,"children":1928},{},[1929],{"type":183,"value":1930},"Taro Next 事件本质上是基于 Taro DOM 实现了一套自己的事件机制，这样做的好处之一是，无论小程序是否支持事件的冒泡与捕获，Taro 都能支持。",{"type":170,"tag":185,"props":1932,"children":1933},{},[1934],{"type":170,"tag":322,"props":1935,"children":1938},{"alt":1936,"src":1937},"Taro Next Event","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616184753.png",[],{"type":170,"tag":185,"props":1940,"children":1941},{},[1942],{"type":183,"value":1943},"实现了一套颗粒度到 DOM 级别的更新策略。后面说它要比 Data 级别的更新效率更高，但是没 get，TODO。",{"type":170,"tag":185,"props":1945,"children":1946},{},[1947],{"type":170,"tag":322,"props":1948,"children":1951},{"alt":1949,"src":1950},"Taro Next DOM Update","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616184935.png",[],{"type":170,"tag":185,"props":1953,"children":1954},{},[1955],{"type":183,"value":1956},"这个性能对比图启发了我怎么分析代码性能瓶颈。",{"type":170,"tag":185,"props":1958,"children":1959},{},[1960],{"type":170,"tag":189,"props":1961,"children":1962},{},[1963],{"type":183,"value":1964},"编译时做的工作越多，也就意味着运行时做的工作越少，性能会更好。",{"type":170,"tag":185,"props":1966,"children":1967},{},[1968],{"type":170,"tag":322,"props":1969,"children":1972},{"alt":1970,"src":1971},"Data Flow in mini-program & Taro Next","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616185201.png",[],{"type":170,"tag":727,"props":1974,"children":1975},{},[],{"type":170,"tag":185,"props":1977,"children":1978},{},[1979],{"type":170,"tag":189,"props":1980,"children":1981},{},[1982],{"type":183,"value":1983},"Taro 2.0 的 CLI 将会变得非常轻量，只会做区分编译平台、处理不同平台编译入参等操作，随后再调用对应平台的 runner 编译器 做代码编译操作，而原来大量的 AST 语法操作将会改造成 webpack Plugin 以及 Loader，交给 webpack 来处理。",{"type":170,"tag":185,"props":1985,"children":1986},{},[1987],{"type":170,"tag":322,"props":1988,"children":1991},{"alt":1989,"src":1990},"Taro CLI","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220616190556.png",[],{"type":170,"tag":185,"props":1993,"children":1994},{},[1995],{"type":183,"value":1996},"终于从魔法 2.0 回归到 webpack 魔法 1.0 了。",{"type":170,"tag":185,"props":1998,"children":1999},{},[2000],{"type":170,"tag":189,"props":2001,"children":2002},{},[2003],{"type":183,"value":2004},"表面上来看 Taro （Taro Next）从一个编译型框架变成了一个运行时框架。但究其内核是整体的设计思路出现了变化：从前是「模拟（mock）」，现在是「实现（implements）」。",{"type":170,"tag":185,"props":2006,"children":2007},{},[2008],{"type":170,"tag":189,"props":2009,"children":2010},{},[2011],{"type":183,"value":2012},"为了解决初始化性能问题，Taro 从服务端渲染受到启发，在 Taro CLI 将页面初始化的状态直接渲染为无状态的 wxml，在框架和业务逻辑运行之前执行渲染流程。我们将这一技术称之为预渲染（Prerender），经过 Prerender 的页面初始渲染速度通常会和原生小程序一致甚至更快。",{"type":170,"tag":185,"props":2014,"children":2015},{},[2016],{"type":183,"value":2017},"这是说先渲染一次模板，再 setData，要比直接渲染带 Data 的模板要快？",{"type":170,"tag":727,"props":2019,"children":2020},{},[],{"type":170,"tag":731,"props":2022,"children":2024},{"id":2023},"taro-next-h5-跨框架组件库实践",[2025],{"type":170,"tag":176,"props":2026,"children":2029},{"href":2027,"rel":2028},"https://taro-docs.jd.com/taro/blog/2020-04-13-taro-components",[180],[2030],{"type":183,"value":2031},"Taro Next H5 跨框架组件库实践",{"type":170,"tag":185,"props":2033,"children":2034},{},[2035],{"type":183,"value":2036},"TODO",{"type":170,"tag":185,"props":2038,"children":2039},{},[2040],{"type":170,"tag":189,"props":2041,"children":2042},{},[2043],{"type":183,"value":2044},"当我们希望创建一些不拘泥于框架的组件时，Web Components 会是一个不错的选择。文章简单介绍了 Taro Next、Web Components、Stencil 以及基于 Stencil 的组件库改造历程。",{"type":170,"tag":727,"props":2046,"children":2047},{},[],{"type":170,"tag":185,"props":2049,"children":2050},{},[2051],{"type":183,"value":2052},"Taro 对小程序的性能优化体现在：",{"type":170,"tag":2054,"props":2055,"children":2056},"ul",{},[2057,2063,2068],{"type":170,"tag":2058,"props":2059,"children":2060},"li",{},[2061],{"type":183,"value":2062},"setData：data diff",{"type":170,"tag":2058,"props":2064,"children":2065},{},[2066],{"type":183,"value":2067},"跳转前预加载：componentWillPreload 时就可以发请求，要比 onLoad 快数百毫秒",{"type":170,"tag":2058,"props":2069,"children":2070},{},[2071],{"type":183,"value":2072},"shouldComponentUpdate & Taro.PureComponent & Taro.memo：PureComponent 可以通过组件 state 的浅对比，避免不必要的更新",{"type":170,"tag":185,"props":2074,"children":2075},{},[2076],{"type":170,"tag":189,"props":2077,"children":2078},{},[2079],{"type":183,"value":2080},"Taro 性能真的优于原生吗？其实并不然，针对每个场景，我们都可以用原生写出性能最佳的代码。但是这样做工作量太大，实际项目开发中需要掌握效率与优化之间的平衡。",{"type":170,"tag":727,"props":2082,"children":2083},{},[],{"type":170,"tag":171,"props":2085,"children":2087},{"id":2086},"taro-版本升级权威指南",[2088],{"type":170,"tag":176,"props":2089,"children":2092},{"href":2090,"rel":2091},"https://taro-docs.jd.com/taro/blog/2020-09-01-taro-versions",[180],[2093],{"type":183,"value":2094},"Taro 版本升级权威指南",{"type":170,"tag":185,"props":2096,"children":2097},{},[2098],{"type":183,"value":2036},{"type":170,"tag":185,"props":2100,"children":2101},{},[2102],{"type":183,"value":2036},{"type":170,"tag":185,"props":2104,"children":2105},{},[2106],{"type":170,"tag":176,"props":2107,"children":2110},{"href":2108,"rel":2109},"https://www.w3.org/TR/mini-app-white-paper/",[180],[2111],{"type":183,"value":2108},{"type":170,"tag":727,"props":2113,"children":2114},{},[],{"type":170,"tag":185,"props":2116,"children":2117},{},[2118],{"type":183,"value":2119},"...",{"type":170,"tag":185,"props":2121,"children":2122},{},[2123],{"type":170,"tag":176,"props":2124,"children":2127},{"href":2125,"rel":2126},"https://taro-docs.jd.com/taro/blog/2019-07-10-taro-hooks",[180],[2128],{"type":183,"value":2125},{"type":170,"tag":185,"props":2130,"children":2131},{},[2132],{"type":170,"tag":322,"props":2133,"children":2135},{"alt":163,"src":2134},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/%7D%5DH8%7DMG%7DA0%5D99R0HY$%5DU%5D20.png",[],{"type":170,"tag":185,"props":2137,"children":2138},{},[2139],{"type":170,"tag":176,"props":2140,"children":2143},{"href":2141,"rel":2142},"https://taro-docs.jd.com/taro/blog/2020-01-02-gmtc#taro-%E8%BF%90%E8%A1%8C%E6%97%B6",[180],[2144],{"type":183,"value":2141},{"type":170,"tag":185,"props":2146,"children":2147},{},[2148],{"type":170,"tag":322,"props":2149,"children":2151},{"alt":163,"src":2150},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/V~CO7GR6GA9%3HMJ2%60FWK@O.png",[],{"type":170,"tag":2153,"props":2154,"children":2155},"style",{},[2156],{"type":183,"value":2157},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":163,"searchDepth":257,"depth":257,"links":2159},[],"markdown","content:6.maps:_cross-platform:taro.md","content","6.maps/_cross-platform/taro.md","6.maps/_cross-platform/taro","md",[2167,2171],{"_path":2168,"title":2169,"description":2170},"/maps/_cross-platform/flutter","Flutter","Flutter 是 Google 开发的跨平台 UI 框架，可以快速在 iOS 和 Android 上构建高质量的原生用户界面。",{"_path":2172,"title":2173,"description":2174},"/maps/_database/lakehouse","Lakehouse","一种新型的数据管理架构，它结合了数据湖（Data Lake）和数据仓库（Data Warehouse）的优点，为现代数据分析和管理提供了一个统一的平台。",1742958679597]