[{"data":1,"prerenderedAt":1123},["ShallowReactive",2],{"navigation":3,"/maps/_framework/ui/react":416,"/maps/_framework/ui/react-surround":1115},[4,32,86,108,135,141,147,153,399,405,411],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":42,"_path":43},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":45,"_path":46},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":48,"_path":49},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":51,"_path":52},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":54,"_path":55},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":57,"_path":58},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":60,"_path":61},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":63,"_path":64},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":66,"_path":67},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":69,"_path":70},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":72,"_path":73},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":75,"_path":76},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":78,"_path":79},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":81,"_path":82},"🚝 四十二篇系列","/articles/fourty-two",{"title":84,"_path":85},"📝 技术博客归档","/articles/fold",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102,105],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107},"🖨️ any-to-base64","/tools/any-to-base64",{"title":109,"_path":110,"children":111},"吉他剧场 / Music","/music",[112,114,117,120,123,126,129,132],{"title":113,"_path":110},"🎸 FingerStyle！",{"title":115,"_path":116},"🌬️ 等待的风","/music/wind",{"title":118,"_path":119},"💕 约定的海洋","/music/ocean",{"title":121,"_path":122},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":124,"_path":125},"🌏 残酷天使的行动纲领","/music/eva",{"title":127,"_path":128},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":130,"_path":131},"🍷 Wu Wei","/music/wu-wei",{"title":133,"_path":134},"🌅 无题","/music/untitled",{"title":136,"_path":137,"children":138},"画点什么 / Paint","/paint",[139],{"title":140,"_path":137},"🚧 正在施工",{"title":142,"_path":143,"children":144},"读书笔记 / Notes","/books",[145],{"title":146,"_path":143},"📕 读书笔记",{"title":148,"_path":149,"children":150},"知识地图 / Maps","/maps",[151],{"title":152,"_path":149},"🏁 知识地图",{"title":154,"_path":155,"children":156},"零散的笔记 / Gists","/gists",[157,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":158,"_path":155},"🧊 Gists",{"title":160,"_path":161},"网站的可访问性","/gists/accessibility",{"title":163,"_path":164},"Bit","/gists/bit",{"title":166,"_path":167},"图片模糊","/gists/blur",{"title":169,"_path":170},"渲染相关笔记","/gists/c4d",{"title":172,"_path":173},"CDN 问题记录","/gists/cdn",{"title":175,"_path":176},"消毒剂","/gists/cleaner",{"title":178,"_path":179},"Windows Command","/gists/cmd",{"title":181,"_path":182},"Command","/gists/command",{"title":184,"_path":185},"复杂科学","/gists/complexity-science",{"title":187,"_path":188},"GitHub Copilot","/gists/copilot",{"title":190,"_path":191},"宇宙","/gists/cosmos",{"title":193,"_path":194},"C++","/gists/cpp",{"title":196,"_path":197},"Data Structure","/gists/data-structure",{"title":199,"_path":200},"DEPRESSION","/gists/depression",{"title":202,"_path":203},"设计模式","/gists/design-patterns",{"title":205,"_path":206},"Developer Experience","/gists/developer-experience",{"title":208,"_path":209},"Device Metrics","/gists/device-metrix",{"title":211,"_path":212},"数字化转型","/gists/digital-transformation",{"title":214,"_path":215},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":217,"_path":218},"正则表达式","/gists/eegex",{"title":220,"_path":221},"Emoji","/gists/emoji",{"title":223,"_path":224},"工程","/gists/engineering",{"title":226,"_path":227},"熵","/gists/entropy",{"title":229,"_path":230},"Environment","/gists/environment",{"title":232,"_path":233},"Erlang","/gists/erlang",{"title":235,"_path":236},"逃离塔克夫","/gists/escape-from-tarkov",{"title":238,"_path":239},"ESNext (ES6-ES11)","/gists/esnext",{"title":241,"_path":242},"Eval！","/gists/eval",{"title":244,"_path":245},"Flutter","/gists/flutter",{"title":247,"_path":248},"字体","/gists/font",{"title":250,"_path":251},"JS 函数式编程","/gists/functional",{"title":253,"_path":254},"游戏化","/gists/gamification",{"title":256,"_path":257},"Google C++ Standard","/gists/google-cpp-standard",{"title":259,"_path":260},"双向链接完全体","/gists/graph",{"title":262,"_path":263},"Hardwares","/gists/hardwares",{"title":265,"_path":266},"哈希冲突","/gists/hash-collision",{"title":268,"_path":269},"信息设计","/gists/information-design",{"title":271,"_path":272},"InstantPage","/gists/instant.page",{"title":274,"_path":275},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":277,"_path":278},"KVStore","/gists/key-value-db",{"title":280,"_path":281},"Kubernetes","/gists/kubernetes",{"title":283,"_path":284},"Makefile","/gists/makefile",{"title":286,"_path":287},"Markdown Inline Style","/gists/markdown-nice",{"title":289,"_path":290},"小程序","/gists/miniapp",{"title":292,"_path":293},"减小页面快照体积","/gists/minify-html",{"title":295,"_path":296},"mklink","/gists/mklink",{"title":298,"_path":299},"Mock","/gists/mock",{"title":301,"_path":302},"多人协作系统","/gists/multiplayer",{"title":304,"_path":305},"多端应用","/gists/multy-end-app",{"title":307,"_path":308},"神经科学","/gists/neuroscience",{"title":310,"_path":311},"OO","/gists/oo",{"title":313,"_path":314},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":316,"_path":317},"PInvoke","/gists/pinvoke",{"title":319,"_path":320},"像素","/gists/pixel",{"title":322,"_path":323},"PowerShell","/gists/powershell",{"title":325,"_path":326},"量子","/gists/quantum",{"title":328,"_path":329},"保持好奇心","/gists/questions",{"title":331,"_path":332},"React Native","/gists/react-native",{"title":334,"_path":335},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":337,"_path":338},"SEO","/gists/seo",{"title":340,"_path":341},"Shader","/gists/shader",{"title":343,"_path":344},"Shape Up","/gists/shape-up",{"title":346,"_path":347},"睡觉","/gists/sleep",{"title":349,"_path":350},"记录奇怪的问题","/gists/solved",{"title":352,"_path":353},"States","/gists/states",{"title":355,"_path":356},"Storage","/gists/storage",{"title":358,"_path":359},"音视频流处理","/gists/stream-cli",{"title":361,"_path":362},"Symbol","/gists/symbol",{"title":364,"_path":365},"系统论","/gists/systems-theory",{"title":367,"_path":368},"Taro","/gists/taro",{"title":370,"_path":371},"任务切片","/gists/task-slice",{"title":373,"_path":374},"技术偏好","/gists/tech-dudge",{"title":376,"_path":377},"Untitled","/gists/untitled",{"title":379,"_path":380},"可变字体","/gists/variable-font",{"title":382,"_path":383},"视觉错觉","/gists/visual-illusion",{"title":385,"_path":386},"SS(SSR)","/gists/vpn",{"title":388,"_path":389},"VS Code 插件开发","/gists/vscode-plugin",{"title":391,"_path":392},"Web Components","/gists/web-components",{"title":394,"_path":395},"Windows","/gists/windows",{"title":397,"_path":398},"查缺补漏","/gists/wrong",{"title":400,"_path":401,"children":402},"代码笔记 / Gists","/source-code",[403],{"title":404,"_path":401},"🚄 代码笔记",{"title":406,"_path":407,"children":408},"我 / About","/hire",[409],{"title":410,"_path":407},"📬 技术简历",{"title":412,"_path":413,"children":414},"todo","/todo",[415],{"title":412,"_path":413},{"_path":417,"_dir":418,"_draft":419,"_partial":420,"_locale":421,"title":422,"description":423,"body":424,"_type":1109,"_id":1110,"_source":1111,"_file":1112,"_stem":1113,"_extension":1114},"/maps/_framework/ui/react","ui",false,true,"","React Mind Map","React 是一个经典的用户界面框架。",{"type":425,"children":426,"toc":1104},"root",[427,435,442,448,698,704,709,723,729,734,740,745,751,756,765,776,782,787,961,967,972,978,983,989,994,1000,1005,1010,1016,1051,1056,1062,1067,1087,1093,1098],{"type":428,"tag":429,"props":430,"children":432},"element","h2",{"id":431},"架构",[433],{"type":434,"value":431},"text",{"type":428,"tag":436,"props":437,"children":439},"h4",{"id":438},"fiber-是什么怎么实现的",[440],{"type":434,"value":441},"Fiber 是什么，怎么实现的？",{"type":428,"tag":443,"props":444,"children":445},"p",{},[446],{"type":434,"value":447},"在 React 15 之前更新 VDom 树时，React 会找到所有差异并一次性地同步更新它们，这可能会导致卡顿。使用 Fiber 后，React 把树的遍历转换为从父节点，到子节点，到兄弟节点，再回到父节点这一流程，使得遍历是可以中断的，分批异步更新 DOM 成为可能。React 可以在浏览器有动画、用户输入任务等高优先级任务时，先执行高优先级任务。直到有空闲才继续执行 Diff 操作。",{"type":428,"tag":449,"props":450,"children":454},"pre",{"className":451,"code":452,"language":453,"meta":421,"style":421},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","const tasks = []\nfunction diff (time) {\n  while (time > 0 & task.length) {\n    doHighLevelWork()\n  }\n  if (task.length) {\n    requestIdelCallBack(diff)\n  }\n}\nrequestIdelCallBack(render)\n","js",[455],{"type":428,"tag":456,"props":457,"children":458},"code",{"__ignoreMap":421},[459,489,526,586,600,609,643,667,675,684],{"type":428,"tag":460,"props":461,"children":464},"span",{"class":462,"line":463},"line",1,[465,471,477,483],{"type":428,"tag":460,"props":466,"children":468},{"style":467},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[469],{"type":434,"value":470},"const",{"type":428,"tag":460,"props":472,"children":474},{"style":473},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[475],{"type":434,"value":476}," tasks",{"type":428,"tag":460,"props":478,"children":480},{"style":479},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[481],{"type":434,"value":482}," =",{"type":428,"tag":460,"props":484,"children":486},{"style":485},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[487],{"type":434,"value":488}," []\n",{"type":428,"tag":460,"props":490,"children":492},{"class":462,"line":491},2,[493,498,504,510,516,521],{"type":428,"tag":460,"props":494,"children":495},{"style":467},[496],{"type":434,"value":497},"function",{"type":428,"tag":460,"props":499,"children":501},{"style":500},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[502],{"type":434,"value":503}," diff",{"type":428,"tag":460,"props":505,"children":507},{"style":506},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[508],{"type":434,"value":509}," (",{"type":428,"tag":460,"props":511,"children":513},{"style":512},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[514],{"type":434,"value":515},"time",{"type":428,"tag":460,"props":517,"children":518},{"style":506},[519],{"type":434,"value":520},")",{"type":428,"tag":460,"props":522,"children":523},{"style":506},[524],{"type":434,"value":525}," {\n",{"type":428,"tag":460,"props":527,"children":529},{"class":462,"line":528},3,[530,536,541,545,550,556,561,566,571,576,581],{"type":428,"tag":460,"props":531,"children":533},{"style":532},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[534],{"type":434,"value":535},"  while",{"type":428,"tag":460,"props":537,"children":539},{"style":538},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[540],{"type":434,"value":509},{"type":428,"tag":460,"props":542,"children":543},{"style":485},[544],{"type":434,"value":515},{"type":428,"tag":460,"props":546,"children":547},{"style":479},[548],{"type":434,"value":549}," >",{"type":428,"tag":460,"props":551,"children":553},{"style":552},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[554],{"type":434,"value":555}," 0",{"type":428,"tag":460,"props":557,"children":558},{"style":479},[559],{"type":434,"value":560}," &",{"type":428,"tag":460,"props":562,"children":563},{"style":485},[564],{"type":434,"value":565}," task",{"type":428,"tag":460,"props":567,"children":568},{"style":506},[569],{"type":434,"value":570},".",{"type":428,"tag":460,"props":572,"children":573},{"style":473},[574],{"type":434,"value":575},"length",{"type":428,"tag":460,"props":577,"children":578},{"style":538},[579],{"type":434,"value":580},") ",{"type":428,"tag":460,"props":582,"children":583},{"style":506},[584],{"type":434,"value":585},"{\n",{"type":428,"tag":460,"props":587,"children":589},{"class":462,"line":588},4,[590,595],{"type":428,"tag":460,"props":591,"children":592},{"style":500},[593],{"type":434,"value":594},"    doHighLevelWork",{"type":428,"tag":460,"props":596,"children":597},{"style":538},[598],{"type":434,"value":599},"()\n",{"type":428,"tag":460,"props":601,"children":603},{"class":462,"line":602},5,[604],{"type":428,"tag":460,"props":605,"children":606},{"style":506},[607],{"type":434,"value":608},"  }\n",{"type":428,"tag":460,"props":610,"children":612},{"class":462,"line":611},6,[613,618,622,627,631,635,639],{"type":428,"tag":460,"props":614,"children":615},{"style":532},[616],{"type":434,"value":617},"  if",{"type":428,"tag":460,"props":619,"children":620},{"style":538},[621],{"type":434,"value":509},{"type":428,"tag":460,"props":623,"children":624},{"style":485},[625],{"type":434,"value":626},"task",{"type":428,"tag":460,"props":628,"children":629},{"style":506},[630],{"type":434,"value":570},{"type":428,"tag":460,"props":632,"children":633},{"style":473},[634],{"type":434,"value":575},{"type":428,"tag":460,"props":636,"children":637},{"style":538},[638],{"type":434,"value":580},{"type":428,"tag":460,"props":640,"children":641},{"style":506},[642],{"type":434,"value":585},{"type":428,"tag":460,"props":644,"children":646},{"class":462,"line":645},7,[647,652,657,662],{"type":428,"tag":460,"props":648,"children":649},{"style":500},[650],{"type":434,"value":651},"    requestIdelCallBack",{"type":428,"tag":460,"props":653,"children":654},{"style":538},[655],{"type":434,"value":656},"(",{"type":428,"tag":460,"props":658,"children":659},{"style":485},[660],{"type":434,"value":661},"diff",{"type":428,"tag":460,"props":663,"children":664},{"style":538},[665],{"type":434,"value":666},")\n",{"type":428,"tag":460,"props":668,"children":670},{"class":462,"line":669},8,[671],{"type":428,"tag":460,"props":672,"children":673},{"style":506},[674],{"type":434,"value":608},{"type":428,"tag":460,"props":676,"children":678},{"class":462,"line":677},9,[679],{"type":428,"tag":460,"props":680,"children":681},{"style":506},[682],{"type":434,"value":683},"}\n",{"type":428,"tag":460,"props":685,"children":687},{"class":462,"line":686},10,[688,693],{"type":428,"tag":460,"props":689,"children":690},{"style":500},[691],{"type":434,"value":692},"requestIdelCallBack",{"type":428,"tag":460,"props":694,"children":695},{"style":485},[696],{"type":434,"value":697},"(render)\n",{"type":428,"tag":436,"props":699,"children":701},{"id":700},"syntheticevent-是什么",[702],{"type":434,"value":703},"SyntheticEvent 是什么？",{"type":428,"tag":443,"props":705,"children":706},{},[707],{"type":434,"value":708},"合成事件（SyntheticEvent）是 React 17 以前的事件系统设计思路，它是 DOM 事件上的一层封装。合成事件解决了浏览器兼容性问题，并且通过池化技术减少了内存消耗。不过，池化技术会在事件回收时，将对象属性重置为空，所以合成事件用于异步时，需要提前将值缓存或者使用 event.persist 将事件持久化。",{"type":428,"tag":443,"props":710,"children":711},{},[712,714],{"type":434,"value":713},"见：",{"type":428,"tag":715,"props":716,"children":720},"a",{"href":717,"rel":718},"https://reactjs.org/docs/events.html",[719],"nofollow",[721],{"type":434,"value":722},"SyntheticEvent",{"type":428,"tag":436,"props":724,"children":726},{"id":725},"purecomponent-是怎么更新视图的",[727],{"type":434,"value":728},"PureComponent 是怎么更新视图的？",{"type":428,"tag":443,"props":730,"children":731},{},[732],{"type":434,"value":733},"React.PureComponent 中默认在 shouldComponentUpdate 中实现了 state 和 props 的浅比较，以达到性能提升的目的。",{"type":428,"tag":436,"props":735,"children":737},{"id":736},"受控组件和非受控组件有什么区别",[738],{"type":434,"value":739},"受控组件和非受控组件有什么区别？",{"type":428,"tag":443,"props":741,"children":742},{},[743],{"type":434,"value":744},"受控组件通过绑定 value state 以及 onChange 事件来控制表单的状态，使用 HOC 能轻松创建受控组件。非受控组件则直接通过 ref 拿到表单的值。后者的代码要简单不少。",{"type":428,"tag":436,"props":746,"children":748},{"id":747},"react-的生命周期是怎么样的",[749],{"type":434,"value":750},"React 的生命周期是怎么样的？",{"type":428,"tag":443,"props":752,"children":753},{},[754],{"type":434,"value":755},"组件的生命周期分为 Mount、Update 和 Unmount 三个阶段，每个阶段又可以划分出渲染、预提交和提交三个过程。未挂载的组件会在实例创建好后，调 render 函数更新 DOM 节点，最后触发 componentDidMount 钩子，组件更新时则是根据 props 和 states 通过 shouldComponentUpdate 钩子来判断是否要调用 render 函数。",{"type":428,"tag":443,"props":757,"children":758},{},[759],{"type":428,"tag":760,"props":761,"children":764},"img",{"alt":762,"src":763},"React 16.4 Lifecycles","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220627111627.png",[],{"type":428,"tag":443,"props":766,"children":767},{},[768,769],{"type":434,"value":713},{"type":428,"tag":715,"props":770,"children":773},{"href":771,"rel":772},"https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/",[719],[774],{"type":434,"value":775},"React Lifecycles",{"type":428,"tag":436,"props":777,"children":779},{"id":778},"getderivedstatefromprops-是做什么的",[780],{"type":434,"value":781},"getDerivedStateFromProps 是做什么的？",{"type":428,"tag":443,"props":783,"children":784},{},[785],{"type":434,"value":786},"getDerivedStateFromProps 是 React 16.3 后引入的生命周期，用来替代 componentWillReceiveProps。它用来接受来自 props 的更新，以更新当前组件的 States。在 getDerivedStateFromProps 之后，states 和 props 的改变都会走 shouldComponentUpdate 来确定是否跳过渲染。",{"type":428,"tag":449,"props":788,"children":790},{"className":451,"code":789,"language":453,"meta":421,"style":421},"static getDerivedStateFromProps(nextProps, prevState) {\n  const { type } = nextProps\n  if (type !== prevState.type) {\n    return {\n      type,\n    }\n  }\n  return null\n}\n",[791],{"type":428,"tag":456,"props":792,"children":793},{"__ignoreMap":421},[794,826,858,900,912,925,933,940,954],{"type":428,"tag":460,"props":795,"children":796},{"class":462,"line":463},[797,802,807,812,817,822],{"type":428,"tag":460,"props":798,"children":799},{"style":485},[800],{"type":434,"value":801},"static ",{"type":428,"tag":460,"props":803,"children":804},{"style":500},[805],{"type":434,"value":806},"getDerivedStateFromProps",{"type":428,"tag":460,"props":808,"children":809},{"style":485},[810],{"type":434,"value":811},"(nextProps",{"type":428,"tag":460,"props":813,"children":814},{"style":506},[815],{"type":434,"value":816},",",{"type":428,"tag":460,"props":818,"children":819},{"style":485},[820],{"type":434,"value":821}," prevState) ",{"type":428,"tag":460,"props":823,"children":824},{"style":506},[825],{"type":434,"value":585},{"type":428,"tag":460,"props":827,"children":828},{"class":462,"line":491},[829,834,839,844,849,853],{"type":428,"tag":460,"props":830,"children":831},{"style":467},[832],{"type":434,"value":833},"  const",{"type":428,"tag":460,"props":835,"children":836},{"style":506},[837],{"type":434,"value":838}," {",{"type":428,"tag":460,"props":840,"children":841},{"style":473},[842],{"type":434,"value":843}," type",{"type":428,"tag":460,"props":845,"children":846},{"style":506},[847],{"type":434,"value":848}," }",{"type":428,"tag":460,"props":850,"children":851},{"style":479},[852],{"type":434,"value":482},{"type":428,"tag":460,"props":854,"children":855},{"style":485},[856],{"type":434,"value":857}," nextProps\n",{"type":428,"tag":460,"props":859,"children":860},{"class":462,"line":528},[861,865,869,874,879,884,888,892,896],{"type":428,"tag":460,"props":862,"children":863},{"style":532},[864],{"type":434,"value":617},{"type":428,"tag":460,"props":866,"children":867},{"style":538},[868],{"type":434,"value":509},{"type":428,"tag":460,"props":870,"children":871},{"style":485},[872],{"type":434,"value":873},"type",{"type":428,"tag":460,"props":875,"children":876},{"style":479},[877],{"type":434,"value":878}," !==",{"type":428,"tag":460,"props":880,"children":881},{"style":485},[882],{"type":434,"value":883}," prevState",{"type":428,"tag":460,"props":885,"children":886},{"style":506},[887],{"type":434,"value":570},{"type":428,"tag":460,"props":889,"children":890},{"style":485},[891],{"type":434,"value":873},{"type":428,"tag":460,"props":893,"children":894},{"style":538},[895],{"type":434,"value":580},{"type":428,"tag":460,"props":897,"children":898},{"style":506},[899],{"type":434,"value":585},{"type":428,"tag":460,"props":901,"children":902},{"class":462,"line":588},[903,908],{"type":428,"tag":460,"props":904,"children":905},{"style":532},[906],{"type":434,"value":907},"    return",{"type":428,"tag":460,"props":909,"children":910},{"style":506},[911],{"type":434,"value":525},{"type":428,"tag":460,"props":913,"children":914},{"class":462,"line":602},[915,920],{"type":428,"tag":460,"props":916,"children":917},{"style":485},[918],{"type":434,"value":919},"      type",{"type":428,"tag":460,"props":921,"children":922},{"style":506},[923],{"type":434,"value":924},",\n",{"type":428,"tag":460,"props":926,"children":927},{"class":462,"line":611},[928],{"type":428,"tag":460,"props":929,"children":930},{"style":506},[931],{"type":434,"value":932},"    }\n",{"type":428,"tag":460,"props":934,"children":935},{"class":462,"line":645},[936],{"type":428,"tag":460,"props":937,"children":938},{"style":506},[939],{"type":434,"value":608},{"type":428,"tag":460,"props":941,"children":942},{"class":462,"line":669},[943,948],{"type":428,"tag":460,"props":944,"children":945},{"style":532},[946],{"type":434,"value":947},"  return",{"type":428,"tag":460,"props":949,"children":951},{"style":950},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[952],{"type":434,"value":953}," null\n",{"type":428,"tag":460,"props":955,"children":956},{"class":462,"line":677},[957],{"type":428,"tag":460,"props":958,"children":959},{"style":506},[960],{"type":434,"value":683},{"type":428,"tag":436,"props":962,"children":964},{"id":963},"为什么在-componentdidmount-而不是其它生命周期中取请求数据",[965],{"type":434,"value":966},"为什么在 componentDidMount 而不是其它生命周期中取请求数据？",{"type":428,"tag":443,"props":968,"children":969},{},[970],{"type":434,"value":971},"其它生命周期可能执行多次，比如说 componentWillMount 会在服务端和客户端各执行一次。",{"type":428,"tag":436,"props":973,"children":975},{"id":974},"类组件和函数组件有什么不同",[976],{"type":434,"value":977},"类组件和函数组件有什么不同？",{"type":428,"tag":443,"props":979,"children":980},{},[981],{"type":434,"value":982},"类组件是面向对象的，函数组件是函数式的，了解前者主要需要知道继承、生命周期概念，后者则是 state、无副作用和引用透明。类组件依靠 shouldComponentUpdate 来优化性能，函数组件使用 React.memo。",{"type":428,"tag":436,"props":984,"children":986},{"id":985},"setstate-是同步的还是异步的",[987],{"type":434,"value":988},"setState 是同步的还是异步的？",{"type":428,"tag":443,"props":990,"children":991},{},[992],{"type":434,"value":993},"在大部分情况下 setState 是异步的。多次 setState 的状态会被合并，直到当前宏任务跑完才会触发重新渲染。这和 Taro 的思路是一致的。",{"type":428,"tag":436,"props":995,"children":997},{"id":996},"react-和-vue-有什么异同",[998],{"type":434,"value":999},"React 和 Vue 有什么异同？",{"type":428,"tag":443,"props":1001,"children":1002},{},[1003],{"type":434,"value":1004},"相同的地方在于他们都是渐进式的框架，都有自己的脚手架和最佳实践的模板；在框架层面，数据流都是自顶向下的，都引入了 VDom 的概念。",{"type":428,"tag":443,"props":1006,"children":1007},{},[1008],{"type":434,"value":1009},"不同的地方在于 Vue 的数据和视图是双向绑定的，React 推崇不可变数据，并且需要手动优化，所以 Vue 模板有利于静态优化。",{"type":428,"tag":429,"props":1011,"children":1013},{"id":1012},"hooks",[1014],{"type":434,"value":1015},"Hooks",{"type":428,"tag":1017,"props":1018,"children":1019},"ul",{},[1020,1031,1041],{"type":428,"tag":1021,"props":1022,"children":1023},"li",{},[1024],{"type":428,"tag":715,"props":1025,"children":1028},{"href":1026,"rel":1027},"https://usehooks.com/",[719],[1029],{"type":434,"value":1030},"useHooks(🐠)",{"type":428,"tag":1021,"props":1032,"children":1033},{},[1034],{"type":428,"tag":715,"props":1035,"children":1038},{"href":1036,"rel":1037},"https://juejin.cn/post/6844903991730503687",[719],[1039],{"type":434,"value":1040},"精读《Hooks 取数 - swr 源码》",{"type":428,"tag":1021,"props":1042,"children":1043},{},[1044],{"type":428,"tag":715,"props":1045,"children":1048},{"href":1046,"rel":1047},"https://my.oschina.net/wsafight/blog/3133057",[719],[1049],{"type":434,"value":1050},"从 UX 与 DX 来谈一谈 React SWR",{"type":428,"tag":429,"props":1052,"children":1054},{"id":1053},"应用",[1055],{"type":434,"value":1053},{"type":428,"tag":436,"props":1057,"children":1059},{"id":1058},"什么是-hoc",[1060],{"type":434,"value":1061},"什么是 HOC？",{"type":428,"tag":443,"props":1063,"children":1064},{},[1065],{"type":434,"value":1066},"高阶组件是一种使用 React 组件的组合特性，把某种组件转换成另一种组件的设计模式，可以用来处理有横切关系的组件。",{"type":428,"tag":443,"props":1068,"children":1069},{},[1070,1071,1078,1080],{"type":434,"value":713},{"type":428,"tag":715,"props":1072,"children":1075},{"href":1073,"rel":1074},"https://zh-hans.reactjs.org/docs/higher-order-components.html",[719],[1076],{"type":434,"value":1077},"高阶组件",{"type":434,"value":1079},"、",{"type":428,"tag":715,"props":1081,"children":1084},{"href":1082,"rel":1083},"https://zhuanlan.zhihu.com/p/24776678",[719],[1085],{"type":434,"value":1086},"TODO 深入理解 React 高阶组件",{"type":428,"tag":436,"props":1088,"children":1090},{"id":1089},"什么是组件横切关系",[1091],{"type":434,"value":1092},"什么是组件横切关系？",{"type":428,"tag":443,"props":1094,"children":1095},{},[1096],{"type":434,"value":1097},"横切关系是那些和程序中大部分模块都有联系的部分，它们形成了切面开发的基础单元。",{"type":428,"tag":1099,"props":1100,"children":1101},"style",{},[1102],{"type":434,"value":1103},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":421,"searchDepth":491,"depth":491,"links":1105},[1106,1107,1108],{"id":431,"depth":491,"text":431},{"id":1012,"depth":491,"text":1015},{"id":1053,"depth":491,"text":1053},"markdown","content:6.maps:_framework:ui:react.md","content","6.maps/_framework/ui/react.md","6.maps/_framework/ui/react","md",[1116,1119],{"_path":1117,"title":1118,"description":421},"/maps/_framework/ui/angular","Angular",{"_path":1120,"title":1121,"description":1122},"/maps/_framework/ui/vue","Vue","Vue 是一套用于构建用户界面的渐进式框架，它的核心库只关注视图层，易于上手，同时也便于与第三方库或既有项目整合。",1739579864706]