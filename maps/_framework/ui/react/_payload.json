[{"data":1,"prerenderedAt":1100},["ShallowReactive",2],{"navigation":3,"/maps/_framework/ui/react":393,"/maps/_framework/ui/react-surround":1092},[4,35,86,105,132,138,144,150,387],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"数字化转型","/gists/digital-transformation",{"title":205,"_path":206},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":208,"_path":209},"正则表达式","/gists/eegex",{"title":211,"_path":212},"Emoji","/gists/emoji",{"title":214,"_path":215},"工程","/gists/engineering",{"title":217,"_path":218},"熵","/gists/entropy",{"title":220,"_path":221},"Environment","/gists/environment",{"title":223,"_path":224},"Erlang","/gists/erlang",{"title":226,"_path":227},"逃离塔克夫","/gists/escape-from-tarkov",{"title":229,"_path":230},"ESNext (ES6-ES11)","/gists/esnext",{"title":232,"_path":233},"Eval！","/gists/eval",{"title":235,"_path":236},"Flutter","/gists/flutter",{"title":238,"_path":239},"字体","/gists/font",{"title":241,"_path":242},"JS 函数式编程","/gists/functional",{"title":244,"_path":245},"游戏化","/gists/gamification",{"title":247,"_path":248},"Google C++ Standard","/gists/google-cpp-standard",{"title":250,"_path":251},"双向链接完全体","/gists/graph",{"title":253,"_path":254},"Hardwares","/gists/hardwares",{"title":256,"_path":257},"哈希冲突","/gists/hash-collision",{"title":259,"_path":260},"信息设计","/gists/information-design",{"title":262,"_path":263},"InstantPage","/gists/instant.page",{"title":265,"_path":266},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":268,"_path":269},"KVStore","/gists/key-value-db",{"title":271,"_path":272},"Kubernetes","/gists/kubernetes",{"title":274,"_path":275},"Makefile","/gists/makefile",{"title":277,"_path":278},"Markdown Inline Style","/gists/markdown-nice",{"title":280,"_path":281},"小程序","/gists/miniapp",{"title":283,"_path":284},"减小页面快照体积","/gists/minify-html",{"title":286,"_path":287},"mklink","/gists/mklink",{"title":289,"_path":290},"Mock","/gists/mock",{"title":292,"_path":293},"多人协作系统","/gists/multiplayer",{"title":295,"_path":296},"多端应用","/gists/multy-end-app",{"title":298,"_path":299},"神经科学","/gists/neuroscience",{"title":301,"_path":302},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":304,"_path":305},"PInvoke","/gists/pinvoke",{"title":307,"_path":308},"像素","/gists/pixel",{"title":310,"_path":311},"PowerShell","/gists/powershell",{"title":313,"_path":314},"量子","/gists/quantum",{"title":316,"_path":317},"保持好奇心","/gists/questions",{"title":319,"_path":320},"React Native","/gists/react-native",{"title":322,"_path":323},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":325,"_path":326},"SEO","/gists/seo",{"title":328,"_path":329},"Shader","/gists/shader",{"title":331,"_path":332},"Shape Up","/gists/shape-up",{"title":334,"_path":335},"睡觉","/gists/sleep",{"title":337,"_path":338},"记录奇怪的问题","/gists/solved",{"title":340,"_path":341},"States","/gists/states",{"title":343,"_path":344},"Storage","/gists/storage",{"title":346,"_path":347},"音视频流处理","/gists/stream-cli",{"title":349,"_path":350},"Symbol","/gists/symbol",{"title":352,"_path":353},"系统论","/gists/systems-theory",{"title":355,"_path":356},"Taro","/gists/taro",{"title":358,"_path":359},"任务切片","/gists/task-slice",{"title":361,"_path":362},"技术偏好","/gists/tech-dudge",{"title":364,"_path":365},"Untitled","/gists/untitled",{"title":367,"_path":368},"可变字体","/gists/variable-font",{"title":370,"_path":371},"视觉错觉","/gists/visual-illusion",{"title":373,"_path":374},"SS(SSR)","/gists/vpn",{"title":376,"_path":377},"VS Code 插件开发","/gists/vscode-plugin",{"title":379,"_path":380},"Web Components","/gists/web-components",{"title":382,"_path":383},"Windows","/gists/windows",{"title":385,"_path":386},"查缺补漏","/gists/wrong",{"title":388,"_path":389,"children":390},"我 / About","/hire",[391],{"title":392,"_path":389},"📬 技术简历",{"_path":394,"_dir":395,"_draft":396,"_partial":397,"_locale":398,"title":399,"description":400,"body":401,"_type":1086,"_id":1087,"_source":1088,"_file":1089,"_stem":1090,"_extension":1091},"/maps/_framework/ui/react","ui",false,true,"","React Mind Map","React 是一个经典的用户界面框架。",{"type":402,"children":403,"toc":1081},"root",[404,412,419,425,675,681,686,700,706,711,717,722,728,733,742,753,759,764,938,944,949,955,960,966,971,977,982,987,993,1028,1033,1039,1044,1064,1070,1075],{"type":405,"tag":406,"props":407,"children":409},"element","h2",{"id":408},"架构",[410],{"type":411,"value":408},"text",{"type":405,"tag":413,"props":414,"children":416},"h4",{"id":415},"fiber-是什么怎么实现的",[417],{"type":411,"value":418},"Fiber 是什么，怎么实现的？",{"type":405,"tag":420,"props":421,"children":422},"p",{},[423],{"type":411,"value":424},"在 React 15 之前更新 VDom 树时，React 会找到所有差异并一次性地同步更新它们，这可能会导致卡顿。使用 Fiber 后，React 把树的遍历转换为从父节点，到子节点，到兄弟节点，再回到父节点这一流程，使得遍历是可以中断的，分批异步更新 DOM 成为可能。React 可以在浏览器有动画、用户输入任务等高优先级任务时，先执行高优先级任务。直到有空闲才继续执行 Diff 操作。",{"type":405,"tag":426,"props":427,"children":431},"pre",{"className":428,"code":429,"language":430,"meta":398,"style":398},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","const tasks = []\nfunction diff (time) {\n  while (time > 0 & task.length) {\n    doHighLevelWork()\n  }\n  if (task.length) {\n    requestIdelCallBack(diff)\n  }\n}\nrequestIdelCallBack(render)\n","js",[432],{"type":405,"tag":433,"props":434,"children":435},"code",{"__ignoreMap":398},[436,466,503,563,577,586,620,644,652,661],{"type":405,"tag":437,"props":438,"children":441},"span",{"class":439,"line":440},"line",1,[442,448,454,460],{"type":405,"tag":437,"props":443,"children":445},{"style":444},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[446],{"type":411,"value":447},"const",{"type":405,"tag":437,"props":449,"children":451},{"style":450},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[452],{"type":411,"value":453}," tasks",{"type":405,"tag":437,"props":455,"children":457},{"style":456},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[458],{"type":411,"value":459}," =",{"type":405,"tag":437,"props":461,"children":463},{"style":462},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[464],{"type":411,"value":465}," []\n",{"type":405,"tag":437,"props":467,"children":469},{"class":439,"line":468},2,[470,475,481,487,493,498],{"type":405,"tag":437,"props":471,"children":472},{"style":444},[473],{"type":411,"value":474},"function",{"type":405,"tag":437,"props":476,"children":478},{"style":477},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[479],{"type":411,"value":480}," diff",{"type":405,"tag":437,"props":482,"children":484},{"style":483},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[485],{"type":411,"value":486}," (",{"type":405,"tag":437,"props":488,"children":490},{"style":489},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[491],{"type":411,"value":492},"time",{"type":405,"tag":437,"props":494,"children":495},{"style":483},[496],{"type":411,"value":497},")",{"type":405,"tag":437,"props":499,"children":500},{"style":483},[501],{"type":411,"value":502}," {\n",{"type":405,"tag":437,"props":504,"children":506},{"class":439,"line":505},3,[507,513,518,522,527,533,538,543,548,553,558],{"type":405,"tag":437,"props":508,"children":510},{"style":509},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[511],{"type":411,"value":512},"  while",{"type":405,"tag":437,"props":514,"children":516},{"style":515},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[517],{"type":411,"value":486},{"type":405,"tag":437,"props":519,"children":520},{"style":462},[521],{"type":411,"value":492},{"type":405,"tag":437,"props":523,"children":524},{"style":456},[525],{"type":411,"value":526}," >",{"type":405,"tag":437,"props":528,"children":530},{"style":529},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[531],{"type":411,"value":532}," 0",{"type":405,"tag":437,"props":534,"children":535},{"style":456},[536],{"type":411,"value":537}," &",{"type":405,"tag":437,"props":539,"children":540},{"style":462},[541],{"type":411,"value":542}," task",{"type":405,"tag":437,"props":544,"children":545},{"style":483},[546],{"type":411,"value":547},".",{"type":405,"tag":437,"props":549,"children":550},{"style":450},[551],{"type":411,"value":552},"length",{"type":405,"tag":437,"props":554,"children":555},{"style":515},[556],{"type":411,"value":557},") ",{"type":405,"tag":437,"props":559,"children":560},{"style":483},[561],{"type":411,"value":562},"{\n",{"type":405,"tag":437,"props":564,"children":566},{"class":439,"line":565},4,[567,572],{"type":405,"tag":437,"props":568,"children":569},{"style":477},[570],{"type":411,"value":571},"    doHighLevelWork",{"type":405,"tag":437,"props":573,"children":574},{"style":515},[575],{"type":411,"value":576},"()\n",{"type":405,"tag":437,"props":578,"children":580},{"class":439,"line":579},5,[581],{"type":405,"tag":437,"props":582,"children":583},{"style":483},[584],{"type":411,"value":585},"  }\n",{"type":405,"tag":437,"props":587,"children":589},{"class":439,"line":588},6,[590,595,599,604,608,612,616],{"type":405,"tag":437,"props":591,"children":592},{"style":509},[593],{"type":411,"value":594},"  if",{"type":405,"tag":437,"props":596,"children":597},{"style":515},[598],{"type":411,"value":486},{"type":405,"tag":437,"props":600,"children":601},{"style":462},[602],{"type":411,"value":603},"task",{"type":405,"tag":437,"props":605,"children":606},{"style":483},[607],{"type":411,"value":547},{"type":405,"tag":437,"props":609,"children":610},{"style":450},[611],{"type":411,"value":552},{"type":405,"tag":437,"props":613,"children":614},{"style":515},[615],{"type":411,"value":557},{"type":405,"tag":437,"props":617,"children":618},{"style":483},[619],{"type":411,"value":562},{"type":405,"tag":437,"props":621,"children":623},{"class":439,"line":622},7,[624,629,634,639],{"type":405,"tag":437,"props":625,"children":626},{"style":477},[627],{"type":411,"value":628},"    requestIdelCallBack",{"type":405,"tag":437,"props":630,"children":631},{"style":515},[632],{"type":411,"value":633},"(",{"type":405,"tag":437,"props":635,"children":636},{"style":462},[637],{"type":411,"value":638},"diff",{"type":405,"tag":437,"props":640,"children":641},{"style":515},[642],{"type":411,"value":643},")\n",{"type":405,"tag":437,"props":645,"children":647},{"class":439,"line":646},8,[648],{"type":405,"tag":437,"props":649,"children":650},{"style":483},[651],{"type":411,"value":585},{"type":405,"tag":437,"props":653,"children":655},{"class":439,"line":654},9,[656],{"type":405,"tag":437,"props":657,"children":658},{"style":483},[659],{"type":411,"value":660},"}\n",{"type":405,"tag":437,"props":662,"children":664},{"class":439,"line":663},10,[665,670],{"type":405,"tag":437,"props":666,"children":667},{"style":477},[668],{"type":411,"value":669},"requestIdelCallBack",{"type":405,"tag":437,"props":671,"children":672},{"style":462},[673],{"type":411,"value":674},"(render)\n",{"type":405,"tag":413,"props":676,"children":678},{"id":677},"syntheticevent-是什么",[679],{"type":411,"value":680},"SyntheticEvent 是什么？",{"type":405,"tag":420,"props":682,"children":683},{},[684],{"type":411,"value":685},"合成事件（SyntheticEvent）是 React 17 以前的事件系统设计思路，它是 DOM 事件上的一层封装。合成事件解决了浏览器兼容性问题，并且通过池化技术减少了内存消耗。不过，池化技术会在事件回收时，将对象属性重置为空，所以合成事件用于异步时，需要提前将值缓存或者使用 event.persist 将事件持久化。",{"type":405,"tag":420,"props":687,"children":688},{},[689,691],{"type":411,"value":690},"见：",{"type":405,"tag":692,"props":693,"children":697},"a",{"href":694,"rel":695},"https://reactjs.org/docs/events.html",[696],"nofollow",[698],{"type":411,"value":699},"SyntheticEvent",{"type":405,"tag":413,"props":701,"children":703},{"id":702},"purecomponent-是怎么更新视图的",[704],{"type":411,"value":705},"PureComponent 是怎么更新视图的？",{"type":405,"tag":420,"props":707,"children":708},{},[709],{"type":411,"value":710},"React.PureComponent 中默认在 shouldComponentUpdate 中实现了 state 和 props 的浅比较，以达到性能提升的目的。",{"type":405,"tag":413,"props":712,"children":714},{"id":713},"受控组件和非受控组件有什么区别",[715],{"type":411,"value":716},"受控组件和非受控组件有什么区别？",{"type":405,"tag":420,"props":718,"children":719},{},[720],{"type":411,"value":721},"受控组件通过绑定 value state 以及 onChange 事件来控制表单的状态，使用 HOC 能轻松创建受控组件。非受控组件则直接通过 ref 拿到表单的值。后者的代码要简单不少。",{"type":405,"tag":413,"props":723,"children":725},{"id":724},"react-的生命周期是怎么样的",[726],{"type":411,"value":727},"React 的生命周期是怎么样的？",{"type":405,"tag":420,"props":729,"children":730},{},[731],{"type":411,"value":732},"组件的生命周期分为 Mount、Update 和 Unmount 三个阶段，每个阶段又可以划分出渲染、预提交和提交三个过程。未挂载的组件会在实例创建好后，调 render 函数更新 DOM 节点，最后触发 componentDidMount 钩子，组件更新时则是根据 props 和 states 通过 shouldComponentUpdate 钩子来判断是否要调用 render 函数。",{"type":405,"tag":420,"props":734,"children":735},{},[736],{"type":405,"tag":737,"props":738,"children":741},"img",{"alt":739,"src":740},"React 16.4 Lifecycles","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220627111627.png",[],{"type":405,"tag":420,"props":743,"children":744},{},[745,746],{"type":411,"value":690},{"type":405,"tag":692,"props":747,"children":750},{"href":748,"rel":749},"https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/",[696],[751],{"type":411,"value":752},"React Lifecycles",{"type":405,"tag":413,"props":754,"children":756},{"id":755},"getderivedstatefromprops-是做什么的",[757],{"type":411,"value":758},"getDerivedStateFromProps 是做什么的？",{"type":405,"tag":420,"props":760,"children":761},{},[762],{"type":411,"value":763},"getDerivedStateFromProps 是 React 16.3 后引入的生命周期，用来替代 componentWillReceiveProps。它用来接受来自 props 的更新，以更新当前组件的 States。在 getDerivedStateFromProps 之后，states 和 props 的改变都会走 shouldComponentUpdate 来确定是否跳过渲染。",{"type":405,"tag":426,"props":765,"children":767},{"className":428,"code":766,"language":430,"meta":398,"style":398},"static getDerivedStateFromProps(nextProps, prevState) {\n  const { type } = nextProps\n  if (type !== prevState.type) {\n    return {\n      type,\n    }\n  }\n  return null\n}\n",[768],{"type":405,"tag":433,"props":769,"children":770},{"__ignoreMap":398},[771,803,835,877,889,902,910,917,931],{"type":405,"tag":437,"props":772,"children":773},{"class":439,"line":440},[774,779,784,789,794,799],{"type":405,"tag":437,"props":775,"children":776},{"style":462},[777],{"type":411,"value":778},"static ",{"type":405,"tag":437,"props":780,"children":781},{"style":477},[782],{"type":411,"value":783},"getDerivedStateFromProps",{"type":405,"tag":437,"props":785,"children":786},{"style":462},[787],{"type":411,"value":788},"(nextProps",{"type":405,"tag":437,"props":790,"children":791},{"style":483},[792],{"type":411,"value":793},",",{"type":405,"tag":437,"props":795,"children":796},{"style":462},[797],{"type":411,"value":798}," prevState) ",{"type":405,"tag":437,"props":800,"children":801},{"style":483},[802],{"type":411,"value":562},{"type":405,"tag":437,"props":804,"children":805},{"class":439,"line":468},[806,811,816,821,826,830],{"type":405,"tag":437,"props":807,"children":808},{"style":444},[809],{"type":411,"value":810},"  const",{"type":405,"tag":437,"props":812,"children":813},{"style":483},[814],{"type":411,"value":815}," {",{"type":405,"tag":437,"props":817,"children":818},{"style":450},[819],{"type":411,"value":820}," type",{"type":405,"tag":437,"props":822,"children":823},{"style":483},[824],{"type":411,"value":825}," }",{"type":405,"tag":437,"props":827,"children":828},{"style":456},[829],{"type":411,"value":459},{"type":405,"tag":437,"props":831,"children":832},{"style":462},[833],{"type":411,"value":834}," nextProps\n",{"type":405,"tag":437,"props":836,"children":837},{"class":439,"line":505},[838,842,846,851,856,861,865,869,873],{"type":405,"tag":437,"props":839,"children":840},{"style":509},[841],{"type":411,"value":594},{"type":405,"tag":437,"props":843,"children":844},{"style":515},[845],{"type":411,"value":486},{"type":405,"tag":437,"props":847,"children":848},{"style":462},[849],{"type":411,"value":850},"type",{"type":405,"tag":437,"props":852,"children":853},{"style":456},[854],{"type":411,"value":855}," !==",{"type":405,"tag":437,"props":857,"children":858},{"style":462},[859],{"type":411,"value":860}," prevState",{"type":405,"tag":437,"props":862,"children":863},{"style":483},[864],{"type":411,"value":547},{"type":405,"tag":437,"props":866,"children":867},{"style":462},[868],{"type":411,"value":850},{"type":405,"tag":437,"props":870,"children":871},{"style":515},[872],{"type":411,"value":557},{"type":405,"tag":437,"props":874,"children":875},{"style":483},[876],{"type":411,"value":562},{"type":405,"tag":437,"props":878,"children":879},{"class":439,"line":565},[880,885],{"type":405,"tag":437,"props":881,"children":882},{"style":509},[883],{"type":411,"value":884},"    return",{"type":405,"tag":437,"props":886,"children":887},{"style":483},[888],{"type":411,"value":502},{"type":405,"tag":437,"props":890,"children":891},{"class":439,"line":579},[892,897],{"type":405,"tag":437,"props":893,"children":894},{"style":462},[895],{"type":411,"value":896},"      type",{"type":405,"tag":437,"props":898,"children":899},{"style":483},[900],{"type":411,"value":901},",\n",{"type":405,"tag":437,"props":903,"children":904},{"class":439,"line":588},[905],{"type":405,"tag":437,"props":906,"children":907},{"style":483},[908],{"type":411,"value":909},"    }\n",{"type":405,"tag":437,"props":911,"children":912},{"class":439,"line":622},[913],{"type":405,"tag":437,"props":914,"children":915},{"style":483},[916],{"type":411,"value":585},{"type":405,"tag":437,"props":918,"children":919},{"class":439,"line":646},[920,925],{"type":405,"tag":437,"props":921,"children":922},{"style":509},[923],{"type":411,"value":924},"  return",{"type":405,"tag":437,"props":926,"children":928},{"style":927},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[929],{"type":411,"value":930}," null\n",{"type":405,"tag":437,"props":932,"children":933},{"class":439,"line":654},[934],{"type":405,"tag":437,"props":935,"children":936},{"style":483},[937],{"type":411,"value":660},{"type":405,"tag":413,"props":939,"children":941},{"id":940},"为什么在-componentdidmount-而不是其它生命周期中取请求数据",[942],{"type":411,"value":943},"为什么在 componentDidMount 而不是其它生命周期中取请求数据？",{"type":405,"tag":420,"props":945,"children":946},{},[947],{"type":411,"value":948},"其它生命周期可能执行多次，比如说 componentWillMount 会在服务端和客户端各执行一次。",{"type":405,"tag":413,"props":950,"children":952},{"id":951},"类组件和函数组件有什么不同",[953],{"type":411,"value":954},"类组件和函数组件有什么不同？",{"type":405,"tag":420,"props":956,"children":957},{},[958],{"type":411,"value":959},"类组件是面向对象的，函数组件是函数式的，了解前者主要需要知道继承、生命周期概念，后者则是 state、无副作用和引用透明。类组件依靠 shouldComponentUpdate 来优化性能，函数组件使用 React.memo。",{"type":405,"tag":413,"props":961,"children":963},{"id":962},"setstate-是同步的还是异步的",[964],{"type":411,"value":965},"setState 是同步的还是异步的？",{"type":405,"tag":420,"props":967,"children":968},{},[969],{"type":411,"value":970},"在大部分情况下 setState 是异步的。多次 setState 的状态会被合并，直到当前宏任务跑完才会触发重新渲染。这和 Taro 的思路是一致的。",{"type":405,"tag":413,"props":972,"children":974},{"id":973},"react-和-vue-有什么异同",[975],{"type":411,"value":976},"React 和 Vue 有什么异同？",{"type":405,"tag":420,"props":978,"children":979},{},[980],{"type":411,"value":981},"相同的地方在于他们都是渐进式的框架，都有自己的脚手架和最佳实践的模板；在框架层面，数据流都是自顶向下的，都引入了 VDom 的概念。",{"type":405,"tag":420,"props":983,"children":984},{},[985],{"type":411,"value":986},"不同的地方在于 Vue 的数据和视图是双向绑定的，React 推崇不可变数据，并且需要手动优化，所以 Vue 模板有利于静态优化。",{"type":405,"tag":406,"props":988,"children":990},{"id":989},"hooks",[991],{"type":411,"value":992},"Hooks",{"type":405,"tag":994,"props":995,"children":996},"ul",{},[997,1008,1018],{"type":405,"tag":998,"props":999,"children":1000},"li",{},[1001],{"type":405,"tag":692,"props":1002,"children":1005},{"href":1003,"rel":1004},"https://usehooks.com/",[696],[1006],{"type":411,"value":1007},"useHooks(🐠)",{"type":405,"tag":998,"props":1009,"children":1010},{},[1011],{"type":405,"tag":692,"props":1012,"children":1015},{"href":1013,"rel":1014},"https://juejin.cn/post/6844903991730503687",[696],[1016],{"type":411,"value":1017},"精读《Hooks 取数 - swr 源码》",{"type":405,"tag":998,"props":1019,"children":1020},{},[1021],{"type":405,"tag":692,"props":1022,"children":1025},{"href":1023,"rel":1024},"https://my.oschina.net/wsafight/blog/3133057",[696],[1026],{"type":411,"value":1027},"从 UX 与 DX 来谈一谈 React SWR",{"type":405,"tag":406,"props":1029,"children":1031},{"id":1030},"应用",[1032],{"type":411,"value":1030},{"type":405,"tag":413,"props":1034,"children":1036},{"id":1035},"什么是-hoc",[1037],{"type":411,"value":1038},"什么是 HOC？",{"type":405,"tag":420,"props":1040,"children":1041},{},[1042],{"type":411,"value":1043},"高阶组件是一种使用 React 组件的组合特性，把某种组件转换成另一种组件的设计模式，可以用来处理有横切关系的组件。",{"type":405,"tag":420,"props":1045,"children":1046},{},[1047,1048,1055,1057],{"type":411,"value":690},{"type":405,"tag":692,"props":1049,"children":1052},{"href":1050,"rel":1051},"https://zh-hans.reactjs.org/docs/higher-order-components.html",[696],[1053],{"type":411,"value":1054},"高阶组件",{"type":411,"value":1056},"、",{"type":405,"tag":692,"props":1058,"children":1061},{"href":1059,"rel":1060},"https://zhuanlan.zhihu.com/p/24776678",[696],[1062],{"type":411,"value":1063},"TODO 深入理解 React 高阶组件",{"type":405,"tag":413,"props":1065,"children":1067},{"id":1066},"什么是组件横切关系",[1068],{"type":411,"value":1069},"什么是组件横切关系？",{"type":405,"tag":420,"props":1071,"children":1072},{},[1073],{"type":411,"value":1074},"横切关系是那些和程序中大部分模块都有联系的部分，它们形成了切面开发的基础单元。",{"type":405,"tag":1076,"props":1077,"children":1078},"style",{},[1079],{"type":411,"value":1080},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":398,"searchDepth":468,"depth":468,"links":1082},[1083,1084,1085],{"id":408,"depth":468,"text":408},{"id":989,"depth":468,"text":992},{"id":1030,"depth":468,"text":1030},"markdown","content:6.maps:_framework:ui:react.md","content","6.maps/_framework/ui/react.md","6.maps/_framework/ui/react","md",[1093,1096],{"_path":1094,"title":1095,"description":398},"/maps/_framework/ui/angular","Angular",{"_path":1097,"title":1098,"description":1099},"/maps/_framework/ui/vue","Vue","Vue 是一套用于构建用户界面的渐进式框架，它的核心库只关注视图层，易于上手，同时也便于与第三方库或既有项目整合。",1741604961577]