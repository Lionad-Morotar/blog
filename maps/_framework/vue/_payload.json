[{"data":1,"prerenderedAt":1064},["ShallowReactive",2],{"navigation":3,"/maps/_framework/vue":416,"/maps/_framework/vue-surround":1057},[4,32,86,108,135,141,147,153,399,405,411],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":42,"_path":43},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":45,"_path":46},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":48,"_path":49},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":51,"_path":52},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":54,"_path":55},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":57,"_path":58},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":60,"_path":61},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":63,"_path":64},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":66,"_path":67},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":69,"_path":70},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":72,"_path":73},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":75,"_path":76},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":78,"_path":79},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":81,"_path":82},"🚝 四十二篇系列","/articles/fourty-two",{"title":84,"_path":85},"📝 技术博客归档","/articles/fold",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102,105],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107},"🖨️ any-to-base64","/tools/any-to-base64",{"title":109,"_path":110,"children":111},"吉他剧场 / Music","/music",[112,114,117,120,123,126,129,132],{"title":113,"_path":110},"🎸 FingerStyle！",{"title":115,"_path":116},"🌬️ 等待的风","/music/wind",{"title":118,"_path":119},"💕 约定的海洋","/music/ocean",{"title":121,"_path":122},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":124,"_path":125},"🌏 残酷天使的行动纲领","/music/eva",{"title":127,"_path":128},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":130,"_path":131},"🍷 Wu Wei","/music/wu-wei",{"title":133,"_path":134},"🌅 无题","/music/untitled",{"title":136,"_path":137,"children":138},"画点什么 / Paint","/paint",[139],{"title":140,"_path":137},"🚧 正在施工",{"title":142,"_path":143,"children":144},"读书笔记 / Notes","/books",[145],{"title":146,"_path":143},"📕 读书笔记",{"title":148,"_path":149,"children":150},"知识地图 / Maps","/maps",[151],{"title":152,"_path":149},"🏁 知识地图",{"title":154,"_path":155,"children":156},"零散的笔记 / Gists","/gists",[157,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":158,"_path":155},"🧊 Gists",{"title":160,"_path":161},"网站的可访问性","/gists/accessibility",{"title":163,"_path":164},"Bit","/gists/bit",{"title":166,"_path":167},"图片模糊","/gists/blur",{"title":169,"_path":170},"渲染相关笔记","/gists/c4d",{"title":172,"_path":173},"CDN 问题记录","/gists/cdn",{"title":175,"_path":176},"消毒剂","/gists/cleaner",{"title":178,"_path":179},"Windows Command","/gists/cmd",{"title":181,"_path":182},"Command","/gists/command",{"title":184,"_path":185},"复杂科学","/gists/complexity-science",{"title":187,"_path":188},"GitHub Copilot","/gists/copilot",{"title":190,"_path":191},"宇宙","/gists/cosmos",{"title":193,"_path":194},"C++","/gists/cpp",{"title":196,"_path":197},"Data Structure","/gists/data-structure",{"title":199,"_path":200},"DEPRESSION","/gists/depression",{"title":202,"_path":203},"设计模式","/gists/design-patterns",{"title":205,"_path":206},"Developer Experience","/gists/developer-experience",{"title":208,"_path":209},"Device Metrics","/gists/device-metrix",{"title":211,"_path":212},"数字化转型","/gists/digital-transformation",{"title":214,"_path":215},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":217,"_path":218},"正则表达式","/gists/eegex",{"title":220,"_path":221},"Emoji","/gists/emoji",{"title":223,"_path":224},"工程","/gists/engineering",{"title":226,"_path":227},"熵","/gists/entropy",{"title":229,"_path":230},"Environment","/gists/environment",{"title":232,"_path":233},"Erlang","/gists/erlang",{"title":235,"_path":236},"逃离塔克夫","/gists/escape-from-tarkov",{"title":238,"_path":239},"ESNext (ES6-ES11)","/gists/esnext",{"title":241,"_path":242},"Eval！","/gists/eval",{"title":244,"_path":245},"Flutter","/gists/flutter",{"title":247,"_path":248},"字体","/gists/font",{"title":250,"_path":251},"JS 函数式编程","/gists/functional",{"title":253,"_path":254},"游戏化","/gists/gamification",{"title":256,"_path":257},"Google C++ Standard","/gists/google-cpp-standard",{"title":259,"_path":260},"双向链接完全体","/gists/graph",{"title":262,"_path":263},"Hardwares","/gists/hardwares",{"title":265,"_path":266},"哈希冲突","/gists/hash-collision",{"title":268,"_path":269},"信息设计","/gists/information-design",{"title":271,"_path":272},"InstantPage","/gists/instant.page",{"title":274,"_path":275},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":277,"_path":278},"KVStore","/gists/key-value-db",{"title":280,"_path":281},"Kubernetes","/gists/kubernetes",{"title":283,"_path":284},"Makefile","/gists/makefile",{"title":286,"_path":287},"Markdown Inline Style","/gists/markdown-nice",{"title":289,"_path":290},"小程序","/gists/miniapp",{"title":292,"_path":293},"减小页面快照体积","/gists/minify-html",{"title":295,"_path":296},"mklink","/gists/mklink",{"title":298,"_path":299},"Mock","/gists/mock",{"title":301,"_path":302},"多人协作系统","/gists/multiplayer",{"title":304,"_path":305},"多端应用","/gists/multy-end-app",{"title":307,"_path":308},"神经科学","/gists/neuroscience",{"title":310,"_path":311},"OO","/gists/oo",{"title":313,"_path":314},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":316,"_path":317},"PInvoke","/gists/pinvoke",{"title":319,"_path":320},"像素","/gists/pixel",{"title":322,"_path":323},"PowerShell","/gists/powershell",{"title":325,"_path":326},"量子","/gists/quantum",{"title":328,"_path":329},"保持好奇心","/gists/questions",{"title":331,"_path":332},"React Native","/gists/react-native",{"title":334,"_path":335},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":337,"_path":338},"SEO","/gists/seo",{"title":340,"_path":341},"Shader","/gists/shader",{"title":343,"_path":344},"Shape Up","/gists/shape-up",{"title":346,"_path":347},"睡觉","/gists/sleep",{"title":349,"_path":350},"记录奇怪的问题","/gists/solved",{"title":352,"_path":353},"States","/gists/states",{"title":355,"_path":356},"Storage","/gists/storage",{"title":358,"_path":359},"音视频流处理","/gists/stream-cli",{"title":361,"_path":362},"Symbol","/gists/symbol",{"title":364,"_path":365},"系统论","/gists/systems-theory",{"title":367,"_path":368},"Taro","/gists/taro",{"title":370,"_path":371},"任务切片","/gists/task-slice",{"title":373,"_path":374},"技术偏好","/gists/tech-dudge",{"title":376,"_path":377},"Untitled","/gists/untitled",{"title":379,"_path":380},"可变字体","/gists/variable-font",{"title":382,"_path":383},"视觉错觉","/gists/visual-illusion",{"title":385,"_path":386},"SS(SSR)","/gists/vpn",{"title":388,"_path":389},"VS Code 插件开发","/gists/vscode-plugin",{"title":391,"_path":392},"Web Components","/gists/web-components",{"title":394,"_path":395},"Windows","/gists/windows",{"title":397,"_path":398},"查缺补漏","/gists/wrong",{"title":400,"_path":401,"children":402},"代码笔记 / Gists","/source-code",[403],{"title":404,"_path":401},"🚄 代码笔记",{"title":406,"_path":407,"children":408},"我 / Abount","/hire",[409],{"title":410,"_path":407},"📬 技术简历",{"title":412,"_path":413,"children":414},"todo","/todo",[415],{"title":412,"_path":413},{"_path":417,"_dir":418,"_draft":419,"_partial":420,"_locale":421,"title":422,"description":421,"body":423,"_type":1051,"_id":1052,"_source":1053,"_file":1054,"_stem":1055,"_extension":1056},"/maps/_framework/vue","_framework",false,true,"","Vue Mind Map",{"type":424,"children":425,"toc":1036},"root",[426,434,440,467,472,479,497,503,509,514,519,525,530,536,559,565,583,589,594,599,604,616,621,627,632,637,643,654,659,665,674,680,686,691,697,708,719,730,741,746,752,757,763,768,774,779,785,791,796,802,806,816,822,833,838,843,848,853,867,880,885,898,903,916,921,980,1025,1030],{"type":427,"tag":428,"props":429,"children":431},"element","h1",{"id":430},"vue-mind-map",[432],{"type":433,"value":422},"text",{"type":427,"tag":435,"props":436,"children":437},"h2",{"id":412},[438],{"type":433,"value":439},"TODO",{"type":427,"tag":441,"props":442,"children":443},"ul",{},[444,457],{"type":427,"tag":445,"props":446,"children":447},"li",{},[448],{"type":427,"tag":449,"props":450,"children":454},"a",{"href":451,"rel":452},"https://www.zhihu.com/question/390956688/answer/1184696066",[453],"nofollow",[455],{"type":433,"value":456},"Vue.js 技术揭秘",{"type":427,"tag":445,"props":458,"children":459},{},[460],{"type":427,"tag":449,"props":461,"children":464},{"href":462,"rel":463},"https://github.com/HcySunYang/vue-design/blob/elegant/docs/art/1start-learn",[453],[465],{"type":433,"value":466},"vue-design",{"type":427,"tag":435,"props":468,"children":470},{"id":469},"简介",[471],{"type":433,"value":469},{"type":427,"tag":473,"props":474,"children":476},"h4",{"id":475},"前端框架发展历史关键点",[477],{"type":433,"value":478},"前端框架发展历史关键点？",{"type":427,"tag":441,"props":480,"children":481},{},[482,487,492],{"type":427,"tag":445,"props":483,"children":484},{},[485],{"type":433,"value":486},"2004 年，Google Gmail 使用的 Ajax 技术使前端脱离模板的束缚。",{"type":427,"tag":445,"props":488,"children":489},{},[490],{"type":433,"value":491},"jQuery 解决了不同浏览器的兼容性问题。",{"type":427,"tag":445,"props":493,"children":494},{},[495],{"type":433,"value":496},"2009 年，AngularJS 引领了 MVVM 的潮流，NodeJS 加速了前端工程化的诞生。",{"type":427,"tag":473,"props":498,"children":500},{"id":499},"vue-和-react-的计算性能瓶颈是什么",[501],{"type":433,"value":502},"Vue 和 React 的计算性能瓶颈是什么？",{"type":427,"tag":504,"props":505,"children":506},"p",{},[507],{"type":433,"value":508},"Vue1 的每一个响应式数据都有一个 Watcher，极大的消耗内存，React 的问题发生在当页面 JS 执行 Diff 算法超过帧时间时带来的卡顿问题。",{"type":427,"tag":504,"props":510,"children":511},{},[512],{"type":433,"value":513},"Vue2 引入虚拟 DOM，采用组件级别的响应式数据颗粒度，在避免了 Diff 算法超时问题的同时，降低内存消耗。同时，虚拟 DOM 还带来跨端能力。",{"type":427,"tag":504,"props":515,"children":516},{},[517],{"type":433,"value":518},"React 引入 Fiber 架构，将 DOM Tree 变成链表，使得有能力随时启动或停止 Diff 算法（树的遍历使用递归所以相比链表更难记录状态），可以利用浏览器的空闲时间计算 Diff，避免了卡顿。",{"type":427,"tag":473,"props":520,"children":522},{"id":521},"mvvmmvc-的区别",[523],{"type":433,"value":524},"MVVM、MVC 的区别？",{"type":427,"tag":504,"props":526,"children":527},{},[528],{"type":433,"value":529},"都是软件架构模式，主要区别是关注点不一样，Controller 用来承接交互操作并触发 Model 的修改，而 ViewModel 和 Model 层是双向绑定的，所以写 VueJS 时的思想不在如何操作 DOM 元素，而主要是数据应该怎么变化。",{"type":427,"tag":473,"props":531,"children":533},{"id":532},"vue2-较明显的设计缺陷",[534],{"type":433,"value":535},"Vue2 较明显的设计缺陷？",{"type":427,"tag":441,"props":537,"children":538},{},[539,544,549,554],{"type":427,"tag":445,"props":540,"children":541},{},[542],{"type":433,"value":543},"使用 Flow.js 来做类型校验，而不是社区所向的 TypeScript",{"type":427,"tag":445,"props":545,"children":546},{},[547],{"type":433,"value":548},"Vue2 内嵌了诸如 DOM API 之类的代码，使得跨端等二次开发变得困难，代码耦合也使得摇树优化变得困难",{"type":427,"tag":445,"props":550,"children":551},{},[552],{"type":433,"value":553},"Vue2 使用的 defineProperty 有缺陷，不支持 delete 等操作符",{"type":427,"tag":445,"props":555,"children":556},{},[557],{"type":433,"value":558},"Option API 在组件代码较多时不易维护",{"type":427,"tag":473,"props":560,"children":562},{"id":561},"option-api-的一些缺陷",[563],{"type":433,"value":564},"Option API 的一些缺陷？",{"type":427,"tag":441,"props":566,"children":567},{},[568,573,578],{"type":427,"tag":445,"props":569,"children":570},{},[571],{"type":433,"value":572},"数据挂载在 this 对象上，对类型系统以及摇树优化不友好",{"type":427,"tag":445,"props":574,"children":575},{},[576],{"type":433,"value":577},"代码增多时，维护变得困难",{"type":427,"tag":445,"props":579,"children":580},{},[581],{"type":433,"value":582},"不方便抽离通用逻辑",{"type":427,"tag":473,"props":584,"children":586},{"id":585},"为什么要重写-vue2",[587],{"type":433,"value":588},"为什么要重写 Vue2？",{"type":427,"tag":504,"props":590,"children":591},{},[592],{"type":433,"value":593},"有两个关键因素：主流浏览器逐渐兼容 Proxy，以及修复 Vue2 的设计缺陷。",{"type":427,"tag":504,"props":595,"children":596},{},[597],{"type":433,"value":598},"切换到 Proxy 可以修复过去 setter、getter 无法拦截数组修改以及修改了对象本身带来的语义变化的问题，但由于它是一个原生特性，无法 polyfill，所以对 Vue 而言是一个重大的突破性变动。",{"type":427,"tag":504,"props":600,"children":601},{},[602],{"type":433,"value":603},"过去的架构带来了模板很难正确的在 source-map 中追溯、渲染器（如 DOM 渲染器）不是渐进式的可选项的问题，再加上框架内部代码的耦合，使得摇树优化变得困难，代码也不便理解。",{"type":427,"tag":504,"props":605,"children":606},{},[607,609],{"type":433,"value":608},"见：",{"type":427,"tag":449,"props":610,"children":613},{"href":611,"rel":612},"https://zhuanlan.zhihu.com/p/147022323",[453],[614],{"type":433,"value":615},"重头来过的 Vue 3 带来了什么？",{"type":427,"tag":435,"props":617,"children":619},{"id":618},"响应式",[620],{"type":433,"value":618},{"type":427,"tag":473,"props":622,"children":624},{"id":623},"ref-的原理",[625],{"type":433,"value":626},"ref 的原理？",{"type":427,"tag":504,"props":628,"children":629},{},[630],{"type":433,"value":631},"ref 是在基础值的外面封装了一层对象，使用对象的 value setting、value getter 函数拦截并操作 value 属性，达到响应式的效果。",{"type":427,"tag":435,"props":633,"children":635},{"id":634},"模板",[636],{"type":433,"value":634},{"type":427,"tag":473,"props":638,"children":640},{"id":639},"vue3-双向绑定的原理",[641],{"type":433,"value":642},"Vue3 双向绑定的原理？",{"type":427,"tag":504,"props":644,"children":645},{},[646,647],{"type":433,"value":608},{"type":427,"tag":449,"props":648,"children":651},{"href":649,"rel":650},"https://segmentfault.com/a/1190000041716718",[453],[652],{"type":433,"value":653},"TODO，Vue.js 3.x 双向绑定原理",{"type":427,"tag":435,"props":655,"children":657},{"id":656},"编译器",[658],{"type":433,"value":656},{"type":427,"tag":473,"props":660,"children":662},{"id":661},"vue3-做的静态优化有哪些",[663],{"type":433,"value":664},"Vue3 做的静态优化有哪些？",{"type":427,"tag":504,"props":666,"children":667},{},[668],{"type":427,"tag":669,"props":670,"children":673},"img",{"alt":671,"src":672},"Vue3 Compiler Example","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220628022452.png",[],{"type":427,"tag":435,"props":675,"children":677},{"id":676},"vdom",[678],{"type":433,"value":679},"VDOM",{"type":427,"tag":473,"props":681,"children":683},{"id":682},"vue2-和-vue3-的-dom-diff-算法有什么不同",[684],{"type":433,"value":685},"Vue2 和 Vue3 的 DOM Diff 算法有什么不同？",{"type":427,"tag":504,"props":687,"children":688},{},[689],{"type":433,"value":690},"Vue2 使用双端 diff，Vue3 使用最长递增子序列。",{"type":427,"tag":692,"props":693,"children":695},"h3",{"id":694},"todo-1",[696],{"type":433,"value":439},{"type":427,"tag":504,"props":698,"children":699},{},[700,702],{"type":433,"value":701},"为什么 React 的 Diff 算法不采用 Vue 的双端对比算法？",{"type":427,"tag":449,"props":703,"children":706},{"href":704,"rel":705},"https://juejin.cn/post/7116141318853623839",[453],[707],{"type":433,"value":704},{"type":427,"tag":504,"props":709,"children":710},{},[711,713],{"type":433,"value":712},"diff 算法深入一下？",{"type":427,"tag":449,"props":714,"children":717},{"href":715,"rel":716},"https://zhuanlan.zhihu.com/p/401340016",[453],[718],{"type":433,"value":715},{"type":427,"tag":504,"props":720,"children":721},{},[722,724],{"type":433,"value":723},"聊聊 Vue 的双端 diff 算法 ",{"type":427,"tag":449,"props":725,"children":728},{"href":726,"rel":727},"https://zhuanlan.zhihu.com/p/534903909",[453],[729],{"type":433,"value":726},{"type":427,"tag":504,"props":731,"children":732},{},[733,735],{"type":433,"value":734},"diff算法之双端对比 ",{"type":427,"tag":449,"props":736,"children":739},{"href":737,"rel":738},"https://zhuanlan.zhihu.com/p/432927438",[453],[740],{"type":433,"value":737},{"type":427,"tag":435,"props":742,"children":744},{"id":743},"组件",[745],{"type":433,"value":743},{"type":427,"tag":473,"props":747,"children":749},{"id":748},"keep-alive-的理解它是如何实现的具体缓存的是什么",[750],{"type":433,"value":751},"keep-alive 的理解，它是如何实现的，具体缓存的是什么？",{"type":427,"tag":504,"props":753,"children":754},{},[755],{"type":433,"value":756},"keep-alive 是一个内置抽象组件，会根据内部组件的 key，使用 LRU 策略来缓存组件实例。",{"type":427,"tag":473,"props":758,"children":760},{"id":759},"vue-的生命周期",[761],{"type":433,"value":762},"Vue 的生命周期",{"type":427,"tag":504,"props":764,"children":765},{},[766],{"type":433,"value":767},"keep-alive 独有 activated 和 deactivated 两个生命周期。",{"type":427,"tag":473,"props":769,"children":771},{"id":770},"vue-子组件和父组件执行顺序",[772],{"type":433,"value":773},"Vue 子组件和父组件执行顺序",{"type":427,"tag":504,"props":775,"children":776},{},[777],{"type":433,"value":778},"父组件 mount 前，初始化子组件，所以父组件 beforeMount 后直到子组件 mounted 完成，再挂载。update 和 destroy 两个阶段类似，都是子组件先行。",{"type":427,"tag":435,"props":780,"children":782},{"id":781},"vue-router",[783],{"type":433,"value":784},"Vue Router",{"type":427,"tag":473,"props":786,"children":788},{"id":787},"route-vs-router",[789],{"type":433,"value":790},"$route VS $router",{"type":427,"tag":504,"props":792,"children":793},{},[794],{"type":433,"value":795},"$route 是路由信息对象，包含 path、params、hash、query 等，$router 是 vue-router 实例，包含路由跳转方法和钩子函数等。",{"type":427,"tag":435,"props":797,"children":799},{"id":798},"ssr",[800],{"type":433,"value":801},"SSR",{"type":427,"tag":504,"props":803,"children":804},{},[805],{"type":433,"value":439},{"type":427,"tag":504,"props":807,"children":808},{},[809],{"type":427,"tag":449,"props":810,"children":813},{"href":811,"rel":812},"https://vuejs.org/guide/scaling-up/ssr.html",[453],[814],{"type":433,"value":815},"Vue SSR",{"type":427,"tag":435,"props":817,"children":819},{"id":818},"with-typescript",[820],{"type":433,"value":821},"with TypeScript",{"type":427,"tag":473,"props":823,"children":825},{"id":824},"using-vue-with-typescript",[826],{"type":427,"tag":449,"props":827,"children":830},{"href":828,"rel":829},"https://vuejs.org/guide/typescript/overview.html",[453],[831],{"type":433,"value":832},"Using Vue with TypeScript",{"type":427,"tag":504,"props":834,"children":835},{},[836],{"type":433,"value":837},"\"With a Vite-based setup, the dev server and the bundler are transpilation-only and do not perform any type-checking.\"",{"type":427,"tag":504,"props":839,"children":840},{},[841],{"type":433,"value":842},"Vite-based 的项目不会在开发服务器启用类型检查。Vue 推荐开发者依赖 IDE 进行类型检查，或使用 vue-tsc watch mode、使用 vite-plugin-checker 另起线程插件。Vue 认为类型检查降低开发环境的速度是不值得的。",{"type":427,"tag":504,"props":844,"children":845},{},[846],{"type":433,"value":847},"两个 tsconfig.json 编译选项必须开启：isolatedModule 以便允许 esbuild 解析模块、noImplicitThis 以便启用 this 的类型。",{"type":427,"tag":504,"props":849,"children":850},{},[851],{"type":433,"value":852},"“but for each project we are running two TS language service instances: one from Volar, one from VSCode's built-in service”",{"type":427,"tag":504,"props":854,"children":855},{},[856,858,865],{"type":433,"value":857},"禁用 ",{"type":427,"tag":859,"props":860,"children":862},"code",{"className":861},[],[863],{"type":433,"value":864},"@builtin",{"type":433,"value":866}," TS 插件或打开 Volar 的 Takeover Mode，重启后便能使 Takeover Mode 生效。",{"type":427,"tag":504,"props":868,"children":869},{},[870,872,878],{"type":433,"value":871},"“... with ",{"type":427,"tag":859,"props":873,"children":875},{"className":874},[],[876],{"type":433,"value":877},"ts-loader",{"type":433,"value":879},". This, however, isn't a clean solution because the type system needs knowledge of the entire module graph to perform type checks”",{"type":427,"tag":504,"props":881,"children":882},{},[883],{"type":433,"value":884},"使用 loader 用来类型检查的两个缺陷：检测缓慢阻塞编译、只能解析预解析后的文件所以报错不能直接跳转回源码。",{"type":427,"tag":504,"props":886,"children":887},{},[888,890,896],{"type":433,"value":889},"“In version 3.2 and below, the generic type parameter for ",{"type":427,"tag":859,"props":891,"children":893},{"className":892},[],[894],{"type":433,"value":895},"defineProps()",{"type":433,"value":897}," were limited to a type literal or a reference to a local interface. This limitation has been resolved in 3.3.”",{"type":427,"tag":504,"props":899,"children":900},{},[901],{"type":433,"value":902},"TODO。为什么 Vue 3.2 不能使用外部引入的 Props 作为 type-based defineProps？Vue 3.3 是如何解决的？runtime-declare defineProps 和 runtime-declare emits 会不会对性能有影响？",{"type":427,"tag":504,"props":904,"children":905},{},[906,908,914],{"type":433,"value":907},"“specify a generic type argument but omit the initial value, the resulting type will be a union type that includes ",{"type":427,"tag":859,"props":909,"children":911},{"className":910},[],[912],{"type":433,"value":913},"undefined",{"type":433,"value":915},"”",{"type":427,"tag":504,"props":917,"children":918},{},[919],{"type":433,"value":920},"如果不包含初始值，ref 的类型推断会自动包含 undefined。",{"type":427,"tag":922,"props":923,"children":927},"pre",{"className":924,"code":925,"language":926,"meta":421,"style":421},"language-vue shiki shiki-themes material-theme-lighter github-light github-dark monokai","// inferred type: Ref\u003Cnumber | undefined>\nconst n = ref\u003Cnumber>()\n","vue",[928],{"type":427,"tag":859,"props":929,"children":930},{"__ignoreMap":421},[931,971],{"type":427,"tag":932,"props":933,"children":936},"span",{"class":934,"line":935},"line",1,[937,943,949,955,961,966],{"type":427,"tag":932,"props":938,"children":940},{"style":939},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[941],{"type":433,"value":942},"// inferred type: Ref",{"type":427,"tag":932,"props":944,"children":946},{"style":945},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[947],{"type":433,"value":948},"\u003C",{"type":427,"tag":932,"props":950,"children":952},{"style":951},"--shiki-light:#E53935;--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672",[953],{"type":433,"value":954},"number",{"type":427,"tag":932,"props":956,"children":958},{"style":957},"--shiki-light:#9C3EDA;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[959],{"type":433,"value":960}," |",{"type":427,"tag":932,"props":962,"children":963},{"style":957},[964],{"type":433,"value":965}," undefined",{"type":427,"tag":932,"props":967,"children":968},{"style":945},[969],{"type":433,"value":970},">\n",{"type":427,"tag":932,"props":972,"children":974},{"class":934,"line":973},2,[975],{"type":427,"tag":932,"props":976,"children":977},{"style":939},[978],{"type":433,"value":979},"const n = ref\u003Cnumber>()\n",{"type":427,"tag":504,"props":981,"children":982},{},[983,985,991,993,999,1001,1007,1009,1015,1017,1023],{"type":433,"value":984},"”Without type annotation, the ",{"type":427,"tag":859,"props":986,"children":988},{"className":987},[],[989],{"type":433,"value":990},"event",{"type":433,"value":992}," argument will implicitly have a type of ",{"type":427,"tag":859,"props":994,"children":996},{"className":995},[],[997],{"type":433,"value":998},"any",{"type":433,"value":1000},". This will also result in a TS error if ",{"type":427,"tag":859,"props":1002,"children":1004},{"className":1003},[],[1005],{"type":433,"value":1006},"\"strict\": true",{"type":433,"value":1008}," or ",{"type":427,"tag":859,"props":1010,"children":1012},{"className":1011},[],[1013],{"type":433,"value":1014},"\"noImplicitAny\": true",{"type":433,"value":1016}," are used in ",{"type":427,"tag":859,"props":1018,"children":1020},{"className":1019},[],[1021],{"type":433,"value":1022},"tsconfig.json",{"type":433,"value":1024},".“",{"type":427,"tag":504,"props":1026,"children":1027},{},[1028],{"type":433,"value":1029},"因为 noImplicitAny 需要打开，不然没法推断 options api 函数中 this 的类型，所以在组件中，接受事件的函数面对 Event 参数必须显式指定类型，不然就会报错。",{"type":427,"tag":1031,"props":1032,"children":1033},"style",{},[1034],{"type":433,"value":1035},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":421,"searchDepth":973,"depth":973,"links":1037},[1038,1039,1040,1041,1042,1043,1047,1048,1049,1050],{"id":412,"depth":973,"text":439},{"id":469,"depth":973,"text":469},{"id":618,"depth":973,"text":618},{"id":634,"depth":973,"text":634},{"id":656,"depth":973,"text":656},{"id":676,"depth":973,"text":679,"children":1044},[1045],{"id":694,"depth":1046,"text":439},3,{"id":743,"depth":973,"text":743},{"id":781,"depth":973,"text":784},{"id":798,"depth":973,"text":801},{"id":818,"depth":973,"text":821},"markdown","content:6.maps:_framework:vue.md","content","6.maps/_framework/vue.md","6.maps/_framework/vue","md",[1058,1061],{"_path":1059,"title":1060,"description":421},"/maps/_framework/react","React Mind Map",{"_path":1062,"title":1063,"description":421},"/maps/_frontend/css/css-mind-map","CSS Mind Map",1738319204771]