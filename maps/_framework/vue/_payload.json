[{"data":1,"prerenderedAt":1058},["ShallowReactive",2],{"navigation":3,"/maps/_framework/vue":410,"/maps/_framework/vue-surround":1051},[4,32,83,102,129,135,141,147,393,399,405],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":42,"_path":43},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":45,"_path":46},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":48,"_path":49},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":51,"_path":52},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":54,"_path":55},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":57,"_path":58},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":60,"_path":61},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":63,"_path":64},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":66,"_path":67},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":69,"_path":70},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":72,"_path":73},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":75,"_path":76},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":78,"_path":79},"🚝 四十二篇系列","/articles/fourty-two",{"title":81,"_path":82},"📝 技术博客归档","/articles/fold",{"title":84,"_path":85,"children":86},"造物 / Make","/tools",[87,90,93,96,99],{"title":88,"_path":89},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":91,"_path":92},"🌐 AnySort","/tools/anysort",{"title":94,"_path":95},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":97,"_path":98},"👓 Crapto","/tools/crypto-inline",{"title":100,"_path":101},"🖨️ any-to-base64","/tools/any-to-base64",{"title":103,"_path":104,"children":105},"吉他剧场 / Music","/music",[106,108,111,114,117,120,123,126],{"title":107,"_path":104},"🎸 FingerStyle！",{"title":109,"_path":110},"🌬️ 等待的风","/music/wind",{"title":112,"_path":113},"💕 约定的海洋","/music/ocean",{"title":115,"_path":116},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":118,"_path":119},"🌏 残酷天使的行动纲领","/music/eva",{"title":121,"_path":122},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":124,"_path":125},"🍷 Wu Wei","/music/wu-wei",{"title":127,"_path":128},"🌅 无题","/music/untitled",{"title":130,"_path":131,"children":132},"画点什么 / Paint","/paint",[133],{"title":134,"_path":131},"🚧 正在施工",{"title":136,"_path":137,"children":138},"读书笔记 / Notes","/books",[139],{"title":140,"_path":137},"📕 读书笔记",{"title":142,"_path":143,"children":144},"知识地图 / Maps","/maps",[145],{"title":146,"_path":143},"🏁 知识地图",{"title":148,"_path":149,"children":150},"零散的笔记 / Gists","/gists",[151,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390],{"title":152,"_path":149},"🧊 Gists",{"title":154,"_path":155},"网站的可访问性","/gists/accessibility",{"title":157,"_path":158},"Bit","/gists/bit",{"title":160,"_path":161},"图片模糊","/gists/blur",{"title":163,"_path":164},"渲染相关笔记","/gists/c4d",{"title":166,"_path":167},"CDN 问题记录","/gists/cdn",{"title":169,"_path":170},"消毒剂","/gists/cleaner",{"title":172,"_path":173},"Windows Command","/gists/cmd",{"title":175,"_path":176},"Command","/gists/command",{"title":178,"_path":179},"复杂科学","/gists/complexity-science",{"title":181,"_path":182},"GitHub Copilot","/gists/copilot",{"title":184,"_path":185},"宇宙","/gists/cosmos",{"title":187,"_path":188},"C++","/gists/cpp",{"title":190,"_path":191},"Data Structure","/gists/data-structure",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"设计模式","/gists/design-patterns",{"title":199,"_path":200},"Developer Experience","/gists/developer-experience",{"title":202,"_path":203},"Device Metrics","/gists/device-metrix",{"title":205,"_path":206},"数字化转型","/gists/digital-transformation",{"title":208,"_path":209},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":211,"_path":212},"正则表达式","/gists/eegex",{"title":214,"_path":215},"Emoji","/gists/emoji",{"title":217,"_path":218},"工程","/gists/engineering",{"title":220,"_path":221},"熵","/gists/entropy",{"title":223,"_path":224},"Environment","/gists/environment",{"title":226,"_path":227},"Erlang","/gists/erlang",{"title":229,"_path":230},"逃离塔克夫","/gists/escape-from-tarkov",{"title":232,"_path":233},"ESNext (ES6-ES11)","/gists/esnext",{"title":235,"_path":236},"Eval！","/gists/eval",{"title":238,"_path":239},"Flutter","/gists/flutter",{"title":241,"_path":242},"字体","/gists/font",{"title":244,"_path":245},"JS 函数式编程","/gists/functional",{"title":247,"_path":248},"游戏化","/gists/gamification",{"title":250,"_path":251},"Google C++ Standard","/gists/google-cpp-standard",{"title":253,"_path":254},"双向链接完全体","/gists/graph",{"title":256,"_path":257},"Hardwares","/gists/hardwares",{"title":259,"_path":260},"哈希冲突","/gists/hash-collision",{"title":262,"_path":263},"信息设计","/gists/information-design",{"title":265,"_path":266},"InstantPage","/gists/instant.page",{"title":268,"_path":269},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":271,"_path":272},"KVStore","/gists/key-value-db",{"title":274,"_path":275},"Kubernetes","/gists/kubernetes",{"title":277,"_path":278},"Makefile","/gists/makefile",{"title":280,"_path":281},"Markdown Inline Style","/gists/markdown-nice",{"title":283,"_path":284},"小程序","/gists/miniapp",{"title":286,"_path":287},"减小页面快照体积","/gists/minify-html",{"title":289,"_path":290},"mklink","/gists/mklink",{"title":292,"_path":293},"Mock","/gists/mock",{"title":295,"_path":296},"多人协作系统","/gists/multiplayer",{"title":298,"_path":299},"多端应用","/gists/multy-end-app",{"title":301,"_path":302},"神经科学","/gists/neuroscience",{"title":304,"_path":305},"OO","/gists/oo",{"title":307,"_path":308},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":310,"_path":311},"PInvoke","/gists/pinvoke",{"title":313,"_path":314},"像素","/gists/pixel",{"title":316,"_path":317},"PowerShell","/gists/powershell",{"title":319,"_path":320},"量子","/gists/quantum",{"title":322,"_path":323},"保持好奇心","/gists/questions",{"title":325,"_path":326},"React Native","/gists/react-native",{"title":328,"_path":329},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":331,"_path":332},"SEO","/gists/seo",{"title":334,"_path":335},"Shader","/gists/shader",{"title":337,"_path":338},"Shape Up","/gists/shape-up",{"title":340,"_path":341},"睡觉","/gists/sleep",{"title":343,"_path":344},"记录奇怪的问题","/gists/solved",{"title":346,"_path":347},"States","/gists/states",{"title":349,"_path":350},"Storage","/gists/storage",{"title":352,"_path":353},"音视频流处理","/gists/stream-cli",{"title":355,"_path":356},"Symbol","/gists/symbol",{"title":358,"_path":359},"系统论","/gists/systems-theory",{"title":361,"_path":362},"Taro","/gists/taro",{"title":364,"_path":365},"任务切片","/gists/task-slice",{"title":367,"_path":368},"技术偏好","/gists/tech-dudge",{"title":370,"_path":371},"Untitled","/gists/untitled",{"title":373,"_path":374},"可变字体","/gists/variable-font",{"title":376,"_path":377},"视觉错觉","/gists/visual-illusion",{"title":379,"_path":380},"SS(SSR)","/gists/vpn",{"title":382,"_path":383},"VS Code 插件开发","/gists/vscode-plugin",{"title":385,"_path":386},"Web Components","/gists/web-components",{"title":388,"_path":389},"Windows","/gists/windows",{"title":391,"_path":392},"查缺补漏","/gists/wrong",{"title":394,"_path":395,"children":396},"代码笔记 / Gists","/source-code",[397],{"title":398,"_path":395},"🚄 代码笔记",{"title":400,"_path":401,"children":402},"我 / Abount","/hire",[403],{"title":404,"_path":401},"📬 技术简历",{"title":406,"_path":407,"children":408},"todo","/todo",[409],{"title":406,"_path":407},{"_path":411,"_dir":412,"_draft":413,"_partial":414,"_locale":415,"title":416,"description":415,"body":417,"_type":1045,"_id":1046,"_source":1047,"_file":1048,"_stem":1049,"_extension":1050},"/maps/_framework/vue","_framework",false,true,"","Vue Mind Map",{"type":418,"children":419,"toc":1030},"root",[420,428,434,461,466,473,491,497,503,508,513,519,524,530,553,559,577,583,588,593,598,610,615,621,626,631,637,648,653,659,668,674,680,685,691,702,713,724,735,740,746,751,757,762,768,773,779,785,790,796,800,810,816,827,832,837,842,847,861,874,879,892,897,910,915,974,1019,1024],{"type":421,"tag":422,"props":423,"children":425},"element","h1",{"id":424},"vue-mind-map",[426],{"type":427,"value":416},"text",{"type":421,"tag":429,"props":430,"children":431},"h2",{"id":406},[432],{"type":427,"value":433},"TODO",{"type":421,"tag":435,"props":436,"children":437},"ul",{},[438,451],{"type":421,"tag":439,"props":440,"children":441},"li",{},[442],{"type":421,"tag":443,"props":444,"children":448},"a",{"href":445,"rel":446},"https://www.zhihu.com/question/390956688/answer/1184696066",[447],"nofollow",[449],{"type":427,"value":450},"Vue.js 技术揭秘",{"type":421,"tag":439,"props":452,"children":453},{},[454],{"type":421,"tag":443,"props":455,"children":458},{"href":456,"rel":457},"https://github.com/HcySunYang/vue-design/blob/elegant/docs/art/1start-learn",[447],[459],{"type":427,"value":460},"vue-design",{"type":421,"tag":429,"props":462,"children":464},{"id":463},"简介",[465],{"type":427,"value":463},{"type":421,"tag":467,"props":468,"children":470},"h4",{"id":469},"前端框架发展历史关键点",[471],{"type":427,"value":472},"前端框架发展历史关键点？",{"type":421,"tag":435,"props":474,"children":475},{},[476,481,486],{"type":421,"tag":439,"props":477,"children":478},{},[479],{"type":427,"value":480},"2004 年，Google Gmail 使用的 Ajax 技术使前端脱离模板的束缚。",{"type":421,"tag":439,"props":482,"children":483},{},[484],{"type":427,"value":485},"jQuery 解决了不同浏览器的兼容性问题。",{"type":421,"tag":439,"props":487,"children":488},{},[489],{"type":427,"value":490},"2009 年，AngularJS 引领了 MVVM 的潮流，NodeJS 加速了前端工程化的诞生。",{"type":421,"tag":467,"props":492,"children":494},{"id":493},"vue-和-react-的计算性能瓶颈是什么",[495],{"type":427,"value":496},"Vue 和 React 的计算性能瓶颈是什么？",{"type":421,"tag":498,"props":499,"children":500},"p",{},[501],{"type":427,"value":502},"Vue1 的每一个响应式数据都有一个 Watcher，极大的消耗内存，React 的问题发生在当页面 JS 执行 Diff 算法超过帧时间时带来的卡顿问题。",{"type":421,"tag":498,"props":504,"children":505},{},[506],{"type":427,"value":507},"Vue2 引入虚拟 DOM，采用组件级别的响应式数据颗粒度，在避免了 Diff 算法超时问题的同时，降低内存消耗。同时，虚拟 DOM 还带来跨端能力。",{"type":421,"tag":498,"props":509,"children":510},{},[511],{"type":427,"value":512},"React 引入 Fiber 架构，将 DOM Tree 变成链表，使得有能力随时启动或停止 Diff 算法（树的遍历使用递归所以相比链表更难记录状态），可以利用浏览器的空闲时间计算 Diff，避免了卡顿。",{"type":421,"tag":467,"props":514,"children":516},{"id":515},"mvvmmvc-的区别",[517],{"type":427,"value":518},"MVVM、MVC 的区别？",{"type":421,"tag":498,"props":520,"children":521},{},[522],{"type":427,"value":523},"都是软件架构模式，主要区别是关注点不一样，Controller 用来承接交互操作并触发 Model 的修改，而 ViewModel 和 Model 层是双向绑定的，所以写 VueJS 时的思想不在如何操作 DOM 元素，而主要是数据应该怎么变化。",{"type":421,"tag":467,"props":525,"children":527},{"id":526},"vue2-较明显的设计缺陷",[528],{"type":427,"value":529},"Vue2 较明显的设计缺陷？",{"type":421,"tag":435,"props":531,"children":532},{},[533,538,543,548],{"type":421,"tag":439,"props":534,"children":535},{},[536],{"type":427,"value":537},"使用 Flow.js 来做类型校验，而不是社区所向的 TypeScript",{"type":421,"tag":439,"props":539,"children":540},{},[541],{"type":427,"value":542},"Vue2 内嵌了诸如 DOM API 之类的代码，使得跨端等二次开发变得困难，代码耦合也使得摇树优化变得困难",{"type":421,"tag":439,"props":544,"children":545},{},[546],{"type":427,"value":547},"Vue2 使用的 defineProperty 有缺陷，不支持 delete 等操作符",{"type":421,"tag":439,"props":549,"children":550},{},[551],{"type":427,"value":552},"Option API 在组件代码较多时不易维护",{"type":421,"tag":467,"props":554,"children":556},{"id":555},"option-api-的一些缺陷",[557],{"type":427,"value":558},"Option API 的一些缺陷？",{"type":421,"tag":435,"props":560,"children":561},{},[562,567,572],{"type":421,"tag":439,"props":563,"children":564},{},[565],{"type":427,"value":566},"数据挂载在 this 对象上，对类型系统以及摇树优化不友好",{"type":421,"tag":439,"props":568,"children":569},{},[570],{"type":427,"value":571},"代码增多时，维护变得困难",{"type":421,"tag":439,"props":573,"children":574},{},[575],{"type":427,"value":576},"不方便抽离通用逻辑",{"type":421,"tag":467,"props":578,"children":580},{"id":579},"为什么要重写-vue2",[581],{"type":427,"value":582},"为什么要重写 Vue2？",{"type":421,"tag":498,"props":584,"children":585},{},[586],{"type":427,"value":587},"有两个关键因素：主流浏览器逐渐兼容 Proxy，以及修复 Vue2 的设计缺陷。",{"type":421,"tag":498,"props":589,"children":590},{},[591],{"type":427,"value":592},"切换到 Proxy 可以修复过去 setter、getter 无法拦截数组修改以及修改了对象本身带来的语义变化的问题，但由于它是一个原生特性，无法 polyfill，所以对 Vue 而言是一个重大的突破性变动。",{"type":421,"tag":498,"props":594,"children":595},{},[596],{"type":427,"value":597},"过去的架构带来了模板很难正确的在 source-map 中追溯、渲染器（如 DOM 渲染器）不是渐进式的可选项的问题，再加上框架内部代码的耦合，使得摇树优化变得困难，代码也不便理解。",{"type":421,"tag":498,"props":599,"children":600},{},[601,603],{"type":427,"value":602},"见：",{"type":421,"tag":443,"props":604,"children":607},{"href":605,"rel":606},"https://zhuanlan.zhihu.com/p/147022323",[447],[608],{"type":427,"value":609},"重头来过的 Vue 3 带来了什么？",{"type":421,"tag":429,"props":611,"children":613},{"id":612},"响应式",[614],{"type":427,"value":612},{"type":421,"tag":467,"props":616,"children":618},{"id":617},"ref-的原理",[619],{"type":427,"value":620},"ref 的原理？",{"type":421,"tag":498,"props":622,"children":623},{},[624],{"type":427,"value":625},"ref 是在基础值的外面封装了一层对象，使用对象的 value setting、value getter 函数拦截并操作 value 属性，达到响应式的效果。",{"type":421,"tag":429,"props":627,"children":629},{"id":628},"模板",[630],{"type":427,"value":628},{"type":421,"tag":467,"props":632,"children":634},{"id":633},"vue3-双向绑定的原理",[635],{"type":427,"value":636},"Vue3 双向绑定的原理？",{"type":421,"tag":498,"props":638,"children":639},{},[640,641],{"type":427,"value":602},{"type":421,"tag":443,"props":642,"children":645},{"href":643,"rel":644},"https://segmentfault.com/a/1190000041716718",[447],[646],{"type":427,"value":647},"TODO，Vue.js 3.x 双向绑定原理",{"type":421,"tag":429,"props":649,"children":651},{"id":650},"编译器",[652],{"type":427,"value":650},{"type":421,"tag":467,"props":654,"children":656},{"id":655},"vue3-做的静态优化有哪些",[657],{"type":427,"value":658},"Vue3 做的静态优化有哪些？",{"type":421,"tag":498,"props":660,"children":661},{},[662],{"type":421,"tag":663,"props":664,"children":667},"img",{"alt":665,"src":666},"Vue3 Compiler Example","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220628022452.png",[],{"type":421,"tag":429,"props":669,"children":671},{"id":670},"vdom",[672],{"type":427,"value":673},"VDOM",{"type":421,"tag":467,"props":675,"children":677},{"id":676},"vue2-和-vue3-的-dom-diff-算法有什么不同",[678],{"type":427,"value":679},"Vue2 和 Vue3 的 DOM Diff 算法有什么不同？",{"type":421,"tag":498,"props":681,"children":682},{},[683],{"type":427,"value":684},"Vue2 使用双端 diff，Vue3 使用最长递增子序列。",{"type":421,"tag":686,"props":687,"children":689},"h3",{"id":688},"todo-1",[690],{"type":427,"value":433},{"type":421,"tag":498,"props":692,"children":693},{},[694,696],{"type":427,"value":695},"为什么 React 的 Diff 算法不采用 Vue 的双端对比算法？",{"type":421,"tag":443,"props":697,"children":700},{"href":698,"rel":699},"https://juejin.cn/post/7116141318853623839",[447],[701],{"type":427,"value":698},{"type":421,"tag":498,"props":703,"children":704},{},[705,707],{"type":427,"value":706},"diff 算法深入一下？",{"type":421,"tag":443,"props":708,"children":711},{"href":709,"rel":710},"https://zhuanlan.zhihu.com/p/401340016",[447],[712],{"type":427,"value":709},{"type":421,"tag":498,"props":714,"children":715},{},[716,718],{"type":427,"value":717},"聊聊 Vue 的双端 diff 算法 ",{"type":421,"tag":443,"props":719,"children":722},{"href":720,"rel":721},"https://zhuanlan.zhihu.com/p/534903909",[447],[723],{"type":427,"value":720},{"type":421,"tag":498,"props":725,"children":726},{},[727,729],{"type":427,"value":728},"diff算法之双端对比 ",{"type":421,"tag":443,"props":730,"children":733},{"href":731,"rel":732},"https://zhuanlan.zhihu.com/p/432927438",[447],[734],{"type":427,"value":731},{"type":421,"tag":429,"props":736,"children":738},{"id":737},"组件",[739],{"type":427,"value":737},{"type":421,"tag":467,"props":741,"children":743},{"id":742},"keep-alive-的理解它是如何实现的具体缓存的是什么",[744],{"type":427,"value":745},"keep-alive 的理解，它是如何实现的，具体缓存的是什么？",{"type":421,"tag":498,"props":747,"children":748},{},[749],{"type":427,"value":750},"keep-alive 是一个内置抽象组件，会根据内部组件的 key，使用 LRU 策略来缓存组件实例。",{"type":421,"tag":467,"props":752,"children":754},{"id":753},"vue-的生命周期",[755],{"type":427,"value":756},"Vue 的生命周期",{"type":421,"tag":498,"props":758,"children":759},{},[760],{"type":427,"value":761},"keep-alive 独有 activated 和 deactivated 两个生命周期。",{"type":421,"tag":467,"props":763,"children":765},{"id":764},"vue-子组件和父组件执行顺序",[766],{"type":427,"value":767},"Vue 子组件和父组件执行顺序",{"type":421,"tag":498,"props":769,"children":770},{},[771],{"type":427,"value":772},"父组件 mount 前，初始化子组件，所以父组件 beforeMount 后直到子组件 mounted 完成，再挂载。update 和 destroy 两个阶段类似，都是子组件先行。",{"type":421,"tag":429,"props":774,"children":776},{"id":775},"vue-router",[777],{"type":427,"value":778},"Vue Router",{"type":421,"tag":467,"props":780,"children":782},{"id":781},"route-vs-router",[783],{"type":427,"value":784},"$route VS $router",{"type":421,"tag":498,"props":786,"children":787},{},[788],{"type":427,"value":789},"$route 是路由信息对象，包含 path、params、hash、query 等，$router 是 vue-router 实例，包含路由跳转方法和钩子函数等。",{"type":421,"tag":429,"props":791,"children":793},{"id":792},"ssr",[794],{"type":427,"value":795},"SSR",{"type":421,"tag":498,"props":797,"children":798},{},[799],{"type":427,"value":433},{"type":421,"tag":498,"props":801,"children":802},{},[803],{"type":421,"tag":443,"props":804,"children":807},{"href":805,"rel":806},"https://vuejs.org/guide/scaling-up/ssr.html",[447],[808],{"type":427,"value":809},"Vue SSR",{"type":421,"tag":429,"props":811,"children":813},{"id":812},"with-typescript",[814],{"type":427,"value":815},"with TypeScript",{"type":421,"tag":467,"props":817,"children":819},{"id":818},"using-vue-with-typescript",[820],{"type":421,"tag":443,"props":821,"children":824},{"href":822,"rel":823},"https://vuejs.org/guide/typescript/overview.html",[447],[825],{"type":427,"value":826},"Using Vue with TypeScript",{"type":421,"tag":498,"props":828,"children":829},{},[830],{"type":427,"value":831},"\"With a Vite-based setup, the dev server and the bundler are transpilation-only and do not perform any type-checking.\"",{"type":421,"tag":498,"props":833,"children":834},{},[835],{"type":427,"value":836},"Vite-based 的项目不会在开发服务器启用类型检查。Vue 推荐开发者依赖 IDE 进行类型检查，或使用 vue-tsc watch mode、使用 vite-plugin-checker 另起线程插件。Vue 认为类型检查降低开发环境的速度是不值得的。",{"type":421,"tag":498,"props":838,"children":839},{},[840],{"type":427,"value":841},"两个 tsconfig.json 编译选项必须开启：isolatedModule 以便允许 esbuild 解析模块、noImplicitThis 以便启用 this 的类型。",{"type":421,"tag":498,"props":843,"children":844},{},[845],{"type":427,"value":846},"“but for each project we are running two TS language service instances: one from Volar, one from VSCode's built-in service”",{"type":421,"tag":498,"props":848,"children":849},{},[850,852,859],{"type":427,"value":851},"禁用 ",{"type":421,"tag":853,"props":854,"children":856},"code",{"className":855},[],[857],{"type":427,"value":858},"@builtin",{"type":427,"value":860}," TS 插件或打开 Volar 的 Takeover Mode，重启后便能使 Takeover Mode 生效。",{"type":421,"tag":498,"props":862,"children":863},{},[864,866,872],{"type":427,"value":865},"“... with ",{"type":421,"tag":853,"props":867,"children":869},{"className":868},[],[870],{"type":427,"value":871},"ts-loader",{"type":427,"value":873},". This, however, isn't a clean solution because the type system needs knowledge of the entire module graph to perform type checks”",{"type":421,"tag":498,"props":875,"children":876},{},[877],{"type":427,"value":878},"使用 loader 用来类型检查的两个缺陷：检测缓慢阻塞编译、只能解析预解析后的文件所以报错不能直接跳转回源码。",{"type":421,"tag":498,"props":880,"children":881},{},[882,884,890],{"type":427,"value":883},"“In version 3.2 and below, the generic type parameter for ",{"type":421,"tag":853,"props":885,"children":887},{"className":886},[],[888],{"type":427,"value":889},"defineProps()",{"type":427,"value":891}," were limited to a type literal or a reference to a local interface. This limitation has been resolved in 3.3.”",{"type":421,"tag":498,"props":893,"children":894},{},[895],{"type":427,"value":896},"TODO。为什么 Vue 3.2 不能使用外部引入的 Props 作为 type-based defineProps？Vue 3.3 是如何解决的？runtime-declare defineProps 和 runtime-declare emits 会不会对性能有影响？",{"type":421,"tag":498,"props":898,"children":899},{},[900,902,908],{"type":427,"value":901},"“specify a generic type argument but omit the initial value, the resulting type will be a union type that includes ",{"type":421,"tag":853,"props":903,"children":905},{"className":904},[],[906],{"type":427,"value":907},"undefined",{"type":427,"value":909},"”",{"type":421,"tag":498,"props":911,"children":912},{},[913],{"type":427,"value":914},"如果不包含初始值，ref 的类型推断会自动包含 undefined。",{"type":421,"tag":916,"props":917,"children":921},"pre",{"className":918,"code":919,"language":920,"meta":415,"style":415},"language-vue shiki shiki-themes material-theme-lighter github-light github-dark monokai","// inferred type: Ref\u003Cnumber | undefined>\nconst n = ref\u003Cnumber>()\n","vue",[922],{"type":421,"tag":853,"props":923,"children":924},{"__ignoreMap":415},[925,965],{"type":421,"tag":926,"props":927,"children":930},"span",{"class":928,"line":929},"line",1,[931,937,943,949,955,960],{"type":421,"tag":926,"props":932,"children":934},{"style":933},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[935],{"type":427,"value":936},"// inferred type: Ref",{"type":421,"tag":926,"props":938,"children":940},{"style":939},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[941],{"type":427,"value":942},"\u003C",{"type":421,"tag":926,"props":944,"children":946},{"style":945},"--shiki-light:#E53935;--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672",[947],{"type":427,"value":948},"number",{"type":421,"tag":926,"props":950,"children":952},{"style":951},"--shiki-light:#9C3EDA;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[953],{"type":427,"value":954}," |",{"type":421,"tag":926,"props":956,"children":957},{"style":951},[958],{"type":427,"value":959}," undefined",{"type":421,"tag":926,"props":961,"children":962},{"style":939},[963],{"type":427,"value":964},">\n",{"type":421,"tag":926,"props":966,"children":968},{"class":928,"line":967},2,[969],{"type":421,"tag":926,"props":970,"children":971},{"style":933},[972],{"type":427,"value":973},"const n = ref\u003Cnumber>()\n",{"type":421,"tag":498,"props":975,"children":976},{},[977,979,985,987,993,995,1001,1003,1009,1011,1017],{"type":427,"value":978},"”Without type annotation, the ",{"type":421,"tag":853,"props":980,"children":982},{"className":981},[],[983],{"type":427,"value":984},"event",{"type":427,"value":986}," argument will implicitly have a type of ",{"type":421,"tag":853,"props":988,"children":990},{"className":989},[],[991],{"type":427,"value":992},"any",{"type":427,"value":994},". This will also result in a TS error if ",{"type":421,"tag":853,"props":996,"children":998},{"className":997},[],[999],{"type":427,"value":1000},"\"strict\": true",{"type":427,"value":1002}," or ",{"type":421,"tag":853,"props":1004,"children":1006},{"className":1005},[],[1007],{"type":427,"value":1008},"\"noImplicitAny\": true",{"type":427,"value":1010}," are used in ",{"type":421,"tag":853,"props":1012,"children":1014},{"className":1013},[],[1015],{"type":427,"value":1016},"tsconfig.json",{"type":427,"value":1018},".“",{"type":421,"tag":498,"props":1020,"children":1021},{},[1022],{"type":427,"value":1023},"因为 noImplicitAny 需要打开，不然没法推断 options api 函数中 this 的类型，所以在组件中，接受事件的函数面对 Event 参数必须显式指定类型，不然就会报错。",{"type":421,"tag":1025,"props":1026,"children":1027},"style",{},[1028],{"type":427,"value":1029},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":415,"searchDepth":967,"depth":967,"links":1031},[1032,1033,1034,1035,1036,1037,1041,1042,1043,1044],{"id":406,"depth":967,"text":433},{"id":463,"depth":967,"text":463},{"id":612,"depth":967,"text":612},{"id":628,"depth":967,"text":628},{"id":650,"depth":967,"text":650},{"id":670,"depth":967,"text":673,"children":1038},[1039],{"id":688,"depth":1040,"text":433},3,{"id":737,"depth":967,"text":737},{"id":775,"depth":967,"text":778},{"id":792,"depth":967,"text":795},{"id":812,"depth":967,"text":815},"markdown","content:6.maps:_framework:vue.md","content","6.maps/_framework/vue.md","6.maps/_framework/vue","md",[1052,1055],{"_path":1053,"title":1054,"description":415},"/maps/_framework/react","React Mind Map",{"_path":1056,"title":1057,"description":415},"/maps/_frontend/css/css-mind-map","CSS Mind Map",1732808722699]