[{"data":1,"prerenderedAt":1030},["Reactive",2],{"navigation":3,"/maps/_framework/vue":383,"/maps/_framework/vue-surround":1023},[4,32,80,96,123,129,135,366,372,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"图片模糊","/gists/blur",{"title":148,"_path":149},"渲染相关笔记","/gists/c4d",{"title":151,"_path":152},"CDN 问题记录","/gists/cdn",{"title":154,"_path":155},"消毒剂","/gists/cleaner",{"title":157,"_path":158},"Windows Command","/gists/cmd",{"title":160,"_path":161},"Command","/gists/command",{"title":163,"_path":164},"复杂科学","/gists/complexity-science",{"title":166,"_path":167},"宇宙","/gists/cosmos",{"title":169,"_path":170},"C++","/gists/cpp",{"title":172,"_path":173},"Data Structure","/gists/data-structure",{"title":175,"_path":176},"DEPRESSION","/gists/depression",{"title":178,"_path":179},"设计模式","/gists/design-patterns",{"title":181,"_path":182},"Developer Experience","/gists/developer-experience",{"title":184,"_path":185},"Device Metrics","/gists/device-metrix",{"title":187,"_path":188},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":190,"_path":191},"正则表达式","/gists/eegex",{"title":193,"_path":194},"Emoji","/gists/emoji",{"title":196,"_path":197},"工程","/gists/engineering",{"title":199,"_path":200},"熵","/gists/entropy",{"title":202,"_path":203},"Environment","/gists/environment",{"title":205,"_path":206},"Erlang","/gists/erlang",{"title":208,"_path":209},"逃离塔克夫","/gists/escape-from-tarkov",{"title":211,"_path":212},"ESNext (ES6-ES11)","/gists/esnext",{"title":214,"_path":215},"Eval！","/gists/eval",{"title":217,"_path":218},"Flutter","/gists/flutter",{"title":220,"_path":221},"字体","/gists/font",{"title":223,"_path":224},"JS 函数式编程","/gists/functional",{"title":226,"_path":227},"Google C++ Standard","/gists/google-cpp-standard",{"title":229,"_path":230},"双向链接完全体","/gists/graph",{"title":232,"_path":233},"Hardwares","/gists/hardwares",{"title":235,"_path":236},"哈希冲突","/gists/hash-collision",{"title":238,"_path":239},"信息设计","/gists/information-design",{"title":241,"_path":242},"InstantPage","/gists/instant.page",{"title":244,"_path":245},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":247,"_path":248},"KVStore","/gists/key-value-db",{"title":250,"_path":251},"Kubernetes","/gists/kubernetes",{"title":253,"_path":254},"Makefile","/gists/makefile",{"title":256,"_path":257},"Markdown Inline Style","/gists/markdown-nice",{"title":259,"_path":260},"小程序","/gists/miniapp",{"title":262,"_path":263},"减小页面快照体积","/gists/minify-html",{"title":265,"_path":266},"mklink","/gists/mklink",{"title":268,"_path":269},"Mock","/gists/mock",{"title":271,"_path":272},"多端应用","/gists/multy-end-app",{"title":274,"_path":275},"神经科学","/gists/neuroscience",{"title":277,"_path":278},"OO","/gists/oo",{"title":280,"_path":281},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":283,"_path":284},"人物","/gists/person",{"title":286,"_path":287},"PInvoke","/gists/pinvoke",{"title":289,"_path":290},"像素","/gists/pixel",{"title":292,"_path":293},"PowerShell","/gists/powershell",{"title":295,"_path":296},"量子","/gists/quantum",{"title":298,"_path":299},"保持好奇心","/gists/questions",{"title":301,"_path":302},"React Native","/gists/react-native",{"title":304,"_path":305},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":307,"_path":308},"SEO","/gists/seo",{"title":310,"_path":311},"Shader","/gists/shader",{"title":313,"_path":314},"Shape Up","/gists/shape-up",{"title":316,"_path":317},"睡觉","/gists/sleep",{"title":319,"_path":320},"States","/gists/states",{"title":322,"_path":323},"Storage","/gists/storage",{"title":325,"_path":326},"音视频流处理","/gists/stream-cli",{"title":328,"_path":329},"Symbol","/gists/symbol",{"title":331,"_path":332},"系统论","/gists/systems-theory",{"title":334,"_path":335},"Taro","/gists/taro",{"title":337,"_path":338},"任务切片","/gists/task-slice",{"title":340,"_path":341},"技术偏好","/gists/tech-dudge",{"title":343,"_path":344},"Untitled","/gists/untitled",{"title":346,"_path":347},"可变字体","/gists/variable-font",{"title":349,"_path":350},"视觉错觉","/gists/visual-illusion",{"title":352,"_path":353},"SS(SSR)","/gists/vpn",{"title":355,"_path":356},"VS Code 插件开发","/gists/vscode-plugin",{"title":358,"_path":359},"Web Components","/gists/web-components",{"title":361,"_path":362},"Windows","/gists/windows",{"title":364,"_path":365},"查缺补漏","/gists/wrong",{"title":367,"_path":368,"children":369},"代码笔记 / Gists","/source-code",[370],{"title":371,"_path":368},"🚄 代码笔记",{"title":373,"_path":374,"children":375},"我 / Abount","/hire",[376],{"title":377,"_path":374},"📬 技术简历",{"title":379,"_path":380,"children":381},"todo","/todo",[382],{"title":379,"_path":380},{"_path":384,"_dir":385,"_draft":386,"_partial":387,"_locale":388,"title":389,"description":388,"body":390,"_type":1018,"_id":1019,"_source":1020,"_file":1021,"_extension":1022},"/maps/_framework/vue","_framework",false,true,"","Vue Mind Map",{"type":391,"children":392,"toc":1003},"root",[393,401,407,434,439,446,464,470,476,481,486,492,497,503,526,532,550,556,561,566,571,583,588,594,599,604,610,621,626,632,641,647,653,658,664,675,686,697,708,713,719,724,730,735,741,746,752,758,763,769,773,783,789,800,805,810,815,820,834,847,852,865,870,883,888,947,992,997],{"type":394,"tag":395,"props":396,"children":398},"element","h1",{"id":397},"vue-mind-map",[399],{"type":400,"value":389},"text",{"type":394,"tag":402,"props":403,"children":404},"h2",{"id":379},[405],{"type":400,"value":406},"TODO",{"type":394,"tag":408,"props":409,"children":410},"ul",{},[411,424],{"type":394,"tag":412,"props":413,"children":414},"li",{},[415],{"type":394,"tag":416,"props":417,"children":421},"a",{"href":418,"rel":419},"https://www.zhihu.com/question/390956688/answer/1184696066",[420],"nofollow",[422],{"type":400,"value":423},"Vue.js 技术揭秘",{"type":394,"tag":412,"props":425,"children":426},{},[427],{"type":394,"tag":416,"props":428,"children":431},{"href":429,"rel":430},"https://github.com/HcySunYang/vue-design/blob/elegant/docs/art/1start-learn",[420],[432],{"type":400,"value":433},"vue-design",{"type":394,"tag":402,"props":435,"children":437},{"id":436},"简介",[438],{"type":400,"value":436},{"type":394,"tag":440,"props":441,"children":443},"h4",{"id":442},"前端框架发展历史关键点",[444],{"type":400,"value":445},"前端框架发展历史关键点？",{"type":394,"tag":408,"props":447,"children":448},{},[449,454,459],{"type":394,"tag":412,"props":450,"children":451},{},[452],{"type":400,"value":453},"2004 年，Google Gmail 使用的 Ajax 技术使前端脱离模板的束缚。",{"type":394,"tag":412,"props":455,"children":456},{},[457],{"type":400,"value":458},"jQuery 解决了不同浏览器的兼容性问题。",{"type":394,"tag":412,"props":460,"children":461},{},[462],{"type":400,"value":463},"2009 年，AngularJS 引领了 MVVM 的潮流，NodeJS 加速了前端工程化的诞生。",{"type":394,"tag":440,"props":465,"children":467},{"id":466},"vue-和-react-的计算性能瓶颈是什么",[468],{"type":400,"value":469},"Vue 和 React 的计算性能瓶颈是什么？",{"type":394,"tag":471,"props":472,"children":473},"p",{},[474],{"type":400,"value":475},"Vue1 的每一个响应式数据都有一个 Watcher，极大的消耗内存，React 的问题发生在当页面 JS 执行 Diff 算法超过帧时间时带来的卡顿问题。",{"type":394,"tag":471,"props":477,"children":478},{},[479],{"type":400,"value":480},"Vue2 引入虚拟 DOM，采用组件级别的响应式数据颗粒度，在避免了 Diff 算法超时问题的同时，降低内存消耗。同时，虚拟 DOM 还带来跨端能力。",{"type":394,"tag":471,"props":482,"children":483},{},[484],{"type":400,"value":485},"React 引入 Fiber 架构，将 DOM Tree 变成链表，使得有能力随时启动或停止 Diff 算法（树的遍历使用递归所以相比链表更难记录状态），可以利用浏览器的空闲时间计算 Diff，避免了卡顿。",{"type":394,"tag":440,"props":487,"children":489},{"id":488},"mvvmmvc-的区别",[490],{"type":400,"value":491},"MVVM、MVC 的区别？",{"type":394,"tag":471,"props":493,"children":494},{},[495],{"type":400,"value":496},"都是软件架构模式，主要区别是关注点不一样，Controller 用来承接交互操作并触发 Model 的修改，而 ViewModel 和 Model 层是双向绑定的，所以写 VueJS 时的思想不在如何操作 DOM 元素，而主要是数据应该怎么变化。",{"type":394,"tag":440,"props":498,"children":500},{"id":499},"vue2-较明显的设计缺陷",[501],{"type":400,"value":502},"Vue2 较明显的设计缺陷？",{"type":394,"tag":408,"props":504,"children":505},{},[506,511,516,521],{"type":394,"tag":412,"props":507,"children":508},{},[509],{"type":400,"value":510},"使用 Flow.js 来做类型校验，而不是社区所向的 TypeScript",{"type":394,"tag":412,"props":512,"children":513},{},[514],{"type":400,"value":515},"Vue2 内嵌了诸如 DOM API 之类的代码，使得跨端等二次开发变得困难，代码耦合也使得摇树优化变得困难",{"type":394,"tag":412,"props":517,"children":518},{},[519],{"type":400,"value":520},"Vue2 使用的 defineProperty 有缺陷，不支持 delete 等操作符",{"type":394,"tag":412,"props":522,"children":523},{},[524],{"type":400,"value":525},"Option API 在组件代码较多时不易维护",{"type":394,"tag":440,"props":527,"children":529},{"id":528},"option-api-的一些缺陷",[530],{"type":400,"value":531},"Option API 的一些缺陷？",{"type":394,"tag":408,"props":533,"children":534},{},[535,540,545],{"type":394,"tag":412,"props":536,"children":537},{},[538],{"type":400,"value":539},"数据挂载在 this 对象上，对类型系统以及摇树优化不友好",{"type":394,"tag":412,"props":541,"children":542},{},[543],{"type":400,"value":544},"代码增多时，维护变得困难",{"type":394,"tag":412,"props":546,"children":547},{},[548],{"type":400,"value":549},"不方便抽离通用逻辑",{"type":394,"tag":440,"props":551,"children":553},{"id":552},"为什么要重写-vue2",[554],{"type":400,"value":555},"为什么要重写 Vue2？",{"type":394,"tag":471,"props":557,"children":558},{},[559],{"type":400,"value":560},"有两个关键因素：主流浏览器逐渐兼容 Proxy，以及修复 Vue2 的设计缺陷。",{"type":394,"tag":471,"props":562,"children":563},{},[564],{"type":400,"value":565},"切换到 Proxy 可以修复过去 setter、getter 无法拦截数组修改以及修改了对象本身带来的语义变化的问题，但由于它是一个原生特性，无法 polyfill，所以对 Vue 而言是一个重大的突破性变动。",{"type":394,"tag":471,"props":567,"children":568},{},[569],{"type":400,"value":570},"过去的架构带来了模板很难正确的在 source-map 中追溯、渲染器（如 DOM 渲染器）不是渐进式的可选项的问题，再加上框架内部代码的耦合，使得摇树优化变得困难，代码也不便理解。",{"type":394,"tag":471,"props":572,"children":573},{},[574,576],{"type":400,"value":575},"见：",{"type":394,"tag":416,"props":577,"children":580},{"href":578,"rel":579},"https://zhuanlan.zhihu.com/p/147022323",[420],[581],{"type":400,"value":582},"重头来过的 Vue 3 带来了什么？",{"type":394,"tag":402,"props":584,"children":586},{"id":585},"响应式",[587],{"type":400,"value":585},{"type":394,"tag":440,"props":589,"children":591},{"id":590},"ref-的原理",[592],{"type":400,"value":593},"ref 的原理？",{"type":394,"tag":471,"props":595,"children":596},{},[597],{"type":400,"value":598},"ref 是在基础值的外面封装了一层对象，使用对象的 value setting、value getter 函数拦截并操作 value 属性，达到响应式的效果。",{"type":394,"tag":402,"props":600,"children":602},{"id":601},"模板",[603],{"type":400,"value":601},{"type":394,"tag":440,"props":605,"children":607},{"id":606},"vue3-双向绑定的原理",[608],{"type":400,"value":609},"Vue3 双向绑定的原理？",{"type":394,"tag":471,"props":611,"children":612},{},[613,614],{"type":400,"value":575},{"type":394,"tag":416,"props":615,"children":618},{"href":616,"rel":617},"https://segmentfault.com/a/1190000041716718",[420],[619],{"type":400,"value":620},"TODO，Vue.js 3.x 双向绑定原理",{"type":394,"tag":402,"props":622,"children":624},{"id":623},"编译器",[625],{"type":400,"value":623},{"type":394,"tag":440,"props":627,"children":629},{"id":628},"vue3-做的静态优化有哪些",[630],{"type":400,"value":631},"Vue3 做的静态优化有哪些？",{"type":394,"tag":471,"props":633,"children":634},{},[635],{"type":394,"tag":636,"props":637,"children":640},"img",{"alt":638,"src":639},"Vue3 Compiler Example","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220628022452.png",[],{"type":394,"tag":402,"props":642,"children":644},{"id":643},"vdom",[645],{"type":400,"value":646},"VDOM",{"type":394,"tag":440,"props":648,"children":650},{"id":649},"vue2-和-vue3-的-dom-diff-算法有什么不同",[651],{"type":400,"value":652},"Vue2 和 Vue3 的 DOM Diff 算法有什么不同？",{"type":394,"tag":471,"props":654,"children":655},{},[656],{"type":400,"value":657},"Vue2 使用双端 diff，Vue3 使用最长递增子序列。",{"type":394,"tag":659,"props":660,"children":662},"h3",{"id":661},"todo-1",[663],{"type":400,"value":406},{"type":394,"tag":471,"props":665,"children":666},{},[667,669],{"type":400,"value":668},"为什么 React 的 Diff 算法不采用 Vue 的双端对比算法？",{"type":394,"tag":416,"props":670,"children":673},{"href":671,"rel":672},"https://juejin.cn/post/7116141318853623839",[420],[674],{"type":400,"value":671},{"type":394,"tag":471,"props":676,"children":677},{},[678,680],{"type":400,"value":679},"diff 算法深入一下？",{"type":394,"tag":416,"props":681,"children":684},{"href":682,"rel":683},"https://zhuanlan.zhihu.com/p/401340016",[420],[685],{"type":400,"value":682},{"type":394,"tag":471,"props":687,"children":688},{},[689,691],{"type":400,"value":690},"聊聊 Vue 的双端 diff 算法 ",{"type":394,"tag":416,"props":692,"children":695},{"href":693,"rel":694},"https://zhuanlan.zhihu.com/p/534903909",[420],[696],{"type":400,"value":693},{"type":394,"tag":471,"props":698,"children":699},{},[700,702],{"type":400,"value":701},"diff算法之双端对比 ",{"type":394,"tag":416,"props":703,"children":706},{"href":704,"rel":705},"https://zhuanlan.zhihu.com/p/432927438",[420],[707],{"type":400,"value":704},{"type":394,"tag":402,"props":709,"children":711},{"id":710},"组件",[712],{"type":400,"value":710},{"type":394,"tag":440,"props":714,"children":716},{"id":715},"keep-alive-的理解它是如何实现的具体缓存的是什么",[717],{"type":400,"value":718},"keep-alive 的理解，它是如何实现的，具体缓存的是什么？",{"type":394,"tag":471,"props":720,"children":721},{},[722],{"type":400,"value":723},"keep-alive 是一个内置抽象组件，会根据内部组件的 key，使用 LRU 策略来缓存组件实例。",{"type":394,"tag":440,"props":725,"children":727},{"id":726},"vue-的生命周期",[728],{"type":400,"value":729},"Vue 的生命周期",{"type":394,"tag":471,"props":731,"children":732},{},[733],{"type":400,"value":734},"keep-alive 独有 activated 和 deactivated 两个生命周期。",{"type":394,"tag":440,"props":736,"children":738},{"id":737},"vue-子组件和父组件执行顺序",[739],{"type":400,"value":740},"Vue 子组件和父组件执行顺序",{"type":394,"tag":471,"props":742,"children":743},{},[744],{"type":400,"value":745},"父组件 mount 前，初始化子组件，所以父组件 beforeMount 后直到子组件 mounted 完成，再挂载。update 和 destroy 两个阶段类似，都是子组件先行。",{"type":394,"tag":402,"props":747,"children":749},{"id":748},"vue-router",[750],{"type":400,"value":751},"Vue Router",{"type":394,"tag":440,"props":753,"children":755},{"id":754},"route-vs-router",[756],{"type":400,"value":757},"$route VS $router",{"type":394,"tag":471,"props":759,"children":760},{},[761],{"type":400,"value":762},"$route 是路由信息对象，包含 path、params、hash、query 等，$router 是 vue-router 实例，包含路由跳转方法和钩子函数等。",{"type":394,"tag":402,"props":764,"children":766},{"id":765},"ssr",[767],{"type":400,"value":768},"SSR",{"type":394,"tag":471,"props":770,"children":771},{},[772],{"type":400,"value":406},{"type":394,"tag":471,"props":774,"children":775},{},[776],{"type":394,"tag":416,"props":777,"children":780},{"href":778,"rel":779},"https://vuejs.org/guide/scaling-up/ssr.html",[420],[781],{"type":400,"value":782},"Vue SSR",{"type":394,"tag":402,"props":784,"children":786},{"id":785},"with-typescript",[787],{"type":400,"value":788},"with TypeScript",{"type":394,"tag":440,"props":790,"children":792},{"id":791},"using-vue-with-typescript",[793],{"type":394,"tag":416,"props":794,"children":797},{"href":795,"rel":796},"https://vuejs.org/guide/typescript/overview.html",[420],[798],{"type":400,"value":799},"Using Vue with TypeScript",{"type":394,"tag":471,"props":801,"children":802},{},[803],{"type":400,"value":804},"\"With a Vite-based setup, the dev server and the bundler are transpilation-only and do not perform any type-checking.\"",{"type":394,"tag":471,"props":806,"children":807},{},[808],{"type":400,"value":809},"Vite-based 的项目不会在开发服务器启用类型检查。Vue 推荐开发者依赖 IDE 进行类型检查，或使用 vue-tsc watch mode、使用 vite-plugin-checker 另起线程插件。Vue 认为类型检查降低开发环境的速度是不值得的。",{"type":394,"tag":471,"props":811,"children":812},{},[813],{"type":400,"value":814},"两个 tsconfig.json 编译选项必须开启：isolatedModule 以便允许 esbuild 解析模块、noImplicitThis 以便启用 this 的类型。",{"type":394,"tag":471,"props":816,"children":817},{},[818],{"type":400,"value":819},"“but for each project we are running two TS language service instances: one from Volar, one from VSCode's built-in service”",{"type":394,"tag":471,"props":821,"children":822},{},[823,825,832],{"type":400,"value":824},"禁用 ",{"type":394,"tag":826,"props":827,"children":829},"code",{"className":828},[],[830],{"type":400,"value":831},"@builtin",{"type":400,"value":833}," TS 插件或打开 Volar 的 Takeover Mode，重启后便能使 Takeover Mode 生效。",{"type":394,"tag":471,"props":835,"children":836},{},[837,839,845],{"type":400,"value":838},"“... with ",{"type":394,"tag":826,"props":840,"children":842},{"className":841},[],[843],{"type":400,"value":844},"ts-loader",{"type":400,"value":846},". This, however, isn't a clean solution because the type system needs knowledge of the entire module graph to perform type checks”",{"type":394,"tag":471,"props":848,"children":849},{},[850],{"type":400,"value":851},"使用 loader 用来类型检查的两个缺陷：检测缓慢阻塞编译、只能解析预解析后的文件所以报错不能直接跳转回源码。",{"type":394,"tag":471,"props":853,"children":854},{},[855,857,863],{"type":400,"value":856},"“In version 3.2 and below, the generic type parameter for ",{"type":394,"tag":826,"props":858,"children":860},{"className":859},[],[861],{"type":400,"value":862},"defineProps()",{"type":400,"value":864}," were limited to a type literal or a reference to a local interface. This limitation has been resolved in 3.3.”",{"type":394,"tag":471,"props":866,"children":867},{},[868],{"type":400,"value":869},"TODO。为什么 Vue 3.2 不能使用外部引入的 Props 作为 type-based defineProps？Vue 3.3 是如何解决的？runtime-declare defineProps 和 runtime-declare emits 会不会对性能有影响？",{"type":394,"tag":471,"props":871,"children":872},{},[873,875,881],{"type":400,"value":874},"“specify a generic type argument but omit the initial value, the resulting type will be a union type that includes ",{"type":394,"tag":826,"props":876,"children":878},{"className":877},[],[879],{"type":400,"value":880},"undefined",{"type":400,"value":882},"”",{"type":394,"tag":471,"props":884,"children":885},{},[886],{"type":400,"value":887},"如果不包含初始值，ref 的类型推断会自动包含 undefined。",{"type":394,"tag":889,"props":890,"children":894},"pre",{"className":891,"code":892,"language":893,"meta":388,"style":388},"language-vue shiki shiki-themes material-theme-lighter github-light github-dark monokai","// inferred type: Ref\u003Cnumber | undefined>\nconst n = ref\u003Cnumber>()\n","vue",[895],{"type":394,"tag":826,"props":896,"children":897},{"__ignoreMap":388},[898,938],{"type":394,"tag":899,"props":900,"children":903},"span",{"class":901,"line":902},"line",1,[904,910,916,922,928,933],{"type":394,"tag":899,"props":905,"children":907},{"style":906},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[908],{"type":400,"value":909},"// inferred type: Ref",{"type":394,"tag":899,"props":911,"children":913},{"style":912},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[914],{"type":400,"value":915},"\u003C",{"type":394,"tag":899,"props":917,"children":919},{"style":918},"--shiki-light:#E53935;--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672",[920],{"type":400,"value":921},"number",{"type":394,"tag":899,"props":923,"children":925},{"style":924},"--shiki-light:#9C3EDA;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[926],{"type":400,"value":927}," |",{"type":394,"tag":899,"props":929,"children":930},{"style":924},[931],{"type":400,"value":932}," undefined",{"type":394,"tag":899,"props":934,"children":935},{"style":912},[936],{"type":400,"value":937},">\n",{"type":394,"tag":899,"props":939,"children":941},{"class":901,"line":940},2,[942],{"type":394,"tag":899,"props":943,"children":944},{"style":906},[945],{"type":400,"value":946},"const n = ref\u003Cnumber>()\n",{"type":394,"tag":471,"props":948,"children":949},{},[950,952,958,960,966,968,974,976,982,984,990],{"type":400,"value":951},"”Without type annotation, the ",{"type":394,"tag":826,"props":953,"children":955},{"className":954},[],[956],{"type":400,"value":957},"event",{"type":400,"value":959}," argument will implicitly have a type of ",{"type":394,"tag":826,"props":961,"children":963},{"className":962},[],[964],{"type":400,"value":965},"any",{"type":400,"value":967},". This will also result in a TS error if ",{"type":394,"tag":826,"props":969,"children":971},{"className":970},[],[972],{"type":400,"value":973},"\"strict\": true",{"type":400,"value":975}," or ",{"type":394,"tag":826,"props":977,"children":979},{"className":978},[],[980],{"type":400,"value":981},"\"noImplicitAny\": true",{"type":400,"value":983}," are used in ",{"type":394,"tag":826,"props":985,"children":987},{"className":986},[],[988],{"type":400,"value":989},"tsconfig.json",{"type":400,"value":991},".“",{"type":394,"tag":471,"props":993,"children":994},{},[995],{"type":400,"value":996},"因为 noImplicitAny 需要打开，不然没法推断 options api 函数中 this 的类型，所以在组件中，接受事件的函数面对 Event 参数必须显式指定类型，不然就会报错。",{"type":394,"tag":998,"props":999,"children":1000},"style",{},[1001],{"type":400,"value":1002},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":388,"searchDepth":940,"depth":940,"links":1004},[1005,1006,1007,1008,1009,1010,1014,1015,1016,1017],{"id":379,"depth":940,"text":406},{"id":436,"depth":940,"text":436},{"id":585,"depth":940,"text":585},{"id":601,"depth":940,"text":601},{"id":623,"depth":940,"text":623},{"id":643,"depth":940,"text":646,"children":1011},[1012],{"id":661,"depth":1013,"text":406},3,{"id":710,"depth":940,"text":710},{"id":748,"depth":940,"text":751},{"id":765,"depth":940,"text":768},{"id":785,"depth":940,"text":788},"markdown","content:6.maps:_framework:vue.md","content","6.maps/_framework/vue.md","md",[1024,1027],{"_path":1025,"title":1026,"description":388},"/maps/_framework/react","React Mind Map",{"_path":1028,"title":1029,"description":388},"/maps/_frontend/css/css-mind-map","CSS Mind Map",1708107587686]