[{"data":1,"prerenderedAt":1033},["Reactive",2],{"navigation":3,"/maps/_framework/vue":386,"/maps/_framework/vue-surround":1026},[4,32,80,96,123,129,135,369,375,381],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"Bit","/gists/bit",{"title":148,"_path":149},"图片模糊","/gists/blur",{"title":151,"_path":152},"渲染相关笔记","/gists/c4d",{"title":154,"_path":155},"CDN 问题记录","/gists/cdn",{"title":157,"_path":158},"消毒剂","/gists/cleaner",{"title":160,"_path":161},"Windows Command","/gists/cmd",{"title":163,"_path":164},"Command","/gists/command",{"title":166,"_path":167},"复杂科学","/gists/complexity-science",{"title":169,"_path":170},"宇宙","/gists/cosmos",{"title":172,"_path":173},"C++","/gists/cpp",{"title":175,"_path":176},"Data Structure","/gists/data-structure",{"title":178,"_path":179},"DEPRESSION","/gists/depression",{"title":181,"_path":182},"设计模式","/gists/design-patterns",{"title":184,"_path":185},"Developer Experience","/gists/developer-experience",{"title":187,"_path":188},"Device Metrics","/gists/device-metrix",{"title":190,"_path":191},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":193,"_path":194},"正则表达式","/gists/eegex",{"title":196,"_path":197},"Emoji","/gists/emoji",{"title":199,"_path":200},"工程","/gists/engineering",{"title":202,"_path":203},"熵","/gists/entropy",{"title":205,"_path":206},"Environment","/gists/environment",{"title":208,"_path":209},"Erlang","/gists/erlang",{"title":211,"_path":212},"逃离塔克夫","/gists/escape-from-tarkov",{"title":214,"_path":215},"ESNext (ES6-ES11)","/gists/esnext",{"title":217,"_path":218},"Eval！","/gists/eval",{"title":220,"_path":221},"Flutter","/gists/flutter",{"title":223,"_path":224},"字体","/gists/font",{"title":226,"_path":227},"JS 函数式编程","/gists/functional",{"title":229,"_path":230},"Google C++ Standard","/gists/google-cpp-standard",{"title":232,"_path":233},"双向链接完全体","/gists/graph",{"title":235,"_path":236},"Hardwares","/gists/hardwares",{"title":238,"_path":239},"哈希冲突","/gists/hash-collision",{"title":241,"_path":242},"信息设计","/gists/information-design",{"title":244,"_path":245},"InstantPage","/gists/instant.page",{"title":247,"_path":248},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":250,"_path":251},"KVStore","/gists/key-value-db",{"title":253,"_path":254},"Kubernetes","/gists/kubernetes",{"title":256,"_path":257},"Makefile","/gists/makefile",{"title":259,"_path":260},"Markdown Inline Style","/gists/markdown-nice",{"title":262,"_path":263},"小程序","/gists/miniapp",{"title":265,"_path":266},"减小页面快照体积","/gists/minify-html",{"title":268,"_path":269},"mklink","/gists/mklink",{"title":271,"_path":272},"Mock","/gists/mock",{"title":274,"_path":275},"多端应用","/gists/multy-end-app",{"title":277,"_path":278},"神经科学","/gists/neuroscience",{"title":280,"_path":281},"OO","/gists/oo",{"title":283,"_path":284},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":286,"_path":287},"人物","/gists/person",{"title":289,"_path":290},"PInvoke","/gists/pinvoke",{"title":292,"_path":293},"像素","/gists/pixel",{"title":295,"_path":296},"PowerShell","/gists/powershell",{"title":298,"_path":299},"量子","/gists/quantum",{"title":301,"_path":302},"保持好奇心","/gists/questions",{"title":304,"_path":305},"React Native","/gists/react-native",{"title":307,"_path":308},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":310,"_path":311},"SEO","/gists/seo",{"title":313,"_path":314},"Shader","/gists/shader",{"title":316,"_path":317},"Shape Up","/gists/shape-up",{"title":319,"_path":320},"睡觉","/gists/sleep",{"title":322,"_path":323},"States","/gists/states",{"title":325,"_path":326},"Storage","/gists/storage",{"title":328,"_path":329},"音视频流处理","/gists/stream-cli",{"title":331,"_path":332},"Symbol","/gists/symbol",{"title":334,"_path":335},"系统论","/gists/systems-theory",{"title":337,"_path":338},"Taro","/gists/taro",{"title":340,"_path":341},"任务切片","/gists/task-slice",{"title":343,"_path":344},"技术偏好","/gists/tech-dudge",{"title":346,"_path":347},"Untitled","/gists/untitled",{"title":349,"_path":350},"可变字体","/gists/variable-font",{"title":352,"_path":353},"视觉错觉","/gists/visual-illusion",{"title":355,"_path":356},"SS(SSR)","/gists/vpn",{"title":358,"_path":359},"VS Code 插件开发","/gists/vscode-plugin",{"title":361,"_path":362},"Web Components","/gists/web-components",{"title":364,"_path":365},"Windows","/gists/windows",{"title":367,"_path":368},"查缺补漏","/gists/wrong",{"title":370,"_path":371,"children":372},"代码笔记 / Gists","/source-code",[373],{"title":374,"_path":371},"🚄 代码笔记",{"title":376,"_path":377,"children":378},"我 / Abount","/hire",[379],{"title":380,"_path":377},"📬 技术简历",{"title":382,"_path":383,"children":384},"todo","/todo",[385],{"title":382,"_path":383},{"_path":387,"_dir":388,"_draft":389,"_partial":390,"_locale":391,"title":392,"description":391,"body":393,"_type":1021,"_id":1022,"_source":1023,"_file":1024,"_extension":1025},"/maps/_framework/vue","_framework",false,true,"","Vue Mind Map",{"type":394,"children":395,"toc":1006},"root",[396,404,410,437,442,449,467,473,479,484,489,495,500,506,529,535,553,559,564,569,574,586,591,597,602,607,613,624,629,635,644,650,656,661,667,678,689,700,711,716,722,727,733,738,744,749,755,761,766,772,776,786,792,803,808,813,818,823,837,850,855,868,873,886,891,950,995,1000],{"type":397,"tag":398,"props":399,"children":401},"element","h1",{"id":400},"vue-mind-map",[402],{"type":403,"value":392},"text",{"type":397,"tag":405,"props":406,"children":407},"h2",{"id":382},[408],{"type":403,"value":409},"TODO",{"type":397,"tag":411,"props":412,"children":413},"ul",{},[414,427],{"type":397,"tag":415,"props":416,"children":417},"li",{},[418],{"type":397,"tag":419,"props":420,"children":424},"a",{"href":421,"rel":422},"https://www.zhihu.com/question/390956688/answer/1184696066",[423],"nofollow",[425],{"type":403,"value":426},"Vue.js 技术揭秘",{"type":397,"tag":415,"props":428,"children":429},{},[430],{"type":397,"tag":419,"props":431,"children":434},{"href":432,"rel":433},"https://github.com/HcySunYang/vue-design/blob/elegant/docs/art/1start-learn",[423],[435],{"type":403,"value":436},"vue-design",{"type":397,"tag":405,"props":438,"children":440},{"id":439},"简介",[441],{"type":403,"value":439},{"type":397,"tag":443,"props":444,"children":446},"h4",{"id":445},"前端框架发展历史关键点",[447],{"type":403,"value":448},"前端框架发展历史关键点？",{"type":397,"tag":411,"props":450,"children":451},{},[452,457,462],{"type":397,"tag":415,"props":453,"children":454},{},[455],{"type":403,"value":456},"2004 年，Google Gmail 使用的 Ajax 技术使前端脱离模板的束缚。",{"type":397,"tag":415,"props":458,"children":459},{},[460],{"type":403,"value":461},"jQuery 解决了不同浏览器的兼容性问题。",{"type":397,"tag":415,"props":463,"children":464},{},[465],{"type":403,"value":466},"2009 年，AngularJS 引领了 MVVM 的潮流，NodeJS 加速了前端工程化的诞生。",{"type":397,"tag":443,"props":468,"children":470},{"id":469},"vue-和-react-的计算性能瓶颈是什么",[471],{"type":403,"value":472},"Vue 和 React 的计算性能瓶颈是什么？",{"type":397,"tag":474,"props":475,"children":476},"p",{},[477],{"type":403,"value":478},"Vue1 的每一个响应式数据都有一个 Watcher，极大的消耗内存，React 的问题发生在当页面 JS 执行 Diff 算法超过帧时间时带来的卡顿问题。",{"type":397,"tag":474,"props":480,"children":481},{},[482],{"type":403,"value":483},"Vue2 引入虚拟 DOM，采用组件级别的响应式数据颗粒度，在避免了 Diff 算法超时问题的同时，降低内存消耗。同时，虚拟 DOM 还带来跨端能力。",{"type":397,"tag":474,"props":485,"children":486},{},[487],{"type":403,"value":488},"React 引入 Fiber 架构，将 DOM Tree 变成链表，使得有能力随时启动或停止 Diff 算法（树的遍历使用递归所以相比链表更难记录状态），可以利用浏览器的空闲时间计算 Diff，避免了卡顿。",{"type":397,"tag":443,"props":490,"children":492},{"id":491},"mvvmmvc-的区别",[493],{"type":403,"value":494},"MVVM、MVC 的区别？",{"type":397,"tag":474,"props":496,"children":497},{},[498],{"type":403,"value":499},"都是软件架构模式，主要区别是关注点不一样，Controller 用来承接交互操作并触发 Model 的修改，而 ViewModel 和 Model 层是双向绑定的，所以写 VueJS 时的思想不在如何操作 DOM 元素，而主要是数据应该怎么变化。",{"type":397,"tag":443,"props":501,"children":503},{"id":502},"vue2-较明显的设计缺陷",[504],{"type":403,"value":505},"Vue2 较明显的设计缺陷？",{"type":397,"tag":411,"props":507,"children":508},{},[509,514,519,524],{"type":397,"tag":415,"props":510,"children":511},{},[512],{"type":403,"value":513},"使用 Flow.js 来做类型校验，而不是社区所向的 TypeScript",{"type":397,"tag":415,"props":515,"children":516},{},[517],{"type":403,"value":518},"Vue2 内嵌了诸如 DOM API 之类的代码，使得跨端等二次开发变得困难，代码耦合也使得摇树优化变得困难",{"type":397,"tag":415,"props":520,"children":521},{},[522],{"type":403,"value":523},"Vue2 使用的 defineProperty 有缺陷，不支持 delete 等操作符",{"type":397,"tag":415,"props":525,"children":526},{},[527],{"type":403,"value":528},"Option API 在组件代码较多时不易维护",{"type":397,"tag":443,"props":530,"children":532},{"id":531},"option-api-的一些缺陷",[533],{"type":403,"value":534},"Option API 的一些缺陷？",{"type":397,"tag":411,"props":536,"children":537},{},[538,543,548],{"type":397,"tag":415,"props":539,"children":540},{},[541],{"type":403,"value":542},"数据挂载在 this 对象上，对类型系统以及摇树优化不友好",{"type":397,"tag":415,"props":544,"children":545},{},[546],{"type":403,"value":547},"代码增多时，维护变得困难",{"type":397,"tag":415,"props":549,"children":550},{},[551],{"type":403,"value":552},"不方便抽离通用逻辑",{"type":397,"tag":443,"props":554,"children":556},{"id":555},"为什么要重写-vue2",[557],{"type":403,"value":558},"为什么要重写 Vue2？",{"type":397,"tag":474,"props":560,"children":561},{},[562],{"type":403,"value":563},"有两个关键因素：主流浏览器逐渐兼容 Proxy，以及修复 Vue2 的设计缺陷。",{"type":397,"tag":474,"props":565,"children":566},{},[567],{"type":403,"value":568},"切换到 Proxy 可以修复过去 setter、getter 无法拦截数组修改以及修改了对象本身带来的语义变化的问题，但由于它是一个原生特性，无法 polyfill，所以对 Vue 而言是一个重大的突破性变动。",{"type":397,"tag":474,"props":570,"children":571},{},[572],{"type":403,"value":573},"过去的架构带来了模板很难正确的在 source-map 中追溯、渲染器（如 DOM 渲染器）不是渐进式的可选项的问题，再加上框架内部代码的耦合，使得摇树优化变得困难，代码也不便理解。",{"type":397,"tag":474,"props":575,"children":576},{},[577,579],{"type":403,"value":578},"见：",{"type":397,"tag":419,"props":580,"children":583},{"href":581,"rel":582},"https://zhuanlan.zhihu.com/p/147022323",[423],[584],{"type":403,"value":585},"重头来过的 Vue 3 带来了什么？",{"type":397,"tag":405,"props":587,"children":589},{"id":588},"响应式",[590],{"type":403,"value":588},{"type":397,"tag":443,"props":592,"children":594},{"id":593},"ref-的原理",[595],{"type":403,"value":596},"ref 的原理？",{"type":397,"tag":474,"props":598,"children":599},{},[600],{"type":403,"value":601},"ref 是在基础值的外面封装了一层对象，使用对象的 value setting、value getter 函数拦截并操作 value 属性，达到响应式的效果。",{"type":397,"tag":405,"props":603,"children":605},{"id":604},"模板",[606],{"type":403,"value":604},{"type":397,"tag":443,"props":608,"children":610},{"id":609},"vue3-双向绑定的原理",[611],{"type":403,"value":612},"Vue3 双向绑定的原理？",{"type":397,"tag":474,"props":614,"children":615},{},[616,617],{"type":403,"value":578},{"type":397,"tag":419,"props":618,"children":621},{"href":619,"rel":620},"https://segmentfault.com/a/1190000041716718",[423],[622],{"type":403,"value":623},"TODO，Vue.js 3.x 双向绑定原理",{"type":397,"tag":405,"props":625,"children":627},{"id":626},"编译器",[628],{"type":403,"value":626},{"type":397,"tag":443,"props":630,"children":632},{"id":631},"vue3-做的静态优化有哪些",[633],{"type":403,"value":634},"Vue3 做的静态优化有哪些？",{"type":397,"tag":474,"props":636,"children":637},{},[638],{"type":397,"tag":639,"props":640,"children":643},"img",{"alt":641,"src":642},"Vue3 Compiler Example","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220628022452.png",[],{"type":397,"tag":405,"props":645,"children":647},{"id":646},"vdom",[648],{"type":403,"value":649},"VDOM",{"type":397,"tag":443,"props":651,"children":653},{"id":652},"vue2-和-vue3-的-dom-diff-算法有什么不同",[654],{"type":403,"value":655},"Vue2 和 Vue3 的 DOM Diff 算法有什么不同？",{"type":397,"tag":474,"props":657,"children":658},{},[659],{"type":403,"value":660},"Vue2 使用双端 diff，Vue3 使用最长递增子序列。",{"type":397,"tag":662,"props":663,"children":665},"h3",{"id":664},"todo-1",[666],{"type":403,"value":409},{"type":397,"tag":474,"props":668,"children":669},{},[670,672],{"type":403,"value":671},"为什么 React 的 Diff 算法不采用 Vue 的双端对比算法？",{"type":397,"tag":419,"props":673,"children":676},{"href":674,"rel":675},"https://juejin.cn/post/7116141318853623839",[423],[677],{"type":403,"value":674},{"type":397,"tag":474,"props":679,"children":680},{},[681,683],{"type":403,"value":682},"diff 算法深入一下？",{"type":397,"tag":419,"props":684,"children":687},{"href":685,"rel":686},"https://zhuanlan.zhihu.com/p/401340016",[423],[688],{"type":403,"value":685},{"type":397,"tag":474,"props":690,"children":691},{},[692,694],{"type":403,"value":693},"聊聊 Vue 的双端 diff 算法 ",{"type":397,"tag":419,"props":695,"children":698},{"href":696,"rel":697},"https://zhuanlan.zhihu.com/p/534903909",[423],[699],{"type":403,"value":696},{"type":397,"tag":474,"props":701,"children":702},{},[703,705],{"type":403,"value":704},"diff算法之双端对比 ",{"type":397,"tag":419,"props":706,"children":709},{"href":707,"rel":708},"https://zhuanlan.zhihu.com/p/432927438",[423],[710],{"type":403,"value":707},{"type":397,"tag":405,"props":712,"children":714},{"id":713},"组件",[715],{"type":403,"value":713},{"type":397,"tag":443,"props":717,"children":719},{"id":718},"keep-alive-的理解它是如何实现的具体缓存的是什么",[720],{"type":403,"value":721},"keep-alive 的理解，它是如何实现的，具体缓存的是什么？",{"type":397,"tag":474,"props":723,"children":724},{},[725],{"type":403,"value":726},"keep-alive 是一个内置抽象组件，会根据内部组件的 key，使用 LRU 策略来缓存组件实例。",{"type":397,"tag":443,"props":728,"children":730},{"id":729},"vue-的生命周期",[731],{"type":403,"value":732},"Vue 的生命周期",{"type":397,"tag":474,"props":734,"children":735},{},[736],{"type":403,"value":737},"keep-alive 独有 activated 和 deactivated 两个生命周期。",{"type":397,"tag":443,"props":739,"children":741},{"id":740},"vue-子组件和父组件执行顺序",[742],{"type":403,"value":743},"Vue 子组件和父组件执行顺序",{"type":397,"tag":474,"props":745,"children":746},{},[747],{"type":403,"value":748},"父组件 mount 前，初始化子组件，所以父组件 beforeMount 后直到子组件 mounted 完成，再挂载。update 和 destroy 两个阶段类似，都是子组件先行。",{"type":397,"tag":405,"props":750,"children":752},{"id":751},"vue-router",[753],{"type":403,"value":754},"Vue Router",{"type":397,"tag":443,"props":756,"children":758},{"id":757},"route-vs-router",[759],{"type":403,"value":760},"$route VS $router",{"type":397,"tag":474,"props":762,"children":763},{},[764],{"type":403,"value":765},"$route 是路由信息对象，包含 path、params、hash、query 等，$router 是 vue-router 实例，包含路由跳转方法和钩子函数等。",{"type":397,"tag":405,"props":767,"children":769},{"id":768},"ssr",[770],{"type":403,"value":771},"SSR",{"type":397,"tag":474,"props":773,"children":774},{},[775],{"type":403,"value":409},{"type":397,"tag":474,"props":777,"children":778},{},[779],{"type":397,"tag":419,"props":780,"children":783},{"href":781,"rel":782},"https://vuejs.org/guide/scaling-up/ssr.html",[423],[784],{"type":403,"value":785},"Vue SSR",{"type":397,"tag":405,"props":787,"children":789},{"id":788},"with-typescript",[790],{"type":403,"value":791},"with TypeScript",{"type":397,"tag":443,"props":793,"children":795},{"id":794},"using-vue-with-typescript",[796],{"type":397,"tag":419,"props":797,"children":800},{"href":798,"rel":799},"https://vuejs.org/guide/typescript/overview.html",[423],[801],{"type":403,"value":802},"Using Vue with TypeScript",{"type":397,"tag":474,"props":804,"children":805},{},[806],{"type":403,"value":807},"\"With a Vite-based setup, the dev server and the bundler are transpilation-only and do not perform any type-checking.\"",{"type":397,"tag":474,"props":809,"children":810},{},[811],{"type":403,"value":812},"Vite-based 的项目不会在开发服务器启用类型检查。Vue 推荐开发者依赖 IDE 进行类型检查，或使用 vue-tsc watch mode、使用 vite-plugin-checker 另起线程插件。Vue 认为类型检查降低开发环境的速度是不值得的。",{"type":397,"tag":474,"props":814,"children":815},{},[816],{"type":403,"value":817},"两个 tsconfig.json 编译选项必须开启：isolatedModule 以便允许 esbuild 解析模块、noImplicitThis 以便启用 this 的类型。",{"type":397,"tag":474,"props":819,"children":820},{},[821],{"type":403,"value":822},"“but for each project we are running two TS language service instances: one from Volar, one from VSCode's built-in service”",{"type":397,"tag":474,"props":824,"children":825},{},[826,828,835],{"type":403,"value":827},"禁用 ",{"type":397,"tag":829,"props":830,"children":832},"code",{"className":831},[],[833],{"type":403,"value":834},"@builtin",{"type":403,"value":836}," TS 插件或打开 Volar 的 Takeover Mode，重启后便能使 Takeover Mode 生效。",{"type":397,"tag":474,"props":838,"children":839},{},[840,842,848],{"type":403,"value":841},"“... with ",{"type":397,"tag":829,"props":843,"children":845},{"className":844},[],[846],{"type":403,"value":847},"ts-loader",{"type":403,"value":849},". This, however, isn't a clean solution because the type system needs knowledge of the entire module graph to perform type checks”",{"type":397,"tag":474,"props":851,"children":852},{},[853],{"type":403,"value":854},"使用 loader 用来类型检查的两个缺陷：检测缓慢阻塞编译、只能解析预解析后的文件所以报错不能直接跳转回源码。",{"type":397,"tag":474,"props":856,"children":857},{},[858,860,866],{"type":403,"value":859},"“In version 3.2 and below, the generic type parameter for ",{"type":397,"tag":829,"props":861,"children":863},{"className":862},[],[864],{"type":403,"value":865},"defineProps()",{"type":403,"value":867}," were limited to a type literal or a reference to a local interface. This limitation has been resolved in 3.3.”",{"type":397,"tag":474,"props":869,"children":870},{},[871],{"type":403,"value":872},"TODO。为什么 Vue 3.2 不能使用外部引入的 Props 作为 type-based defineProps？Vue 3.3 是如何解决的？runtime-declare defineProps 和 runtime-declare emits 会不会对性能有影响？",{"type":397,"tag":474,"props":874,"children":875},{},[876,878,884],{"type":403,"value":877},"“specify a generic type argument but omit the initial value, the resulting type will be a union type that includes ",{"type":397,"tag":829,"props":879,"children":881},{"className":880},[],[882],{"type":403,"value":883},"undefined",{"type":403,"value":885},"”",{"type":397,"tag":474,"props":887,"children":888},{},[889],{"type":403,"value":890},"如果不包含初始值，ref 的类型推断会自动包含 undefined。",{"type":397,"tag":892,"props":893,"children":897},"pre",{"className":894,"code":895,"language":896,"meta":391,"style":391},"language-vue shiki shiki-themes material-theme-lighter github-light github-dark monokai","// inferred type: Ref\u003Cnumber | undefined>\nconst n = ref\u003Cnumber>()\n","vue",[898],{"type":397,"tag":829,"props":899,"children":900},{"__ignoreMap":391},[901,941],{"type":397,"tag":902,"props":903,"children":906},"span",{"class":904,"line":905},"line",1,[907,913,919,925,931,936],{"type":397,"tag":902,"props":908,"children":910},{"style":909},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[911],{"type":403,"value":912},"// inferred type: Ref",{"type":397,"tag":902,"props":914,"children":916},{"style":915},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[917],{"type":403,"value":918},"\u003C",{"type":397,"tag":902,"props":920,"children":922},{"style":921},"--shiki-light:#E53935;--shiki-default:#22863A;--shiki-dark:#85E89D;--shiki-sepia:#F92672",[923],{"type":403,"value":924},"number",{"type":397,"tag":902,"props":926,"children":928},{"style":927},"--shiki-light:#9C3EDA;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[929],{"type":403,"value":930}," |",{"type":397,"tag":902,"props":932,"children":933},{"style":927},[934],{"type":403,"value":935}," undefined",{"type":397,"tag":902,"props":937,"children":938},{"style":915},[939],{"type":403,"value":940},">\n",{"type":397,"tag":902,"props":942,"children":944},{"class":904,"line":943},2,[945],{"type":397,"tag":902,"props":946,"children":947},{"style":909},[948],{"type":403,"value":949},"const n = ref\u003Cnumber>()\n",{"type":397,"tag":474,"props":951,"children":952},{},[953,955,961,963,969,971,977,979,985,987,993],{"type":403,"value":954},"”Without type annotation, the ",{"type":397,"tag":829,"props":956,"children":958},{"className":957},[],[959],{"type":403,"value":960},"event",{"type":403,"value":962}," argument will implicitly have a type of ",{"type":397,"tag":829,"props":964,"children":966},{"className":965},[],[967],{"type":403,"value":968},"any",{"type":403,"value":970},". This will also result in a TS error if ",{"type":397,"tag":829,"props":972,"children":974},{"className":973},[],[975],{"type":403,"value":976},"\"strict\": true",{"type":403,"value":978}," or ",{"type":397,"tag":829,"props":980,"children":982},{"className":981},[],[983],{"type":403,"value":984},"\"noImplicitAny\": true",{"type":403,"value":986}," are used in ",{"type":397,"tag":829,"props":988,"children":990},{"className":989},[],[991],{"type":403,"value":992},"tsconfig.json",{"type":403,"value":994},".“",{"type":397,"tag":474,"props":996,"children":997},{},[998],{"type":403,"value":999},"因为 noImplicitAny 需要打开，不然没法推断 options api 函数中 this 的类型，所以在组件中，接受事件的函数面对 Event 参数必须显式指定类型，不然就会报错。",{"type":397,"tag":1001,"props":1002,"children":1003},"style",{},[1004],{"type":403,"value":1005},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":391,"searchDepth":943,"depth":943,"links":1007},[1008,1009,1010,1011,1012,1013,1017,1018,1019,1020],{"id":382,"depth":943,"text":409},{"id":439,"depth":943,"text":439},{"id":588,"depth":943,"text":588},{"id":604,"depth":943,"text":604},{"id":626,"depth":943,"text":626},{"id":646,"depth":943,"text":649,"children":1014},[1015],{"id":664,"depth":1016,"text":409},3,{"id":713,"depth":943,"text":713},{"id":751,"depth":943,"text":754},{"id":768,"depth":943,"text":771},{"id":788,"depth":943,"text":791},"markdown","content:6.maps:_framework:vue.md","content","6.maps/_framework/vue.md","md",[1027,1030],{"_path":1028,"title":1029,"description":391},"/maps/_framework/react","React Mind Map",{"_path":1031,"title":1032,"description":391},"/maps/_frontend/css/css-mind-map","CSS Mind Map",1710257736274]