[{"data":1,"prerenderedAt":880},["ShallowReactive",2],{"navigation":3,"/maps/_cloud-native/cloud-native":416,"/maps/_cloud-native/cloud-native-surround":871},[4,32,86,108,135,141,147,153,399,405,411],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":42,"_path":43},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":45,"_path":46},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":48,"_path":49},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":51,"_path":52},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":54,"_path":55},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":57,"_path":58},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":60,"_path":61},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":63,"_path":64},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":66,"_path":67},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":69,"_path":70},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":72,"_path":73},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":75,"_path":76},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":78,"_path":79},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":81,"_path":82},"🚝 四十二篇系列","/articles/fourty-two",{"title":84,"_path":85},"📝 技术博客归档","/articles/fold",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102,105],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107},"🖨️ any-to-base64","/tools/any-to-base64",{"title":109,"_path":110,"children":111},"吉他剧场 / Music","/music",[112,114,117,120,123,126,129,132],{"title":113,"_path":110},"🎸 FingerStyle！",{"title":115,"_path":116},"🌬️ 等待的风","/music/wind",{"title":118,"_path":119},"💕 约定的海洋","/music/ocean",{"title":121,"_path":122},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":124,"_path":125},"🌏 残酷天使的行动纲领","/music/eva",{"title":127,"_path":128},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":130,"_path":131},"🍷 Wu Wei","/music/wu-wei",{"title":133,"_path":134},"🌅 无题","/music/untitled",{"title":136,"_path":137,"children":138},"画点什么 / Paint","/paint",[139],{"title":140,"_path":137},"🚧 正在施工",{"title":142,"_path":143,"children":144},"读书笔记 / Notes","/books",[145],{"title":146,"_path":143},"📕 读书笔记",{"title":148,"_path":149,"children":150},"知识地图 / Maps","/maps",[151],{"title":152,"_path":149},"🏁 知识地图",{"title":154,"_path":155,"children":156},"零散的笔记 / Gists","/gists",[157,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":158,"_path":155},"🧊 Gists",{"title":160,"_path":161},"网站的可访问性","/gists/accessibility",{"title":163,"_path":164},"Bit","/gists/bit",{"title":166,"_path":167},"图片模糊","/gists/blur",{"title":169,"_path":170},"渲染相关笔记","/gists/c4d",{"title":172,"_path":173},"CDN 问题记录","/gists/cdn",{"title":175,"_path":176},"消毒剂","/gists/cleaner",{"title":178,"_path":179},"Windows Command","/gists/cmd",{"title":181,"_path":182},"Command","/gists/command",{"title":184,"_path":185},"复杂科学","/gists/complexity-science",{"title":187,"_path":188},"GitHub Copilot","/gists/copilot",{"title":190,"_path":191},"宇宙","/gists/cosmos",{"title":193,"_path":194},"C++","/gists/cpp",{"title":196,"_path":197},"Data Structure","/gists/data-structure",{"title":199,"_path":200},"DEPRESSION","/gists/depression",{"title":202,"_path":203},"设计模式","/gists/design-patterns",{"title":205,"_path":206},"Developer Experience","/gists/developer-experience",{"title":208,"_path":209},"Device Metrics","/gists/device-metrix",{"title":211,"_path":212},"数字化转型","/gists/digital-transformation",{"title":214,"_path":215},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":217,"_path":218},"正则表达式","/gists/eegex",{"title":220,"_path":221},"Emoji","/gists/emoji",{"title":223,"_path":224},"工程","/gists/engineering",{"title":226,"_path":227},"熵","/gists/entropy",{"title":229,"_path":230},"Environment","/gists/environment",{"title":232,"_path":233},"Erlang","/gists/erlang",{"title":235,"_path":236},"逃离塔克夫","/gists/escape-from-tarkov",{"title":238,"_path":239},"ESNext (ES6-ES11)","/gists/esnext",{"title":241,"_path":242},"Eval！","/gists/eval",{"title":244,"_path":245},"Flutter","/gists/flutter",{"title":247,"_path":248},"字体","/gists/font",{"title":250,"_path":251},"JS 函数式编程","/gists/functional",{"title":253,"_path":254},"游戏化","/gists/gamification",{"title":256,"_path":257},"Google C++ Standard","/gists/google-cpp-standard",{"title":259,"_path":260},"双向链接完全体","/gists/graph",{"title":262,"_path":263},"Hardwares","/gists/hardwares",{"title":265,"_path":266},"哈希冲突","/gists/hash-collision",{"title":268,"_path":269},"信息设计","/gists/information-design",{"title":271,"_path":272},"InstantPage","/gists/instant.page",{"title":274,"_path":275},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":277,"_path":278},"KVStore","/gists/key-value-db",{"title":280,"_path":281},"Kubernetes","/gists/kubernetes",{"title":283,"_path":284},"Makefile","/gists/makefile",{"title":286,"_path":287},"Markdown Inline Style","/gists/markdown-nice",{"title":289,"_path":290},"小程序","/gists/miniapp",{"title":292,"_path":293},"减小页面快照体积","/gists/minify-html",{"title":295,"_path":296},"mklink","/gists/mklink",{"title":298,"_path":299},"Mock","/gists/mock",{"title":301,"_path":302},"多人协作系统","/gists/multiplayer",{"title":304,"_path":305},"多端应用","/gists/multy-end-app",{"title":307,"_path":308},"神经科学","/gists/neuroscience",{"title":310,"_path":311},"OO","/gists/oo",{"title":313,"_path":314},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":316,"_path":317},"PInvoke","/gists/pinvoke",{"title":319,"_path":320},"像素","/gists/pixel",{"title":322,"_path":323},"PowerShell","/gists/powershell",{"title":325,"_path":326},"量子","/gists/quantum",{"title":328,"_path":329},"保持好奇心","/gists/questions",{"title":331,"_path":332},"React Native","/gists/react-native",{"title":334,"_path":335},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":337,"_path":338},"SEO","/gists/seo",{"title":340,"_path":341},"Shader","/gists/shader",{"title":343,"_path":344},"Shape Up","/gists/shape-up",{"title":346,"_path":347},"睡觉","/gists/sleep",{"title":349,"_path":350},"记录奇怪的问题","/gists/solved",{"title":352,"_path":353},"States","/gists/states",{"title":355,"_path":356},"Storage","/gists/storage",{"title":358,"_path":359},"音视频流处理","/gists/stream-cli",{"title":361,"_path":362},"Symbol","/gists/symbol",{"title":364,"_path":365},"系统论","/gists/systems-theory",{"title":367,"_path":368},"Taro","/gists/taro",{"title":370,"_path":371},"任务切片","/gists/task-slice",{"title":373,"_path":374},"技术偏好","/gists/tech-dudge",{"title":376,"_path":377},"Untitled","/gists/untitled",{"title":379,"_path":380},"可变字体","/gists/variable-font",{"title":382,"_path":383},"视觉错觉","/gists/visual-illusion",{"title":385,"_path":386},"SS(SSR)","/gists/vpn",{"title":388,"_path":389},"VS Code 插件开发","/gists/vscode-plugin",{"title":391,"_path":392},"Web Components","/gists/web-components",{"title":394,"_path":395},"Windows","/gists/windows",{"title":397,"_path":398},"查缺补漏","/gists/wrong",{"title":400,"_path":401,"children":402},"代码笔记 / Gists","/source-code",[403],{"title":404,"_path":401},"🚄 代码笔记",{"title":406,"_path":407,"children":408},"我 / About","/hire",[409],{"title":410,"_path":407},"📬 技术简历",{"title":412,"_path":413,"children":414},"todo","/todo",[415],{"title":412,"_path":413},{"_path":417,"_dir":418,"_draft":419,"_partial":420,"_locale":421,"title":422,"description":423,"body":424,"_type":865,"_id":866,"_source":867,"_file":868,"_stem":869,"_extension":870},"/maps/_cloud-native/cloud-native","_cloud-native",false,true,"","CloudNative","云原生技术概论",{"type":425,"children":426,"toc":857},"root",[427,434,448,454,460,467,472,484,490,495,501,506,512,517,526,532,587,593,598,604,609,647,653,658,663,669,674,680,685,691,696,702,707,716,722,727,733,751,757,762,767,773,778,784,789,795,800,806,819,824,830,835,841,846,852],{"type":428,"tag":429,"props":430,"children":431},"element","h2",{"id":423},[432],{"type":433,"value":423},"text",{"type":428,"tag":435,"props":436,"children":437},"p",{},[438,440],{"type":433,"value":439},"● 云原生技术概览：",{"type":428,"tag":441,"props":442,"children":446},"a",{"href":443,"rel":444},"https://www.thebyte.com.cn/architecture/summary.html",[445],"nofollow",[447],{"type":433,"value":443},{"type":428,"tag":429,"props":449,"children":451},{"id":450},"quick-question",[452],{"type":433,"value":453},"Quick Question",{"type":428,"tag":455,"props":456,"children":458},"h3",{"id":457},"云原生",[459],{"type":433,"value":457},{"type":428,"tag":461,"props":462,"children":464},"h4",{"id":463},"云原生是什么",[465],{"type":433,"value":466},"云原生是什么？",{"type":428,"tag":435,"props":468,"children":469},{},[470],{"type":433,"value":471},"云原生是一种架构理论，旨在充分发挥云平台的弹性和分布式优势，构建在云上以最佳姿势运行应用程序。",{"type":428,"tag":435,"props":473,"children":474},{},[475,477],{"type":433,"value":476},"见：",{"type":428,"tag":441,"props":478,"children":481},{"href":479,"rel":480},"https://zhuanlan.zhihu.com/p/150190166",[445],[482],{"type":433,"value":483},"什么是云原生？",{"type":428,"tag":461,"props":485,"children":487},{"id":486},"云原生架构的特点是什么",[488],{"type":433,"value":489},"云原生架构的特点是什么？",{"type":428,"tag":435,"props":491,"children":492},{},[493],{"type":433,"value":494},"基于微服务架构，配合服务网格，降低业务单体的复杂性；借助敏捷方法和 DevOps 方法提高迭代效率，同时采用 K8S + 容器支持运维自动化；最后，利用云平台基础设施提供的声明式基础设施配置，实现资源的弹性伸缩、动态调度，提高资源利用率。",{"type":428,"tag":461,"props":496,"children":498},{"id":497},"云原生不可能三角",[499],{"type":433,"value":500},"云原生不可能三角？",{"type":428,"tag":435,"props":502,"children":503},{},[504],{"type":433,"value":505},"高可用、规模化、敏捷；其间关系分别可戏称为大象起舞、空中换发和巨人绣花。",{"type":428,"tag":461,"props":507,"children":509},{"id":508},"云原生架构的定义",[510],{"type":433,"value":511},"云原生架构的定义？",{"type":428,"tag":435,"props":513,"children":514},{},[515],{"type":433,"value":516},"云原生基金会 CNCF 给出的云原生的定义的 V1 版本。",{"type":428,"tag":518,"props":519,"children":520},"blockquote",{},[521],{"type":428,"tag":435,"props":522,"children":523},{},[524],{"type":433,"value":525},"云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式 API。\n这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。\n云原生计算基金会（CNCF）致力于培育和维护一个厂商中立的开源生态系统，来推广云原生技术。我们通过将最前沿的模式民主化，让这些创新为大众所用。",{"type":428,"tag":461,"props":527,"children":529},{"id":528},"云原生架构相关哪些技术",[530],{"type":433,"value":531},"云原生架构相关哪些技术？",{"type":428,"tag":533,"props":534,"children":535},"ol",{},[536,542,547,552,557,562,567,572,577,582],{"type":428,"tag":537,"props":538,"children":539},"li",{},[540],{"type":433,"value":541},"容器和镜像：Docker、Containerd、CRI-O、Kata Containers",{"type":428,"tag":537,"props":543,"children":544},{},[545],{"type":433,"value":546},"镜像仓库：Harbor、Nydus",{"type":428,"tag":537,"props":548,"children":549},{},[550],{"type":433,"value":551},"应用封装：Kustomize、Helm",{"type":428,"tag":537,"props":553,"children":554},{},[555],{"type":433,"value":556},"持续集成：Gitlab、Tekton",{"type":428,"tag":537,"props":558,"children":559},{},[560],{"type":433,"value":561},"持续部署：FluxCD、argoCD",{"type":428,"tag":537,"props":563,"children":564},{},[565],{"type":433,"value":566},"容器编排：Kubernetes",{"type":428,"tag":537,"props":568,"children":569},{},[570],{"type":433,"value":571},"网关：Ingress-Nginx、APISIX",{"type":428,"tag":537,"props":573,"children":574},{},[575],{"type":433,"value":576},"日志：Fluentd、Grafana Loki",{"type":428,"tag":537,"props":578,"children":579},{},[580],{"type":433,"value":581},"监控：Grafana、Prometheus",{"type":428,"tag":537,"props":583,"children":584},{},[585],{"type":433,"value":586},"应用开发：Nocalhost",{"type":428,"tag":461,"props":588,"children":590},{"id":589},"从架构发展来看用户和平台的关注点是怎么变化的",[591],{"type":433,"value":592},"从架构发展来看，用户和平台的关注点是怎么变化的？",{"type":428,"tag":435,"props":594,"children":595},{},[596],{"type":433,"value":597},"从用户自建、IaaS、PaaS、SaaS 到 FaaS，客户和平台关注的东西并不一样。\n以 SaaS 举例，客户只需要关注数据，而平台关注包括应用程序、应用依赖、中间件、操作系统、虚拟化服务器、存储、网格等其余所有基础设施。",{"type":428,"tag":461,"props":599,"children":601},{"id":600},"有哪些亿级-dau-规模的移动应用",[602],{"type":433,"value":603},"有哪些亿级 DAU 规模的移动应用？",{"type":428,"tag":435,"props":605,"children":606},{},[607],{"type":433,"value":608},"POE Assistant：以下是一些拥有亿级日活跃用户（DAU）规模的知名移动应用的例子（截至2021年）",{"type":428,"tag":533,"props":610,"children":611},{},[612,617,622,627,632,637,642],{"type":428,"tag":537,"props":613,"children":614},{},[615],{"type":433,"value":616},"Facebook：Facebook是全球最大的社交媒体平台，拥有超过20亿月活跃用户，其中大部分用户通过移动应用进行访问。",{"type":428,"tag":537,"props":618,"children":619},{},[620],{"type":433,"value":621},"WhatsApp：WhatsApp是一款全球领先的即时通讯应用程序，每天有超过20亿用户使用该应用进行消息传递和语音通话。",{"type":428,"tag":537,"props":623,"children":624},{},[625],{"type":433,"value":626},"WeChat（微信）：WeChat是中国最流行的社交媒体和消息应用之一，拥有超过10亿活跃用户。它提供了聊天、社交、支付、游戏和其他功能。",{"type":428,"tag":537,"props":628,"children":629},{},[630],{"type":433,"value":631},"TikTok（抖音）：TikTok是一款全球流行的短视频社交平台，拥有超过10亿用户。它提供了用户生成的短视频内容，吸引了大量的年轻用户。",{"type":428,"tag":537,"props":633,"children":634},{},[635],{"type":433,"value":636},"Instagram：Instagram是一款图片和视频分享社交平台，拥有超过10亿用户。它提供了用户上传和编辑照片、视频以及与其他用户互动的功能。",{"type":428,"tag":537,"props":638,"children":639},{},[640],{"type":433,"value":641},"Snapchat：Snapchat是一款以瞬间分享和自动消失的照片和视频为特点的移动应用，拥有超过5亿用户。",{"type":428,"tag":537,"props":643,"children":644},{},[645],{"type":433,"value":646},"Twitter：Twitter是一款全球知名的社交媒体平台，用户可以发布和阅读短消息（推文）。它拥有超过3亿的活跃用户。",{"type":428,"tag":461,"props":648,"children":650},{"id":649},"如何按照规模和变更速度将软件企业划分为四个象限",[651],{"type":433,"value":652},"如何按照规模和变更速度将软件企业划分为四个象限？",{"type":428,"tag":435,"props":654,"children":655},{},[656],{"type":433,"value":657},"援引 Netflix 的说法，按照规模大小、变更速度的快慢可以将软件划分为：互联网企业（规模大、变化快）、初创公司（规模小、变化快）、电信业务（规模大、变化慢）、企业 IT（规模小、变化慢）。",{"type":428,"tag":435,"props":659,"children":660},{},[661],{"type":433,"value":662},"初创公司面临软件失败的风险、电信业务面临硬件失败风险，企业 IT 要面对来自市场的冲击，而互联网企业是最危险的“Everything is Broken”。",{"type":428,"tag":461,"props":664,"children":666},{"id":665},"什么是虚拟化技术",[667],{"type":433,"value":668},"什么是虚拟化技术？",{"type":428,"tag":435,"props":670,"children":671},{},[672],{"type":433,"value":673},"虚拟化技术是一种资源管理技术，它可以将一台计算机的各种资源，如处理器、内存、硬盘、网络接口卡等，抽象、转换后提供给多个用户和应用程序使用。",{"type":428,"tag":461,"props":675,"children":677},{"id":676},"最早的容器技术",[678],{"type":433,"value":679},"最早的容器技术？",{"type":428,"tag":435,"props":681,"children":682},{},[683],{"type":433,"value":684},"Chroot Jail；使用 chroot 系统调用将进程的 root 目录重定向到新位置，仪表创造独立的环境用于软件编译、测试以及安装。",{"type":428,"tag":461,"props":686,"children":688},{"id":687},"linux-容器是什么",[689],{"type":433,"value":690},"Linux 容器是什么？",{"type":428,"tag":435,"props":692,"children":693},{},[694],{"type":433,"value":695},"LXC，Linux Container；Google 推出的进程容器合并进入 Linux 内核后重命名为 Control Groups，它允许给进程提供操作系统级别的资源限制、优先级控制、审计能力。配合 namepace 称为 LXC，再配合安全防护机制形成了容器运行环境隔离的容器核心能力。",{"type":428,"tag":461,"props":697,"children":699},{"id":698},"docker-继-lxc-解决的问题是",[700],{"type":433,"value":701},"Docker 继 LXC 解决的问题是？",{"type":428,"tag":435,"props":703,"children":704},{},[705],{"type":433,"value":706},"Docker 封装了应用程序的代码、依赖、工具、资源文件和元信息，可以做到将应用分发到任意平台或运行环境，即“Build once，Ship and Run Anywhere”",{"type":428,"tag":435,"props":708,"children":709},{},[710],{"type":428,"tag":711,"props":712,"children":715},"img",{"alt":713,"src":714},"Docker","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20231118201706.png",[],{"type":428,"tag":461,"props":717,"children":719},{"id":718},"为什么称-kubernetes-成了容器编排事实标准",[720],{"type":433,"value":721},"为什么称 Kubernetes 成了容器编排事实标准？",{"type":428,"tag":435,"props":723,"children":724},{},[725],{"type":433,"value":726},"在于 Docker Swarm、Apache Mesos 的斗争中，K8s 没有历史包袱，预置了服务发现、容器网格等关键特性，并提供了用于描述集群架构、定义服务状态的声明式 API，帮助系统维持在这个状态，有明显的后发优势。最重要的是，K8s 拥有一套稳定可扩展的 API 盘活了生态。",{"type":428,"tag":461,"props":728,"children":730},{"id":729},"容器兴起和编排大战的三个里程碑",[731],{"type":433,"value":732},"容器兴起和编排大战的三个里程碑？",{"type":428,"tag":533,"props":734,"children":735},{},[736,741,746],{"type":428,"tag":537,"props":737,"children":738},{},[739],{"type":433,"value":740},"2013 ，Doocker 发布，云计算进入容器时代",{"type":428,"tag":537,"props":742,"children":743},{},[744],{"type":433,"value":745},"2017 ，K8s 赢得容器编排的胜利，云计算进入 K8s 时代",{"type":428,"tag":537,"props":747,"children":748},{},[749],{"type":433,"value":750},"2018，Istio 发布，服务网格的理念走向成熟",{"type":428,"tag":461,"props":752,"children":754},{"id":753},"oci-和-cncf-的关系",[755],{"type":433,"value":756},"OCI 和 CNCF 的关系？",{"type":428,"tag":435,"props":758,"children":759},{},[760],{"type":433,"value":761},"合作关系。",{"type":428,"tag":435,"props":763,"children":764},{},[765],{"type":433,"value":766},"TODO",{"type":428,"tag":461,"props":768,"children":770},{"id":769},"微服务带来了哪些技术挑战",[771],{"type":433,"value":772},"微服务带来了哪些技术挑战？",{"type":428,"tag":435,"props":774,"children":775},{},[776],{"type":433,"value":777},"服务发现、服务熔断、负载均衡和通讯相关问题。通讯包括调用协议、加密、认证、鉴权等。",{"type":428,"tag":461,"props":779,"children":781},{"id":780},"什么是服务网格",[782],{"type":433,"value":783},"什么是服务网格？",{"type":428,"tag":435,"props":785,"children":786},{},[787],{"type":433,"value":788},"服务网格是云原生的基础设施，用于云原生应用微服务组成的的复杂拓扑结构下的可靠请求传送。在实践中，它是一组和应用服务部署在一起的轻量级网络代理（Sidecar）。",{"type":428,"tag":461,"props":790,"children":792},{"id":791},"istio-初始架构是怎样的",[793],{"type":433,"value":794},"Istio 初始架构是怎样的？",{"type":428,"tag":435,"props":796,"children":797},{},[798],{"type":433,"value":799},"Istio 分为数据平面和控制平面。数据平面使用轻量级 Sidecar 如 Envoy 协调与控制服务之间的通信和流量处理；控制平面负责配置和管理数据平面，以及提供服务发现、智能路由、流量控制、安全控制等功能。",{"type":428,"tag":461,"props":801,"children":803},{"id":802},"sidecar-面临的问题或者说缺陷是",[804],{"type":433,"value":805},"Sidecar 面临的问题或者说缺陷是？",{"type":428,"tag":533,"props":807,"children":808},{},[809,814],{"type":428,"tag":537,"props":810,"children":811},{},[812],{"type":433,"value":813},"在规模巨大化的服务集群下，网络通信的拓扑结构非常复杂，对作为独立容器的 Sidecar 下发配置会导致内存剧烈增长；",{"type":428,"tag":537,"props":815,"children":816},{},[817],{"type":433,"value":818},"某些性能要求极高的业务场景，毫秒级别的延迟也不能接受。",{"type":428,"tag":435,"props":820,"children":821},{},[822],{"type":433,"value":823},"作为改进，Proxyless 模式可以去 Sidecard 容器、消除跨进程调用，并降低延迟。但本质上，它只是使用 Istio Agent 把服务注册等工作和 gRPC  等框架绑定在了一起。",{"type":428,"tag":461,"props":825,"children":827},{"id":826},"sidecarless-模式是什么",[828],{"type":433,"value":829},"Sidecarless 模式是什么？",{"type":428,"tag":435,"props":831,"children":832},{},[833],{"type":433,"value":834},"通过 Agent（代理）、注入式库或者云原生平台功能将 Sidecar 干掉。从原理来说，在 L4 和 L7 分别建立用途不一样的代理，托管不同的流量。L4 层建立了 TCP 路由，有简单的鉴权机制，使用 eBFP 通讯，能观测 TCP 指标和日志。L7 层建立了 HTTP 路由，有完善的鉴权。\nIstio 未来的发展方向就是完善 Ambient Mesh（一种无边车模式的实现）。其使用 DaemonSet 部署 Waypoint Proxy 作为 L7 代理，而在 L4 使用 ztunnel。",{"type":428,"tag":461,"props":836,"children":838},{"id":837},"不可变基础设施的核心思想是",[839],{"type":433,"value":840},"不可变基础设施的核心思想是？",{"type":428,"tag":435,"props":842,"children":843},{},[844],{"type":433,"value":845},"不可变基础设施的核心思想是基础设施的示例一旦创建就变成只读状态，如果需要修改或省级，应先修改配置模板，在根据模板创建新示例并替换旧实例。",{"type":428,"tag":461,"props":847,"children":849},{"id":848},"不可变基础设施能解决什么问题",[850],{"type":433,"value":851},"不可变基础设施能解决什么问题？",{"type":428,"tag":435,"props":853,"children":854},{},[855],{"type":433,"value":856},"以解决传统运维时代需要大量手工操作带来的构建难以自动化，以及环境变量改变等问题。其最大的优势是“一致性”，使基础设施管理简单、可部署、可规模化、可恢复，也提高了安全性。",{"title":421,"searchDepth":858,"depth":858,"links":859},2,[860,861],{"id":423,"depth":858,"text":423},{"id":450,"depth":858,"text":453,"children":862},[863],{"id":457,"depth":864,"text":457},3,"markdown","content:6.maps:_cloud-native:cloud-native.md","content","6.maps/_cloud-native/cloud-native.md","6.maps/_cloud-native/cloud-native","md",[872,876],{"_path":873,"title":874,"description":875},"/maps/_business/low-code","低代码","无代码、低代码、高代码，这是一个围绕人机交互的有趣话题。",{"_path":877,"title":878,"description":879},"/maps/_cloud-native/serverless","Serverless","无服务器计算，是一种云计算架构模式，其中云提供商负责执行代码，并动态分配计算资源",1739580349416]