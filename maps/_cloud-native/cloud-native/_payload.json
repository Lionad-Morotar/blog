[{"data":1,"prerenderedAt":856},["Reactive",2],{"navigation":3,"/maps/_cloud-native/cloud-native":389,"/maps/_cloud-native/cloud-native-surround":849},[4,32,83,99,126,132,138,372,378,384],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":42,"_path":43},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":45,"_path":46},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":48,"_path":49},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":51,"_path":52},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":54,"_path":55},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":57,"_path":58},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":60,"_path":61},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":63,"_path":64},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":66,"_path":67},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":69,"_path":70},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":72,"_path":73},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":75,"_path":76},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":78,"_path":79},"🚝 四十二篇系列","/articles/fourty-two",{"title":81,"_path":82},"📝 技术博客归档","/articles/fold",{"title":84,"_path":85,"children":86},"造物 / Make","/tools",[87,90,93,96],{"title":88,"_path":89},"🌐 AnySort","/tools/anysort",{"title":91,"_path":92},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":94,"_path":95},"👓 Crapto","/tools/crypto-inline",{"title":97,"_path":98},"🖨️ any-to-base64","/tools/any-to-base64",{"title":100,"_path":101,"children":102},"吉他剧场 / Music","/music",[103,105,108,111,114,117,120,123],{"title":104,"_path":101},"🎸 FingerStyle！",{"title":106,"_path":107},"🌬️ 等待的风","/music/wind",{"title":109,"_path":110},"💕 约定的海洋","/music/ocean",{"title":112,"_path":113},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":115,"_path":116},"🌏 残酷天使的行动纲领","/music/eva",{"title":118,"_path":119},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":121,"_path":122},"🍷 Wu Wei","/music/wu-wei",{"title":124,"_path":125},"🌅 无题","/music/untitled",{"title":127,"_path":128,"children":129},"画点什么 / Paint","/paint",[130],{"title":131,"_path":128},"🚧 正在施工",{"title":133,"_path":134,"children":135},"知识地图 / Maps","/maps",[136],{"title":137,"_path":134},"🏁 知识地图",{"title":139,"_path":140,"children":141},"零散的笔记 / Gists","/gists",[142,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369],{"title":143,"_path":140},"🧊 Gists",{"title":145,"_path":146},"网站的可访问性","/gists/accessibility",{"title":148,"_path":149},"Bit","/gists/bit",{"title":151,"_path":152},"图片模糊","/gists/blur",{"title":154,"_path":155},"渲染相关笔记","/gists/c4d",{"title":157,"_path":158},"CDN 问题记录","/gists/cdn",{"title":160,"_path":161},"消毒剂","/gists/cleaner",{"title":163,"_path":164},"Windows Command","/gists/cmd",{"title":166,"_path":167},"Command","/gists/command",{"title":169,"_path":170},"复杂科学","/gists/complexity-science",{"title":172,"_path":173},"宇宙","/gists/cosmos",{"title":175,"_path":176},"C++","/gists/cpp",{"title":178,"_path":179},"Data Structure","/gists/data-structure",{"title":181,"_path":182},"DEPRESSION","/gists/depression",{"title":184,"_path":185},"设计模式","/gists/design-patterns",{"title":187,"_path":188},"Developer Experience","/gists/developer-experience",{"title":190,"_path":191},"Device Metrics","/gists/device-metrix",{"title":193,"_path":194},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":196,"_path":197},"正则表达式","/gists/eegex",{"title":199,"_path":200},"Emoji","/gists/emoji",{"title":202,"_path":203},"工程","/gists/engineering",{"title":205,"_path":206},"熵","/gists/entropy",{"title":208,"_path":209},"Environment","/gists/environment",{"title":211,"_path":212},"Erlang","/gists/erlang",{"title":214,"_path":215},"逃离塔克夫","/gists/escape-from-tarkov",{"title":217,"_path":218},"ESNext (ES6-ES11)","/gists/esnext",{"title":220,"_path":221},"Eval！","/gists/eval",{"title":223,"_path":224},"Flutter","/gists/flutter",{"title":226,"_path":227},"字体","/gists/font",{"title":229,"_path":230},"JS 函数式编程","/gists/functional",{"title":232,"_path":233},"Google C++ Standard","/gists/google-cpp-standard",{"title":235,"_path":236},"双向链接完全体","/gists/graph",{"title":238,"_path":239},"Hardwares","/gists/hardwares",{"title":241,"_path":242},"哈希冲突","/gists/hash-collision",{"title":244,"_path":245},"信息设计","/gists/information-design",{"title":247,"_path":248},"InstantPage","/gists/instant.page",{"title":250,"_path":251},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":253,"_path":254},"KVStore","/gists/key-value-db",{"title":256,"_path":257},"Kubernetes","/gists/kubernetes",{"title":259,"_path":260},"Makefile","/gists/makefile",{"title":262,"_path":263},"Markdown Inline Style","/gists/markdown-nice",{"title":265,"_path":266},"小程序","/gists/miniapp",{"title":268,"_path":269},"减小页面快照体积","/gists/minify-html",{"title":271,"_path":272},"mklink","/gists/mklink",{"title":274,"_path":275},"Mock","/gists/mock",{"title":277,"_path":278},"多端应用","/gists/multy-end-app",{"title":280,"_path":281},"神经科学","/gists/neuroscience",{"title":283,"_path":284},"OO","/gists/oo",{"title":286,"_path":287},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":289,"_path":290},"人物","/gists/person",{"title":292,"_path":293},"PInvoke","/gists/pinvoke",{"title":295,"_path":296},"像素","/gists/pixel",{"title":298,"_path":299},"PowerShell","/gists/powershell",{"title":301,"_path":302},"量子","/gists/quantum",{"title":304,"_path":305},"保持好奇心","/gists/questions",{"title":307,"_path":308},"React Native","/gists/react-native",{"title":310,"_path":311},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":313,"_path":314},"SEO","/gists/seo",{"title":316,"_path":317},"Shader","/gists/shader",{"title":319,"_path":320},"Shape Up","/gists/shape-up",{"title":322,"_path":323},"睡觉","/gists/sleep",{"title":325,"_path":326},"States","/gists/states",{"title":328,"_path":329},"Storage","/gists/storage",{"title":331,"_path":332},"音视频流处理","/gists/stream-cli",{"title":334,"_path":335},"Symbol","/gists/symbol",{"title":337,"_path":338},"系统论","/gists/systems-theory",{"title":340,"_path":341},"Taro","/gists/taro",{"title":343,"_path":344},"任务切片","/gists/task-slice",{"title":346,"_path":347},"技术偏好","/gists/tech-dudge",{"title":349,"_path":350},"Untitled","/gists/untitled",{"title":352,"_path":353},"可变字体","/gists/variable-font",{"title":355,"_path":356},"视觉错觉","/gists/visual-illusion",{"title":358,"_path":359},"SS(SSR)","/gists/vpn",{"title":361,"_path":362},"VS Code 插件开发","/gists/vscode-plugin",{"title":364,"_path":365},"Web Components","/gists/web-components",{"title":367,"_path":368},"Windows","/gists/windows",{"title":370,"_path":371},"查缺补漏","/gists/wrong",{"title":373,"_path":374,"children":375},"代码笔记 / Gists","/source-code",[376],{"title":377,"_path":374},"🚄 代码笔记",{"title":379,"_path":380,"children":381},"我 / Abount","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"title":385,"_path":386,"children":387},"todo","/todo",[388],{"title":385,"_path":386},{"_path":390,"_dir":391,"_draft":392,"_partial":393,"_locale":394,"title":395,"description":394,"body":396,"_type":844,"_id":845,"_source":846,"_file":847,"_extension":848},"/maps/_cloud-native/cloud-native","_cloud-native",false,true,"","CloudNative",{"type":397,"children":398,"toc":836},"root",[399,407,413,427,433,439,446,451,463,469,474,480,485,491,496,505,511,566,572,577,583,588,626,632,637,642,648,653,659,664,670,675,681,686,695,701,706,712,730,736,741,746,752,757,763,768,774,779,785,798,803,809,814,820,825,831],{"type":400,"tag":401,"props":402,"children":404},"element","h1",{"id":403},"cloudnative",[405],{"type":406,"value":395},"text",{"type":400,"tag":408,"props":409,"children":411},"h2",{"id":410},"云原生技术概论",[412],{"type":406,"value":410},{"type":400,"tag":414,"props":415,"children":416},"p",{},[417,419],{"type":406,"value":418},"● 云原生技术概览：",{"type":400,"tag":420,"props":421,"children":425},"a",{"href":422,"rel":423},"https://www.thebyte.com.cn/architecture/summary.html",[424],"nofollow",[426],{"type":406,"value":422},{"type":400,"tag":408,"props":428,"children":430},{"id":429},"quick-question",[431],{"type":406,"value":432},"Quick Question",{"type":400,"tag":434,"props":435,"children":437},"h3",{"id":436},"云原生",[438],{"type":406,"value":436},{"type":400,"tag":440,"props":441,"children":443},"h4",{"id":442},"云原生是什么",[444],{"type":406,"value":445},"云原生是什么？",{"type":400,"tag":414,"props":447,"children":448},{},[449],{"type":406,"value":450},"云原生是一种架构理论，旨在充分发挥云平台的弹性和分布式优势，构建在云上以最佳姿势运行应用程序。",{"type":400,"tag":414,"props":452,"children":453},{},[454,456],{"type":406,"value":455},"见：",{"type":400,"tag":420,"props":457,"children":460},{"href":458,"rel":459},"https://zhuanlan.zhihu.com/p/150190166",[424],[461],{"type":406,"value":462},"什么是云原生？",{"type":400,"tag":440,"props":464,"children":466},{"id":465},"云原生架构的特点是什么",[467],{"type":406,"value":468},"云原生架构的特点是什么？",{"type":400,"tag":414,"props":470,"children":471},{},[472],{"type":406,"value":473},"基于微服务架构，配合服务网格，降低业务单体的复杂性；借助敏捷方法、DevOps 支持持续迭代，同时采用 K8S + 容器支持运维自动化；最后，利用云平台基础设施提供的声明式基础设施配置，实现资源的弹性伸缩、动态调度，提高资源利用率。",{"type":400,"tag":440,"props":475,"children":477},{"id":476},"云原生不可能三角",[478],{"type":406,"value":479},"云原生不可能三角？",{"type":400,"tag":414,"props":481,"children":482},{},[483],{"type":406,"value":484},"高可用、规模化、敏捷；其间循环连线分别可戏称为大象起舞、空中换发和巨人绣花。",{"type":400,"tag":440,"props":486,"children":488},{"id":487},"云原生架构的定义",[489],{"type":406,"value":490},"云原生架构的定义？",{"type":400,"tag":414,"props":492,"children":493},{},[494],{"type":406,"value":495},"云原生基金会 CNCF 给出的云原生的定义的 V1 版本。",{"type":400,"tag":497,"props":498,"children":499},"blockquote",{},[500],{"type":400,"tag":414,"props":501,"children":502},{},[503],{"type":406,"value":504},"云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式 API。\n这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。\n云原生计算基金会（CNCF）致力于培育和维护一个厂商中立的开源生态系统，来推广云原生技术。我们通过将最前沿的模式民主化，让这些创新为大众所用。",{"type":400,"tag":440,"props":506,"children":508},{"id":507},"云原生架构相关哪些技术",[509],{"type":406,"value":510},"云原生架构相关哪些技术？",{"type":400,"tag":512,"props":513,"children":514},"ol",{},[515,521,526,531,536,541,546,551,556,561],{"type":400,"tag":516,"props":517,"children":518},"li",{},[519],{"type":406,"value":520},"容器和镜像：Docker、Containerd、CRI-O、Kata Containers",{"type":400,"tag":516,"props":522,"children":523},{},[524],{"type":406,"value":525},"镜像仓库：Harbor、Nydus",{"type":400,"tag":516,"props":527,"children":528},{},[529],{"type":406,"value":530},"应用封装：Kustomize、Helm",{"type":400,"tag":516,"props":532,"children":533},{},[534],{"type":406,"value":535},"持续集成：Gitlab、Tekton",{"type":400,"tag":516,"props":537,"children":538},{},[539],{"type":406,"value":540},"持续部署：FluxCD、argoCD",{"type":400,"tag":516,"props":542,"children":543},{},[544],{"type":406,"value":545},"容器编排：Kubernetes",{"type":400,"tag":516,"props":547,"children":548},{},[549],{"type":406,"value":550},"网关：Ingress-Nginx、APISIX",{"type":400,"tag":516,"props":552,"children":553},{},[554],{"type":406,"value":555},"日志：Fluentd、Grafana Loki",{"type":400,"tag":516,"props":557,"children":558},{},[559],{"type":406,"value":560},"监控：Grafana、Prometheus",{"type":400,"tag":516,"props":562,"children":563},{},[564],{"type":406,"value":565},"应用开发：Nocalhost",{"type":400,"tag":440,"props":567,"children":569},{"id":568},"从架构发展来看用户和平台的关注点是怎么变化的",[570],{"type":406,"value":571},"从架构发展来看，用户和平台的关注点是怎么变化的？",{"type":400,"tag":414,"props":573,"children":574},{},[575],{"type":406,"value":576},"从用户自建、IaaS、PaaS、SaaS 到 FaaS，客户和平台关注的东西并不一样。\n以 SaaS 举例，客户只需要关注数据，而平台关注包括应用程序、应用依赖、中间件、操作系统、虚拟化服务器、存储、网格等其余所有基础设施。",{"type":400,"tag":440,"props":578,"children":580},{"id":579},"有哪些亿级-dau-规模的移动应用",[581],{"type":406,"value":582},"有哪些亿级 DAU 规模的移动应用？",{"type":400,"tag":414,"props":584,"children":585},{},[586],{"type":406,"value":587},"POE Assistant：以下是一些拥有亿级日活跃用户（DAU）规模的知名移动应用的例子（截至2021年）",{"type":400,"tag":512,"props":589,"children":590},{},[591,596,601,606,611,616,621],{"type":400,"tag":516,"props":592,"children":593},{},[594],{"type":406,"value":595},"Facebook：Facebook是全球最大的社交媒体平台，拥有超过20亿月活跃用户，其中大部分用户通过移动应用进行访问。",{"type":400,"tag":516,"props":597,"children":598},{},[599],{"type":406,"value":600},"WhatsApp：WhatsApp是一款全球领先的即时通讯应用程序，每天有超过20亿用户使用该应用进行消息传递和语音通话。",{"type":400,"tag":516,"props":602,"children":603},{},[604],{"type":406,"value":605},"WeChat（微信）：WeChat是中国最流行的社交媒体和消息应用之一，拥有超过10亿活跃用户。它提供了聊天、社交、支付、游戏和其他功能。",{"type":400,"tag":516,"props":607,"children":608},{},[609],{"type":406,"value":610},"TikTok（抖音）：TikTok是一款全球流行的短视频社交平台，拥有超过10亿用户。它提供了用户生成的短视频内容，吸引了大量的年轻用户。",{"type":400,"tag":516,"props":612,"children":613},{},[614],{"type":406,"value":615},"Instagram：Instagram是一款图片和视频分享社交平台，拥有超过10亿用户。它提供了用户上传和编辑照片、视频以及与其他用户互动的功能。",{"type":400,"tag":516,"props":617,"children":618},{},[619],{"type":406,"value":620},"Snapchat：Snapchat是一款以瞬间分享和自动消失的照片和视频为特点的移动应用，拥有超过5亿用户。",{"type":400,"tag":516,"props":622,"children":623},{},[624],{"type":406,"value":625},"Twitter：Twitter是一款全球知名的社交媒体平台，用户可以发布和阅读短消息（推文）。它拥有超过3亿的活跃用户。",{"type":400,"tag":440,"props":627,"children":629},{"id":628},"如何按照规模和变更速度将软件企业划分为四个象限",[630],{"type":406,"value":631},"如何按照规模和变更速度将软件企业划分为四个象限？",{"type":400,"tag":414,"props":633,"children":634},{},[635],{"type":406,"value":636},"援引 Netflix 的说法，按照规模大小、变更速度的快慢可以将软件划分为：互联网企业（规模大、变化快）、初创公司（规模小、变化快）、电信业务（规模大、变化慢）、企业 IT（规模小、变化慢）。",{"type":400,"tag":414,"props":638,"children":639},{},[640],{"type":406,"value":641},"初创公司面临软件失败的风险、电信业务面临硬件失败风险，而互联网企业是最危险的“Everything is Broken”。",{"type":400,"tag":440,"props":643,"children":645},{"id":644},"什么是虚拟化技术",[646],{"type":406,"value":647},"什么是虚拟化技术？",{"type":400,"tag":414,"props":649,"children":650},{},[651],{"type":406,"value":652},"虚拟化技术是一种资源管理技术，它可以将一台计算机的各种资源，如处理器、内存、硬盘、网络接口卡等，抽象、转换后提供给多个用户和应用程序使用。",{"type":400,"tag":440,"props":654,"children":656},{"id":655},"最早的容器技术",[657],{"type":406,"value":658},"最早的容器技术？",{"type":400,"tag":414,"props":660,"children":661},{},[662],{"type":406,"value":663},"Chroot Jail；使用 chroot 系统调用将进程的 root 目录重定向到新位置，仪表创造独立的环境用于软件编译、测试以及安装。",{"type":400,"tag":440,"props":665,"children":667},{"id":666},"linux-容器是什么",[668],{"type":406,"value":669},"Linux 容器是什么？",{"type":400,"tag":414,"props":671,"children":672},{},[673],{"type":406,"value":674},"LXC，Linux Container；Google 推出的进程容器合并进入 Linux 内核后重命名为 Control Groups，它允许给进程提供操作系统级别的资源限制、优先级控制、审计能力。配合 namepace 称为 LXC，再配合安全防护机制形成了容器运行环境隔离的容器核心能力。",{"type":400,"tag":440,"props":676,"children":678},{"id":677},"docker-继-lxc-解决的问题是",[679],{"type":406,"value":680},"Docker 继 LXC 解决的问题是？",{"type":400,"tag":414,"props":682,"children":683},{},[684],{"type":406,"value":685},"Docker 封装了应用程序的代码、依赖、工具、资源文件和元信息，可以做到将应用分发到任意平台或运行环境，即“Build once，Ship and Run Anywhere”",{"type":400,"tag":414,"props":687,"children":688},{},[689],{"type":400,"tag":690,"props":691,"children":694},"img",{"alt":692,"src":693},"Docker","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20231118201706.png",[],{"type":400,"tag":440,"props":696,"children":698},{"id":697},"为什么称-kubernetes-成了容器编排事实标准",[699],{"type":406,"value":700},"为什么称 Kubernetes 成了容器编排事实标准？",{"type":400,"tag":414,"props":702,"children":703},{},[704],{"type":406,"value":705},"在于 Docker Swarm、Apache Mesos 的斗争中，K8s 没有历史包袱，预置了服务发现、容器网格等关键特性，并提供了用于描述集群架构、定义服务状态的声明式 API，帮助系统维持在这个状态，有明显的后发优势。最重要的是，K8s 拥有一套稳定可扩展的 API 盘活了生态。",{"type":400,"tag":440,"props":707,"children":709},{"id":708},"容器兴起和编排大战的三个里程碑",[710],{"type":406,"value":711},"容器兴起和编排大战的三个里程碑？",{"type":400,"tag":512,"props":713,"children":714},{},[715,720,725],{"type":400,"tag":516,"props":716,"children":717},{},[718],{"type":406,"value":719},"2013 ，Doocker 发布，云计算进入容器时代",{"type":400,"tag":516,"props":721,"children":722},{},[723],{"type":406,"value":724},"2017 ，K8s 赢得容器编排的胜利，云计算进入 K8s 时代",{"type":400,"tag":516,"props":726,"children":727},{},[728],{"type":406,"value":729},"2018，Istio 发布，服务网格的理念走向成熟",{"type":400,"tag":440,"props":731,"children":733},{"id":732},"oci-和-cncf-的关系",[734],{"type":406,"value":735},"OCI 和 CNCF 的关系？",{"type":400,"tag":414,"props":737,"children":738},{},[739],{"type":406,"value":740},"合作关系。",{"type":400,"tag":414,"props":742,"children":743},{},[744],{"type":406,"value":745},"TODO",{"type":400,"tag":440,"props":747,"children":749},{"id":748},"微服务带来了哪些技术挑战",[750],{"type":406,"value":751},"微服务带来了哪些技术挑战？",{"type":400,"tag":414,"props":753,"children":754},{},[755],{"type":406,"value":756},"服务发现、服务熔断、负载均衡和通讯相关问题。通讯包括调用协议、加密、认证、鉴权等。",{"type":400,"tag":440,"props":758,"children":760},{"id":759},"什么是服务网格",[761],{"type":406,"value":762},"什么是服务网格？",{"type":400,"tag":414,"props":764,"children":765},{},[766],{"type":406,"value":767},"服务网格是云原生的基础设施，用于云原生应用微服务组成的的复杂拓扑结构下的可靠请求传送。在实践中，它是一组和应用服务部署在一起的轻量级网络代理（Sidecar）。",{"type":400,"tag":440,"props":769,"children":771},{"id":770},"istio-初始架构是怎样的",[772],{"type":406,"value":773},"Istio 初始架构是怎样的？",{"type":400,"tag":414,"props":775,"children":776},{},[777],{"type":406,"value":778},"Istio 分为数据平面和控制平面。数据平面使用轻量级 Sidecar 如 Envoy 协调与控制服务之间的通信和流量处理；控制平面负责配置和管理数据平面，以及提供服务发现、智能路由、流量控制、安全控制等功能。",{"type":400,"tag":440,"props":780,"children":782},{"id":781},"sidecar-面临的问题或者说缺陷是",[783],{"type":406,"value":784},"Sidecar 面临的问题或者说缺陷是？",{"type":400,"tag":512,"props":786,"children":787},{},[788,793],{"type":400,"tag":516,"props":789,"children":790},{},[791],{"type":406,"value":792},"在规模巨大化的服务集群下，网络通信的拓扑结构非常复杂，对作为独立容器的 Sidecar 下发配置会导致内存剧烈增长；",{"type":400,"tag":516,"props":794,"children":795},{},[796],{"type":406,"value":797},"某些性能要求极高的业务场景，毫秒级别的延迟也不能接受。",{"type":400,"tag":414,"props":799,"children":800},{},[801],{"type":406,"value":802},"作为改进，Proxyless 模式可以去 Sidecard 容器、消除跨进程调用，并降低延迟。但本质上，它只是使用 Istio Agent 把服务注册等工作和 gRPC  等框架绑定在了一起。",{"type":400,"tag":440,"props":804,"children":806},{"id":805},"sidecarless-模式是什么",[807],{"type":406,"value":808},"Sidecarless 模式是什么？",{"type":400,"tag":414,"props":810,"children":811},{},[812],{"type":406,"value":813},"通过 Agent（代理）、注入式库或者云原生平台功能将 Sidecar 干掉。从原理来说，在 L4 和 L7 分别建立用途不一样的代理，托管不同的流量。L4 层建立了 TCP 路由，有简单的鉴权机制，使用 eBFP 通讯，能观测 TCP 指标和日志。L7 层建立了 HTTP 路由，有完善的鉴权。\nIstio 未来的发展方向就是完善 Ambient Mesh（一种无边车模式的实现）。其使用 DaemonSet 部署 Waypoint Proxy 作为 L7 代理，而在 L4 使用 ztunnel。",{"type":400,"tag":440,"props":815,"children":817},{"id":816},"不可变基础设施的核心思想是",[818],{"type":406,"value":819},"不可变基础设施的核心思想是？",{"type":400,"tag":414,"props":821,"children":822},{},[823],{"type":406,"value":824},"不可变基础设施的核心思想是基础设施的示例一旦创建就变成只读状态，如果需要修改或省级，应先修改配置模板，在根据模板创建新示例并替换旧实例。",{"type":400,"tag":440,"props":826,"children":828},{"id":827},"不可变基础设施能解决什么问题",[829],{"type":406,"value":830},"不可变基础设施能解决什么问题？",{"type":400,"tag":414,"props":832,"children":833},{},[834],{"type":406,"value":835},"以解决传统运维时代需要大量手工操作带来的构建难以自动化，以及环境变量改变等问题。其最大的优势是“一致性”，使基础设施管理简单、可部署、可规模化、可恢复，也提高了安全性。",{"title":394,"searchDepth":837,"depth":837,"links":838},2,[839,840],{"id":410,"depth":837,"text":410},{"id":429,"depth":837,"text":432,"children":841},[842],{"id":436,"depth":843,"text":436},3,"markdown","content:6.maps:_cloud-native:cloud-native.md","content","6.maps/_cloud-native/cloud-native.md","md",[850,853],{"_path":851,"title":852,"description":394},"/maps/_business/low-code","低码",{"_path":854,"title":855,"description":394},"/maps/_cloud-native/devops","DevOps Mind Map",1718180505908]