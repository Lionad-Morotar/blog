[{"data":1,"prerenderedAt":850},["Reactive",2],{"navigation":3,"/maps/_cloud-native/cloud-native":383,"/maps/_cloud-native/cloud-native-surround":843},[4,32,80,96,123,129,135,366,372,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"图片模糊","/gists/blur",{"title":148,"_path":149},"渲染相关笔记","/gists/c4d",{"title":151,"_path":152},"CDN 问题记录","/gists/cdn",{"title":154,"_path":155},"消毒剂","/gists/cleaner",{"title":157,"_path":158},"Windows Command","/gists/cmd",{"title":160,"_path":161},"Command","/gists/command",{"title":163,"_path":164},"复杂科学","/gists/complexity-science",{"title":166,"_path":167},"宇宙","/gists/cosmos",{"title":169,"_path":170},"C++","/gists/cpp",{"title":172,"_path":173},"Data Structure","/gists/data-structure",{"title":175,"_path":176},"DEPRESSION","/gists/depression",{"title":178,"_path":179},"设计模式","/gists/design-patterns",{"title":181,"_path":182},"Developer Experience","/gists/developer-experience",{"title":184,"_path":185},"Device Metrics","/gists/device-metrix",{"title":187,"_path":188},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":190,"_path":191},"正则表达式","/gists/eegex",{"title":193,"_path":194},"Emoji","/gists/emoji",{"title":196,"_path":197},"工程","/gists/engineering",{"title":199,"_path":200},"熵","/gists/entropy",{"title":202,"_path":203},"Environment","/gists/environment",{"title":205,"_path":206},"Erlang","/gists/erlang",{"title":208,"_path":209},"逃离塔克夫","/gists/escape-from-tarkov",{"title":211,"_path":212},"ESNext (ES6-ES11)","/gists/esnext",{"title":214,"_path":215},"Eval！","/gists/eval",{"title":217,"_path":218},"Flutter","/gists/flutter",{"title":220,"_path":221},"字体","/gists/font",{"title":223,"_path":224},"JS 函数式编程","/gists/functional",{"title":226,"_path":227},"Google C++ Standard","/gists/google-cpp-standard",{"title":229,"_path":230},"双向链接完全体","/gists/graph",{"title":232,"_path":233},"Hardwares","/gists/hardwares",{"title":235,"_path":236},"哈希冲突","/gists/hash-collision",{"title":238,"_path":239},"信息设计","/gists/information-design",{"title":241,"_path":242},"InstantPage","/gists/instant.page",{"title":244,"_path":245},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":247,"_path":248},"KVStore","/gists/key-value-db",{"title":250,"_path":251},"Kubernetes","/gists/kubernetes",{"title":253,"_path":254},"Makefile","/gists/makefile",{"title":256,"_path":257},"Markdown Inline Style","/gists/markdown-nice",{"title":259,"_path":260},"小程序","/gists/miniapp",{"title":262,"_path":263},"减小页面快照体积","/gists/minify-html",{"title":265,"_path":266},"mklink","/gists/mklink",{"title":268,"_path":269},"Mock","/gists/mock",{"title":271,"_path":272},"多端应用","/gists/multy-end-app",{"title":274,"_path":275},"神经科学","/gists/neuroscience",{"title":277,"_path":278},"OO","/gists/oo",{"title":280,"_path":281},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":283,"_path":284},"人物","/gists/person",{"title":286,"_path":287},"PInvoke","/gists/pinvoke",{"title":289,"_path":290},"像素","/gists/pixel",{"title":292,"_path":293},"PowerShell","/gists/powershell",{"title":295,"_path":296},"量子","/gists/quantum",{"title":298,"_path":299},"保持好奇心","/gists/questions",{"title":301,"_path":302},"React Native","/gists/react-native",{"title":304,"_path":305},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":307,"_path":308},"SEO","/gists/seo",{"title":310,"_path":311},"Shader","/gists/shader",{"title":313,"_path":314},"Shape Up","/gists/shape-up",{"title":316,"_path":317},"睡觉","/gists/sleep",{"title":319,"_path":320},"States","/gists/states",{"title":322,"_path":323},"Storage","/gists/storage",{"title":325,"_path":326},"音视频流处理","/gists/stream-cli",{"title":328,"_path":329},"Symbol","/gists/symbol",{"title":331,"_path":332},"系统论","/gists/systems-theory",{"title":334,"_path":335},"Taro","/gists/taro",{"title":337,"_path":338},"任务切片","/gists/task-slice",{"title":340,"_path":341},"技术偏好","/gists/tech-dudge",{"title":343,"_path":344},"Untitled","/gists/untitled",{"title":346,"_path":347},"可变字体","/gists/variable-font",{"title":349,"_path":350},"视觉错觉","/gists/visual-illusion",{"title":352,"_path":353},"SS(SSR)","/gists/vpn",{"title":355,"_path":356},"VS Code 插件开发","/gists/vscode-plugin",{"title":358,"_path":359},"Web Components","/gists/web-components",{"title":361,"_path":362},"Windows","/gists/windows",{"title":364,"_path":365},"查缺补漏","/gists/wrong",{"title":367,"_path":368,"children":369},"代码笔记 / Gists","/source-code",[370],{"title":371,"_path":368},"🚄 代码笔记",{"title":373,"_path":374,"children":375},"我 / Abount","/hire",[376],{"title":377,"_path":374},"📬 技术简历",{"title":379,"_path":380,"children":381},"todo","/todo",[382],{"title":379,"_path":380},{"_path":384,"_dir":385,"_draft":386,"_partial":387,"_locale":388,"title":389,"description":388,"body":390,"_type":838,"_id":839,"_source":840,"_file":841,"_extension":842},"/maps/_cloud-native/cloud-native","_cloud-native",false,true,"","CloudNative",{"type":391,"children":392,"toc":830},"root",[393,401,407,421,427,433,440,445,457,463,468,474,479,485,490,499,505,560,566,571,577,582,620,626,631,636,642,647,653,658,664,669,675,680,689,695,700,706,724,730,735,740,746,751,757,762,768,773,779,792,797,803,808,814,819,825],{"type":394,"tag":395,"props":396,"children":398},"element","h1",{"id":397},"cloudnative",[399],{"type":400,"value":389},"text",{"type":394,"tag":402,"props":403,"children":405},"h2",{"id":404},"云原生技术概论",[406],{"type":400,"value":404},{"type":394,"tag":408,"props":409,"children":410},"p",{},[411,413],{"type":400,"value":412},"● 云原生技术概览：",{"type":394,"tag":414,"props":415,"children":419},"a",{"href":416,"rel":417},"https://www.thebyte.com.cn/architecture/summary.html",[418],"nofollow",[420],{"type":400,"value":416},{"type":394,"tag":402,"props":422,"children":424},{"id":423},"quick-question",[425],{"type":400,"value":426},"Quick Question",{"type":394,"tag":428,"props":429,"children":431},"h3",{"id":430},"云原生",[432],{"type":400,"value":430},{"type":394,"tag":434,"props":435,"children":437},"h4",{"id":436},"云原生是什么",[438],{"type":400,"value":439},"云原生是什么？",{"type":394,"tag":408,"props":441,"children":442},{},[443],{"type":400,"value":444},"云原生是一种架构理论，旨在充分发挥云平台的弹性和分布式优势，构建在云上以最佳姿势运行应用程序。",{"type":394,"tag":408,"props":446,"children":447},{},[448,450],{"type":400,"value":449},"见：",{"type":394,"tag":414,"props":451,"children":454},{"href":452,"rel":453},"https://zhuanlan.zhihu.com/p/150190166",[418],[455],{"type":400,"value":456},"什么是云原生？",{"type":394,"tag":434,"props":458,"children":460},{"id":459},"云原生架构的特点是什么",[461],{"type":400,"value":462},"云原生架构的特点是什么？",{"type":394,"tag":408,"props":464,"children":465},{},[466],{"type":400,"value":467},"基于微服务架构，配合服务网格，降低业务单体的复杂性；借助敏捷方法、DevOps 支持持续迭代，同时采用 K8S + 容器支持运维自动化；最后，利用云平台基础设施提供的声明式基础设施配置，实现资源的弹性伸缩、动态调度，提高资源利用率。",{"type":394,"tag":434,"props":469,"children":471},{"id":470},"云原生不可能三角",[472],{"type":400,"value":473},"云原生不可能三角？",{"type":394,"tag":408,"props":475,"children":476},{},[477],{"type":400,"value":478},"高可用、规模化、敏捷；其间循环连线分别可戏称为大象起舞、空中换发和巨人绣花。",{"type":394,"tag":434,"props":480,"children":482},{"id":481},"云原生架构的定义",[483],{"type":400,"value":484},"云原生架构的定义？",{"type":394,"tag":408,"props":486,"children":487},{},[488],{"type":400,"value":489},"云原生基金会 CNCF 给出的云原生的定义的 V1 版本。",{"type":394,"tag":491,"props":492,"children":493},"blockquote",{},[494],{"type":394,"tag":408,"props":495,"children":496},{},[497],{"type":400,"value":498},"云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式 API。\n这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。\n云原生计算基金会（CNCF）致力于培育和维护一个厂商中立的开源生态系统，来推广云原生技术。我们通过将最前沿的模式民主化，让这些创新为大众所用。",{"type":394,"tag":434,"props":500,"children":502},{"id":501},"云原生架构相关哪些技术",[503],{"type":400,"value":504},"云原生架构相关哪些技术？",{"type":394,"tag":506,"props":507,"children":508},"ol",{},[509,515,520,525,530,535,540,545,550,555],{"type":394,"tag":510,"props":511,"children":512},"li",{},[513],{"type":400,"value":514},"容器和镜像：Docker、Containerd、CRI-O、Kata Containers",{"type":394,"tag":510,"props":516,"children":517},{},[518],{"type":400,"value":519},"镜像仓库：Harbor、Nydus",{"type":394,"tag":510,"props":521,"children":522},{},[523],{"type":400,"value":524},"应用封装：Kustomize、Helm",{"type":394,"tag":510,"props":526,"children":527},{},[528],{"type":400,"value":529},"持续集成：Gitlab、Tekton",{"type":394,"tag":510,"props":531,"children":532},{},[533],{"type":400,"value":534},"持续部署：FluxCD、argoCD",{"type":394,"tag":510,"props":536,"children":537},{},[538],{"type":400,"value":539},"容器编排：Kubernetes",{"type":394,"tag":510,"props":541,"children":542},{},[543],{"type":400,"value":544},"网关：Ingress-Nginx、APISIX",{"type":394,"tag":510,"props":546,"children":547},{},[548],{"type":400,"value":549},"日志：Fluentd、Grafana Loki",{"type":394,"tag":510,"props":551,"children":552},{},[553],{"type":400,"value":554},"监控：Grafana、Prometheus",{"type":394,"tag":510,"props":556,"children":557},{},[558],{"type":400,"value":559},"应用开发：Nocalhost",{"type":394,"tag":434,"props":561,"children":563},{"id":562},"从架构发展来看用户和平台的关注点是怎么变化的",[564],{"type":400,"value":565},"从架构发展来看，用户和平台的关注点是怎么变化的？",{"type":394,"tag":408,"props":567,"children":568},{},[569],{"type":400,"value":570},"从用户自建、IaaS、PaaS、SaaS 到 FaaS，客户和平台关注的东西并不一样。\n以 SaaS 举例，客户只需要关注数据，而平台关注包括应用程序、应用依赖、中间件、操作系统、虚拟化服务器、存储、网格等其余所有基础设施。",{"type":394,"tag":434,"props":572,"children":574},{"id":573},"有哪些亿级-dau-规模的移动应用",[575],{"type":400,"value":576},"有哪些亿级 DAU 规模的移动应用？",{"type":394,"tag":408,"props":578,"children":579},{},[580],{"type":400,"value":581},"POE Assistant：以下是一些拥有亿级日活跃用户（DAU）规模的知名移动应用的例子（截至2021年）",{"type":394,"tag":506,"props":583,"children":584},{},[585,590,595,600,605,610,615],{"type":394,"tag":510,"props":586,"children":587},{},[588],{"type":400,"value":589},"Facebook：Facebook是全球最大的社交媒体平台，拥有超过20亿月活跃用户，其中大部分用户通过移动应用进行访问。",{"type":394,"tag":510,"props":591,"children":592},{},[593],{"type":400,"value":594},"WhatsApp：WhatsApp是一款全球领先的即时通讯应用程序，每天有超过20亿用户使用该应用进行消息传递和语音通话。",{"type":394,"tag":510,"props":596,"children":597},{},[598],{"type":400,"value":599},"WeChat（微信）：WeChat是中国最流行的社交媒体和消息应用之一，拥有超过10亿活跃用户。它提供了聊天、社交、支付、游戏和其他功能。",{"type":394,"tag":510,"props":601,"children":602},{},[603],{"type":400,"value":604},"TikTok（抖音）：TikTok是一款全球流行的短视频社交平台，拥有超过10亿用户。它提供了用户生成的短视频内容，吸引了大量的年轻用户。",{"type":394,"tag":510,"props":606,"children":607},{},[608],{"type":400,"value":609},"Instagram：Instagram是一款图片和视频分享社交平台，拥有超过10亿用户。它提供了用户上传和编辑照片、视频以及与其他用户互动的功能。",{"type":394,"tag":510,"props":611,"children":612},{},[613],{"type":400,"value":614},"Snapchat：Snapchat是一款以瞬间分享和自动消失的照片和视频为特点的移动应用，拥有超过5亿用户。",{"type":394,"tag":510,"props":616,"children":617},{},[618],{"type":400,"value":619},"Twitter：Twitter是一款全球知名的社交媒体平台，用户可以发布和阅读短消息（推文）。它拥有超过3亿的活跃用户。",{"type":394,"tag":434,"props":621,"children":623},{"id":622},"如何按照规模和变更速度将软件企业划分为四个象限",[624],{"type":400,"value":625},"如何按照规模和变更速度将软件企业划分为四个象限？",{"type":394,"tag":408,"props":627,"children":628},{},[629],{"type":400,"value":630},"援引 Netflix 的说法，按照规模大小、变更速度的快慢可以将软件划分为：互联网企业（规模大、变化快）、初创公司（规模小、变化快）、电信业务（规模大、变化慢）、企业 IT（规模小、变化慢）。",{"type":394,"tag":408,"props":632,"children":633},{},[634],{"type":400,"value":635},"初创公司面临软件失败的风险、电信业务面临硬件失败风险，而互联网企业是最危险的“Everything is Broken”。",{"type":394,"tag":434,"props":637,"children":639},{"id":638},"什么是虚拟化技术",[640],{"type":400,"value":641},"什么是虚拟化技术？",{"type":394,"tag":408,"props":643,"children":644},{},[645],{"type":400,"value":646},"虚拟化技术是一种资源管理技术，它可以将一台计算机的各种资源，如处理器、内存、硬盘、网络接口卡等，抽象、转换后提供给多个用户和应用程序使用。",{"type":394,"tag":434,"props":648,"children":650},{"id":649},"最早的容器技术",[651],{"type":400,"value":652},"最早的容器技术？",{"type":394,"tag":408,"props":654,"children":655},{},[656],{"type":400,"value":657},"Chroot Jail；使用 chroot 系统调用将进程的 root 目录重定向到新位置，仪表创造独立的环境用于软件编译、测试以及安装。",{"type":394,"tag":434,"props":659,"children":661},{"id":660},"linux-容器是什么",[662],{"type":400,"value":663},"Linux 容器是什么？",{"type":394,"tag":408,"props":665,"children":666},{},[667],{"type":400,"value":668},"LXC，Linux Container；Google 推出的进程容器合并进入 Linux 内核后重命名为 Control Groups，它允许给进程提供操作系统级别的资源限制、优先级控制、审计能力。配合 namepace 称为 LXC，再配合安全防护机制形成了容器运行环境隔离的容器核心能力。",{"type":394,"tag":434,"props":670,"children":672},{"id":671},"docker-继-lxc-解决的问题是",[673],{"type":400,"value":674},"Docker 继 LXC 解决的问题是？",{"type":394,"tag":408,"props":676,"children":677},{},[678],{"type":400,"value":679},"Docker 封装了应用程序的代码、依赖、工具、资源文件和元信息，可以做到将应用分发到任意平台或运行环境，即“Build once，Ship and Run Anywhere”",{"type":394,"tag":408,"props":681,"children":682},{},[683],{"type":394,"tag":684,"props":685,"children":688},"img",{"alt":686,"src":687},"Docker","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20231118201706.png",[],{"type":394,"tag":434,"props":690,"children":692},{"id":691},"为什么称-kubernetes-成了容器编排事实标准",[693],{"type":400,"value":694},"为什么称 Kubernetes 成了容器编排事实标准？",{"type":394,"tag":408,"props":696,"children":697},{},[698],{"type":400,"value":699},"在于 Docker Swarm、Apache Mesos 的斗争中，K8s 没有历史包袱，预置了服务发现、容器网格等关键特性，并提供了用于描述集群架构、定义服务状态的声明式 API，帮助系统维持在这个状态，有明显的后发优势。最重要的是，K8s 拥有一套稳定可扩展的 API 盘活了生态。",{"type":394,"tag":434,"props":701,"children":703},{"id":702},"容器兴起和编排大战的三个里程碑",[704],{"type":400,"value":705},"容器兴起和编排大战的三个里程碑？",{"type":394,"tag":506,"props":707,"children":708},{},[709,714,719],{"type":394,"tag":510,"props":710,"children":711},{},[712],{"type":400,"value":713},"2013 ，Doocker 发布，云计算进入容器时代",{"type":394,"tag":510,"props":715,"children":716},{},[717],{"type":400,"value":718},"2017 ，K8s 赢得容器编排的胜利，云计算进入 K8s 时代",{"type":394,"tag":510,"props":720,"children":721},{},[722],{"type":400,"value":723},"2018，Istio 发布，服务网格的理念走向成熟",{"type":394,"tag":434,"props":725,"children":727},{"id":726},"oci-和-cncf-的关系",[728],{"type":400,"value":729},"OCI 和 CNCF 的关系？",{"type":394,"tag":408,"props":731,"children":732},{},[733],{"type":400,"value":734},"合作关系。",{"type":394,"tag":408,"props":736,"children":737},{},[738],{"type":400,"value":739},"TODO",{"type":394,"tag":434,"props":741,"children":743},{"id":742},"微服务带来了哪些技术挑战",[744],{"type":400,"value":745},"微服务带来了哪些技术挑战？",{"type":394,"tag":408,"props":747,"children":748},{},[749],{"type":400,"value":750},"服务发现、服务熔断、负载均衡和通讯相关问题。通讯包括调用协议、加密、认证、鉴权等。",{"type":394,"tag":434,"props":752,"children":754},{"id":753},"什么是服务网格",[755],{"type":400,"value":756},"什么是服务网格？",{"type":394,"tag":408,"props":758,"children":759},{},[760],{"type":400,"value":761},"服务网格是云原生的基础设施，用于云原生应用微服务组成的的复杂拓扑结构下的可靠请求传送。在实践中，它是一组和应用服务部署在一起的轻量级网络代理（Sidecar）。",{"type":394,"tag":434,"props":763,"children":765},{"id":764},"istio-初始架构是怎样的",[766],{"type":400,"value":767},"Istio 初始架构是怎样的？",{"type":394,"tag":408,"props":769,"children":770},{},[771],{"type":400,"value":772},"Istio 分为数据平面和控制平面。数据平面使用轻量级 Sidecar 如 Envoy 协调与控制服务之间的通信和流量处理；控制平面负责配置和管理数据平面，以及提供服务发现、智能路由、流量控制、安全控制等功能。",{"type":394,"tag":434,"props":774,"children":776},{"id":775},"sidecar-面临的问题或者说缺陷是",[777],{"type":400,"value":778},"Sidecar 面临的问题或者说缺陷是？",{"type":394,"tag":506,"props":780,"children":781},{},[782,787],{"type":394,"tag":510,"props":783,"children":784},{},[785],{"type":400,"value":786},"在规模巨大化的服务集群下，网络通信的拓扑结构非常复杂，对作为独立容器的 Sidecar 下发配置会导致内存剧烈增长；",{"type":394,"tag":510,"props":788,"children":789},{},[790],{"type":400,"value":791},"某些性能要求极高的业务场景，毫秒级别的延迟也不能接受。",{"type":394,"tag":408,"props":793,"children":794},{},[795],{"type":400,"value":796},"作为改进，Proxyless 模式可以去 Sidecard 容器、消除跨进程调用，并降低延迟。但本质上，它只是使用 Istio Agent 把服务注册等工作和 gRPC  等框架绑定在了一起。",{"type":394,"tag":434,"props":798,"children":800},{"id":799},"sidecarless-模式是什么",[801],{"type":400,"value":802},"Sidecarless 模式是什么？",{"type":394,"tag":408,"props":804,"children":805},{},[806],{"type":400,"value":807},"通过 Agent（代理）、注入式库或者云原生平台功能将 Sidecar 干掉。从原理来说，在 L4 和 L7 分别建立用途不一样的代理，托管不同的流量。L4 层建立了 TCP 路由，有简单的鉴权机制，使用 eBFP 通讯，能观测 TCP 指标和日志。L7 层建立了 HTTP 路由，有完善的鉴权。\nIstio 未来的发展方向就是完善 Ambient Mesh（一种无边车模式的实现）。其使用 DaemonSet 部署 Waypoint Proxy 作为 L7 代理，而在 L4 使用 ztunnel。",{"type":394,"tag":434,"props":809,"children":811},{"id":810},"不可变基础设施的核心思想是",[812],{"type":400,"value":813},"不可变基础设施的核心思想是？",{"type":394,"tag":408,"props":815,"children":816},{},[817],{"type":400,"value":818},"不可变基础设施的核心思想是基础设施的示例一旦创建就变成只读状态，如果需要修改或省级，应先修改配置模板，在根据模板创建新示例并替换旧实例。",{"type":394,"tag":434,"props":820,"children":822},{"id":821},"不可变基础设施能解决什么问题",[823],{"type":400,"value":824},"不可变基础设施能解决什么问题？",{"type":394,"tag":408,"props":826,"children":827},{},[828],{"type":400,"value":829},"以解决传统运维时代需要大量手工操作带来的构建难以自动化，以及环境变量改变等问题。其最大的优势是“一致性”，使基础设施管理简单、可部署、可规模化、可恢复，也提高了安全性。",{"title":388,"searchDepth":831,"depth":831,"links":832},2,[833,834],{"id":404,"depth":831,"text":404},{"id":423,"depth":831,"text":426,"children":835},[836],{"id":430,"depth":837,"text":430},3,"markdown","content:6.maps:_cloud-native:cloud-native.md","content","6.maps/_cloud-native/cloud-native.md","md",[844,847],{"_path":845,"title":846,"description":388},"/maps/_business/low-code","低码",{"_path":848,"title":849,"description":388},"/maps/_cloud-native/devops","DevOps Mind Map",1708107590215]