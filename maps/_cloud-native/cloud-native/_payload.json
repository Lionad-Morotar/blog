[{"data":1,"prerenderedAt":853},["Reactive",2],{"navigation":3,"/maps/_cloud-native/cloud-native":386,"/maps/_cloud-native/cloud-native-surround":846},[4,32,80,96,123,129,135,369,375,381],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":42,"_path":43},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":45,"_path":46},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":48,"_path":49},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":51,"_path":52},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":54,"_path":55},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":57,"_path":58},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":60,"_path":61},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":63,"_path":64},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":66,"_path":67},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":69,"_path":70},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":72,"_path":73},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":75,"_path":76},"🚝 四十二篇系列","/articles/fourty-two",{"title":78,"_path":79},"📝 技术博客归档","/articles/fold",{"title":81,"_path":82,"children":83},"造物 / Make","/tools",[84,87,90,93],{"title":85,"_path":86},"🌐 AnySort","/tools/anysort",{"title":88,"_path":89},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":91,"_path":92},"👓 Crapto","/tools/crypto-inline",{"title":94,"_path":95},"🖨️ any-to-base64","/tools/any-to-base64",{"title":97,"_path":98,"children":99},"吉他剧场 / Music","/music",[100,102,105,108,111,114,117,120],{"title":101,"_path":98},"🎸 FingerStyle！",{"title":103,"_path":104},"🌬️ 等待的风","/music/wind",{"title":106,"_path":107},"💕 约定的海洋","/music/ocean",{"title":109,"_path":110},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":112,"_path":113},"🌏 残酷天使的行动纲领","/music/eva",{"title":115,"_path":116},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":118,"_path":119},"🍷 Wu Wei","/music/wu-wei",{"title":121,"_path":122},"🌅 无题","/music/untitled",{"title":124,"_path":125,"children":126},"画点什么 / Paint","/paint",[127],{"title":128,"_path":125},"🚧 正在施工",{"title":130,"_path":131,"children":132},"知识地图 / Maps","/maps",[133],{"title":134,"_path":131},"🏁 知识地图",{"title":136,"_path":137,"children":138},"零散的笔记 / Gists","/gists",[139,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366],{"title":140,"_path":137},"🧊 Gists",{"title":142,"_path":143},"网站的可访问性","/gists/accessibility",{"title":145,"_path":146},"Bit","/gists/bit",{"title":148,"_path":149},"图片模糊","/gists/blur",{"title":151,"_path":152},"渲染相关笔记","/gists/c4d",{"title":154,"_path":155},"CDN 问题记录","/gists/cdn",{"title":157,"_path":158},"消毒剂","/gists/cleaner",{"title":160,"_path":161},"Windows Command","/gists/cmd",{"title":163,"_path":164},"Command","/gists/command",{"title":166,"_path":167},"复杂科学","/gists/complexity-science",{"title":169,"_path":170},"宇宙","/gists/cosmos",{"title":172,"_path":173},"C++","/gists/cpp",{"title":175,"_path":176},"Data Structure","/gists/data-structure",{"title":178,"_path":179},"DEPRESSION","/gists/depression",{"title":181,"_path":182},"设计模式","/gists/design-patterns",{"title":184,"_path":185},"Developer Experience","/gists/developer-experience",{"title":187,"_path":188},"Device Metrics","/gists/device-metrix",{"title":190,"_path":191},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":193,"_path":194},"正则表达式","/gists/eegex",{"title":196,"_path":197},"Emoji","/gists/emoji",{"title":199,"_path":200},"工程","/gists/engineering",{"title":202,"_path":203},"熵","/gists/entropy",{"title":205,"_path":206},"Environment","/gists/environment",{"title":208,"_path":209},"Erlang","/gists/erlang",{"title":211,"_path":212},"逃离塔克夫","/gists/escape-from-tarkov",{"title":214,"_path":215},"ESNext (ES6-ES11)","/gists/esnext",{"title":217,"_path":218},"Eval！","/gists/eval",{"title":220,"_path":221},"Flutter","/gists/flutter",{"title":223,"_path":224},"字体","/gists/font",{"title":226,"_path":227},"JS 函数式编程","/gists/functional",{"title":229,"_path":230},"Google C++ Standard","/gists/google-cpp-standard",{"title":232,"_path":233},"双向链接完全体","/gists/graph",{"title":235,"_path":236},"Hardwares","/gists/hardwares",{"title":238,"_path":239},"哈希冲突","/gists/hash-collision",{"title":241,"_path":242},"信息设计","/gists/information-design",{"title":244,"_path":245},"InstantPage","/gists/instant.page",{"title":247,"_path":248},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":250,"_path":251},"KVStore","/gists/key-value-db",{"title":253,"_path":254},"Kubernetes","/gists/kubernetes",{"title":256,"_path":257},"Makefile","/gists/makefile",{"title":259,"_path":260},"Markdown Inline Style","/gists/markdown-nice",{"title":262,"_path":263},"小程序","/gists/miniapp",{"title":265,"_path":266},"减小页面快照体积","/gists/minify-html",{"title":268,"_path":269},"mklink","/gists/mklink",{"title":271,"_path":272},"Mock","/gists/mock",{"title":274,"_path":275},"多端应用","/gists/multy-end-app",{"title":277,"_path":278},"神经科学","/gists/neuroscience",{"title":280,"_path":281},"OO","/gists/oo",{"title":283,"_path":284},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":286,"_path":287},"人物","/gists/person",{"title":289,"_path":290},"PInvoke","/gists/pinvoke",{"title":292,"_path":293},"像素","/gists/pixel",{"title":295,"_path":296},"PowerShell","/gists/powershell",{"title":298,"_path":299},"量子","/gists/quantum",{"title":301,"_path":302},"保持好奇心","/gists/questions",{"title":304,"_path":305},"React Native","/gists/react-native",{"title":307,"_path":308},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":310,"_path":311},"SEO","/gists/seo",{"title":313,"_path":314},"Shader","/gists/shader",{"title":316,"_path":317},"Shape Up","/gists/shape-up",{"title":319,"_path":320},"睡觉","/gists/sleep",{"title":322,"_path":323},"States","/gists/states",{"title":325,"_path":326},"Storage","/gists/storage",{"title":328,"_path":329},"音视频流处理","/gists/stream-cli",{"title":331,"_path":332},"Symbol","/gists/symbol",{"title":334,"_path":335},"系统论","/gists/systems-theory",{"title":337,"_path":338},"Taro","/gists/taro",{"title":340,"_path":341},"任务切片","/gists/task-slice",{"title":343,"_path":344},"技术偏好","/gists/tech-dudge",{"title":346,"_path":347},"Untitled","/gists/untitled",{"title":349,"_path":350},"可变字体","/gists/variable-font",{"title":352,"_path":353},"视觉错觉","/gists/visual-illusion",{"title":355,"_path":356},"SS(SSR)","/gists/vpn",{"title":358,"_path":359},"VS Code 插件开发","/gists/vscode-plugin",{"title":361,"_path":362},"Web Components","/gists/web-components",{"title":364,"_path":365},"Windows","/gists/windows",{"title":367,"_path":368},"查缺补漏","/gists/wrong",{"title":370,"_path":371,"children":372},"代码笔记 / Gists","/source-code",[373],{"title":374,"_path":371},"🚄 代码笔记",{"title":376,"_path":377,"children":378},"我 / Abount","/hire",[379],{"title":380,"_path":377},"📬 技术简历",{"title":382,"_path":383,"children":384},"todo","/todo",[385],{"title":382,"_path":383},{"_path":387,"_dir":388,"_draft":389,"_partial":390,"_locale":391,"title":392,"description":391,"body":393,"_type":841,"_id":842,"_source":843,"_file":844,"_extension":845},"/maps/_cloud-native/cloud-native","_cloud-native",false,true,"","CloudNative",{"type":394,"children":395,"toc":833},"root",[396,404,410,424,430,436,443,448,460,466,471,477,482,488,493,502,508,563,569,574,580,585,623,629,634,639,645,650,656,661,667,672,678,683,692,698,703,709,727,733,738,743,749,754,760,765,771,776,782,795,800,806,811,817,822,828],{"type":397,"tag":398,"props":399,"children":401},"element","h1",{"id":400},"cloudnative",[402],{"type":403,"value":392},"text",{"type":397,"tag":405,"props":406,"children":408},"h2",{"id":407},"云原生技术概论",[409],{"type":403,"value":407},{"type":397,"tag":411,"props":412,"children":413},"p",{},[414,416],{"type":403,"value":415},"● 云原生技术概览：",{"type":397,"tag":417,"props":418,"children":422},"a",{"href":419,"rel":420},"https://www.thebyte.com.cn/architecture/summary.html",[421],"nofollow",[423],{"type":403,"value":419},{"type":397,"tag":405,"props":425,"children":427},{"id":426},"quick-question",[428],{"type":403,"value":429},"Quick Question",{"type":397,"tag":431,"props":432,"children":434},"h3",{"id":433},"云原生",[435],{"type":403,"value":433},{"type":397,"tag":437,"props":438,"children":440},"h4",{"id":439},"云原生是什么",[441],{"type":403,"value":442},"云原生是什么？",{"type":397,"tag":411,"props":444,"children":445},{},[446],{"type":403,"value":447},"云原生是一种架构理论，旨在充分发挥云平台的弹性和分布式优势，构建在云上以最佳姿势运行应用程序。",{"type":397,"tag":411,"props":449,"children":450},{},[451,453],{"type":403,"value":452},"见：",{"type":397,"tag":417,"props":454,"children":457},{"href":455,"rel":456},"https://zhuanlan.zhihu.com/p/150190166",[421],[458],{"type":403,"value":459},"什么是云原生？",{"type":397,"tag":437,"props":461,"children":463},{"id":462},"云原生架构的特点是什么",[464],{"type":403,"value":465},"云原生架构的特点是什么？",{"type":397,"tag":411,"props":467,"children":468},{},[469],{"type":403,"value":470},"基于微服务架构，配合服务网格，降低业务单体的复杂性；借助敏捷方法、DevOps 支持持续迭代，同时采用 K8S + 容器支持运维自动化；最后，利用云平台基础设施提供的声明式基础设施配置，实现资源的弹性伸缩、动态调度，提高资源利用率。",{"type":397,"tag":437,"props":472,"children":474},{"id":473},"云原生不可能三角",[475],{"type":403,"value":476},"云原生不可能三角？",{"type":397,"tag":411,"props":478,"children":479},{},[480],{"type":403,"value":481},"高可用、规模化、敏捷；其间循环连线分别可戏称为大象起舞、空中换发和巨人绣花。",{"type":397,"tag":437,"props":483,"children":485},{"id":484},"云原生架构的定义",[486],{"type":403,"value":487},"云原生架构的定义？",{"type":397,"tag":411,"props":489,"children":490},{},[491],{"type":403,"value":492},"云原生基金会 CNCF 给出的云原生的定义的 V1 版本。",{"type":397,"tag":494,"props":495,"children":496},"blockquote",{},[497],{"type":397,"tag":411,"props":498,"children":499},{},[500],{"type":403,"value":501},"云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式 API。\n这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。\n云原生计算基金会（CNCF）致力于培育和维护一个厂商中立的开源生态系统，来推广云原生技术。我们通过将最前沿的模式民主化，让这些创新为大众所用。",{"type":397,"tag":437,"props":503,"children":505},{"id":504},"云原生架构相关哪些技术",[506],{"type":403,"value":507},"云原生架构相关哪些技术？",{"type":397,"tag":509,"props":510,"children":511},"ol",{},[512,518,523,528,533,538,543,548,553,558],{"type":397,"tag":513,"props":514,"children":515},"li",{},[516],{"type":403,"value":517},"容器和镜像：Docker、Containerd、CRI-O、Kata Containers",{"type":397,"tag":513,"props":519,"children":520},{},[521],{"type":403,"value":522},"镜像仓库：Harbor、Nydus",{"type":397,"tag":513,"props":524,"children":525},{},[526],{"type":403,"value":527},"应用封装：Kustomize、Helm",{"type":397,"tag":513,"props":529,"children":530},{},[531],{"type":403,"value":532},"持续集成：Gitlab、Tekton",{"type":397,"tag":513,"props":534,"children":535},{},[536],{"type":403,"value":537},"持续部署：FluxCD、argoCD",{"type":397,"tag":513,"props":539,"children":540},{},[541],{"type":403,"value":542},"容器编排：Kubernetes",{"type":397,"tag":513,"props":544,"children":545},{},[546],{"type":403,"value":547},"网关：Ingress-Nginx、APISIX",{"type":397,"tag":513,"props":549,"children":550},{},[551],{"type":403,"value":552},"日志：Fluentd、Grafana Loki",{"type":397,"tag":513,"props":554,"children":555},{},[556],{"type":403,"value":557},"监控：Grafana、Prometheus",{"type":397,"tag":513,"props":559,"children":560},{},[561],{"type":403,"value":562},"应用开发：Nocalhost",{"type":397,"tag":437,"props":564,"children":566},{"id":565},"从架构发展来看用户和平台的关注点是怎么变化的",[567],{"type":403,"value":568},"从架构发展来看，用户和平台的关注点是怎么变化的？",{"type":397,"tag":411,"props":570,"children":571},{},[572],{"type":403,"value":573},"从用户自建、IaaS、PaaS、SaaS 到 FaaS，客户和平台关注的东西并不一样。\n以 SaaS 举例，客户只需要关注数据，而平台关注包括应用程序、应用依赖、中间件、操作系统、虚拟化服务器、存储、网格等其余所有基础设施。",{"type":397,"tag":437,"props":575,"children":577},{"id":576},"有哪些亿级-dau-规模的移动应用",[578],{"type":403,"value":579},"有哪些亿级 DAU 规模的移动应用？",{"type":397,"tag":411,"props":581,"children":582},{},[583],{"type":403,"value":584},"POE Assistant：以下是一些拥有亿级日活跃用户（DAU）规模的知名移动应用的例子（截至2021年）",{"type":397,"tag":509,"props":586,"children":587},{},[588,593,598,603,608,613,618],{"type":397,"tag":513,"props":589,"children":590},{},[591],{"type":403,"value":592},"Facebook：Facebook是全球最大的社交媒体平台，拥有超过20亿月活跃用户，其中大部分用户通过移动应用进行访问。",{"type":397,"tag":513,"props":594,"children":595},{},[596],{"type":403,"value":597},"WhatsApp：WhatsApp是一款全球领先的即时通讯应用程序，每天有超过20亿用户使用该应用进行消息传递和语音通话。",{"type":397,"tag":513,"props":599,"children":600},{},[601],{"type":403,"value":602},"WeChat（微信）：WeChat是中国最流行的社交媒体和消息应用之一，拥有超过10亿活跃用户。它提供了聊天、社交、支付、游戏和其他功能。",{"type":397,"tag":513,"props":604,"children":605},{},[606],{"type":403,"value":607},"TikTok（抖音）：TikTok是一款全球流行的短视频社交平台，拥有超过10亿用户。它提供了用户生成的短视频内容，吸引了大量的年轻用户。",{"type":397,"tag":513,"props":609,"children":610},{},[611],{"type":403,"value":612},"Instagram：Instagram是一款图片和视频分享社交平台，拥有超过10亿用户。它提供了用户上传和编辑照片、视频以及与其他用户互动的功能。",{"type":397,"tag":513,"props":614,"children":615},{},[616],{"type":403,"value":617},"Snapchat：Snapchat是一款以瞬间分享和自动消失的照片和视频为特点的移动应用，拥有超过5亿用户。",{"type":397,"tag":513,"props":619,"children":620},{},[621],{"type":403,"value":622},"Twitter：Twitter是一款全球知名的社交媒体平台，用户可以发布和阅读短消息（推文）。它拥有超过3亿的活跃用户。",{"type":397,"tag":437,"props":624,"children":626},{"id":625},"如何按照规模和变更速度将软件企业划分为四个象限",[627],{"type":403,"value":628},"如何按照规模和变更速度将软件企业划分为四个象限？",{"type":397,"tag":411,"props":630,"children":631},{},[632],{"type":403,"value":633},"援引 Netflix 的说法，按照规模大小、变更速度的快慢可以将软件划分为：互联网企业（规模大、变化快）、初创公司（规模小、变化快）、电信业务（规模大、变化慢）、企业 IT（规模小、变化慢）。",{"type":397,"tag":411,"props":635,"children":636},{},[637],{"type":403,"value":638},"初创公司面临软件失败的风险、电信业务面临硬件失败风险，而互联网企业是最危险的“Everything is Broken”。",{"type":397,"tag":437,"props":640,"children":642},{"id":641},"什么是虚拟化技术",[643],{"type":403,"value":644},"什么是虚拟化技术？",{"type":397,"tag":411,"props":646,"children":647},{},[648],{"type":403,"value":649},"虚拟化技术是一种资源管理技术，它可以将一台计算机的各种资源，如处理器、内存、硬盘、网络接口卡等，抽象、转换后提供给多个用户和应用程序使用。",{"type":397,"tag":437,"props":651,"children":653},{"id":652},"最早的容器技术",[654],{"type":403,"value":655},"最早的容器技术？",{"type":397,"tag":411,"props":657,"children":658},{},[659],{"type":403,"value":660},"Chroot Jail；使用 chroot 系统调用将进程的 root 目录重定向到新位置，仪表创造独立的环境用于软件编译、测试以及安装。",{"type":397,"tag":437,"props":662,"children":664},{"id":663},"linux-容器是什么",[665],{"type":403,"value":666},"Linux 容器是什么？",{"type":397,"tag":411,"props":668,"children":669},{},[670],{"type":403,"value":671},"LXC，Linux Container；Google 推出的进程容器合并进入 Linux 内核后重命名为 Control Groups，它允许给进程提供操作系统级别的资源限制、优先级控制、审计能力。配合 namepace 称为 LXC，再配合安全防护机制形成了容器运行环境隔离的容器核心能力。",{"type":397,"tag":437,"props":673,"children":675},{"id":674},"docker-继-lxc-解决的问题是",[676],{"type":403,"value":677},"Docker 继 LXC 解决的问题是？",{"type":397,"tag":411,"props":679,"children":680},{},[681],{"type":403,"value":682},"Docker 封装了应用程序的代码、依赖、工具、资源文件和元信息，可以做到将应用分发到任意平台或运行环境，即“Build once，Ship and Run Anywhere”",{"type":397,"tag":411,"props":684,"children":685},{},[686],{"type":397,"tag":687,"props":688,"children":691},"img",{"alt":689,"src":690},"Docker","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20231118201706.png",[],{"type":397,"tag":437,"props":693,"children":695},{"id":694},"为什么称-kubernetes-成了容器编排事实标准",[696],{"type":403,"value":697},"为什么称 Kubernetes 成了容器编排事实标准？",{"type":397,"tag":411,"props":699,"children":700},{},[701],{"type":403,"value":702},"在于 Docker Swarm、Apache Mesos 的斗争中，K8s 没有历史包袱，预置了服务发现、容器网格等关键特性，并提供了用于描述集群架构、定义服务状态的声明式 API，帮助系统维持在这个状态，有明显的后发优势。最重要的是，K8s 拥有一套稳定可扩展的 API 盘活了生态。",{"type":397,"tag":437,"props":704,"children":706},{"id":705},"容器兴起和编排大战的三个里程碑",[707],{"type":403,"value":708},"容器兴起和编排大战的三个里程碑？",{"type":397,"tag":509,"props":710,"children":711},{},[712,717,722],{"type":397,"tag":513,"props":713,"children":714},{},[715],{"type":403,"value":716},"2013 ，Doocker 发布，云计算进入容器时代",{"type":397,"tag":513,"props":718,"children":719},{},[720],{"type":403,"value":721},"2017 ，K8s 赢得容器编排的胜利，云计算进入 K8s 时代",{"type":397,"tag":513,"props":723,"children":724},{},[725],{"type":403,"value":726},"2018，Istio 发布，服务网格的理念走向成熟",{"type":397,"tag":437,"props":728,"children":730},{"id":729},"oci-和-cncf-的关系",[731],{"type":403,"value":732},"OCI 和 CNCF 的关系？",{"type":397,"tag":411,"props":734,"children":735},{},[736],{"type":403,"value":737},"合作关系。",{"type":397,"tag":411,"props":739,"children":740},{},[741],{"type":403,"value":742},"TODO",{"type":397,"tag":437,"props":744,"children":746},{"id":745},"微服务带来了哪些技术挑战",[747],{"type":403,"value":748},"微服务带来了哪些技术挑战？",{"type":397,"tag":411,"props":750,"children":751},{},[752],{"type":403,"value":753},"服务发现、服务熔断、负载均衡和通讯相关问题。通讯包括调用协议、加密、认证、鉴权等。",{"type":397,"tag":437,"props":755,"children":757},{"id":756},"什么是服务网格",[758],{"type":403,"value":759},"什么是服务网格？",{"type":397,"tag":411,"props":761,"children":762},{},[763],{"type":403,"value":764},"服务网格是云原生的基础设施，用于云原生应用微服务组成的的复杂拓扑结构下的可靠请求传送。在实践中，它是一组和应用服务部署在一起的轻量级网络代理（Sidecar）。",{"type":397,"tag":437,"props":766,"children":768},{"id":767},"istio-初始架构是怎样的",[769],{"type":403,"value":770},"Istio 初始架构是怎样的？",{"type":397,"tag":411,"props":772,"children":773},{},[774],{"type":403,"value":775},"Istio 分为数据平面和控制平面。数据平面使用轻量级 Sidecar 如 Envoy 协调与控制服务之间的通信和流量处理；控制平面负责配置和管理数据平面，以及提供服务发现、智能路由、流量控制、安全控制等功能。",{"type":397,"tag":437,"props":777,"children":779},{"id":778},"sidecar-面临的问题或者说缺陷是",[780],{"type":403,"value":781},"Sidecar 面临的问题或者说缺陷是？",{"type":397,"tag":509,"props":783,"children":784},{},[785,790],{"type":397,"tag":513,"props":786,"children":787},{},[788],{"type":403,"value":789},"在规模巨大化的服务集群下，网络通信的拓扑结构非常复杂，对作为独立容器的 Sidecar 下发配置会导致内存剧烈增长；",{"type":397,"tag":513,"props":791,"children":792},{},[793],{"type":403,"value":794},"某些性能要求极高的业务场景，毫秒级别的延迟也不能接受。",{"type":397,"tag":411,"props":796,"children":797},{},[798],{"type":403,"value":799},"作为改进，Proxyless 模式可以去 Sidecard 容器、消除跨进程调用，并降低延迟。但本质上，它只是使用 Istio Agent 把服务注册等工作和 gRPC  等框架绑定在了一起。",{"type":397,"tag":437,"props":801,"children":803},{"id":802},"sidecarless-模式是什么",[804],{"type":403,"value":805},"Sidecarless 模式是什么？",{"type":397,"tag":411,"props":807,"children":808},{},[809],{"type":403,"value":810},"通过 Agent（代理）、注入式库或者云原生平台功能将 Sidecar 干掉。从原理来说，在 L4 和 L7 分别建立用途不一样的代理，托管不同的流量。L4 层建立了 TCP 路由，有简单的鉴权机制，使用 eBFP 通讯，能观测 TCP 指标和日志。L7 层建立了 HTTP 路由，有完善的鉴权。\nIstio 未来的发展方向就是完善 Ambient Mesh（一种无边车模式的实现）。其使用 DaemonSet 部署 Waypoint Proxy 作为 L7 代理，而在 L4 使用 ztunnel。",{"type":397,"tag":437,"props":812,"children":814},{"id":813},"不可变基础设施的核心思想是",[815],{"type":403,"value":816},"不可变基础设施的核心思想是？",{"type":397,"tag":411,"props":818,"children":819},{},[820],{"type":403,"value":821},"不可变基础设施的核心思想是基础设施的示例一旦创建就变成只读状态，如果需要修改或省级，应先修改配置模板，在根据模板创建新示例并替换旧实例。",{"type":397,"tag":437,"props":823,"children":825},{"id":824},"不可变基础设施能解决什么问题",[826],{"type":403,"value":827},"不可变基础设施能解决什么问题？",{"type":397,"tag":411,"props":829,"children":830},{},[831],{"type":403,"value":832},"以解决传统运维时代需要大量手工操作带来的构建难以自动化，以及环境变量改变等问题。其最大的优势是“一致性”，使基础设施管理简单、可部署、可规模化、可恢复，也提高了安全性。",{"title":391,"searchDepth":834,"depth":834,"links":835},2,[836,837],{"id":407,"depth":834,"text":407},{"id":426,"depth":834,"text":429,"children":838},[839],{"id":433,"depth":840,"text":433},3,"markdown","content:6.maps:_cloud-native:cloud-native.md","content","6.maps/_cloud-native/cloud-native.md","md",[847,850],{"_path":848,"title":849,"description":391},"/maps/_business/low-code","低码",{"_path":851,"title":852,"description":391},"/maps/_cloud-native/devops","DevOps Mind Map",1710257739122]