[{"data":1,"prerenderedAt":848},["ShallowReactive",2],{"navigation":3,"/maps/_cloud-native/cloud-native":384,"/maps/_cloud-native/cloud-native-surround":839},[4,35,86,105,132,138,144,150,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":205,"_path":206},"正则表达式","/gists/eegex",{"title":208,"_path":209},"Emoji","/gists/emoji",{"title":211,"_path":212},"工程","/gists/engineering",{"title":214,"_path":215},"熵","/gists/entropy",{"title":217,"_path":218},"Environment","/gists/environment",{"title":220,"_path":221},"Erlang","/gists/erlang",{"title":223,"_path":224},"逃离塔克夫","/gists/escape-from-tarkov",{"title":226,"_path":227},"ESNext (ES6-ES11)","/gists/esnext",{"title":229,"_path":230},"Eval！","/gists/eval",{"title":232,"_path":233},"Flutter","/gists/flutter",{"title":235,"_path":236},"字体","/gists/font",{"title":238,"_path":239},"JS 函数式编程","/gists/functional",{"title":241,"_path":242},"游戏化","/gists/gamification",{"title":244,"_path":245},"Google C++ Standard","/gists/google-cpp-standard",{"title":247,"_path":248},"双向链接完全体","/gists/graph",{"title":250,"_path":251},"Hardwares","/gists/hardwares",{"title":253,"_path":254},"哈希冲突","/gists/hash-collision",{"title":256,"_path":257},"信息设计","/gists/information-design",{"title":259,"_path":260},"InstantPage","/gists/instant.page",{"title":262,"_path":263},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":265,"_path":266},"KVStore","/gists/key-value-db",{"title":268,"_path":269},"Kubernetes","/gists/kubernetes",{"title":271,"_path":272},"Makefile","/gists/makefile",{"title":274,"_path":275},"Markdown Inline Style","/gists/markdown-nice",{"title":277,"_path":278},"减小页面快照体积","/gists/minify-html",{"title":280,"_path":281},"mklink","/gists/mklink",{"title":283,"_path":284},"Mock","/gists/mock",{"title":286,"_path":287},"多人协作系统","/gists/multiplayer",{"title":289,"_path":290},"多端应用","/gists/multy-end-app",{"title":292,"_path":293},"神经科学","/gists/neuroscience",{"title":295,"_path":296},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":298,"_path":299},"PInvoke","/gists/pinvoke",{"title":301,"_path":302},"像素","/gists/pixel",{"title":304,"_path":305},"PowerShell","/gists/powershell",{"title":307,"_path":308},"量子","/gists/quantum",{"title":310,"_path":311},"保持好奇心","/gists/questions",{"title":313,"_path":314},"React Native","/gists/react-native",{"title":316,"_path":317},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":319,"_path":320},"SEO","/gists/seo",{"title":322,"_path":323},"Shader","/gists/shader",{"title":325,"_path":326},"Shape Up","/gists/shape-up",{"title":328,"_path":329},"睡觉","/gists/sleep",{"title":331,"_path":332},"记录奇怪的问题","/gists/solved",{"title":334,"_path":335},"States","/gists/states",{"title":337,"_path":338},"Storage","/gists/storage",{"title":340,"_path":341},"音视频流处理","/gists/stream-cli",{"title":343,"_path":344},"Symbol","/gists/symbol",{"title":346,"_path":347},"系统论","/gists/systems-theory",{"title":349,"_path":350},"任务切片","/gists/task-slice",{"title":352,"_path":353},"技术偏好","/gists/tech-dudge",{"title":355,"_path":356},"Untitled","/gists/untitled",{"title":358,"_path":359},"可变字体","/gists/variable-font",{"title":361,"_path":362},"视觉错觉","/gists/visual-illusion",{"title":364,"_path":365},"SS(SSR)","/gists/vpn",{"title":367,"_path":368},"VS Code 插件开发","/gists/vscode-plugin",{"title":370,"_path":371},"Web Components","/gists/web-components",{"title":373,"_path":374},"Windows","/gists/windows",{"title":376,"_path":377},"查缺补漏","/gists/wrong",{"title":379,"_path":380,"children":381},"我 / About","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"_path":385,"_dir":386,"_draft":387,"_partial":388,"_locale":389,"title":390,"description":391,"body":392,"_type":833,"_id":834,"_source":835,"_file":836,"_stem":837,"_extension":838},"/maps/_cloud-native/cloud-native","_cloud-native",false,true,"","CloudNative","云原生技术概论",{"type":393,"children":394,"toc":825},"root",[395,402,416,422,428,435,440,452,458,463,469,474,480,485,494,500,555,561,566,572,577,615,621,626,631,637,642,648,653,659,664,670,675,684,690,695,701,719,725,730,735,741,746,752,757,763,768,774,787,792,798,803,809,814,820],{"type":396,"tag":397,"props":398,"children":399},"element","h2",{"id":391},[400],{"type":401,"value":391},"text",{"type":396,"tag":403,"props":404,"children":405},"p",{},[406,408],{"type":401,"value":407},"● 云原生技术概览：",{"type":396,"tag":409,"props":410,"children":414},"a",{"href":411,"rel":412},"https://www.thebyte.com.cn/architecture/summary.html",[413],"nofollow",[415],{"type":401,"value":411},{"type":396,"tag":397,"props":417,"children":419},{"id":418},"quick-question",[420],{"type":401,"value":421},"Quick Question",{"type":396,"tag":423,"props":424,"children":426},"h3",{"id":425},"云原生",[427],{"type":401,"value":425},{"type":396,"tag":429,"props":430,"children":432},"h4",{"id":431},"云原生是什么",[433],{"type":401,"value":434},"云原生是什么？",{"type":396,"tag":403,"props":436,"children":437},{},[438],{"type":401,"value":439},"云原生是一种架构理论，旨在充分发挥云平台的弹性和分布式优势，构建在云上以最佳姿势运行应用程序。",{"type":396,"tag":403,"props":441,"children":442},{},[443,445],{"type":401,"value":444},"见：",{"type":396,"tag":409,"props":446,"children":449},{"href":447,"rel":448},"https://zhuanlan.zhihu.com/p/150190166",[413],[450],{"type":401,"value":451},"什么是云原生？",{"type":396,"tag":429,"props":453,"children":455},{"id":454},"云原生架构的特点是什么",[456],{"type":401,"value":457},"云原生架构的特点是什么？",{"type":396,"tag":403,"props":459,"children":460},{},[461],{"type":401,"value":462},"基于微服务架构，配合服务网格，降低业务单体的复杂性；借助敏捷方法和 DevOps 方法提高迭代效率，同时采用 K8S + 容器支持运维自动化；最后，利用云平台基础设施提供的声明式基础设施配置，实现资源的弹性伸缩、动态调度，提高资源利用率。",{"type":396,"tag":429,"props":464,"children":466},{"id":465},"云原生不可能三角",[467],{"type":401,"value":468},"云原生不可能三角？",{"type":396,"tag":403,"props":470,"children":471},{},[472],{"type":401,"value":473},"高可用、规模化、敏捷；其间关系分别可戏称为大象起舞、空中换发和巨人绣花。",{"type":396,"tag":429,"props":475,"children":477},{"id":476},"云原生架构的定义",[478],{"type":401,"value":479},"云原生架构的定义？",{"type":396,"tag":403,"props":481,"children":482},{},[483],{"type":401,"value":484},"云原生基金会 CNCF 给出的云原生的定义的 V1 版本。",{"type":396,"tag":486,"props":487,"children":488},"blockquote",{},[489],{"type":396,"tag":403,"props":490,"children":491},{},[492],{"type":401,"value":493},"云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式 API。\n这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。\n云原生计算基金会（CNCF）致力于培育和维护一个厂商中立的开源生态系统，来推广云原生技术。我们通过将最前沿的模式民主化，让这些创新为大众所用。",{"type":396,"tag":429,"props":495,"children":497},{"id":496},"云原生架构相关哪些技术",[498],{"type":401,"value":499},"云原生架构相关哪些技术？",{"type":396,"tag":501,"props":502,"children":503},"ol",{},[504,510,515,520,525,530,535,540,545,550],{"type":396,"tag":505,"props":506,"children":507},"li",{},[508],{"type":401,"value":509},"容器和镜像：Docker、Containerd、CRI-O、Kata Containers",{"type":396,"tag":505,"props":511,"children":512},{},[513],{"type":401,"value":514},"镜像仓库：Harbor、Nydus",{"type":396,"tag":505,"props":516,"children":517},{},[518],{"type":401,"value":519},"应用封装：Kustomize、Helm",{"type":396,"tag":505,"props":521,"children":522},{},[523],{"type":401,"value":524},"持续集成：Gitlab、Tekton",{"type":396,"tag":505,"props":526,"children":527},{},[528],{"type":401,"value":529},"持续部署：FluxCD、argoCD",{"type":396,"tag":505,"props":531,"children":532},{},[533],{"type":401,"value":534},"容器编排：Kubernetes",{"type":396,"tag":505,"props":536,"children":537},{},[538],{"type":401,"value":539},"网关：Ingress-Nginx、APISIX",{"type":396,"tag":505,"props":541,"children":542},{},[543],{"type":401,"value":544},"日志：Fluentd、Grafana Loki",{"type":396,"tag":505,"props":546,"children":547},{},[548],{"type":401,"value":549},"监控：Grafana、Prometheus",{"type":396,"tag":505,"props":551,"children":552},{},[553],{"type":401,"value":554},"应用开发：Nocalhost",{"type":396,"tag":429,"props":556,"children":558},{"id":557},"从架构发展来看用户和平台的关注点是怎么变化的",[559],{"type":401,"value":560},"从架构发展来看，用户和平台的关注点是怎么变化的？",{"type":396,"tag":403,"props":562,"children":563},{},[564],{"type":401,"value":565},"从用户自建、IaaS、PaaS、SaaS 到 FaaS，客户和平台关注的东西并不一样。\n以 SaaS 举例，客户只需要关注数据，而平台关注包括应用程序、应用依赖、中间件、操作系统、虚拟化服务器、存储、网格等其余所有基础设施。",{"type":396,"tag":429,"props":567,"children":569},{"id":568},"有哪些亿级-dau-规模的移动应用",[570],{"type":401,"value":571},"有哪些亿级 DAU 规模的移动应用？",{"type":396,"tag":403,"props":573,"children":574},{},[575],{"type":401,"value":576},"POE Assistant：以下是一些拥有亿级日活跃用户（DAU）规模的知名移动应用的例子（截至2021年）",{"type":396,"tag":501,"props":578,"children":579},{},[580,585,590,595,600,605,610],{"type":396,"tag":505,"props":581,"children":582},{},[583],{"type":401,"value":584},"Facebook：Facebook是全球最大的社交媒体平台，拥有超过20亿月活跃用户，其中大部分用户通过移动应用进行访问。",{"type":396,"tag":505,"props":586,"children":587},{},[588],{"type":401,"value":589},"WhatsApp：WhatsApp是一款全球领先的即时通讯应用程序，每天有超过20亿用户使用该应用进行消息传递和语音通话。",{"type":396,"tag":505,"props":591,"children":592},{},[593],{"type":401,"value":594},"WeChat（微信）：WeChat是中国最流行的社交媒体和消息应用之一，拥有超过10亿活跃用户。它提供了聊天、社交、支付、游戏和其他功能。",{"type":396,"tag":505,"props":596,"children":597},{},[598],{"type":401,"value":599},"TikTok（抖音）：TikTok是一款全球流行的短视频社交平台，拥有超过10亿用户。它提供了用户生成的短视频内容，吸引了大量的年轻用户。",{"type":396,"tag":505,"props":601,"children":602},{},[603],{"type":401,"value":604},"Instagram：Instagram是一款图片和视频分享社交平台，拥有超过10亿用户。它提供了用户上传和编辑照片、视频以及与其他用户互动的功能。",{"type":396,"tag":505,"props":606,"children":607},{},[608],{"type":401,"value":609},"Snapchat：Snapchat是一款以瞬间分享和自动消失的照片和视频为特点的移动应用，拥有超过5亿用户。",{"type":396,"tag":505,"props":611,"children":612},{},[613],{"type":401,"value":614},"Twitter：Twitter是一款全球知名的社交媒体平台，用户可以发布和阅读短消息（推文）。它拥有超过3亿的活跃用户。",{"type":396,"tag":429,"props":616,"children":618},{"id":617},"如何按照规模和变更速度将软件企业划分为四个象限",[619],{"type":401,"value":620},"如何按照规模和变更速度将软件企业划分为四个象限？",{"type":396,"tag":403,"props":622,"children":623},{},[624],{"type":401,"value":625},"援引 Netflix 的说法，按照规模大小、变更速度的快慢可以将软件划分为：互联网企业（规模大、变化快）、初创公司（规模小、变化快）、电信业务（规模大、变化慢）、企业 IT（规模小、变化慢）。",{"type":396,"tag":403,"props":627,"children":628},{},[629],{"type":401,"value":630},"初创公司面临软件失败的风险、电信业务面临硬件失败风险，企业 IT 要面对来自市场的冲击，而互联网企业是最危险的“Everything is Broken”。",{"type":396,"tag":429,"props":632,"children":634},{"id":633},"什么是虚拟化技术",[635],{"type":401,"value":636},"什么是虚拟化技术？",{"type":396,"tag":403,"props":638,"children":639},{},[640],{"type":401,"value":641},"虚拟化技术是一种资源管理技术，它可以将一台计算机的各种资源，如处理器、内存、硬盘、网络接口卡等，抽象、转换后提供给多个用户和应用程序使用。",{"type":396,"tag":429,"props":643,"children":645},{"id":644},"最早的容器技术",[646],{"type":401,"value":647},"最早的容器技术？",{"type":396,"tag":403,"props":649,"children":650},{},[651],{"type":401,"value":652},"Chroot Jail；使用 chroot 系统调用将进程的 root 目录重定向到新位置，仪表创造独立的环境用于软件编译、测试以及安装。",{"type":396,"tag":429,"props":654,"children":656},{"id":655},"linux-容器是什么",[657],{"type":401,"value":658},"Linux 容器是什么？",{"type":396,"tag":403,"props":660,"children":661},{},[662],{"type":401,"value":663},"LXC，Linux Container；Google 推出的进程容器合并进入 Linux 内核后重命名为 Control Groups，它允许给进程提供操作系统级别的资源限制、优先级控制、审计能力。配合 namepace 称为 LXC，再配合安全防护机制形成了容器运行环境隔离的容器核心能力。",{"type":396,"tag":429,"props":665,"children":667},{"id":666},"docker-继-lxc-解决的问题是",[668],{"type":401,"value":669},"Docker 继 LXC 解决的问题是？",{"type":396,"tag":403,"props":671,"children":672},{},[673],{"type":401,"value":674},"Docker 封装了应用程序的代码、依赖、工具、资源文件和元信息，可以做到将应用分发到任意平台或运行环境，即“Build once，Ship and Run Anywhere”",{"type":396,"tag":403,"props":676,"children":677},{},[678],{"type":396,"tag":679,"props":680,"children":683},"img",{"alt":681,"src":682},"Docker","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20231118201706.png",[],{"type":396,"tag":429,"props":685,"children":687},{"id":686},"为什么称-kubernetes-成了容器编排事实标准",[688],{"type":401,"value":689},"为什么称 Kubernetes 成了容器编排事实标准？",{"type":396,"tag":403,"props":691,"children":692},{},[693],{"type":401,"value":694},"在于 Docker Swarm、Apache Mesos 的斗争中，K8s 没有历史包袱，预置了服务发现、容器网格等关键特性，并提供了用于描述集群架构、定义服务状态的声明式 API，帮助系统维持在这个状态，有明显的后发优势。最重要的是，K8s 拥有一套稳定可扩展的 API 盘活了生态。",{"type":396,"tag":429,"props":696,"children":698},{"id":697},"容器兴起和编排大战的三个里程碑",[699],{"type":401,"value":700},"容器兴起和编排大战的三个里程碑？",{"type":396,"tag":501,"props":702,"children":703},{},[704,709,714],{"type":396,"tag":505,"props":705,"children":706},{},[707],{"type":401,"value":708},"2013 ，Doocker 发布，云计算进入容器时代",{"type":396,"tag":505,"props":710,"children":711},{},[712],{"type":401,"value":713},"2017 ，K8s 赢得容器编排的胜利，云计算进入 K8s 时代",{"type":396,"tag":505,"props":715,"children":716},{},[717],{"type":401,"value":718},"2018，Istio 发布，服务网格的理念走向成熟",{"type":396,"tag":429,"props":720,"children":722},{"id":721},"oci-和-cncf-的关系",[723],{"type":401,"value":724},"OCI 和 CNCF 的关系？",{"type":396,"tag":403,"props":726,"children":727},{},[728],{"type":401,"value":729},"合作关系。",{"type":396,"tag":403,"props":731,"children":732},{},[733],{"type":401,"value":734},"TODO",{"type":396,"tag":429,"props":736,"children":738},{"id":737},"微服务带来了哪些技术挑战",[739],{"type":401,"value":740},"微服务带来了哪些技术挑战？",{"type":396,"tag":403,"props":742,"children":743},{},[744],{"type":401,"value":745},"服务发现、服务熔断、负载均衡和通讯相关问题。通讯包括调用协议、加密、认证、鉴权等。",{"type":396,"tag":429,"props":747,"children":749},{"id":748},"什么是服务网格",[750],{"type":401,"value":751},"什么是服务网格？",{"type":396,"tag":403,"props":753,"children":754},{},[755],{"type":401,"value":756},"服务网格是云原生的基础设施，用于云原生应用微服务组成的的复杂拓扑结构下的可靠请求传送。在实践中，它是一组和应用服务部署在一起的轻量级网络代理（Sidecar）。",{"type":396,"tag":429,"props":758,"children":760},{"id":759},"istio-初始架构是怎样的",[761],{"type":401,"value":762},"Istio 初始架构是怎样的？",{"type":396,"tag":403,"props":764,"children":765},{},[766],{"type":401,"value":767},"Istio 分为数据平面和控制平面。数据平面使用轻量级 Sidecar 如 Envoy 协调与控制服务之间的通信和流量处理；控制平面负责配置和管理数据平面，以及提供服务发现、智能路由、流量控制、安全控制等功能。",{"type":396,"tag":429,"props":769,"children":771},{"id":770},"sidecar-面临的问题或者说缺陷是",[772],{"type":401,"value":773},"Sidecar 面临的问题或者说缺陷是？",{"type":396,"tag":501,"props":775,"children":776},{},[777,782],{"type":396,"tag":505,"props":778,"children":779},{},[780],{"type":401,"value":781},"在规模巨大化的服务集群下，网络通信的拓扑结构非常复杂，对作为独立容器的 Sidecar 下发配置会导致内存剧烈增长；",{"type":396,"tag":505,"props":783,"children":784},{},[785],{"type":401,"value":786},"某些性能要求极高的业务场景，毫秒级别的延迟也不能接受。",{"type":396,"tag":403,"props":788,"children":789},{},[790],{"type":401,"value":791},"作为改进，Proxyless 模式可以去 Sidecard 容器、消除跨进程调用，并降低延迟。但本质上，它只是使用 Istio Agent 把服务注册等工作和 gRPC  等框架绑定在了一起。",{"type":396,"tag":429,"props":793,"children":795},{"id":794},"sidecarless-模式是什么",[796],{"type":401,"value":797},"Sidecarless 模式是什么？",{"type":396,"tag":403,"props":799,"children":800},{},[801],{"type":401,"value":802},"通过 Agent（代理）、注入式库或者云原生平台功能将 Sidecar 干掉。从原理来说，在 L4 和 L7 分别建立用途不一样的代理，托管不同的流量。L4 层建立了 TCP 路由，有简单的鉴权机制，使用 eBFP 通讯，能观测 TCP 指标和日志。L7 层建立了 HTTP 路由，有完善的鉴权。\nIstio 未来的发展方向就是完善 Ambient Mesh（一种无边车模式的实现）。其使用 DaemonSet 部署 Waypoint Proxy 作为 L7 代理，而在 L4 使用 ztunnel。",{"type":396,"tag":429,"props":804,"children":806},{"id":805},"不可变基础设施的核心思想是",[807],{"type":401,"value":808},"不可变基础设施的核心思想是？",{"type":396,"tag":403,"props":810,"children":811},{},[812],{"type":401,"value":813},"不可变基础设施的核心思想是基础设施的示例一旦创建就变成只读状态，如果需要修改或省级，应先修改配置模板，在根据模板创建新示例并替换旧实例。",{"type":396,"tag":429,"props":815,"children":817},{"id":816},"不可变基础设施能解决什么问题",[818],{"type":401,"value":819},"不可变基础设施能解决什么问题？",{"type":396,"tag":403,"props":821,"children":822},{},[823],{"type":401,"value":824},"以解决传统运维时代需要大量手工操作带来的构建难以自动化，以及环境变量改变等问题。其最大的优势是“一致性”，使基础设施管理简单、可部署、可规模化、可恢复，也提高了安全性。",{"title":389,"searchDepth":826,"depth":826,"links":827},2,[828,829],{"id":391,"depth":826,"text":391},{"id":418,"depth":826,"text":421,"children":830},[831],{"id":425,"depth":832,"text":425},3,"markdown","content:6.maps:_cloud-native:cloud-native.md","content","6.maps/_cloud-native/cloud-native.md","6.maps/_cloud-native/cloud-native","md",[840,844],{"_path":841,"title":842,"description":843},"/maps/_business/venture-capital","风险投资","高风险、高回报的投资行为",{"_path":845,"title":846,"description":847},"/maps/_cloud-native/serverless","Serverless","无服务器计算，是一种云计算架构模式，其中云提供商负责执行代码，并动态分配计算资源",1742039247502]