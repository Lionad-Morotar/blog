[{"data":1,"prerenderedAt":677},["ShallowReactive",2],{"navigation":3,"/maps/_cloud-native/cloud-native":161,"/maps/_cloud-native/cloud-native-surround":670},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":664,"_id":665,"_source":666,"_file":667,"_stem":668,"_extension":669},"/maps/_cloud-native/cloud-native","_cloud-native",false,true,"","CloudNative","云原生技术概论",{"type":170,"children":171,"toc":654},"root",[172,181,198,204,216,220,234,240,246,253,259,271,277,282,288,293,299,304,313,324,330,384,390,395,401,406,444,450,455,460,466,471,477,482,488,493,499,504,513,519,524,530,548,554,559,564,570,575,581,586,592,597,603,616,621,627,632,638,643,649],{"type":173,"tag":174,"props":175,"children":177},"element","h2",{"id":176},"overview",[178],{"type":179,"value":180},"text","Overview",{"type":173,"tag":182,"props":183,"children":184},"ul",{},[185],{"type":173,"tag":186,"props":187,"children":188},"li",{},[189],{"type":173,"tag":190,"props":191,"children":195},"a",{"href":192,"rel":193},"https://landscape.cncf.io/?group=projects-and-products",[194],"nofollow",[196],{"type":179,"value":197},"CNCF CloudNative Landscapes",{"type":173,"tag":174,"props":199,"children":201},{"id":200},"components",[202],{"type":179,"value":203},"Components",{"type":173,"tag":182,"props":205,"children":206},{},[207],{"type":173,"tag":186,"props":208,"children":209},{},[210],{"type":173,"tag":190,"props":211,"children":213},{"href":212},"/maps/_cloud-native/kubernetes",[214],{"type":179,"value":215},"Kubernetes",{"type":173,"tag":174,"props":217,"children":218},{"id":168},[219],{"type":179,"value":168},{"type":173,"tag":182,"props":221,"children":222},{},[223],{"type":173,"tag":186,"props":224,"children":225},{},[226,228],{"type":179,"value":227},"云原生技术概览：",{"type":173,"tag":190,"props":229,"children":232},{"href":230,"rel":231},"https://www.thebyte.com.cn/architecture/summary.html",[194],[233],{"type":179,"value":230},{"type":173,"tag":174,"props":235,"children":237},{"id":236},"quick-question",[238],{"type":179,"value":239},"Quick Question",{"type":173,"tag":241,"props":242,"children":244},"h3",{"id":243},"云原生",[245],{"type":179,"value":243},{"type":173,"tag":247,"props":248,"children":250},"h4",{"id":249},"云原生是什么",[251],{"type":179,"value":252},"云原生是什么？",{"type":173,"tag":254,"props":255,"children":256},"p",{},[257],{"type":179,"value":258},"云原生是一种架构理论，旨在充分发挥云平台的弹性和分布式优势，构建在云上以最佳姿势运行应用程序。",{"type":173,"tag":254,"props":260,"children":261},{},[262,264],{"type":179,"value":263},"见：",{"type":173,"tag":190,"props":265,"children":268},{"href":266,"rel":267},"https://zhuanlan.zhihu.com/p/150190166",[194],[269],{"type":179,"value":270},"什么是云原生？",{"type":173,"tag":247,"props":272,"children":274},{"id":273},"云原生架构的特点是什么",[275],{"type":179,"value":276},"云原生架构的特点是什么？",{"type":173,"tag":254,"props":278,"children":279},{},[280],{"type":179,"value":281},"基于微服务架构，配合服务网格，降低业务单体的复杂性；借助敏捷方法和 DevOps 方法提高迭代效率，同时采用 K8S + 容器支持运维自动化；最后，利用云平台基础设施提供的声明式基础设施配置，实现资源的弹性伸缩、动态调度，提高资源利用率。",{"type":173,"tag":247,"props":283,"children":285},{"id":284},"云原生不可能三角",[286],{"type":179,"value":287},"云原生不可能三角？",{"type":173,"tag":254,"props":289,"children":290},{},[291],{"type":179,"value":292},"高可用、规模化、敏捷；其间关系分别可戏称为大象起舞、空中换发和巨人绣花。",{"type":173,"tag":247,"props":294,"children":296},{"id":295},"云原生架构的定义",[297],{"type":179,"value":298},"云原生架构的定义？",{"type":173,"tag":254,"props":300,"children":301},{},[302],{"type":179,"value":303},"云原生基金会 CNCF 给出的云原生的定义的 V1 版本。",{"type":173,"tag":305,"props":306,"children":307},"blockquote",{},[308],{"type":173,"tag":254,"props":309,"children":310},{},[311],{"type":179,"value":312},"云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式 API。\n这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。\n云原生计算基金会（CNCF）致力于培育和维护一个厂商中立的开源生态系统，来推广云原生技术。我们通过将最前沿的模式民主化，让这些创新为大众所用。",{"type":173,"tag":254,"props":314,"children":315},{},[316,317],{"type":179,"value":263},{"type":173,"tag":190,"props":318,"children":321},{"href":319,"rel":320},"https://github.com/cncf/toc/blob/main/DEFINITION.md#%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC",[194],[322],{"type":179,"value":323},"CNCF DEFINITION",{"type":173,"tag":247,"props":325,"children":327},{"id":326},"云原生架构相关哪些技术",[328],{"type":179,"value":329},"云原生架构相关哪些技术？",{"type":173,"tag":331,"props":332,"children":333},"ol",{},[334,339,344,349,354,359,364,369,374,379],{"type":173,"tag":186,"props":335,"children":336},{},[337],{"type":179,"value":338},"容器和镜像：Docker、Containerd、CRI-O、Kata Containers",{"type":173,"tag":186,"props":340,"children":341},{},[342],{"type":179,"value":343},"镜像仓库：Harbor、Nydus",{"type":173,"tag":186,"props":345,"children":346},{},[347],{"type":179,"value":348},"应用封装：Kustomize、Helm",{"type":173,"tag":186,"props":350,"children":351},{},[352],{"type":179,"value":353},"持续集成：Gitlab、Tekton",{"type":173,"tag":186,"props":355,"children":356},{},[357],{"type":179,"value":358},"持续部署：FluxCD、argoCD",{"type":173,"tag":186,"props":360,"children":361},{},[362],{"type":179,"value":363},"容器编排：Kubernetes",{"type":173,"tag":186,"props":365,"children":366},{},[367],{"type":179,"value":368},"网关：Ingress-Nginx、APISIX",{"type":173,"tag":186,"props":370,"children":371},{},[372],{"type":179,"value":373},"日志：Fluentd、Grafana Loki",{"type":173,"tag":186,"props":375,"children":376},{},[377],{"type":179,"value":378},"监控：Grafana、Prometheus",{"type":173,"tag":186,"props":380,"children":381},{},[382],{"type":179,"value":383},"应用开发：Nocalhost",{"type":173,"tag":247,"props":385,"children":387},{"id":386},"从架构发展来看用户和平台的关注点是怎么变化的",[388],{"type":179,"value":389},"从架构发展来看，用户和平台的关注点是怎么变化的？",{"type":173,"tag":254,"props":391,"children":392},{},[393],{"type":179,"value":394},"从用户自建、IaaS、PaaS、SaaS 到 FaaS，客户和平台关注的东西并不一样。\n以 SaaS 举例，客户只需要关注数据，而平台关注包括应用程序、应用依赖、中间件、操作系统、虚拟化服务器、存储、网格等其余所有基础设施。",{"type":173,"tag":247,"props":396,"children":398},{"id":397},"有哪些亿级-dau-规模的移动应用",[399],{"type":179,"value":400},"有哪些亿级 DAU 规模的移动应用？",{"type":173,"tag":254,"props":402,"children":403},{},[404],{"type":179,"value":405},"POE Assistant：以下是一些拥有亿级日活跃用户（DAU）规模的知名移动应用的例子（截至 2021 年）",{"type":173,"tag":331,"props":407,"children":408},{},[409,414,419,424,429,434,439],{"type":173,"tag":186,"props":410,"children":411},{},[412],{"type":179,"value":413},"Facebook：Facebook 是全球最大的社交媒体平台，拥有超过 20 亿月活跃用户，其中大部分用户通过移动应用进行访问。",{"type":173,"tag":186,"props":415,"children":416},{},[417],{"type":179,"value":418},"WhatsApp：WhatsApp 是一款全球领先的即时通讯应用程序，每天有超过 20 亿用户使用该应用进行消息传递和语音通话。",{"type":173,"tag":186,"props":420,"children":421},{},[422],{"type":179,"value":423},"WeChat（微信）：WeChat 是中国最流行的社交媒体和消息应用之一，拥有超过 10 亿活跃用户。它提供了聊天、社交、支付、游戏和其他功能。",{"type":173,"tag":186,"props":425,"children":426},{},[427],{"type":179,"value":428},"TikTok（抖音）：TikTok 是一款全球流行的短视频社交平台，拥有超过 10 亿用户。它提供了用户生成的短视频内容，吸引了大量的年轻用户。",{"type":173,"tag":186,"props":430,"children":431},{},[432],{"type":179,"value":433},"Instagram：Instagram 是一款图片和视频分享社交平台，拥有超过 10 亿用户。它提供了用户上传和编辑照片、视频以及与其他用户互动的功能。",{"type":173,"tag":186,"props":435,"children":436},{},[437],{"type":179,"value":438},"Snapchat：Snapchat 是一款以瞬间分享和自动消失的照片和视频为特点的移动应用，拥有超过 5 亿用户。",{"type":173,"tag":186,"props":440,"children":441},{},[442],{"type":179,"value":443},"Twitter：Twitter 是一款全球知名的社交媒体平台，用户可以发布和阅读短消息（推文）。它拥有超过 3 亿的活跃用户。",{"type":173,"tag":247,"props":445,"children":447},{"id":446},"如何按照规模和变更速度将软件企业划分为四个象限",[448],{"type":179,"value":449},"如何按照规模和变更速度将软件企业划分为四个象限？",{"type":173,"tag":254,"props":451,"children":452},{},[453],{"type":179,"value":454},"援引 Netflix 的说法，按照规模大小、变更速度的快慢可以将软件划分为：互联网企业（规模大、变化快）、初创公司（规模小、变化快）、电信业务（规模大、变化慢）、企业 IT（规模小、变化慢）。",{"type":173,"tag":254,"props":456,"children":457},{},[458],{"type":179,"value":459},"初创公司面临软件失败的风险、电信业务面临硬件失败风险，企业 IT 要面对来自市场的冲击，而互联网企业是最危险的“Everything is Broken”。",{"type":173,"tag":247,"props":461,"children":463},{"id":462},"什么是虚拟化技术",[464],{"type":179,"value":465},"什么是虚拟化技术？",{"type":173,"tag":254,"props":467,"children":468},{},[469],{"type":179,"value":470},"虚拟化技术是一种资源管理技术，它可以将一台计算机的各种资源，如处理器、内存、硬盘、网络接口卡等，抽象、转换后提供给多个用户和应用程序使用。",{"type":173,"tag":247,"props":472,"children":474},{"id":473},"最早的容器技术",[475],{"type":179,"value":476},"最早的容器技术？",{"type":173,"tag":254,"props":478,"children":479},{},[480],{"type":179,"value":481},"Chroot Jail；使用 chroot 系统调用将进程的 root 目录重定向到新位置，仪表创造独立的环境用于软件编译、测试以及安装。",{"type":173,"tag":247,"props":483,"children":485},{"id":484},"linux-容器是什么",[486],{"type":179,"value":487},"Linux 容器是什么？",{"type":173,"tag":254,"props":489,"children":490},{},[491],{"type":179,"value":492},"LXC，Linux Container；Google 推出的进程容器合并进入 Linux 内核后重命名为 Control Groups，它允许给进程提供操作系统级别的资源限制、优先级控制、审计能力。配合 namepace 称为 LXC，再配合安全防护机制形成了容器运行环境隔离的容器核心能力。",{"type":173,"tag":247,"props":494,"children":496},{"id":495},"docker-继-lxc-解决的问题是",[497],{"type":179,"value":498},"Docker 继 LXC 解决的问题是？",{"type":173,"tag":254,"props":500,"children":501},{},[502],{"type":179,"value":503},"Docker 封装了应用程序的代码、依赖、工具、资源文件和元信息，可以做到将应用分发到任意平台或运行环境，即“Build once，Ship and Run Anywhere”",{"type":173,"tag":254,"props":505,"children":506},{},[507],{"type":173,"tag":508,"props":509,"children":512},"img",{"alt":510,"src":511},"Docker","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20231118201706.png",[],{"type":173,"tag":247,"props":514,"children":516},{"id":515},"为什么称-kubernetes-成了容器编排事实标准",[517],{"type":179,"value":518},"为什么称 Kubernetes 成了容器编排事实标准？",{"type":173,"tag":254,"props":520,"children":521},{},[522],{"type":179,"value":523},"在于 Docker Swarm、Apache Mesos 的斗争中，K8s 没有历史包袱，预置了服务发现、容器网格等关键特性，并提供了用于描述集群架构、定义服务状态的声明式 API，帮助系统维持在这个状态，有明显的后发优势。最重要的是，K8s 拥有一套稳定可扩展的 API 盘活了生态。",{"type":173,"tag":247,"props":525,"children":527},{"id":526},"容器兴起和编排大战的三个里程碑",[528],{"type":179,"value":529},"容器兴起和编排大战的三个里程碑？",{"type":173,"tag":331,"props":531,"children":532},{},[533,538,543],{"type":173,"tag":186,"props":534,"children":535},{},[536],{"type":179,"value":537},"2013 ，Doocker 发布，云计算进入容器时代",{"type":173,"tag":186,"props":539,"children":540},{},[541],{"type":179,"value":542},"2017 ，K8s 赢得容器编排的胜利，云计算进入 K8s 时代",{"type":173,"tag":186,"props":544,"children":545},{},[546],{"type":179,"value":547},"2018，Istio 发布，服务网格的理念走向成熟",{"type":173,"tag":247,"props":549,"children":551},{"id":550},"oci-和-cncf-的关系",[552],{"type":179,"value":553},"OCI 和 CNCF 的关系？",{"type":173,"tag":254,"props":555,"children":556},{},[557],{"type":179,"value":558},"合作关系。",{"type":173,"tag":254,"props":560,"children":561},{},[562],{"type":179,"value":563},"TODO",{"type":173,"tag":247,"props":565,"children":567},{"id":566},"微服务带来了哪些技术挑战",[568],{"type":179,"value":569},"微服务带来了哪些技术挑战？",{"type":173,"tag":254,"props":571,"children":572},{},[573],{"type":179,"value":574},"服务发现、服务熔断、负载均衡和通讯相关问题。通讯包括调用协议、加密、认证、鉴权等。",{"type":173,"tag":247,"props":576,"children":578},{"id":577},"什么是服务网格",[579],{"type":179,"value":580},"什么是服务网格？",{"type":173,"tag":254,"props":582,"children":583},{},[584],{"type":179,"value":585},"服务网格是云原生的基础设施，用于云原生应用微服务组成的的复杂拓扑结构下的可靠请求传送。在实践中，它是一组和应用服务部署在一起的轻量级网络代理（Sidecar）。",{"type":173,"tag":247,"props":587,"children":589},{"id":588},"istio-初始架构是怎样的",[590],{"type":179,"value":591},"Istio 初始架构是怎样的？",{"type":173,"tag":254,"props":593,"children":594},{},[595],{"type":179,"value":596},"Istio 分为数据平面和控制平面。数据平面使用轻量级 Sidecar 如 Envoy 协调与控制服务之间的通信和流量处理；控制平面负责配置和管理数据平面，以及提供服务发现、智能路由、流量控制、安全控制等功能。",{"type":173,"tag":247,"props":598,"children":600},{"id":599},"sidecar-面临的问题或者说缺陷是",[601],{"type":179,"value":602},"Sidecar 面临的问题或者说缺陷是？",{"type":173,"tag":331,"props":604,"children":605},{},[606,611],{"type":173,"tag":186,"props":607,"children":608},{},[609],{"type":179,"value":610},"在规模巨大化的服务集群下，网络通信的拓扑结构非常复杂，对作为独立容器的 Sidecar 下发配置会导致内存剧烈增长；",{"type":173,"tag":186,"props":612,"children":613},{},[614],{"type":179,"value":615},"某些性能要求极高的业务场景，毫秒级别的延迟也不能接受。",{"type":173,"tag":254,"props":617,"children":618},{},[619],{"type":179,"value":620},"作为改进，Proxyless 模式可以去 Sidecard 容器、消除跨进程调用，并降低延迟。但本质上，它只是使用 Istio Agent 把服务注册等工作和 gRPC  等框架绑定在了一起。",{"type":173,"tag":247,"props":622,"children":624},{"id":623},"sidecarless-模式是什么",[625],{"type":179,"value":626},"Sidecarless 模式是什么？",{"type":173,"tag":254,"props":628,"children":629},{},[630],{"type":179,"value":631},"通过 Agent（代理）、注入式库或者云原生平台功能将 Sidecar 干掉。从原理来说，在 L4 和 L7 分别建立用途不一样的代理，托管不同的流量。L4 层建立了 TCP 路由，有简单的鉴权机制，使用 eBFP 通讯，能观测 TCP 指标和日志。L7 层建立了 HTTP 路由，有完善的鉴权。\nIstio 未来的发展方向就是完善 Ambient Mesh（一种无边车模式的实现）。其使用 DaemonSet 部署 Waypoint Proxy 作为 L7 代理，而在 L4 使用 ztunnel。",{"type":173,"tag":247,"props":633,"children":635},{"id":634},"不可变基础设施的核心思想是",[636],{"type":179,"value":637},"不可变基础设施的核心思想是？",{"type":173,"tag":254,"props":639,"children":640},{},[641],{"type":179,"value":642},"不可变基础设施的核心思想是基础设施的示例一旦创建就变成只读状态，如果需要修改或省级，应先修改配置模板，在根据模板创建新示例并替换旧实例。",{"type":173,"tag":247,"props":644,"children":646},{"id":645},"不可变基础设施能解决什么问题",[647],{"type":179,"value":648},"不可变基础设施能解决什么问题？",{"type":173,"tag":254,"props":650,"children":651},{},[652],{"type":179,"value":653},"以解决传统运维时代需要大量手工操作带来的构建难以自动化，以及环境变量改变等问题。其最大的优势是“一致性”，使基础设施管理简单、可部署、可规模化、可恢复，也提高了安全性。",{"title":166,"searchDepth":655,"depth":655,"links":656},2,[657,658,659,660],{"id":176,"depth":655,"text":180},{"id":200,"depth":655,"text":203},{"id":168,"depth":655,"text":168},{"id":236,"depth":655,"text":239,"children":661},[662],{"id":243,"depth":663,"text":243},3,"markdown","content:6.maps:_cloud-native:cloud-native.md","content","6.maps/_cloud-native/cloud-native.md","6.maps/_cloud-native/cloud-native","md",[671,675],{"_path":672,"title":673,"description":674},"/maps/_cli/ffmpeg","ffmpeg & imagemagick","最常使用的视频和图片处理工具。",{"_path":212,"title":215,"description":676},"K8s，是一个基于容器的集群管理平台，主要用于控制容器",1761757107906]