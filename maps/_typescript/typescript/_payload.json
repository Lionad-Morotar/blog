[{"data":1,"prerenderedAt":1042},["ShallowReactive",2],{"navigation":3,"/maps/_typescript/typescript":161,"/maps/_typescript/typescript-surround":1034},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":1028,"_id":1029,"_source":1030,"_file":1031,"_stem":1032,"_extension":1033},"/maps/_typescript/typescript","_typescript",false,true,"","TypeScript","TypeScript 的核心概念、高级类型、应用实践和工程化经验，包含类型体操、项目配置等内容的完整指南。",{"type":170,"children":171,"toc":1017},"root",[172,180,187,193,199,204,540,546,565,570,582,588,593,605,610,616,621,681,686,706,712,717,723,728,748,753,764,773,778,783,791,796,804,812,817,825,830,838,843,856,864,869,880,885,894,902,910,915,920,925,936,941,946,952,1011],{"type":173,"tag":174,"props":175,"children":177},"element","h2",{"id":176},"基本",[178],{"type":179,"value":176},"text",{"type":173,"tag":181,"props":182,"children":184},"h4",{"id":183},"如何理解-interface-和-type-的异同",[185],{"type":179,"value":186},"如何理解 Interface 和 Type 的异同？",{"type":173,"tag":188,"props":189,"children":190},"p",{},[191],{"type":179,"value":192},"类型（Type）不可以合并，但接口（Interface）可以合并。可以理解为某个函数可以实现多个接口，但是作为变量，它只有一种类型。",{"type":173,"tag":181,"props":194,"children":196},{"id":195},"裸类型是什么",[197],{"type":179,"value":198},"裸类型是什么？",{"type":173,"tag":188,"props":200,"children":201},{},[202],{"type":179,"value":203},"裸类型在带入运算时会自动展开，非裸类型则不会。",{"type":173,"tag":205,"props":206,"children":210},"pre",{"className":207,"code":208,"language":209,"meta":166,"style":166},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","type WrapNaked\u003CT> = T extends any ? { o: T } : never\ntype WrapUnNaked\u003CT> = { o: T } extends any ? { o: T } : never\n\ntype Foo = WrapNaked\u003Cstring | number | boolean>\n// { o: string } | { o: number } | { o: boolean }\n\ntype Bar = WrapUnNaked\u003Cstring | number | boolean>\n// { o: string | number | boolean }\n","js",[211],{"type":173,"tag":212,"props":213,"children":214},"code",{"__ignoreMap":166},[215,312,401,410,464,474,482,531],{"type":173,"tag":216,"props":217,"children":220},"span",{"class":218,"line":219},"line",1,[221,227,233,239,244,249,255,260,266,272,277,282,288,293,297,302,307],{"type":173,"tag":216,"props":222,"children":224},{"style":223},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[225],{"type":179,"value":226},"type",{"type":173,"tag":216,"props":228,"children":230},{"style":229},"--shiki-light:#E2931D;--shiki-light-text-decoration:inherit;--shiki-default:#6F42C1;--shiki-default-text-decoration:inherit;--shiki-dark:#B392F0;--shiki-dark-text-decoration:inherit;--shiki-sepia:#A6E22E;--shiki-sepia-text-decoration:underline",[231],{"type":179,"value":232}," WrapNaked",{"type":173,"tag":216,"props":234,"children":236},{"style":235},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[237],{"type":179,"value":238},"\u003C",{"type":173,"tag":216,"props":240,"children":241},{"style":229},[242],{"type":179,"value":243},"T",{"type":173,"tag":216,"props":245,"children":246},{"style":235},[247],{"type":179,"value":248},">",{"type":173,"tag":216,"props":250,"children":252},{"style":251},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[253],{"type":179,"value":254}," =",{"type":173,"tag":216,"props":256,"children":257},{"style":229},[258],{"type":179,"value":259}," T",{"type":173,"tag":216,"props":261,"children":263},{"style":262},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[264],{"type":179,"value":265}," extends",{"type":173,"tag":216,"props":267,"children":269},{"style":268},"--shiki-light:#E2931D;--shiki-light-font-style:inherit;--shiki-default:#005CC5;--shiki-default-font-style:inherit;--shiki-dark:#79B8FF;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[270],{"type":179,"value":271}," any",{"type":173,"tag":216,"props":273,"children":274},{"style":251},[275],{"type":179,"value":276}," ?",{"type":173,"tag":216,"props":278,"children":279},{"style":235},[280],{"type":179,"value":281}," {",{"type":173,"tag":216,"props":283,"children":285},{"style":284},"--shiki-light:#E53935;--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#F8F8F2",[286],{"type":179,"value":287}," o",{"type":173,"tag":216,"props":289,"children":290},{"style":251},[291],{"type":179,"value":292},":",{"type":173,"tag":216,"props":294,"children":295},{"style":229},[296],{"type":179,"value":259},{"type":173,"tag":216,"props":298,"children":299},{"style":235},[300],{"type":179,"value":301}," }",{"type":173,"tag":216,"props":303,"children":304},{"style":251},[305],{"type":179,"value":306}," :",{"type":173,"tag":216,"props":308,"children":309},{"style":268},[310],{"type":179,"value":311}," never\n",{"type":173,"tag":216,"props":313,"children":315},{"class":218,"line":314},2,[316,320,325,329,333,337,341,345,349,353,357,361,365,369,373,377,381,385,389,393,397],{"type":173,"tag":216,"props":317,"children":318},{"style":223},[319],{"type":179,"value":226},{"type":173,"tag":216,"props":321,"children":322},{"style":229},[323],{"type":179,"value":324}," WrapUnNaked",{"type":173,"tag":216,"props":326,"children":327},{"style":235},[328],{"type":179,"value":238},{"type":173,"tag":216,"props":330,"children":331},{"style":229},[332],{"type":179,"value":243},{"type":173,"tag":216,"props":334,"children":335},{"style":235},[336],{"type":179,"value":248},{"type":173,"tag":216,"props":338,"children":339},{"style":251},[340],{"type":179,"value":254},{"type":173,"tag":216,"props":342,"children":343},{"style":235},[344],{"type":179,"value":281},{"type":173,"tag":216,"props":346,"children":347},{"style":284},[348],{"type":179,"value":287},{"type":173,"tag":216,"props":350,"children":351},{"style":251},[352],{"type":179,"value":292},{"type":173,"tag":216,"props":354,"children":355},{"style":229},[356],{"type":179,"value":259},{"type":173,"tag":216,"props":358,"children":359},{"style":235},[360],{"type":179,"value":301},{"type":173,"tag":216,"props":362,"children":363},{"style":262},[364],{"type":179,"value":265},{"type":173,"tag":216,"props":366,"children":367},{"style":268},[368],{"type":179,"value":271},{"type":173,"tag":216,"props":370,"children":371},{"style":251},[372],{"type":179,"value":276},{"type":173,"tag":216,"props":374,"children":375},{"style":235},[376],{"type":179,"value":281},{"type":173,"tag":216,"props":378,"children":379},{"style":284},[380],{"type":179,"value":287},{"type":173,"tag":216,"props":382,"children":383},{"style":251},[384],{"type":179,"value":292},{"type":173,"tag":216,"props":386,"children":387},{"style":229},[388],{"type":179,"value":259},{"type":173,"tag":216,"props":390,"children":391},{"style":235},[392],{"type":179,"value":301},{"type":173,"tag":216,"props":394,"children":395},{"style":251},[396],{"type":179,"value":306},{"type":173,"tag":216,"props":398,"children":399},{"style":268},[400],{"type":179,"value":311},{"type":173,"tag":216,"props":402,"children":404},{"class":218,"line":403},3,[405],{"type":173,"tag":216,"props":406,"children":407},{"emptyLinePlaceholder":165},[408],{"type":179,"value":409},"\n",{"type":173,"tag":216,"props":411,"children":413},{"class":218,"line":412},4,[414,418,423,427,431,435,440,445,450,454,459],{"type":173,"tag":216,"props":415,"children":416},{"style":223},[417],{"type":179,"value":226},{"type":173,"tag":216,"props":419,"children":420},{"style":229},[421],{"type":179,"value":422}," Foo",{"type":173,"tag":216,"props":424,"children":425},{"style":251},[426],{"type":179,"value":254},{"type":173,"tag":216,"props":428,"children":429},{"style":229},[430],{"type":179,"value":232},{"type":173,"tag":216,"props":432,"children":433},{"style":235},[434],{"type":179,"value":238},{"type":173,"tag":216,"props":436,"children":437},{"style":268},[438],{"type":179,"value":439},"string",{"type":173,"tag":216,"props":441,"children":442},{"style":251},[443],{"type":179,"value":444}," |",{"type":173,"tag":216,"props":446,"children":447},{"style":268},[448],{"type":179,"value":449}," number",{"type":173,"tag":216,"props":451,"children":452},{"style":251},[453],{"type":179,"value":444},{"type":173,"tag":216,"props":455,"children":456},{"style":268},[457],{"type":179,"value":458}," boolean",{"type":173,"tag":216,"props":460,"children":461},{"style":235},[462],{"type":179,"value":463},">\n",{"type":173,"tag":216,"props":465,"children":467},{"class":218,"line":466},5,[468],{"type":173,"tag":216,"props":469,"children":471},{"style":470},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[472],{"type":179,"value":473},"// { o: string } | { o: number } | { o: boolean }\n",{"type":173,"tag":216,"props":475,"children":477},{"class":218,"line":476},6,[478],{"type":173,"tag":216,"props":479,"children":480},{"emptyLinePlaceholder":165},[481],{"type":179,"value":409},{"type":173,"tag":216,"props":483,"children":485},{"class":218,"line":484},7,[486,490,495,499,503,507,511,515,519,523,527],{"type":173,"tag":216,"props":487,"children":488},{"style":223},[489],{"type":179,"value":226},{"type":173,"tag":216,"props":491,"children":492},{"style":229},[493],{"type":179,"value":494}," Bar",{"type":173,"tag":216,"props":496,"children":497},{"style":251},[498],{"type":179,"value":254},{"type":173,"tag":216,"props":500,"children":501},{"style":229},[502],{"type":179,"value":324},{"type":173,"tag":216,"props":504,"children":505},{"style":235},[506],{"type":179,"value":238},{"type":173,"tag":216,"props":508,"children":509},{"style":268},[510],{"type":179,"value":439},{"type":173,"tag":216,"props":512,"children":513},{"style":251},[514],{"type":179,"value":444},{"type":173,"tag":216,"props":516,"children":517},{"style":268},[518],{"type":179,"value":449},{"type":173,"tag":216,"props":520,"children":521},{"style":251},[522],{"type":179,"value":444},{"type":173,"tag":216,"props":524,"children":525},{"style":268},[526],{"type":179,"value":458},{"type":173,"tag":216,"props":528,"children":529},{"style":235},[530],{"type":179,"value":463},{"type":173,"tag":216,"props":532,"children":534},{"class":218,"line":533},8,[535],{"type":173,"tag":216,"props":536,"children":537},{"style":470},[538],{"type":179,"value":539},"// { o: string | number | boolean }\n",{"type":173,"tag":181,"props":541,"children":543},{"id":542},"enums-vs-literal-unions",[544],{"type":179,"value":545},"Enums VS Literal Unions",{"type":173,"tag":547,"props":548,"children":549},"ul",{},[550],{"type":173,"tag":551,"props":552,"children":553},"li",{},[554,556],{"type":179,"value":555},"Georges Haidar 提到枚举相比字面量联合 ",{"type":173,"tag":557,"props":558,"children":562},"a",{"href":559,"rel":560},"https://blog.disintegrator.dev/posts/ode-to-typescript-enums/",[561],"nofollow",[563],{"type":179,"value":564},"支持 TSDoc 的 Deprecated 声明",{"type":173,"tag":174,"props":566,"children":568},{"id":567},"高级类型",[569],{"type":179,"value":567},{"type":173,"tag":547,"props":571,"children":572},{},[573],{"type":173,"tag":551,"props":574,"children":575},{},[576],{"type":173,"tag":557,"props":577,"children":579},{"href":578},"/source-code/_ts/utility-types",[580],{"type":179,"value":581},"高级类型推导",{"type":173,"tag":181,"props":583,"children":585},{"id":584},"iterable-和-array-是什么关系",[586],{"type":179,"value":587},"Iterable 和 Array 是什么关系？",{"type":173,"tag":188,"props":589,"children":590},{},[591],{"type":179,"value":592},"实现了 Symbol.iterator 接口的对象都视为是 Iterable 的对象，所以 Array、Map、Set、String、Int32Array 等都是 Iterable 的。",{"type":173,"tag":188,"props":594,"children":595},{},[596,598],{"type":179,"value":597},"见：",{"type":173,"tag":557,"props":599,"children":602},{"href":600,"rel":601},"https://www.typescriptlang.org/docs/handbook/iterators-and-generators.html#iterables",[561],[603],{"type":179,"value":604},"Iterators and Generators",{"type":173,"tag":174,"props":606,"children":608},{"id":607},"应用",[609],{"type":179,"value":607},{"type":173,"tag":181,"props":611,"children":613},{"id":612},"怎么给-window-新增属性",[614],{"type":179,"value":615},"怎么给 Window 新增属性？",{"type":173,"tag":188,"props":617,"children":618},{},[619],{"type":179,"value":620},"同名接口会自动合并，所以写一个新的 Window 对象的接口就好了。",{"type":173,"tag":205,"props":622,"children":624},{"className":207,"code":623,"language":209,"meta":166,"style":166},"declare interface Window {\n  propertyA: string;\n}\n",[625],{"type":173,"tag":212,"props":626,"children":627},{"__ignoreMap":166},[628,651,673],{"type":173,"tag":216,"props":629,"children":630},{"class":218,"line":219},[631,636,641,646],{"type":173,"tag":216,"props":632,"children":633},{"style":262},[634],{"type":179,"value":635},"declare",{"type":173,"tag":216,"props":637,"children":638},{"style":223},[639],{"type":179,"value":640}," interface",{"type":173,"tag":216,"props":642,"children":643},{"style":229},[644],{"type":179,"value":645}," Window",{"type":173,"tag":216,"props":647,"children":648},{"style":235},[649],{"type":179,"value":650}," {\n",{"type":173,"tag":216,"props":652,"children":653},{"class":218,"line":314},[654,659,663,668],{"type":173,"tag":216,"props":655,"children":656},{"style":284},[657],{"type":179,"value":658},"  propertyA",{"type":173,"tag":216,"props":660,"children":661},{"style":251},[662],{"type":179,"value":292},{"type":173,"tag":216,"props":664,"children":665},{"style":268},[666],{"type":179,"value":667}," string",{"type":173,"tag":216,"props":669,"children":670},{"style":235},[671],{"type":179,"value":672},";\n",{"type":173,"tag":216,"props":674,"children":675},{"class":218,"line":403},[676],{"type":173,"tag":216,"props":677,"children":678},{"style":235},[679],{"type":179,"value":680},"}\n",{"type":173,"tag":174,"props":682,"children":684},{"id":683},"类型体操",[685],{"type":179,"value":683},{"type":173,"tag":547,"props":687,"children":688},{},[689,697],{"type":173,"tag":551,"props":690,"children":691},{},[692],{"type":173,"tag":557,"props":693,"children":695},{"href":694},"/maps/_typescript/type-gymnastics",[696],{"type":179,"value":683},{"type":173,"tag":551,"props":698,"children":699},{},[700],{"type":173,"tag":557,"props":701,"children":703},{"href":702},"/source-code/_ts/type-challenges",[704],{"type":179,"value":705},"体操训练",{"type":173,"tag":181,"props":707,"children":709},{"id":708},"什么是类型体操",[710],{"type":179,"value":711},"什么是类型体操？",{"type":173,"tag":188,"props":713,"children":714},{},[715],{"type":179,"value":716},"TypeScript 的类型系统是图灵完备的，这意味着能用 JavaScript 解决的问题，用 TypeScript 的类型系统同样能解决，只是实现方式不一样。尽管完成某种“实现”的方式可能非常复杂，但人们就像玩玩具一样喜欢玩它，或是把它看作某种脑力运动。充满技巧，有乐趣，复杂，又花里胡哨，所以是体操咯。",{"type":173,"tag":181,"props":718,"children":720},{"id":719},"什么是图灵完备",[721],{"type":179,"value":722},"什么是图灵完备？",{"type":173,"tag":188,"props":724,"children":725},{},[726],{"type":179,"value":727},"图灵完备通常指一门编程语言，这意味着这门语言能完成所有图灵机能做的工作。图灵机简单来说，是一个带有无限长度纸带的机器，纸带上有规律组成的 0 和 1，而图灵机通过读写纸带，就可以模拟任何可以实现的计算。",{"type":173,"tag":188,"props":729,"children":730},{},[731,732,739,741],{"type":179,"value":597},{"type":173,"tag":557,"props":733,"children":736},{"href":734,"rel":735},"https://www.bilibili.com/video/BV18L4y15786/",[561],[737],{"type":179,"value":738},"什么是图灵完备 @bili",{"type":179,"value":740},"，",{"type":173,"tag":557,"props":742,"children":745},{"href":743,"rel":744},"https://www.zhihu.com/question/20115374",[561],[746],{"type":179,"value":747},"什么是图灵完备 @zhihu",{"type":173,"tag":174,"props":749,"children":751},{"id":750},"经验",[752],{"type":179,"value":750},{"type":173,"tag":181,"props":754,"children":756},{"id":755},"大规模采用-typescript-之后的-10-个见解",[757],{"type":173,"tag":557,"props":758,"children":761},{"href":759,"rel":760},"https://blog.csdn.net/yeluoxiang/article/details/111602386",[561],[762],{"type":179,"value":763},"大规模采用 TypeScript 之后的 10 个见解",{"type":173,"tag":188,"props":765,"children":766},{},[767],{"type":173,"tag":768,"props":769,"children":770},"q",{},[771],{"type":179,"value":772},"尽管 TypeScript Design Goals 明确表示了避免在未来引入更多的运行时特征，但在发展过程中，TS 扩展了一小部分不太适合 TS = JS + Types 这个模型的功能，enum, namespace, parameter properties 以及 experimental decorators 都需要有将他们扩展为运行时代码的语义，而 JavaScript 引擎很可能永远都不会为这些功能提供支持。",{"type":173,"tag":188,"props":774,"children":775},{},[776],{"type":179,"value":777},"彭博社有专门的工具阻止使用这些不良设计，他们希望自己的代码一直和 ES 标准保持统一。",{"type":173,"tag":188,"props":779,"children":780},{},[781],{"type":179,"value":782},"编译器更新其实值得，带来的兼容性只有两点：一是新的类型检查会暴露过去没有发现的错误，二是在同一个生态系统中如果各个项目使用不同版本的编译器，可能产物不通用。",{"type":173,"tag":188,"props":784,"children":785},{},[786],{"type":173,"tag":768,"props":787,"children":788},{},[789],{"type":179,"value":790},"保持一致的 tsconfig 设置是非常重要的，但最终我们放弃了严格模式，选择牺牲灵活性来保持所有项目配置的一致性。",{"type":173,"tag":188,"props":792,"children":793},{},[794],{"type":179,"value":795},"当设计以 tsconfig.a.json 配置编译的代码被配置了 tsconfig.b.json 的工具引用后就可能出问题。",{"type":173,"tag":188,"props":797,"children":798},{},[799],{"type":173,"tag":768,"props":800,"children":801},{},[802],{"type":179,"value":803},"Ambient Modules 特别之处在于，TypeScript 在发表声明时保持对修饰符的引用，从而避免将它们转化为相对路径。",{"type":173,"tag":188,"props":805,"children":806},{},[807],{"type":173,"tag":768,"props":808,"children":809},{},[810],{"type":179,"value":811},"我们的平台会确保在运行时中每个包只有一个版本的存在。我们希望对类型提供一种 “精确且唯一” 的定义，更好的反应运行时环境。",{"type":173,"tag":188,"props":813,"children":814},{},[815],{"type":179,"value":816},"不可能实现。",{"type":173,"tag":188,"props":818,"children":819},{},[820],{"type":173,"tag":768,"props":821,"children":822},{},[823],{"type":179,"value":824},"TypeScript 仍无法知晓它生成的文件中是否存在不安全的导入",{"type":173,"tag":188,"props":826,"children":827},{},[828],{"type":179,"value":829},"因为从某个库的私有包中引入类型是不安全的，这种引入不受库接口的兼容性限制。",{"type":173,"tag":188,"props":831,"children":832},{},[833],{"type":173,"tag":768,"props":834,"children":835},{},[836],{"type":179,"value":837},"有时 TypeScript 会将依赖中的类型内联传递给当前的类型。我们见过一些极端的例子，由于这些重复的类型定义，声明文件的大小从 7KB 膨胀到了 700KB。",{"type":173,"tag":188,"props":839,"children":840},{},[841],{"type":179,"value":842},"如何防止类型内联：",{"type":173,"tag":547,"props":844,"children":845},{},[846,851],{"type":173,"tag":551,"props":847,"children":848},{},[849],{"type":179,"value":850},"使用 interface 代替 type。",{"type":173,"tag":551,"props":852,"children":853},{},[854],{"type":179,"value":855},"对输出添加类型注释，显式类型注释可以强制指定引用的行为，防止内联",{"type":173,"tag":188,"props":857,"children":858},{},[859],{"type":173,"tag":768,"props":860,"children":861},{},[862],{"type":179,"value":863},"Type Shaking 有时会效果极为显著。我们曾经遇到过一些包中超过 90% 文件中有超过 90% 的类型定义行是可以去掉的。",{"type":173,"tag":174,"props":865,"children":867},{"id":866},"反对",[868],{"type":179,"value":866},{"type":173,"tag":181,"props":870,"children":872},{"id":871},"typescript-不值得前端框架-svelte-作者宣布重构代码反向迁移到-javascript-引争议",[873],{"type":173,"tag":557,"props":874,"children":877},{"href":875,"rel":876},"https://mp.weixin.qq.com/s?src=11&timestamp=1685334730&ver=4557&signature=YHLVy3Pb0b4pKL4-x5Qn7MHu71CQCnJfE04W3iJTm1pQ0X-LgQ6kLfW9TMnfXmTHvmM1YN-xRsFsuAlSKCePE-Goat-MdhOzQqvIVcMl6kPLpJ10vTrrRmwQRZljDCoD&new=1",[561],[878],{"type":179,"value":879},"“TypeScript 不值得！”前端框架 Svelte 作者宣布重构代码，反向迁移到 JavaScript 引争议",{"type":173,"tag":188,"props":881,"children":882},{},[883],{"type":179,"value":884},"2023 年 5 月 9 日，Svelte 团队发布 TS to JSDoc Conversion 的 PR，讨论点在 JSDoc 对类型开发的友好程度不如 TS。作者 Rich Harris 表示原因比较复杂。",{"type":173,"tag":188,"props":886,"children":887},{},[888],{"type":173,"tag":889,"props":890,"children":893},"img",{"alt":891,"src":892},"原因","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20230529124336.png",[],{"type":173,"tag":188,"props":895,"children":896},{},[897],{"type":173,"tag":768,"props":898,"children":899},{},[900],{"type":179,"value":901},"团队在 Sveltekit 中尝试这么做并取得了良好效果，所以想在  Svelte 4.0 也这么做。",{"type":173,"tag":188,"props":903,"children":904},{},[905],{"type":173,"tag":768,"props":906,"children":907},{},[908],{"type":179,"value":909},"“这就没必要了，因为在构建应用程序的过程中，大家无论如何都需要构建的步骤。应用开发的重点在于优化代码、控制它的体量，并把一切都捆绑起来。但如果是想构建一个库，那我强烈建议改用 JSDoc。”",{"type":173,"tag":188,"props":911,"children":912},{},[913],{"type":179,"value":914},"如果是构建应用程序，没必要转向 JSDoc。",{"type":173,"tag":188,"props":916,"children":917},{},[918],{"type":179,"value":919},"对 Svelte 而言，框架本身没有放弃类型安全；对开发者而言，能降低贡献门槛；对用户而言，代码直接指向源码方便调试，也助于能减小代码体积。",{"type":173,"tag":174,"props":921,"children":923},{"id":922},"项目设置",[924],{"type":179,"value":922},{"type":173,"tag":181,"props":926,"children":928},{"id":927},"isolatedmodules",[929],{"type":173,"tag":557,"props":930,"children":933},{"href":931,"rel":932},"https://www.typescriptlang.org/tsconfig#isolatedModules",[561],[934],{"type":179,"value":935},"isolatedModules",{"type":173,"tag":188,"props":937,"children":938},{},[939],{"type":179,"value":940},"许多编译工具如 Babel 不支持在“一个系统层面”角度理解类型。所以需要开启 isolatedModules。开启后，TS 会将每一个 TS 文件都视为独立的 Module，这需要项目使用 ES Module 语法，但同时，TS 会带来更严格的类型检测支持。",{"type":173,"tag":188,"props":942,"children":943},{},[944],{"type":179,"value":945},"在 vite-based 项目中，这个选项应该且默认打开。",{"type":173,"tag":947,"props":948,"children":950},"h3",{"id":949},"推荐",[951],{"type":179,"value":949},{"type":173,"tag":547,"props":953,"children":954},{},[955,965,975,1001],{"type":173,"tag":551,"props":956,"children":957},{},[958],{"type":173,"tag":557,"props":959,"children":962},{"href":960,"rel":961},"https://www.typescriptlang.org/play?#code/C4TwDgpgBAggjFAvFA3lCAPCBjGAKASgC4oAhBAXwChRIyFk1MdTCT4pqqAbCYKAIbsGqKlHRZcUNvVHjxAJz4BXBQDs588c2ylpBTVsUr1UYAAsAlgGdBt5WoDWagPYB3DQNvwxR6lv9OKi4AehCoAHkAaQAaM3AIFwAzQSgbWDgqASRBKjCoAAFgawBaTEhsYDKFBRcFKAAjHAFla2hsgBMIJMs1CA67KGtgAWBLbHi6H2zkAQA6HXwCPPDouNpElIa023IePkac+cXCKjPz-f4wbmUAc17bRkESAHIBF6CNqAAFG-u1R6TTZQa53B5nJIOSqWFwaW4QNQAHgAKgA+PDXW7WEjIgwoXxKYCqDT4rSY6wxXzaSSIgCq6IECixJFpeKp8kJxKg8KRyIAZPS8KSjOI5mLyZSRaKxYysezxBRlgFfNQuLx+AIAEw5HkYv4PZZao6arKaubkuYCU3GhaSIUNIgvBovRUrQrFMoYCpVCA1Oo-WqQBSgKBOj4dFwQWyufiYGz8WFA0NoIRDYAKXq3ADcnBec1N5u4WLmDUujW1szNOiF2Ed2Bdy3y0SoDTNFuwZy+AFkBI4ICjUTlheScZKJDg6QymdioKySD2+yiBajgmd1YIAMzz3v935ggGD5C60H-ayGjdHDdZDeF4tWgQX2Y36soB1h135Iqlco4H1++rfIGvohmGUARlGUAxhI8ZQImXwvCmJDDBmajZrm+YPre1glmWAgACyXraOA1nWDZus2+FYXMHZAA",[561],[963],{"type":179,"value":964},"伪动态类型",{"type":173,"tag":551,"props":966,"children":967},{},[968],{"type":173,"tag":557,"props":969,"children":972},{"href":970,"rel":971},"https://zhuanlan.zhihu.com/p/104565681",[561],[973],{"type":179,"value":974},"详解 TypeScript 里的 This",{"type":173,"tag":551,"props":976,"children":977},{},[978],{"type":173,"tag":557,"props":979,"children":982},{"href":980,"rel":981},"https://stackoverflow.com/questions/69635559/in-typescript-why-is-boolean-string-different-from-boolean-string/69653332#69653332",[561],[983,985,991,993,999],{"type":179,"value":984},"In typescript, why is ",{"type":173,"tag":212,"props":986,"children":988},{"className":987},[],[989],{"type":179,"value":990},"[boolean, string?]",{"type":179,"value":992}," different from ",{"type":173,"tag":212,"props":994,"children":996},{"className":995},[],[997],{"type":179,"value":998},"[boolean, string] | [boolean]",{"type":179,"value":1000},"?",{"type":173,"tag":551,"props":1002,"children":1003},{},[1004],{"type":173,"tag":557,"props":1005,"children":1008},{"href":1006,"rel":1007},"https://stackoverflow.com/questions/56346520/typescript-error-type-number-is-not-assignable-to-type-0-1-2-why-am",[561],[1009],{"type":179,"value":1010},"TypeScript error: \"Type 'number' is not assignable to type '0 | 1 | 2' \". Why am I getting this error?",{"type":173,"tag":1012,"props":1013,"children":1014},"style",{},[1015],{"type":179,"value":1016},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":166,"searchDepth":314,"depth":314,"links":1018},[1019,1020,1021,1022,1023,1024,1025],{"id":176,"depth":314,"text":176},{"id":567,"depth":314,"text":567},{"id":607,"depth":314,"text":607},{"id":683,"depth":314,"text":683},{"id":750,"depth":314,"text":750},{"id":866,"depth":314,"text":866},{"id":922,"depth":314,"text":922,"children":1026},[1027],{"id":949,"depth":403,"text":949},"markdown","content:6.maps:_typescript:typescript.md","content","6.maps/_typescript/typescript.md","6.maps/_typescript/typescript","md",[1035,1038],{"_path":694,"title":1036,"description":1037},"类型体操（Type Gymnastics）","TypeScript 类型体操指北，包含语法关键字、语句结构、基本运算等内容。",{"_path":1039,"title":1040,"description":1041},"/maps/_ui/accessibility","网站的可访问性","增强页面的可访问目的是使网页能够被更多的人使用，包括残障人士、使用底处理性能或低带宽设备的人",1749722327768]