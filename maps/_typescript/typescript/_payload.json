[{"data":1,"prerenderedAt":1265},["ShallowReactive",2],{"navigation":3,"/maps/_typescript/typescript":384,"/maps/_typescript/typescript-surround":1257},[4,35,86,105,132,138,144,150,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":205,"_path":206},"正则表达式","/gists/eegex",{"title":208,"_path":209},"Emoji","/gists/emoji",{"title":211,"_path":212},"工程","/gists/engineering",{"title":214,"_path":215},"熵","/gists/entropy",{"title":217,"_path":218},"Environment","/gists/environment",{"title":220,"_path":221},"Erlang","/gists/erlang",{"title":223,"_path":224},"逃离塔克夫","/gists/escape-from-tarkov",{"title":226,"_path":227},"ESNext (ES6-ES11)","/gists/esnext",{"title":229,"_path":230},"Eval！","/gists/eval",{"title":232,"_path":233},"Flutter","/gists/flutter",{"title":235,"_path":236},"字体","/gists/font",{"title":238,"_path":239},"JS 函数式编程","/gists/functional",{"title":241,"_path":242},"游戏化","/gists/gamification",{"title":244,"_path":245},"Google C++ Standard","/gists/google-cpp-standard",{"title":247,"_path":248},"双向链接完全体","/gists/graph",{"title":250,"_path":251},"Hardwares","/gists/hardwares",{"title":253,"_path":254},"哈希冲突","/gists/hash-collision",{"title":256,"_path":257},"信息设计","/gists/information-design",{"title":259,"_path":260},"InstantPage","/gists/instant.page",{"title":262,"_path":263},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":265,"_path":266},"KVStore","/gists/key-value-db",{"title":268,"_path":269},"Kubernetes","/gists/kubernetes",{"title":271,"_path":272},"Makefile","/gists/makefile",{"title":274,"_path":275},"Markdown Inline Style","/gists/markdown-nice",{"title":277,"_path":278},"减小页面快照体积","/gists/minify-html",{"title":280,"_path":281},"mklink","/gists/mklink",{"title":283,"_path":284},"Mock","/gists/mock",{"title":286,"_path":287},"多人协作系统","/gists/multiplayer",{"title":289,"_path":290},"多端应用","/gists/multy-end-app",{"title":292,"_path":293},"神经科学","/gists/neuroscience",{"title":295,"_path":296},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":298,"_path":299},"PInvoke","/gists/pinvoke",{"title":301,"_path":302},"像素","/gists/pixel",{"title":304,"_path":305},"PowerShell","/gists/powershell",{"title":307,"_path":308},"量子","/gists/quantum",{"title":310,"_path":311},"保持好奇心","/gists/questions",{"title":313,"_path":314},"React Native","/gists/react-native",{"title":316,"_path":317},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":319,"_path":320},"SEO","/gists/seo",{"title":322,"_path":323},"Shader","/gists/shader",{"title":325,"_path":326},"Shape Up","/gists/shape-up",{"title":328,"_path":329},"睡觉","/gists/sleep",{"title":331,"_path":332},"记录奇怪的问题","/gists/solved",{"title":334,"_path":335},"States","/gists/states",{"title":337,"_path":338},"Storage","/gists/storage",{"title":340,"_path":341},"音视频流处理","/gists/stream-cli",{"title":343,"_path":344},"Symbol","/gists/symbol",{"title":346,"_path":347},"系统论","/gists/systems-theory",{"title":349,"_path":350},"任务切片","/gists/task-slice",{"title":352,"_path":353},"技术偏好","/gists/tech-dudge",{"title":355,"_path":356},"Untitled","/gists/untitled",{"title":358,"_path":359},"可变字体","/gists/variable-font",{"title":361,"_path":362},"视觉错觉","/gists/visual-illusion",{"title":364,"_path":365},"SS(SSR)","/gists/vpn",{"title":367,"_path":368},"VS Code 插件开发","/gists/vscode-plugin",{"title":370,"_path":371},"Web Components","/gists/web-components",{"title":373,"_path":374},"Windows","/gists/windows",{"title":376,"_path":377},"查缺补漏","/gists/wrong",{"title":379,"_path":380,"children":381},"我 / About","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"_path":385,"_dir":386,"_draft":387,"_partial":388,"_locale":389,"title":390,"description":391,"body":392,"_type":1251,"_id":1252,"_source":1253,"_file":1254,"_stem":1255,"_extension":1256},"/maps/_typescript/typescript","_typescript",false,true,"","TypeScript","TypeScript 的核心概念、高级类型、应用实践和工程化经验，包含类型体操、项目配置等内容的完整指南。",{"type":393,"children":394,"toc":1240},"root",[395,403,410,416,422,427,763,769,788,793,805,811,816,828,833,839,844,904,909,929,935,940,946,951,971,976,987,996,1001,1006,1014,1019,1027,1035,1040,1048,1053,1061,1066,1079,1087,1092,1103,1108,1117,1125,1133,1138,1143,1148,1159,1164,1169,1175,1234],{"type":396,"tag":397,"props":398,"children":400},"element","h2",{"id":399},"基本",[401],{"type":402,"value":399},"text",{"type":396,"tag":404,"props":405,"children":407},"h4",{"id":406},"如何理解-interface-和-type-的异同",[408],{"type":402,"value":409},"如何理解 Interface 和 Type 的异同？",{"type":396,"tag":411,"props":412,"children":413},"p",{},[414],{"type":402,"value":415},"类型（Type）不可以合并，但接口（Interface）可以合并。可以理解为某个函数可以实现多个接口，但是作为变量，它只有一种类型。",{"type":396,"tag":404,"props":417,"children":419},{"id":418},"裸类型是什么",[420],{"type":402,"value":421},"裸类型是什么？",{"type":396,"tag":411,"props":423,"children":424},{},[425],{"type":402,"value":426},"裸类型在带入运算时会自动展开，非裸类型则不会。",{"type":396,"tag":428,"props":429,"children":433},"pre",{"className":430,"code":431,"language":432,"meta":389,"style":389},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","type WrapNaked\u003CT> = T extends any ? { o: T } : never\ntype WrapUnNaked\u003CT> = { o: T } extends any ? { o: T } : never\n\ntype Foo = WrapNaked\u003Cstring | number | boolean>\n// { o: string } | { o: number } | { o: boolean }\n\ntype Bar = WrapUnNaked\u003Cstring | number | boolean>\n// { o: string | number | boolean }\n","js",[434],{"type":396,"tag":435,"props":436,"children":437},"code",{"__ignoreMap":389},[438,535,624,633,687,697,705,754],{"type":396,"tag":439,"props":440,"children":443},"span",{"class":441,"line":442},"line",1,[444,450,456,462,467,472,478,483,489,495,500,505,511,516,520,525,530],{"type":396,"tag":439,"props":445,"children":447},{"style":446},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[448],{"type":402,"value":449},"type",{"type":396,"tag":439,"props":451,"children":453},{"style":452},"--shiki-light:#E2931D;--shiki-light-text-decoration:inherit;--shiki-default:#6F42C1;--shiki-default-text-decoration:inherit;--shiki-dark:#B392F0;--shiki-dark-text-decoration:inherit;--shiki-sepia:#A6E22E;--shiki-sepia-text-decoration:underline",[454],{"type":402,"value":455}," WrapNaked",{"type":396,"tag":439,"props":457,"children":459},{"style":458},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[460],{"type":402,"value":461},"\u003C",{"type":396,"tag":439,"props":463,"children":464},{"style":452},[465],{"type":402,"value":466},"T",{"type":396,"tag":439,"props":468,"children":469},{"style":458},[470],{"type":402,"value":471},">",{"type":396,"tag":439,"props":473,"children":475},{"style":474},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[476],{"type":402,"value":477}," =",{"type":396,"tag":439,"props":479,"children":480},{"style":452},[481],{"type":402,"value":482}," T",{"type":396,"tag":439,"props":484,"children":486},{"style":485},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[487],{"type":402,"value":488}," extends",{"type":396,"tag":439,"props":490,"children":492},{"style":491},"--shiki-light:#E2931D;--shiki-light-font-style:inherit;--shiki-default:#005CC5;--shiki-default-font-style:inherit;--shiki-dark:#79B8FF;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[493],{"type":402,"value":494}," any",{"type":396,"tag":439,"props":496,"children":497},{"style":474},[498],{"type":402,"value":499}," ?",{"type":396,"tag":439,"props":501,"children":502},{"style":458},[503],{"type":402,"value":504}," {",{"type":396,"tag":439,"props":506,"children":508},{"style":507},"--shiki-light:#E53935;--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#F8F8F2",[509],{"type":402,"value":510}," o",{"type":396,"tag":439,"props":512,"children":513},{"style":474},[514],{"type":402,"value":515},":",{"type":396,"tag":439,"props":517,"children":518},{"style":452},[519],{"type":402,"value":482},{"type":396,"tag":439,"props":521,"children":522},{"style":458},[523],{"type":402,"value":524}," }",{"type":396,"tag":439,"props":526,"children":527},{"style":474},[528],{"type":402,"value":529}," :",{"type":396,"tag":439,"props":531,"children":532},{"style":491},[533],{"type":402,"value":534}," never\n",{"type":396,"tag":439,"props":536,"children":538},{"class":441,"line":537},2,[539,543,548,552,556,560,564,568,572,576,580,584,588,592,596,600,604,608,612,616,620],{"type":396,"tag":439,"props":540,"children":541},{"style":446},[542],{"type":402,"value":449},{"type":396,"tag":439,"props":544,"children":545},{"style":452},[546],{"type":402,"value":547}," WrapUnNaked",{"type":396,"tag":439,"props":549,"children":550},{"style":458},[551],{"type":402,"value":461},{"type":396,"tag":439,"props":553,"children":554},{"style":452},[555],{"type":402,"value":466},{"type":396,"tag":439,"props":557,"children":558},{"style":458},[559],{"type":402,"value":471},{"type":396,"tag":439,"props":561,"children":562},{"style":474},[563],{"type":402,"value":477},{"type":396,"tag":439,"props":565,"children":566},{"style":458},[567],{"type":402,"value":504},{"type":396,"tag":439,"props":569,"children":570},{"style":507},[571],{"type":402,"value":510},{"type":396,"tag":439,"props":573,"children":574},{"style":474},[575],{"type":402,"value":515},{"type":396,"tag":439,"props":577,"children":578},{"style":452},[579],{"type":402,"value":482},{"type":396,"tag":439,"props":581,"children":582},{"style":458},[583],{"type":402,"value":524},{"type":396,"tag":439,"props":585,"children":586},{"style":485},[587],{"type":402,"value":488},{"type":396,"tag":439,"props":589,"children":590},{"style":491},[591],{"type":402,"value":494},{"type":396,"tag":439,"props":593,"children":594},{"style":474},[595],{"type":402,"value":499},{"type":396,"tag":439,"props":597,"children":598},{"style":458},[599],{"type":402,"value":504},{"type":396,"tag":439,"props":601,"children":602},{"style":507},[603],{"type":402,"value":510},{"type":396,"tag":439,"props":605,"children":606},{"style":474},[607],{"type":402,"value":515},{"type":396,"tag":439,"props":609,"children":610},{"style":452},[611],{"type":402,"value":482},{"type":396,"tag":439,"props":613,"children":614},{"style":458},[615],{"type":402,"value":524},{"type":396,"tag":439,"props":617,"children":618},{"style":474},[619],{"type":402,"value":529},{"type":396,"tag":439,"props":621,"children":622},{"style":491},[623],{"type":402,"value":534},{"type":396,"tag":439,"props":625,"children":627},{"class":441,"line":626},3,[628],{"type":396,"tag":439,"props":629,"children":630},{"emptyLinePlaceholder":388},[631],{"type":402,"value":632},"\n",{"type":396,"tag":439,"props":634,"children":636},{"class":441,"line":635},4,[637,641,646,650,654,658,663,668,673,677,682],{"type":396,"tag":439,"props":638,"children":639},{"style":446},[640],{"type":402,"value":449},{"type":396,"tag":439,"props":642,"children":643},{"style":452},[644],{"type":402,"value":645}," Foo",{"type":396,"tag":439,"props":647,"children":648},{"style":474},[649],{"type":402,"value":477},{"type":396,"tag":439,"props":651,"children":652},{"style":452},[653],{"type":402,"value":455},{"type":396,"tag":439,"props":655,"children":656},{"style":458},[657],{"type":402,"value":461},{"type":396,"tag":439,"props":659,"children":660},{"style":491},[661],{"type":402,"value":662},"string",{"type":396,"tag":439,"props":664,"children":665},{"style":474},[666],{"type":402,"value":667}," |",{"type":396,"tag":439,"props":669,"children":670},{"style":491},[671],{"type":402,"value":672}," number",{"type":396,"tag":439,"props":674,"children":675},{"style":474},[676],{"type":402,"value":667},{"type":396,"tag":439,"props":678,"children":679},{"style":491},[680],{"type":402,"value":681}," boolean",{"type":396,"tag":439,"props":683,"children":684},{"style":458},[685],{"type":402,"value":686},">\n",{"type":396,"tag":439,"props":688,"children":690},{"class":441,"line":689},5,[691],{"type":396,"tag":439,"props":692,"children":694},{"style":693},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[695],{"type":402,"value":696},"// { o: string } | { o: number } | { o: boolean }\n",{"type":396,"tag":439,"props":698,"children":700},{"class":441,"line":699},6,[701],{"type":396,"tag":439,"props":702,"children":703},{"emptyLinePlaceholder":388},[704],{"type":402,"value":632},{"type":396,"tag":439,"props":706,"children":708},{"class":441,"line":707},7,[709,713,718,722,726,730,734,738,742,746,750],{"type":396,"tag":439,"props":710,"children":711},{"style":446},[712],{"type":402,"value":449},{"type":396,"tag":439,"props":714,"children":715},{"style":452},[716],{"type":402,"value":717}," Bar",{"type":396,"tag":439,"props":719,"children":720},{"style":474},[721],{"type":402,"value":477},{"type":396,"tag":439,"props":723,"children":724},{"style":452},[725],{"type":402,"value":547},{"type":396,"tag":439,"props":727,"children":728},{"style":458},[729],{"type":402,"value":461},{"type":396,"tag":439,"props":731,"children":732},{"style":491},[733],{"type":402,"value":662},{"type":396,"tag":439,"props":735,"children":736},{"style":474},[737],{"type":402,"value":667},{"type":396,"tag":439,"props":739,"children":740},{"style":491},[741],{"type":402,"value":672},{"type":396,"tag":439,"props":743,"children":744},{"style":474},[745],{"type":402,"value":667},{"type":396,"tag":439,"props":747,"children":748},{"style":491},[749],{"type":402,"value":681},{"type":396,"tag":439,"props":751,"children":752},{"style":458},[753],{"type":402,"value":686},{"type":396,"tag":439,"props":755,"children":757},{"class":441,"line":756},8,[758],{"type":396,"tag":439,"props":759,"children":760},{"style":693},[761],{"type":402,"value":762},"// { o: string | number | boolean }\n",{"type":396,"tag":404,"props":764,"children":766},{"id":765},"enums-vs-literal-unions",[767],{"type":402,"value":768},"Enums VS Literal Unions",{"type":396,"tag":770,"props":771,"children":772},"ul",{},[773],{"type":396,"tag":774,"props":775,"children":776},"li",{},[777,779],{"type":402,"value":778},"Georges Haidar 提到枚举相比字面量联合 ",{"type":396,"tag":780,"props":781,"children":785},"a",{"href":782,"rel":783},"https://blog.disintegrator.dev/posts/ode-to-typescript-enums/",[784],"nofollow",[786],{"type":402,"value":787},"支持 TSDoc 的 Deprecated 声明",{"type":396,"tag":397,"props":789,"children":791},{"id":790},"高级类型",[792],{"type":402,"value":790},{"type":396,"tag":770,"props":794,"children":795},{},[796],{"type":396,"tag":774,"props":797,"children":798},{},[799],{"type":396,"tag":780,"props":800,"children":802},{"href":801},"/source-code/_ts/utility-types",[803],{"type":402,"value":804},"高级类型推导",{"type":396,"tag":404,"props":806,"children":808},{"id":807},"iterable-和-array-是什么关系",[809],{"type":402,"value":810},"Iterable 和 Array 是什么关系？",{"type":396,"tag":411,"props":812,"children":813},{},[814],{"type":402,"value":815},"实现了 Symbol.iterator 接口的对象都视为是 Iterable 的对象，所以 Array、Map、Set、String、Int32Array 等都是 Iterable 的。",{"type":396,"tag":411,"props":817,"children":818},{},[819,821],{"type":402,"value":820},"见：",{"type":396,"tag":780,"props":822,"children":825},{"href":823,"rel":824},"https://www.typescriptlang.org/docs/handbook/iterators-and-generators.html#iterables",[784],[826],{"type":402,"value":827},"Iterators and Generators",{"type":396,"tag":397,"props":829,"children":831},{"id":830},"应用",[832],{"type":402,"value":830},{"type":396,"tag":404,"props":834,"children":836},{"id":835},"怎么给-window-新增属性",[837],{"type":402,"value":838},"怎么给 Window 新增属性？",{"type":396,"tag":411,"props":840,"children":841},{},[842],{"type":402,"value":843},"同名接口会自动合并，所以写一个新的 Window 对象的接口就好了。",{"type":396,"tag":428,"props":845,"children":847},{"className":430,"code":846,"language":432,"meta":389,"style":389},"declare interface Window {\n  propertyA: string;\n}\n",[848],{"type":396,"tag":435,"props":849,"children":850},{"__ignoreMap":389},[851,874,896],{"type":396,"tag":439,"props":852,"children":853},{"class":441,"line":442},[854,859,864,869],{"type":396,"tag":439,"props":855,"children":856},{"style":485},[857],{"type":402,"value":858},"declare",{"type":396,"tag":439,"props":860,"children":861},{"style":446},[862],{"type":402,"value":863}," interface",{"type":396,"tag":439,"props":865,"children":866},{"style":452},[867],{"type":402,"value":868}," Window",{"type":396,"tag":439,"props":870,"children":871},{"style":458},[872],{"type":402,"value":873}," {\n",{"type":396,"tag":439,"props":875,"children":876},{"class":441,"line":537},[877,882,886,891],{"type":396,"tag":439,"props":878,"children":879},{"style":507},[880],{"type":402,"value":881},"  propertyA",{"type":396,"tag":439,"props":883,"children":884},{"style":474},[885],{"type":402,"value":515},{"type":396,"tag":439,"props":887,"children":888},{"style":491},[889],{"type":402,"value":890}," string",{"type":396,"tag":439,"props":892,"children":893},{"style":458},[894],{"type":402,"value":895},";\n",{"type":396,"tag":439,"props":897,"children":898},{"class":441,"line":626},[899],{"type":396,"tag":439,"props":900,"children":901},{"style":458},[902],{"type":402,"value":903},"}\n",{"type":396,"tag":397,"props":905,"children":907},{"id":906},"类型体操",[908],{"type":402,"value":906},{"type":396,"tag":770,"props":910,"children":911},{},[912,920],{"type":396,"tag":774,"props":913,"children":914},{},[915],{"type":396,"tag":780,"props":916,"children":918},{"href":917},"/maps/_typescript/type-gymnastics",[919],{"type":402,"value":906},{"type":396,"tag":774,"props":921,"children":922},{},[923],{"type":396,"tag":780,"props":924,"children":926},{"href":925},"/source-code/_ts/type-challenges",[927],{"type":402,"value":928},"体操训练",{"type":396,"tag":404,"props":930,"children":932},{"id":931},"什么是类型体操",[933],{"type":402,"value":934},"什么是类型体操？",{"type":396,"tag":411,"props":936,"children":937},{},[938],{"type":402,"value":939},"TypeScript 的类型系统是图灵完备的，这意味着能用 JavaScript 解决的问题，用 TypeScript 的类型系统同样能解决，只是实现方式不一样。尽管完成某种“实现”的方式可能非常复杂，但人们就像玩玩具一样喜欢玩它，或是把它看作某种脑力运动。充满技巧，有乐趣，复杂，又花里胡哨，所以是体操咯。",{"type":396,"tag":404,"props":941,"children":943},{"id":942},"什么是图灵完备",[944],{"type":402,"value":945},"什么是图灵完备？",{"type":396,"tag":411,"props":947,"children":948},{},[949],{"type":402,"value":950},"图灵完备通常指一门编程语言，这意味着这门语言能完成所有图灵机能做的工作。图灵机简单来说，是一个带有无限长度纸带的机器，纸带上有规律组成的 0 和 1，而图灵机通过读写纸带，就可以模拟任何可以实现的计算。",{"type":396,"tag":411,"props":952,"children":953},{},[954,955,962,964],{"type":402,"value":820},{"type":396,"tag":780,"props":956,"children":959},{"href":957,"rel":958},"https://www.bilibili.com/video/BV18L4y15786/",[784],[960],{"type":402,"value":961},"什么是图灵完备 @bili",{"type":402,"value":963},"，",{"type":396,"tag":780,"props":965,"children":968},{"href":966,"rel":967},"https://www.zhihu.com/question/20115374",[784],[969],{"type":402,"value":970},"什么是图灵完备 @zhihu",{"type":396,"tag":397,"props":972,"children":974},{"id":973},"经验",[975],{"type":402,"value":973},{"type":396,"tag":404,"props":977,"children":979},{"id":978},"大规模采用-typescript-之后的-10-个见解",[980],{"type":396,"tag":780,"props":981,"children":984},{"href":982,"rel":983},"https://blog.csdn.net/yeluoxiang/article/details/111602386",[784],[985],{"type":402,"value":986},"大规模采用 TypeScript 之后的 10 个见解",{"type":396,"tag":411,"props":988,"children":989},{},[990],{"type":396,"tag":991,"props":992,"children":993},"q",{},[994],{"type":402,"value":995},"尽管 TypeScript Design Goals 明确表示了避免在未来引入更多的运行时特征，但在发展过程中，TS 扩展了一小部分不太适合 TS = JS + Types 这个模型的功能，enum, namespace, parameter properties 以及 experimental decorators 都需要有将他们扩展为运行时代码的语义，而 JavaScript 引擎很可能永远都不会为这些功能提供支持。",{"type":396,"tag":411,"props":997,"children":998},{},[999],{"type":402,"value":1000},"彭博社有专门的工具阻止使用这些不良设计，他们希望自己的代码一直和 ES 标准保持统一。",{"type":396,"tag":411,"props":1002,"children":1003},{},[1004],{"type":402,"value":1005},"编译器更新其实值得，带来的兼容性只有两点：一是新的类型检查会暴露过去没有发现的错误，二是在同一个生态系统中如果各个项目使用不同版本的编译器，可能产物不通用。",{"type":396,"tag":411,"props":1007,"children":1008},{},[1009],{"type":396,"tag":991,"props":1010,"children":1011},{},[1012],{"type":402,"value":1013},"保持一致的 tsconfig 设置是非常重要的，但最终我们放弃了严格模式，选择牺牲灵活性来保持所有项目配置的一致性。",{"type":396,"tag":411,"props":1015,"children":1016},{},[1017],{"type":402,"value":1018},"当设计以 tsconfig.a.json 配置编译的代码被配置了 tsconfig.b.json 的工具引用后就可能出问题。",{"type":396,"tag":411,"props":1020,"children":1021},{},[1022],{"type":396,"tag":991,"props":1023,"children":1024},{},[1025],{"type":402,"value":1026},"Ambient Modules 特别之处在于，TypeScript 在发表声明时保持对修饰符的引用，从而避免将它们转化为相对路径。",{"type":396,"tag":411,"props":1028,"children":1029},{},[1030],{"type":396,"tag":991,"props":1031,"children":1032},{},[1033],{"type":402,"value":1034},"我们的平台会确保在运行时中每个包只有一个版本的存在。我们希望对类型提供一种 “精确且唯一” 的定义，更好的反应运行时环境。",{"type":396,"tag":411,"props":1036,"children":1037},{},[1038],{"type":402,"value":1039},"不可能实现。",{"type":396,"tag":411,"props":1041,"children":1042},{},[1043],{"type":396,"tag":991,"props":1044,"children":1045},{},[1046],{"type":402,"value":1047},"TypeScript 仍无法知晓它生成的文件中是否存在不安全的导入",{"type":396,"tag":411,"props":1049,"children":1050},{},[1051],{"type":402,"value":1052},"因为从某个库的私有包中引入类型是不安全的，这种引入不受库接口的兼容性限制。",{"type":396,"tag":411,"props":1054,"children":1055},{},[1056],{"type":396,"tag":991,"props":1057,"children":1058},{},[1059],{"type":402,"value":1060},"有时 TypeScript 会将依赖中的类型内联传递给当前的类型。我们见过一些极端的例子，由于这些重复的类型定义，声明文件的大小从 7KB 膨胀到了 700KB。",{"type":396,"tag":411,"props":1062,"children":1063},{},[1064],{"type":402,"value":1065},"如何防止类型内联：",{"type":396,"tag":770,"props":1067,"children":1068},{},[1069,1074],{"type":396,"tag":774,"props":1070,"children":1071},{},[1072],{"type":402,"value":1073},"使用 interface 代替 type。",{"type":396,"tag":774,"props":1075,"children":1076},{},[1077],{"type":402,"value":1078},"对输出添加类型注释，显式类型注释可以强制指定引用的行为，防止内联",{"type":396,"tag":411,"props":1080,"children":1081},{},[1082],{"type":396,"tag":991,"props":1083,"children":1084},{},[1085],{"type":402,"value":1086},"Type Shaking 有时会效果极为显著。我们曾经遇到过一些包中超过 90% 文件中有超过 90% 的类型定义行是可以去掉的。",{"type":396,"tag":397,"props":1088,"children":1090},{"id":1089},"反对",[1091],{"type":402,"value":1089},{"type":396,"tag":404,"props":1093,"children":1095},{"id":1094},"typescript-不值得前端框架-svelte-作者宣布重构代码反向迁移到-javascript-引争议",[1096],{"type":396,"tag":780,"props":1097,"children":1100},{"href":1098,"rel":1099},"https://mp.weixin.qq.com/s?src=11&timestamp=1685334730&ver=4557&signature=YHLVy3Pb0b4pKL4-x5Qn7MHu71CQCnJfE04W3iJTm1pQ0X-LgQ6kLfW9TMnfXmTHvmM1YN-xRsFsuAlSKCePE-Goat-MdhOzQqvIVcMl6kPLpJ10vTrrRmwQRZljDCoD&new=1",[784],[1101],{"type":402,"value":1102},"“TypeScript 不值得！”前端框架 Svelte 作者宣布重构代码，反向迁移到 JavaScript 引争议",{"type":396,"tag":411,"props":1104,"children":1105},{},[1106],{"type":402,"value":1107},"2023 年 5 月 9 日，Svelte 团队发布 TS to JSDoc Conversion 的 PR，讨论点在 JSDoc 对类型开发的友好程度不如 TS。作者 Rich Harris 表示原因比较复杂。",{"type":396,"tag":411,"props":1109,"children":1110},{},[1111],{"type":396,"tag":1112,"props":1113,"children":1116},"img",{"alt":1114,"src":1115},"原因","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20230529124336.png",[],{"type":396,"tag":411,"props":1118,"children":1119},{},[1120],{"type":396,"tag":991,"props":1121,"children":1122},{},[1123],{"type":402,"value":1124},"团队在 Sveltekit 中尝试这么做并取得了良好效果，所以想在  Svelte 4.0 也这么做。",{"type":396,"tag":411,"props":1126,"children":1127},{},[1128],{"type":396,"tag":991,"props":1129,"children":1130},{},[1131],{"type":402,"value":1132},"“这就没必要了，因为在构建应用程序的过程中，大家无论如何都需要构建的步骤。应用开发的重点在于优化代码、控制它的体量，并把一切都捆绑起来。但如果是想构建一个库，那我强烈建议改用 JSDoc。”",{"type":396,"tag":411,"props":1134,"children":1135},{},[1136],{"type":402,"value":1137},"如果是构建应用程序，没必要转向 JSDoc。",{"type":396,"tag":411,"props":1139,"children":1140},{},[1141],{"type":402,"value":1142},"对 Svelte 而言，框架本身没有放弃类型安全；对开发者而言，能降低贡献门槛；对用户而言，代码直接指向源码方便调试，也助于能减小代码体积。",{"type":396,"tag":397,"props":1144,"children":1146},{"id":1145},"项目设置",[1147],{"type":402,"value":1145},{"type":396,"tag":404,"props":1149,"children":1151},{"id":1150},"isolatedmodules",[1152],{"type":396,"tag":780,"props":1153,"children":1156},{"href":1154,"rel":1155},"https://www.typescriptlang.org/tsconfig#isolatedModules",[784],[1157],{"type":402,"value":1158},"isolatedModules",{"type":396,"tag":411,"props":1160,"children":1161},{},[1162],{"type":402,"value":1163},"许多编译工具如 Babel 不支持在“一个系统层面”角度理解类型。所以需要开启 isolatedModules。开启后，TS 会将每一个 TS 文件都视为独立的 Module，这需要项目使用 ES Module 语法，但同时，TS 会带来更严格的类型检测支持。",{"type":396,"tag":411,"props":1165,"children":1166},{},[1167],{"type":402,"value":1168},"在 vite-based 项目中，这个选项应该且默认打开。",{"type":396,"tag":1170,"props":1171,"children":1173},"h3",{"id":1172},"推荐",[1174],{"type":402,"value":1172},{"type":396,"tag":770,"props":1176,"children":1177},{},[1178,1188,1198,1224],{"type":396,"tag":774,"props":1179,"children":1180},{},[1181],{"type":396,"tag":780,"props":1182,"children":1185},{"href":1183,"rel":1184},"https://www.typescriptlang.org/play?#code/C4TwDgpgBAggjFAvFA3lCAPCBjGAKASgC4oAhBAXwChRIyFk1MdTCT4pqqAbCYKAIbsGqKlHRZcUNvVHjxAJz4BXBQDs588c2ylpBTVsUr1UYAAsAlgGdBt5WoDWagPYB3DQNvwxR6lv9OKi4AehCoAHkAaQAaM3AIFwAzQSgbWDgqASRBKjCoAAFgawBaTEhsYDKFBRcFKAAjHAFla2hsgBMIJMs1CA67KGtgAWBLbHi6H2zkAQA6HXwCPPDouNpElIa023IePkac+cXCKjPz-f4wbmUAc17bRkESAHIBF6CNqAAFG-u1R6TTZQa53B5nJIOSqWFwaW4QNQAHgAKgA+PDXW7WEjIgwoXxKYCqDT4rSY6wxXzaSSIgCq6IECixJFpeKp8kJxKg8KRyIAZPS8KSjOI5mLyZSRaKxYysezxBRlgFfNQuLx+AIAEw5HkYv4PZZao6arKaubkuYCU3GhaSIUNIgvBovRUrQrFMoYCpVCA1Oo-WqQBSgKBOj4dFwQWyufiYGz8WFA0NoIRDYAKXq3ADcnBec1N5u4WLmDUujW1szNOiF2Ed2Bdy3y0SoDTNFuwZy+AFkBI4ICjUTlheScZKJDg6QymdioKySD2+yiBajgmd1YIAMzz3v935ggGD5C60H-ayGjdHDdZDeF4tWgQX2Y36soB1h135Iqlco4H1++rfIGvohmGUARlGUAxhI8ZQImXwvCmJDDBmajZrm+YPre1glmWAgACyXraOA1nWDZus2+FYXMHZAA",[784],[1186],{"type":402,"value":1187},"伪动态类型",{"type":396,"tag":774,"props":1189,"children":1190},{},[1191],{"type":396,"tag":780,"props":1192,"children":1195},{"href":1193,"rel":1194},"https://zhuanlan.zhihu.com/p/104565681",[784],[1196],{"type":402,"value":1197},"详解 TypeScript 里的 This",{"type":396,"tag":774,"props":1199,"children":1200},{},[1201],{"type":396,"tag":780,"props":1202,"children":1205},{"href":1203,"rel":1204},"https://stackoverflow.com/questions/69635559/in-typescript-why-is-boolean-string-different-from-boolean-string/69653332#69653332",[784],[1206,1208,1214,1216,1222],{"type":402,"value":1207},"In typescript, why is ",{"type":396,"tag":435,"props":1209,"children":1211},{"className":1210},[],[1212],{"type":402,"value":1213},"[boolean, string?]",{"type":402,"value":1215}," different from ",{"type":396,"tag":435,"props":1217,"children":1219},{"className":1218},[],[1220],{"type":402,"value":1221},"[boolean, string] | [boolean]",{"type":402,"value":1223},"?",{"type":396,"tag":774,"props":1225,"children":1226},{},[1227],{"type":396,"tag":780,"props":1228,"children":1231},{"href":1229,"rel":1230},"https://stackoverflow.com/questions/56346520/typescript-error-type-number-is-not-assignable-to-type-0-1-2-why-am",[784],[1232],{"type":402,"value":1233},"TypeScript error: \"Type 'number' is not assignable to type '0 | 1 | 2' \". Why am I getting this error?",{"type":396,"tag":1235,"props":1236,"children":1237},"style",{},[1238],{"type":402,"value":1239},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":389,"searchDepth":537,"depth":537,"links":1241},[1242,1243,1244,1245,1246,1247,1248],{"id":399,"depth":537,"text":399},{"id":790,"depth":537,"text":790},{"id":830,"depth":537,"text":830},{"id":906,"depth":537,"text":906},{"id":973,"depth":537,"text":973},{"id":1089,"depth":537,"text":1089},{"id":1145,"depth":537,"text":1145,"children":1249},[1250],{"id":1172,"depth":626,"text":1172},"markdown","content:6.maps:_typescript:typescript.md","content","6.maps/_typescript/typescript.md","6.maps/_typescript/typescript","md",[1258,1261],{"_path":917,"title":1259,"description":1260},"类型体操（Type Gymnastics）","TypeScript 类型体操指北，包含语法关键字、语句结构、基本运算等内容。",{"_path":1262,"title":1263,"description":1264},"/maps/_ui/ui","用户界面（UI）","用户界面（UI）设计是指设计师设计的用户界面，是用户与产品之间的桥梁。用户界面设计是一个复杂的过程，其中包括设计、测试和改进。设计师必须考虑用户的需求、产品的功能和用户界面的外观。用户界面设计是一个交叉学科，涉及心理学、设计、计算机科学和其他领域。",1741914078588]