[{"data":1,"prerenderedAt":1261},["ShallowReactive",2],{"navigation":3,"/maps/_typescript/typescript":416,"/maps/_typescript/typescript-surround":1255},[4,32,86,108,135,141,147,153,399,405,411],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":42,"_path":43},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":45,"_path":46},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":48,"_path":49},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":51,"_path":52},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":54,"_path":55},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":57,"_path":58},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":60,"_path":61},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":63,"_path":64},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":66,"_path":67},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":69,"_path":70},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":72,"_path":73},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":75,"_path":76},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":78,"_path":79},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":81,"_path":82},"🚝 四十二篇系列","/articles/fourty-two",{"title":84,"_path":85},"📝 技术博客归档","/articles/fold",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102,105],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107},"🖨️ any-to-base64","/tools/any-to-base64",{"title":109,"_path":110,"children":111},"吉他剧场 / Music","/music",[112,114,117,120,123,126,129,132],{"title":113,"_path":110},"🎸 FingerStyle！",{"title":115,"_path":116},"🌬️ 等待的风","/music/wind",{"title":118,"_path":119},"💕 约定的海洋","/music/ocean",{"title":121,"_path":122},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":124,"_path":125},"🌏 残酷天使的行动纲领","/music/eva",{"title":127,"_path":128},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":130,"_path":131},"🍷 Wu Wei","/music/wu-wei",{"title":133,"_path":134},"🌅 无题","/music/untitled",{"title":136,"_path":137,"children":138},"画点什么 / Paint","/paint",[139],{"title":140,"_path":137},"🚧 正在施工",{"title":142,"_path":143,"children":144},"读书笔记 / Notes","/books",[145],{"title":146,"_path":143},"📕 读书笔记",{"title":148,"_path":149,"children":150},"知识地图 / Maps","/maps",[151],{"title":152,"_path":149},"🏁 知识地图",{"title":154,"_path":155,"children":156},"零散的笔记 / Gists","/gists",[157,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396],{"title":158,"_path":155},"🧊 Gists",{"title":160,"_path":161},"网站的可访问性","/gists/accessibility",{"title":163,"_path":164},"Bit","/gists/bit",{"title":166,"_path":167},"图片模糊","/gists/blur",{"title":169,"_path":170},"渲染相关笔记","/gists/c4d",{"title":172,"_path":173},"CDN 问题记录","/gists/cdn",{"title":175,"_path":176},"消毒剂","/gists/cleaner",{"title":178,"_path":179},"Windows Command","/gists/cmd",{"title":181,"_path":182},"Command","/gists/command",{"title":184,"_path":185},"复杂科学","/gists/complexity-science",{"title":187,"_path":188},"GitHub Copilot","/gists/copilot",{"title":190,"_path":191},"宇宙","/gists/cosmos",{"title":193,"_path":194},"C++","/gists/cpp",{"title":196,"_path":197},"Data Structure","/gists/data-structure",{"title":199,"_path":200},"DEPRESSION","/gists/depression",{"title":202,"_path":203},"设计模式","/gists/design-patterns",{"title":205,"_path":206},"Developer Experience","/gists/developer-experience",{"title":208,"_path":209},"Device Metrics","/gists/device-metrix",{"title":211,"_path":212},"数字化转型","/gists/digital-transformation",{"title":214,"_path":215},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":217,"_path":218},"正则表达式","/gists/eegex",{"title":220,"_path":221},"Emoji","/gists/emoji",{"title":223,"_path":224},"工程","/gists/engineering",{"title":226,"_path":227},"熵","/gists/entropy",{"title":229,"_path":230},"Environment","/gists/environment",{"title":232,"_path":233},"Erlang","/gists/erlang",{"title":235,"_path":236},"逃离塔克夫","/gists/escape-from-tarkov",{"title":238,"_path":239},"ESNext (ES6-ES11)","/gists/esnext",{"title":241,"_path":242},"Eval！","/gists/eval",{"title":244,"_path":245},"Flutter","/gists/flutter",{"title":247,"_path":248},"字体","/gists/font",{"title":250,"_path":251},"JS 函数式编程","/gists/functional",{"title":253,"_path":254},"游戏化","/gists/gamification",{"title":256,"_path":257},"Google C++ Standard","/gists/google-cpp-standard",{"title":259,"_path":260},"双向链接完全体","/gists/graph",{"title":262,"_path":263},"Hardwares","/gists/hardwares",{"title":265,"_path":266},"哈希冲突","/gists/hash-collision",{"title":268,"_path":269},"信息设计","/gists/information-design",{"title":271,"_path":272},"InstantPage","/gists/instant.page",{"title":274,"_path":275},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":277,"_path":278},"KVStore","/gists/key-value-db",{"title":280,"_path":281},"Kubernetes","/gists/kubernetes",{"title":283,"_path":284},"Makefile","/gists/makefile",{"title":286,"_path":287},"Markdown Inline Style","/gists/markdown-nice",{"title":289,"_path":290},"小程序","/gists/miniapp",{"title":292,"_path":293},"减小页面快照体积","/gists/minify-html",{"title":295,"_path":296},"mklink","/gists/mklink",{"title":298,"_path":299},"Mock","/gists/mock",{"title":301,"_path":302},"多人协作系统","/gists/multiplayer",{"title":304,"_path":305},"多端应用","/gists/multy-end-app",{"title":307,"_path":308},"神经科学","/gists/neuroscience",{"title":310,"_path":311},"OO","/gists/oo",{"title":313,"_path":314},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":316,"_path":317},"PInvoke","/gists/pinvoke",{"title":319,"_path":320},"像素","/gists/pixel",{"title":322,"_path":323},"PowerShell","/gists/powershell",{"title":325,"_path":326},"量子","/gists/quantum",{"title":328,"_path":329},"保持好奇心","/gists/questions",{"title":331,"_path":332},"React Native","/gists/react-native",{"title":334,"_path":335},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":337,"_path":338},"SEO","/gists/seo",{"title":340,"_path":341},"Shader","/gists/shader",{"title":343,"_path":344},"Shape Up","/gists/shape-up",{"title":346,"_path":347},"睡觉","/gists/sleep",{"title":349,"_path":350},"记录奇怪的问题","/gists/solved",{"title":352,"_path":353},"States","/gists/states",{"title":355,"_path":356},"Storage","/gists/storage",{"title":358,"_path":359},"音视频流处理","/gists/stream-cli",{"title":361,"_path":362},"Symbol","/gists/symbol",{"title":364,"_path":365},"系统论","/gists/systems-theory",{"title":367,"_path":368},"Taro","/gists/taro",{"title":370,"_path":371},"任务切片","/gists/task-slice",{"title":373,"_path":374},"技术偏好","/gists/tech-dudge",{"title":376,"_path":377},"Untitled","/gists/untitled",{"title":379,"_path":380},"可变字体","/gists/variable-font",{"title":382,"_path":383},"视觉错觉","/gists/visual-illusion",{"title":385,"_path":386},"SS(SSR)","/gists/vpn",{"title":388,"_path":389},"VS Code 插件开发","/gists/vscode-plugin",{"title":391,"_path":392},"Web Components","/gists/web-components",{"title":394,"_path":395},"Windows","/gists/windows",{"title":397,"_path":398},"查缺补漏","/gists/wrong",{"title":400,"_path":401,"children":402},"代码笔记 / Gists","/source-code",[403],{"title":404,"_path":401},"🚄 代码笔记",{"title":406,"_path":407,"children":408},"我 / Abount","/hire",[409],{"title":410,"_path":407},"📬 技术简历",{"title":412,"_path":413,"children":414},"todo","/todo",[415],{"title":412,"_path":413},{"_path":417,"_dir":418,"_draft":419,"_partial":420,"_locale":421,"title":422,"description":421,"body":423,"_type":1249,"_id":1250,"_source":1251,"_file":1252,"_stem":1253,"_extension":1254},"/maps/_typescript/typescript","_typescript",false,true,"","TypeScript",{"type":424,"children":425,"toc":1238},"root",[426,434,440,447,453,459,464,800,805,811,816,830,835,841,846,906,913,923,933,959,969,974,980,985,991,996,1016,1022,1032,1037,1048,1057,1062,1067,1075,1080,1088,1096,1101,1109,1114,1122,1127,1142,1150,1155,1166,1171,1180,1188,1196,1201,1206,1211,1222,1227,1232],{"type":427,"tag":428,"props":429,"children":431},"element","h1",{"id":430},"typescript",[432],{"type":433,"value":422},"text",{"type":427,"tag":435,"props":436,"children":438},"h2",{"id":437},"简介",[439],{"type":433,"value":437},{"type":427,"tag":441,"props":442,"children":444},"h4",{"id":443},"如何理解-interface-和-type-的异同",[445],{"type":433,"value":446},"如何理解 Interface 和 Type 的异同",{"type":427,"tag":448,"props":449,"children":450},"p",{},[451],{"type":433,"value":452},"类型（Type）不可以合并，但接口（Interface）可以合并。可以理解为某个函数可以实现多个接口，但是作为变量，它只有一种类型。",{"type":427,"tag":441,"props":454,"children":456},{"id":455},"裸类型是什么",[457],{"type":433,"value":458},"裸类型是什么？",{"type":427,"tag":448,"props":460,"children":461},{},[462],{"type":433,"value":463},"TODO，裸类型在带入运算时会自动展开，非裸类型则不会。",{"type":427,"tag":465,"props":466,"children":470},"pre",{"className":467,"code":468,"language":469,"meta":421,"style":421},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","type WrapNaked\u003CT> = T extends any ? { o: T } : never\ntype WrapUnNaked\u003CT> = { o: T } extends any ? { o: T } : never\n\ntype Foo = WrapNaked\u003Cstring | number | boolean>\n// { o: string } | { o: number } | { o: boolean }\n\ntype Bar = WrapUnNaked\u003Cstring | number | boolean>\n// { o: string | number | boolean }\n","js",[471],{"type":427,"tag":472,"props":473,"children":474},"code",{"__ignoreMap":421},[475,572,661,670,724,734,742,791],{"type":427,"tag":476,"props":477,"children":480},"span",{"class":478,"line":479},"line",1,[481,487,493,499,504,509,515,520,526,532,537,542,548,553,557,562,567],{"type":427,"tag":476,"props":482,"children":484},{"style":483},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[485],{"type":433,"value":486},"type",{"type":427,"tag":476,"props":488,"children":490},{"style":489},"--shiki-light:#E2931D;--shiki-light-text-decoration:inherit;--shiki-default:#6F42C1;--shiki-default-text-decoration:inherit;--shiki-dark:#B392F0;--shiki-dark-text-decoration:inherit;--shiki-sepia:#A6E22E;--shiki-sepia-text-decoration:underline",[491],{"type":433,"value":492}," WrapNaked",{"type":427,"tag":476,"props":494,"children":496},{"style":495},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[497],{"type":433,"value":498},"\u003C",{"type":427,"tag":476,"props":500,"children":501},{"style":489},[502],{"type":433,"value":503},"T",{"type":427,"tag":476,"props":505,"children":506},{"style":495},[507],{"type":433,"value":508},">",{"type":427,"tag":476,"props":510,"children":512},{"style":511},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[513],{"type":433,"value":514}," =",{"type":427,"tag":476,"props":516,"children":517},{"style":489},[518],{"type":433,"value":519}," T",{"type":427,"tag":476,"props":521,"children":523},{"style":522},"--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[524],{"type":433,"value":525}," extends",{"type":427,"tag":476,"props":527,"children":529},{"style":528},"--shiki-light:#E2931D;--shiki-light-font-style:inherit;--shiki-default:#005CC5;--shiki-default-font-style:inherit;--shiki-dark:#79B8FF;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[530],{"type":433,"value":531}," any",{"type":427,"tag":476,"props":533,"children":534},{"style":511},[535],{"type":433,"value":536}," ?",{"type":427,"tag":476,"props":538,"children":539},{"style":495},[540],{"type":433,"value":541}," {",{"type":427,"tag":476,"props":543,"children":545},{"style":544},"--shiki-light:#E53935;--shiki-default:#E36209;--shiki-dark:#FFAB70;--shiki-sepia:#F8F8F2",[546],{"type":433,"value":547}," o",{"type":427,"tag":476,"props":549,"children":550},{"style":511},[551],{"type":433,"value":552},":",{"type":427,"tag":476,"props":554,"children":555},{"style":489},[556],{"type":433,"value":519},{"type":427,"tag":476,"props":558,"children":559},{"style":495},[560],{"type":433,"value":561}," }",{"type":427,"tag":476,"props":563,"children":564},{"style":511},[565],{"type":433,"value":566}," :",{"type":427,"tag":476,"props":568,"children":569},{"style":528},[570],{"type":433,"value":571}," never\n",{"type":427,"tag":476,"props":573,"children":575},{"class":478,"line":574},2,[576,580,585,589,593,597,601,605,609,613,617,621,625,629,633,637,641,645,649,653,657],{"type":427,"tag":476,"props":577,"children":578},{"style":483},[579],{"type":433,"value":486},{"type":427,"tag":476,"props":581,"children":582},{"style":489},[583],{"type":433,"value":584}," WrapUnNaked",{"type":427,"tag":476,"props":586,"children":587},{"style":495},[588],{"type":433,"value":498},{"type":427,"tag":476,"props":590,"children":591},{"style":489},[592],{"type":433,"value":503},{"type":427,"tag":476,"props":594,"children":595},{"style":495},[596],{"type":433,"value":508},{"type":427,"tag":476,"props":598,"children":599},{"style":511},[600],{"type":433,"value":514},{"type":427,"tag":476,"props":602,"children":603},{"style":495},[604],{"type":433,"value":541},{"type":427,"tag":476,"props":606,"children":607},{"style":544},[608],{"type":433,"value":547},{"type":427,"tag":476,"props":610,"children":611},{"style":511},[612],{"type":433,"value":552},{"type":427,"tag":476,"props":614,"children":615},{"style":489},[616],{"type":433,"value":519},{"type":427,"tag":476,"props":618,"children":619},{"style":495},[620],{"type":433,"value":561},{"type":427,"tag":476,"props":622,"children":623},{"style":522},[624],{"type":433,"value":525},{"type":427,"tag":476,"props":626,"children":627},{"style":528},[628],{"type":433,"value":531},{"type":427,"tag":476,"props":630,"children":631},{"style":511},[632],{"type":433,"value":536},{"type":427,"tag":476,"props":634,"children":635},{"style":495},[636],{"type":433,"value":541},{"type":427,"tag":476,"props":638,"children":639},{"style":544},[640],{"type":433,"value":547},{"type":427,"tag":476,"props":642,"children":643},{"style":511},[644],{"type":433,"value":552},{"type":427,"tag":476,"props":646,"children":647},{"style":489},[648],{"type":433,"value":519},{"type":427,"tag":476,"props":650,"children":651},{"style":495},[652],{"type":433,"value":561},{"type":427,"tag":476,"props":654,"children":655},{"style":511},[656],{"type":433,"value":566},{"type":427,"tag":476,"props":658,"children":659},{"style":528},[660],{"type":433,"value":571},{"type":427,"tag":476,"props":662,"children":664},{"class":478,"line":663},3,[665],{"type":427,"tag":476,"props":666,"children":667},{"emptyLinePlaceholder":420},[668],{"type":433,"value":669},"\n",{"type":427,"tag":476,"props":671,"children":673},{"class":478,"line":672},4,[674,678,683,687,691,695,700,705,710,714,719],{"type":427,"tag":476,"props":675,"children":676},{"style":483},[677],{"type":433,"value":486},{"type":427,"tag":476,"props":679,"children":680},{"style":489},[681],{"type":433,"value":682}," Foo",{"type":427,"tag":476,"props":684,"children":685},{"style":511},[686],{"type":433,"value":514},{"type":427,"tag":476,"props":688,"children":689},{"style":489},[690],{"type":433,"value":492},{"type":427,"tag":476,"props":692,"children":693},{"style":495},[694],{"type":433,"value":498},{"type":427,"tag":476,"props":696,"children":697},{"style":528},[698],{"type":433,"value":699},"string",{"type":427,"tag":476,"props":701,"children":702},{"style":511},[703],{"type":433,"value":704}," |",{"type":427,"tag":476,"props":706,"children":707},{"style":528},[708],{"type":433,"value":709}," number",{"type":427,"tag":476,"props":711,"children":712},{"style":511},[713],{"type":433,"value":704},{"type":427,"tag":476,"props":715,"children":716},{"style":528},[717],{"type":433,"value":718}," boolean",{"type":427,"tag":476,"props":720,"children":721},{"style":495},[722],{"type":433,"value":723},">\n",{"type":427,"tag":476,"props":725,"children":727},{"class":478,"line":726},5,[728],{"type":427,"tag":476,"props":729,"children":731},{"style":730},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit",[732],{"type":433,"value":733},"// { o: string } | { o: number } | { o: boolean }\n",{"type":427,"tag":476,"props":735,"children":737},{"class":478,"line":736},6,[738],{"type":427,"tag":476,"props":739,"children":740},{"emptyLinePlaceholder":420},[741],{"type":433,"value":669},{"type":427,"tag":476,"props":743,"children":745},{"class":478,"line":744},7,[746,750,755,759,763,767,771,775,779,783,787],{"type":427,"tag":476,"props":747,"children":748},{"style":483},[749],{"type":433,"value":486},{"type":427,"tag":476,"props":751,"children":752},{"style":489},[753],{"type":433,"value":754}," Bar",{"type":427,"tag":476,"props":756,"children":757},{"style":511},[758],{"type":433,"value":514},{"type":427,"tag":476,"props":760,"children":761},{"style":489},[762],{"type":433,"value":584},{"type":427,"tag":476,"props":764,"children":765},{"style":495},[766],{"type":433,"value":498},{"type":427,"tag":476,"props":768,"children":769},{"style":528},[770],{"type":433,"value":699},{"type":427,"tag":476,"props":772,"children":773},{"style":511},[774],{"type":433,"value":704},{"type":427,"tag":476,"props":776,"children":777},{"style":528},[778],{"type":433,"value":709},{"type":427,"tag":476,"props":780,"children":781},{"style":511},[782],{"type":433,"value":704},{"type":427,"tag":476,"props":784,"children":785},{"style":528},[786],{"type":433,"value":718},{"type":427,"tag":476,"props":788,"children":789},{"style":495},[790],{"type":433,"value":723},{"type":427,"tag":476,"props":792,"children":794},{"class":478,"line":793},8,[795],{"type":427,"tag":476,"props":796,"children":797},{"style":730},[798],{"type":433,"value":799},"// { o: string | number | boolean }\n",{"type":427,"tag":435,"props":801,"children":803},{"id":802},"高级类型",[804],{"type":433,"value":802},{"type":427,"tag":441,"props":806,"children":808},{"id":807},"iterable-和-array-是什么关系",[809],{"type":433,"value":810},"Iterable 和 Array 是什么关系？",{"type":427,"tag":448,"props":812,"children":813},{},[814],{"type":433,"value":815},"实现了 Symbol.iterator 接口的对象都视为是 Iterable 的对象，所以 Array、Map、Set、String、Int32Array 等都是 Iterable 的。",{"type":427,"tag":448,"props":817,"children":818},{},[819,821],{"type":433,"value":820},"见：",{"type":427,"tag":822,"props":823,"children":827},"a",{"href":824,"rel":825},"https://www.typescriptlang.org/docs/handbook/iterators-and-generators.html#iterables",[826],"nofollow",[828],{"type":433,"value":829},"Iterators and Generators",{"type":427,"tag":435,"props":831,"children":833},{"id":832},"应用",[834],{"type":433,"value":832},{"type":427,"tag":441,"props":836,"children":838},{"id":837},"怎么给-window-新增属性",[839],{"type":433,"value":840},"怎么给 Window 新增属性？",{"type":427,"tag":448,"props":842,"children":843},{},[844],{"type":433,"value":845},"同名接口会自动合并，所以写一个新的 Window 对象的接口就好了。",{"type":427,"tag":465,"props":847,"children":849},{"className":467,"code":848,"language":469,"meta":421,"style":421},"declare interface Window {\n  propertyA: string;\n}\n",[850],{"type":427,"tag":472,"props":851,"children":852},{"__ignoreMap":421},[853,876,898],{"type":427,"tag":476,"props":854,"children":855},{"class":478,"line":479},[856,861,866,871],{"type":427,"tag":476,"props":857,"children":858},{"style":522},[859],{"type":433,"value":860},"declare",{"type":427,"tag":476,"props":862,"children":863},{"style":483},[864],{"type":433,"value":865}," interface",{"type":427,"tag":476,"props":867,"children":868},{"style":489},[869],{"type":433,"value":870}," Window",{"type":427,"tag":476,"props":872,"children":873},{"style":495},[874],{"type":433,"value":875}," {\n",{"type":427,"tag":476,"props":877,"children":878},{"class":478,"line":574},[879,884,888,893],{"type":427,"tag":476,"props":880,"children":881},{"style":544},[882],{"type":433,"value":883},"  propertyA",{"type":427,"tag":476,"props":885,"children":886},{"style":511},[887],{"type":433,"value":552},{"type":427,"tag":476,"props":889,"children":890},{"style":528},[891],{"type":433,"value":892}," string",{"type":427,"tag":476,"props":894,"children":895},{"style":495},[896],{"type":433,"value":897},";\n",{"type":427,"tag":476,"props":899,"children":900},{"class":478,"line":663},[901],{"type":427,"tag":476,"props":902,"children":903},{"style":495},[904],{"type":433,"value":905},"}\n",{"type":427,"tag":907,"props":908,"children":910},"h3",{"id":909},"links",[911],{"type":433,"value":912},"Links",{"type":427,"tag":448,"props":914,"children":915},{},[916],{"type":427,"tag":822,"props":917,"children":920},{"href":918,"rel":919},"https://www.typescriptlang.org/play?#code/C4TwDgpgBAggjFAvFA3lCAPCBjGAKASgC4oAhBAXwChRIyFk1MdTCT4pqqAbCYKAIbsGqKlHRZcUNvVHjxAJz4BXBQDs588c2ylpBTVsUr1UYAAsAlgGdBt5WoDWagPYB3DQNvwxR6lv9OKi4AehCoAHkAaQAaM3AIFwAzQSgbWDgqASRBKjCoAAFgawBaTEhsYDKFBRcFKAAjHAFla2hsgBMIJMs1CA67KGtgAWBLbHi6H2zkAQA6HXwCPPDouNpElIa023IePkac+cXCKjPz-f4wbmUAc17bRkESAHIBF6CNqAAFG-u1R6TTZQa53B5nJIOSqWFwaW4QNQAHgAKgA+PDXW7WEjIgwoXxKYCqDT4rSY6wxXzaSSIgCq6IECixJFpeKp8kJxKg8KRyIAZPS8KSjOI5mLyZSRaKxYysezxBRlgFfNQuLx+AIAEw5HkYv4PZZao6arKaubkuYCU3GhaSIUNIgvBovRUrQrFMoYCpVCA1Oo-WqQBSgKBOj4dFwQWyufiYGz8WFA0NoIRDYAKXq3ADcnBec1N5u4WLmDUujW1szNOiF2Ed2Bdy3y0SoDTNFuwZy+AFkBI4ICjUTlheScZKJDg6QymdioKySD2+yiBajgmd1YIAMzz3v935ggGD5C60H-ayGjdHDdZDeF4tWgQX2Y36soB1h135Iqlco4H1++rfIGvohmGUARlGUAxhI8ZQImXwvCmJDDBmajZrm+YPre1glmWAgACyXraOA1nWDZus2+FYXMHZAA",[826],[921],{"type":433,"value":922},"TODO，伪动态类型",{"type":427,"tag":448,"props":924,"children":925},{},[926],{"type":427,"tag":822,"props":927,"children":930},{"href":928,"rel":929},"https://zhuanlan.zhihu.com/p/104565681",[826],[931],{"type":433,"value":932},"TODO，详解 TypeScript 里的 This",{"type":427,"tag":448,"props":934,"children":935},{},[936],{"type":427,"tag":822,"props":937,"children":940},{"href":938,"rel":939},"https://stackoverflow.com/questions/69635559/in-typescript-why-is-boolean-string-different-from-boolean-string/69653332#69653332",[826],[941,943,949,951,957],{"type":433,"value":942},"TODO，In typescript, why is ",{"type":427,"tag":472,"props":944,"children":946},{"className":945},[],[947],{"type":433,"value":948},"[boolean, string?]",{"type":433,"value":950}," different from ",{"type":427,"tag":472,"props":952,"children":954},{"className":953},[],[955],{"type":433,"value":956},"[boolean, string] | [boolean]",{"type":433,"value":958},"?",{"type":427,"tag":448,"props":960,"children":961},{},[962],{"type":427,"tag":822,"props":963,"children":966},{"href":964,"rel":965},"https://stackoverflow.com/questions/56346520/typescript-error-type-number-is-not-assignable-to-type-0-1-2-why-am",[826],[967],{"type":433,"value":968},"TODO，TypeScript error: \"Type 'number' is not assignable to type '0 | 1 | 2' \". Why am I getting this error?",{"type":427,"tag":435,"props":970,"children":972},{"id":971},"类型体操",[973],{"type":433,"value":971},{"type":427,"tag":441,"props":975,"children":977},{"id":976},"什么是类型体操",[978],{"type":433,"value":979},"什么是类型体操？",{"type":427,"tag":448,"props":981,"children":982},{},[983],{"type":433,"value":984},"TypeScript 的类型系统是图灵完备的，这意味着能用 JavaScript 解决的问题，用 TypeScript 的类型系统同样能解决，只是实现方式不一样。尽管完成某种“实现”的方式可能非常复杂，但人们就像玩玩具一样喜欢玩它，或是把它看作某种脑力运动。充满技巧，有乐趣，复杂，又花里胡哨，所以是体操咯。",{"type":427,"tag":441,"props":986,"children":988},{"id":987},"什么是图灵完备",[989],{"type":433,"value":990},"什么是图灵完备？",{"type":427,"tag":448,"props":992,"children":993},{},[994],{"type":433,"value":995},"图灵完备通常指一门编程语言，这意味着这门语言能完成所有图灵机能做的工作。图灵机简单来说，是一个带有无限长度纸带的机器，纸带上有规律组成的 0 和 1，而图灵机通过读写纸带，就可以模拟任何可以实现的计算。",{"type":427,"tag":448,"props":997,"children":998},{},[999,1000,1007,1009],{"type":433,"value":820},{"type":427,"tag":822,"props":1001,"children":1004},{"href":1002,"rel":1003},"https://www.bilibili.com/video/BV18L4y15786/",[826],[1005],{"type":433,"value":1006},"什么是图灵完备 @bili",{"type":433,"value":1008},"，",{"type":427,"tag":822,"props":1010,"children":1013},{"href":1011,"rel":1012},"https://www.zhihu.com/question/20115374",[826],[1014],{"type":433,"value":1015},"TODO，什么是图灵完备 @zhihu",{"type":427,"tag":441,"props":1017,"children":1019},{"id":1018},"memo",[1020],{"type":433,"value":1021},"Memo",{"type":427,"tag":448,"props":1023,"children":1024},{},[1025,1026],{"type":433,"value":820},{"type":427,"tag":822,"props":1027,"children":1029},{"href":1028},"/maps/_typescript/type-gymnastics",[1030],{"type":433,"value":1031},"TODO，类型体操",{"type":427,"tag":435,"props":1033,"children":1035},{"id":1034},"经验",[1036],{"type":433,"value":1034},{"type":427,"tag":441,"props":1038,"children":1040},{"id":1039},"大规模采用-typescript-之后的-10-个见解",[1041],{"type":427,"tag":822,"props":1042,"children":1045},{"href":1043,"rel":1044},"https://blog.csdn.net/yeluoxiang/article/details/111602386",[826],[1046],{"type":433,"value":1047},"大规模采用 TypeScript 之后的 10 个见解",{"type":427,"tag":448,"props":1049,"children":1050},{},[1051],{"type":427,"tag":1052,"props":1053,"children":1054},"q",{},[1055],{"type":433,"value":1056},"尽管 TypeScript Design Goals 明确表示了避免在未来引入更多的运行时特征，但在发展过程中，TS 扩展了一小部分不太适合 TS = JS + Types 这个模型的功能，enum, namespace, parameter properties 以及 experimental decorators 都需要有将他们扩展为运行时代码的语义，而 JavaScript 引擎很可能永远都不会为这些功能提供支持。",{"type":427,"tag":448,"props":1058,"children":1059},{},[1060],{"type":433,"value":1061},"彭博社有专门的工具阻止使用这些不良设计，他们希望自己的代码一直和 ES 标准保持统一。",{"type":427,"tag":448,"props":1063,"children":1064},{},[1065],{"type":433,"value":1066},"编译器更新其实值得，带来的兼容性只有两点：一是新的类型检查会暴露过去没有发现的错误，二是在同一个生态系统中如果各个项目使用不同版本的编译器，可能产物不通用。",{"type":427,"tag":448,"props":1068,"children":1069},{},[1070],{"type":427,"tag":1052,"props":1071,"children":1072},{},[1073],{"type":433,"value":1074},"保持一致的 tsconfig 设置是非常重要的，但最终我们放弃了严格模式，选择牺牲灵活性来保持所有项目配置的一致性。",{"type":427,"tag":448,"props":1076,"children":1077},{},[1078],{"type":433,"value":1079},"当设计以 tsconfig.a.json 配置编译的代码被配置了 tsconfig.b.json 的工具引用后就可能出问题。",{"type":427,"tag":448,"props":1081,"children":1082},{},[1083],{"type":427,"tag":1052,"props":1084,"children":1085},{},[1086],{"type":433,"value":1087},"Ambient Modules 特别之处在于，TypeScript 在发表声明时保持对修饰符的引用，从而避免将它们转化为相对路径。",{"type":427,"tag":448,"props":1089,"children":1090},{},[1091],{"type":427,"tag":1052,"props":1092,"children":1093},{},[1094],{"type":433,"value":1095},"我们的平台会确保在运行时中每个包只有一个版本的存在。我们希望对类型提供一种 “精确且唯一” 的定义，更好的反应运行时环境。",{"type":427,"tag":448,"props":1097,"children":1098},{},[1099],{"type":433,"value":1100},"不可能实现。",{"type":427,"tag":448,"props":1102,"children":1103},{},[1104],{"type":427,"tag":1052,"props":1105,"children":1106},{},[1107],{"type":433,"value":1108},"TypeScript 仍无法知晓它生成的文件中是否存在不安全的导入",{"type":427,"tag":448,"props":1110,"children":1111},{},[1112],{"type":433,"value":1113},"因为从某个库的私有包中引入类型是不安全的，这种引入不受库接口的兼容性限制。",{"type":427,"tag":448,"props":1115,"children":1116},{},[1117],{"type":427,"tag":1052,"props":1118,"children":1119},{},[1120],{"type":433,"value":1121},"有时 TypeScript 会将依赖中的类型内联传递给当前的类型。我们见过一些极端的例子，由于这些重复的类型定义，声明文件的大小从 7KB 膨胀到了 700KB。",{"type":427,"tag":448,"props":1123,"children":1124},{},[1125],{"type":433,"value":1126},"如何防止类型内联：",{"type":427,"tag":1128,"props":1129,"children":1130},"ul",{},[1131,1137],{"type":427,"tag":1132,"props":1133,"children":1134},"li",{},[1135],{"type":433,"value":1136},"使用 interface 代替 type。",{"type":427,"tag":1132,"props":1138,"children":1139},{},[1140],{"type":433,"value":1141},"对输出添加类型注释，显式类型注释可以强制指定引用的行为，防止内联",{"type":427,"tag":448,"props":1143,"children":1144},{},[1145],{"type":427,"tag":1052,"props":1146,"children":1147},{},[1148],{"type":433,"value":1149},"Type Shaking 有时会效果极为显著。我们曾经遇到过一些包中超过 90% 文件中有超过 90% 的类型定义行是可以去掉的。",{"type":427,"tag":435,"props":1151,"children":1153},{"id":1152},"反对",[1154],{"type":433,"value":1152},{"type":427,"tag":441,"props":1156,"children":1158},{"id":1157},"typescript-不值得前端框架-svelte-作者宣布重构代码反向迁移到-javascript-引争议",[1159],{"type":427,"tag":822,"props":1160,"children":1163},{"href":1161,"rel":1162},"https://mp.weixin.qq.com/s?src=11&timestamp=1685334730&ver=4557&signature=YHLVy3Pb0b4pKL4-x5Qn7MHu71CQCnJfE04W3iJTm1pQ0X-LgQ6kLfW9TMnfXmTHvmM1YN-xRsFsuAlSKCePE-Goat-MdhOzQqvIVcMl6kPLpJ10vTrrRmwQRZljDCoD&new=1",[826],[1164],{"type":433,"value":1165},"“TypeScript 不值得！”前端框架 Svelte 作者宣布重构代码，反向迁移到 JavaScript 引争议",{"type":427,"tag":448,"props":1167,"children":1168},{},[1169],{"type":433,"value":1170},"2023 年 5 月 9 日，Svelte 团队发布 TS to JSDoc Conversion 的 PR，讨论点在 JSDoc 对类型开发的友好程度不如 TS。作者 Rich Harris 表示原因比较复杂。",{"type":427,"tag":448,"props":1172,"children":1173},{},[1174],{"type":427,"tag":1175,"props":1176,"children":1179},"img",{"alt":1177,"src":1178},"原因","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20230529124336.png",[],{"type":427,"tag":448,"props":1181,"children":1182},{},[1183],{"type":427,"tag":1052,"props":1184,"children":1185},{},[1186],{"type":433,"value":1187},"团队在 Sveltekit 中尝试这么做并取得了良好效果，所以想在  Svelte 4.0 也这么做。",{"type":427,"tag":448,"props":1189,"children":1190},{},[1191],{"type":427,"tag":1052,"props":1192,"children":1193},{},[1194],{"type":433,"value":1195},"“这就没必要了，因为在构建应用程序的过程中，大家无论如何都需要构建的步骤。应用开发的重点在于优化代码、控制它的体量，并把一切都捆绑起来。但如果是想构建一个库，那我强烈建议改用 JSDoc。”",{"type":427,"tag":448,"props":1197,"children":1198},{},[1199],{"type":433,"value":1200},"如果是构建应用程序，没必要转向 JSDoc。",{"type":427,"tag":448,"props":1202,"children":1203},{},[1204],{"type":433,"value":1205},"对 Svelte 而言，框架本身没有放弃类型安全；对开发者而言，能降低贡献门槛；对用户而言，代码直接指向源码方便调试，也助于能减小代码体积。",{"type":427,"tag":435,"props":1207,"children":1209},{"id":1208},"项目设置",[1210],{"type":433,"value":1208},{"type":427,"tag":441,"props":1212,"children":1214},{"id":1213},"isolatedmodules",[1215],{"type":427,"tag":822,"props":1216,"children":1219},{"href":1217,"rel":1218},"https://www.typescriptlang.org/tsconfig#isolatedModules",[826],[1220],{"type":433,"value":1221},"isolatedModules",{"type":427,"tag":448,"props":1223,"children":1224},{},[1225],{"type":433,"value":1226},"许多编译工具如 Babel 不支持在“一个系统层面”角度理解类型。所以需要开启 isolatedModules。开启后，TS 会将每一个 TS 文件都视为独立的 Module，这需要项目使用 ES Module 语法，但同时，TS 会带来更严格的类型检测支持。",{"type":427,"tag":448,"props":1228,"children":1229},{},[1230],{"type":433,"value":1231},"在 vite-based 项目中，这个选项应该且默认打开。",{"type":427,"tag":1233,"props":1234,"children":1235},"style",{},[1236],{"type":433,"value":1237},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":421,"searchDepth":574,"depth":574,"links":1239},[1240,1241,1242,1245,1246,1247,1248],{"id":437,"depth":574,"text":437},{"id":802,"depth":574,"text":802},{"id":832,"depth":574,"text":832,"children":1243},[1244],{"id":909,"depth":663,"text":912},{"id":971,"depth":574,"text":971},{"id":1034,"depth":574,"text":1034},{"id":1152,"depth":574,"text":1152},{"id":1208,"depth":574,"text":1208},"markdown","content:6.maps:_typescript:typescript.md","content","6.maps/_typescript/typescript.md","6.maps/_typescript/typescript","md",[1256,1258],{"_path":1028,"title":1257,"description":421},"类型体操（Type Gymnastics）",{"_path":1259,"title":1260,"description":421},"/maps/_web/browser/browser","浏览器相关",1736962910771]