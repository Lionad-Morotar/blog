[{"data":1,"prerenderedAt":332},["ShallowReactive",2],{"navigation":3,"/maps/_games/escape-from-tarkov":161,"/maps/_games/escape-from-tarkov-surround":323},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":317,"_id":318,"_source":319,"_file":320,"_stem":321,"_extension":322},"/maps/_games/escape-from-tarkov","_games",false,true,"","逃离塔克夫","逃离塔克夫是一款由俄罗斯游戏公司 BattleState Games 开发的第一人称射击游戏。",{"type":170,"children":171,"toc":312},"root",[172,181,187,193,198,203,208,213,218,223,228,273,278,283,288,293],{"type":173,"tag":174,"props":175,"children":177},"element","h2",{"id":176},"护甲穿透机制",[178],{"type":179,"value":180},"text","护甲&穿透机制",{"type":173,"tag":182,"props":183,"children":184},"p",{},[185],{"type":179,"value":186},"伤害的成因非常复杂，但可以按照数据和公式推导出概率。一些非常繁琐的细节我会忽略，这里着重介绍：碰撞检测、跳蛋、穿透、耐久、碎蛋。",{"type":173,"tag":188,"props":189,"children":191},"h4",{"id":190},"碰撞检测",[192],{"type":179,"value":190},{"type":173,"tag":182,"props":194,"children":195},{},[196],{"type":179,"value":197},"首先要理清的是，护甲的形状并不是真实的碰撞检测形状——这几乎在所有竞技 FPS 中是通用的法则——所以有些带护手的甲连手掌都能防。很离谱。不过这也不算坏消息，有些玩家可能宁愿买不带护手的甲来提高机动性。同时，击中手部位造成的伤害并不致命，所以把甲的耐久点数留给更重要的胸口部位也许反而更加明智。",{"type":173,"tag":188,"props":199,"children":201},{"id":200},"跳蛋",[202],{"type":179,"value":200},{"type":173,"tag":182,"props":204,"children":205},{},[206],{"type":179,"value":207},"只有头盔（和面罩）有跳蛋机制：当子弹以特定角度击中头盔时，根据头盔跳蛋概率和子弹的跳蛋概率一起计算出此次命中是否跳蛋。",{"type":173,"tag":188,"props":209,"children":211},{"id":210},"穿透",[212],{"type":179,"value":210},{"type":173,"tag":182,"props":214,"children":215},{},[216],{"type":179,"value":217},"只有与护甲相比同等级或更高等级的子弹才能对其造成有效击穿。六种等级的护甲其等级可以约等于其等级乘 10。这个数据并不精确，但很方便用于估算第一发子弹的击穿概率。比方说，要第一发子弹就大概率击穿满耐久的五级护甲，需要 50 穿透力的子弹。如果没有穿透护甲，护甲只减少 1 点耐久，并且依子弹和护甲的不同种类，身体会受到轻微冲击伤害。如果穿透，越高等级的护甲（以及越高耐久）越能减免此次伤害：可以简单记住满耐久护甲能减免 25% 的同等级子弹的伤害。",{"type":173,"tag":188,"props":219,"children":221},{"id":220},"耐久",[222],{"type":179,"value":220},{"type":173,"tag":182,"props":224,"children":225},{},[226],{"type":179,"value":227},"护甲的耐久和材料相关，受“毁伤系数”影响，所以不能只看纸面点数。比如玻璃的毁伤系数是 0.8，这意味着伤害为 50，对护甲伤害为 40% 的子弹穿透玻璃后，会对其造成 $40% * 50 * 0.8 = 16$ 点伤害。材料的毁伤系数如下：",{"type":173,"tag":229,"props":230,"children":231},"ul",{},[232,238,243,248,253,258,263,268],{"type":173,"tag":233,"props":234,"children":235},"li",{},[236],{"type":179,"value":237},"Aramid（凯夫拉）：0.25",{"type":173,"tag":233,"props":239,"children":240},{},[241],{"type":179,"value":242},"UHMWPE（超聚乙烯）：0.45",{"type":173,"tag":233,"props":244,"children":245},{},[246],{"type":179,"value":247},"Titan（钛）：0.55",{"type":173,"tag":233,"props":249,"children":250},{},[251],{"type":179,"value":252},"Aluminium（铝）：0.6",{"type":173,"tag":233,"props":254,"children":255},{},[256],{"type":179,"value":257},"Combine Materials（复合材料）： 0.5",{"type":173,"tag":233,"props":259,"children":260},{},[261],{"type":179,"value":262},"Steel（铁）：0.7",{"type":173,"tag":233,"props":264,"children":265},{},[266],{"type":179,"value":267},"Ceramic（陶瓷）：0.8",{"type":173,"tag":233,"props":269,"children":270},{},[271],{"type":179,"value":272},"Glass（玻璃纤维）：0.8",{"type":173,"tag":188,"props":274,"children":276},{"id":275},"碎蛋",[277],{"type":179,"value":275},{"type":173,"tag":182,"props":279,"children":280},{},[281],{"type":179,"value":282},"子弹击中目标后，无论穿透与否，都依据其碎蛋率，分裂出数个弹头。这些弹头的穿透性和伤害等于原子弹的穿透和伤害总数的 50% 再平分。碎蛋的方向不定，所以可能对身体多个区域造成额外伤害。此外，每个弹头对护甲的耐久损耗都至少是 1——这个散弹的子弹计算耐久损耗是一致的。",{"type":173,"tag":182,"props":284,"children":285},{},[286],{"type":179,"value":287},"子弹的碎蛋率不能仅看 WIKI 的纸面数据。游戏中目前有个严重的 BUG，低于 29 穿透力的子弹不会碎蛋。",{"type":173,"tag":174,"props":289,"children":291},{"id":290},"相关阅读",[292],{"type":179,"value":290},{"type":173,"tag":229,"props":294,"children":295},{},[296],{"type":173,"tag":233,"props":297,"children":298},{},[299],{"type":173,"tag":300,"props":301,"children":305},"a",{"href":302,"rel":303},"https://tarkovaftermidnight.wordpress.com/",[304],"nofollow",[306],{"type":173,"tag":307,"props":308,"children":309},"i",{},[310],{"type":179,"value":311},"Armor, Penetration, and Damage",{"title":166,"searchDepth":313,"depth":313,"links":314},2,[315,316],{"id":176,"depth":313,"text":180},{"id":290,"depth":313,"text":290},"markdown","content:6.maps:_games:escape-from-tarkov.md","content","6.maps/_games/escape-from-tarkov.md","6.maps/_games/escape-from-tarkov","md",[324,328],{"_path":325,"title":326,"description":327},"/maps/_game/game","游戏","游戏开发、游戏设计、游戏行业等",{"_path":329,"title":330,"description":331},"/maps/_hardware/hardware","硬件","硬件是指计算机的物理部分，包括 CPU、内存、硬盘、显卡等。",1750854650227]