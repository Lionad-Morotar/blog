[{"data":1,"prerenderedAt":334},["ShallowReactive",2],{"navigation":3,"/maps/_web/crawler":158,"/maps/_web/crawler-surround":325},[4,35,89,95,122,128,152],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🌪️ tailwind4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":45,"_path":46},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":48,"_path":49},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":51,"_path":52},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":54,"_path":55},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":57,"_path":58},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":60,"_path":61},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":63,"_path":64},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":66,"_path":67},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":69,"_path":70},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":72,"_path":73},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":75,"_path":76},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":78,"_path":79},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":81,"_path":82},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":84,"_path":85},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":87,"_path":88},"📝 技术博客归档","/articles/archive",{"title":90,"_path":91,"children":92},"读书笔记 / Notes","/books",[93],{"title":94,"_path":91},"📕 读书笔记",{"title":96,"_path":97,"children":98},"吉他剧场 / Music","/music",[99,101,104,107,110,113,116,119],{"title":100,"_path":97},"🎸 FingerStyle！",{"title":102,"_path":103},"🌬️ 等待的风","/music/wind",{"title":105,"_path":106},"💕 约定的海洋","/music/ocean",{"title":108,"_path":109},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":111,"_path":112},"🌏 残酷天使的行动纲领","/music/eva",{"title":114,"_path":115},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":117,"_path":118},"🍷 Wu Wei","/music/wu-wei",{"title":120,"_path":121},"🌅 无题","/music/untitled",{"title":123,"_path":124,"children":125},"知识地图 / Maps","/maps",[126],{"title":127,"_path":124},"🏁 知识地图",{"title":129,"_path":130,"children":131},"造物 / Make","/tools",[132,134,137,140,143,146,149],{"title":133,"_path":130},"🧰 工具收集",{"title":135,"_path":136},"📕 博客","/tools/blog",{"title":138,"_path":139},"🥥 Coconut","/tools/coconut",{"title":141,"_path":142},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":144,"_path":145},"🌐 AnySort","/tools/anysort",{"title":147,"_path":148},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":150,"_path":151},"👓 Crapto","/tools/crypto-inline",{"title":153,"_path":154,"children":155},"我 / About","/hire",[156],{"title":157,"_path":154},"📬 技术简历",{"_path":159,"_dir":160,"_draft":161,"_partial":162,"_locale":163,"title":164,"description":165,"body":166,"_type":319,"_id":320,"_source":321,"_file":322,"_stem":323,"_extension":324},"/maps/_web/crawler","_web",false,true,"","爬虫与反爬虫","网络爬虫技术指南，包含常见反爬虫策略分析、多线程爬虫设计、增量爬取实现以及性能优化等实践经验。",{"type":167,"children":168,"toc":313},"root",[169,177,184,190,195,201,206,212,217,223,228,234,239,253,259,264,270,275,280,297,303],{"type":170,"tag":171,"props":172,"children":174},"element","h2",{"id":173},"技术问题",[175],{"type":176,"value":173},"text",{"type":170,"tag":178,"props":179,"children":181},"h4",{"id":180},"有哪些常见的反爬虫策略",[182],{"type":176,"value":183},"有哪些常见的反爬虫策略？",{"type":170,"tag":185,"props":186,"children":187},"p",{},[188],{"type":176,"value":189},"前端主要从 HTML、CSS、JS 的角度去考虑。HTML 和 CSS 的策略较简单，比如 iframe 延迟加载、隐形内容、background 偏移、字体重映射等。JS 加密一般会用于价值较高的项目。服务器端可以分主动防御和被动防御两项，指纹、蜜罐、无头浏览器校验、UA、IP、robots.txt 等等。",{"type":170,"tag":185,"props":191,"children":192},{},[193],{"type":176,"value":194},"通过对规则进行组合可以设计出更严格的的反爬策略，如：先访问某图片才能访问某 URL，否则被计分。",{"type":170,"tag":178,"props":196,"children":198},{"id":197},"js-加密如何破解",[199],{"type":176,"value":200},"JS 加密如何破解？",{"type":170,"tag":185,"props":202,"children":203},{},[204],{"type":176,"value":205},"主要依靠调试，找到加解密的关键 JS 函数。",{"type":170,"tag":178,"props":207,"children":209},{"id":208},"多进程协程多线程如何选择",[210],{"type":176,"value":211},"多进程、协程、多线程如何选择？",{"type":170,"tag":185,"props":213,"children":214},{},[215],{"type":176,"value":216},"爬虫在抓取阶段时是网络密集的，解析数据阶段是 CPU 密集的，写入数据阶段是 IO 密集的。由于大部分开销都花费在了抓取阶段，所以宜选择多线程或协程的方式写爬虫程序。更好的方式可能是非阻塞 IO（异步 IO）。",{"type":170,"tag":178,"props":218,"children":220},{"id":219},"增量爬取是怎么设计的",[221],{"type":176,"value":222},"增量爬取是怎么设计的？",{"type":170,"tag":185,"props":224,"children":225},{},[226],{"type":176,"value":227},"通过网址管理器管理每个 URL 的状态。它维护了如 URL 是否被下载完、下载失败次数、子页面等数据，并能根据需求返回仍未被抓取的页面 URL。",{"type":170,"tag":178,"props":229,"children":231},{"id":230},"如何判断页面的相似性",[232],{"type":176,"value":233},"如何判断页面的相似性？",{"type":170,"tag":185,"props":235,"children":236},{},[237],{"type":176,"value":238},"使用 Google 的 SmithHash 算法。",{"type":170,"tag":185,"props":240,"children":241},{},[242,244],{"type":176,"value":243},"见：",{"type":170,"tag":245,"props":246,"children":250},"a",{"href":247,"rel":248},"https://www.likecs.com/show-204424165.html",[249],"nofollow",[251],{"type":176,"value":252},"SimHash 算法原理",{"type":170,"tag":178,"props":254,"children":256},{"id":255},"架构技巧",[257],{"type":176,"value":258},"架构技巧？",{"type":170,"tag":185,"props":260,"children":261},{},[262],{"type":176,"value":263},"爬虫分为抓取、解析和写入三个阶段，所以可以拆分为抓取写入以及读取解析两个程序，分别部署，提高应用以及维护的效率。",{"type":170,"tag":178,"props":265,"children":267},{"id":266},"如何测试网站的抓取极限",[268],{"type":176,"value":269},"如何测试网站的抓取极限？",{"type":170,"tag":185,"props":271,"children":272},{},[273],{"type":176,"value":274},"如果测试每分钟抓 100 次被封了，那么很可能在 80 次就上了监控，所以可以把频次控制在 40 次左右，防止别人的爬虫触发了目标站的反爬虫限制（如 80 次上监控进化为 60 次）。",{"type":170,"tag":171,"props":276,"children":278},{"id":277},"调试工具",[279],{"type":176,"value":277},{"type":170,"tag":281,"props":282,"children":283},"ul",{},[284],{"type":170,"tag":285,"props":286,"children":287},"li",{},[288,295],{"type":170,"tag":245,"props":289,"children":292},{"href":290,"rel":291},"https://github.com/adriancooney/puppeteer-heap-snapshot",[249],[293],{"type":176,"value":294},"puppeteer-heap-snapshot",{"type":176,"value":296},"，根据属性的名字遍历堆内存，查找有这些属性的对象。",{"type":170,"tag":171,"props":298,"children":300},{"id":299},"links",[301],{"type":176,"value":302},"Links",{"type":170,"tag":185,"props":304,"children":305},{},[306],{"type":170,"tag":245,"props":307,"children":310},{"href":308,"rel":309},"https://www.yuanrenxue.com/crawler/why-write-python-crawler.html",[249],[311],{"type":176,"value":312},"TODO，猿人学爬虫教程",{"title":163,"searchDepth":314,"depth":314,"links":315},2,[316,317,318],{"id":173,"depth":314,"text":173},{"id":277,"depth":314,"text":277},{"id":299,"depth":314,"text":302},"markdown","content:6.maps:_web:crawler.md","content","6.maps/_web/crawler.md","6.maps/_web/crawler","md",[326,330],{"_path":327,"title":328,"description":329},"/maps/_web/browser/router","路由技术","Web 前端路由技术详解，包含 Hash 路由、History 路由的实现原理与最佳实践。",{"_path":331,"title":332,"description":333},"/maps/_web/miniapp","小程序","微信小程序开发指南，包含双线程模型、Exparser 组件框架、分包异步化等技术原理和最佳实践。",1742808187909]