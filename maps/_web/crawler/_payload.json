[{"data":1,"prerenderedAt":337},["ShallowReactive",2],{"navigation":3,"/maps/_web/crawler":161,"/maps/_web/crawler-surround":328},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":322,"_id":323,"_source":324,"_file":325,"_stem":326,"_extension":327},"/maps/_web/crawler","_web",false,true,"","爬虫与反爬虫","网络爬虫技术指南，包含常见反爬虫策略分析、多线程爬虫设计、增量爬取实现以及性能优化等实践经验。",{"type":170,"children":171,"toc":316},"root",[172,180,187,193,198,204,209,215,220,226,231,237,242,256,262,267,273,278,283,300,306],{"type":173,"tag":174,"props":175,"children":177},"element","h2",{"id":176},"技术问题",[178],{"type":179,"value":176},"text",{"type":173,"tag":181,"props":182,"children":184},"h4",{"id":183},"有哪些常见的反爬虫策略",[185],{"type":179,"value":186},"有哪些常见的反爬虫策略？",{"type":173,"tag":188,"props":189,"children":190},"p",{},[191],{"type":179,"value":192},"前端主要从 HTML、CSS、JS 的角度去考虑。HTML 和 CSS 的策略较简单，比如 iframe 延迟加载、隐形内容、background 偏移、字体重映射等。JS 加密一般会用于价值较高的项目。服务器端可以分主动防御和被动防御两项，指纹、蜜罐、无头浏览器校验、UA、IP、robots.txt 等等。",{"type":173,"tag":188,"props":194,"children":195},{},[196],{"type":179,"value":197},"通过对规则进行组合可以设计出更严格的的反爬策略，如：先访问某图片才能访问某 URL，否则被计分。",{"type":173,"tag":181,"props":199,"children":201},{"id":200},"js-加密如何破解",[202],{"type":179,"value":203},"JS 加密如何破解？",{"type":173,"tag":188,"props":205,"children":206},{},[207],{"type":179,"value":208},"主要依靠调试，找到加解密的关键 JS 函数。",{"type":173,"tag":181,"props":210,"children":212},{"id":211},"多进程协程多线程如何选择",[213],{"type":179,"value":214},"多进程、协程、多线程如何选择？",{"type":173,"tag":188,"props":216,"children":217},{},[218],{"type":179,"value":219},"爬虫在抓取阶段时是网络密集的，解析数据阶段是 CPU 密集的，写入数据阶段是 IO 密集的。由于大部分开销都花费在了抓取阶段，所以宜选择多线程或协程的方式写爬虫程序。更好的方式可能是非阻塞 IO（异步 IO）。",{"type":173,"tag":181,"props":221,"children":223},{"id":222},"增量爬取是怎么设计的",[224],{"type":179,"value":225},"增量爬取是怎么设计的？",{"type":173,"tag":188,"props":227,"children":228},{},[229],{"type":179,"value":230},"通过网址管理器管理每个 URL 的状态。它维护了如 URL 是否被下载完、下载失败次数、子页面等数据，并能根据需求返回仍未被抓取的页面 URL。",{"type":173,"tag":181,"props":232,"children":234},{"id":233},"如何判断页面的相似性",[235],{"type":179,"value":236},"如何判断页面的相似性？",{"type":173,"tag":188,"props":238,"children":239},{},[240],{"type":179,"value":241},"使用 Google 的 SmithHash 算法。",{"type":173,"tag":188,"props":243,"children":244},{},[245,247],{"type":179,"value":246},"见：",{"type":173,"tag":248,"props":249,"children":253},"a",{"href":250,"rel":251},"https://www.likecs.com/show-204424165.html",[252],"nofollow",[254],{"type":179,"value":255},"SimHash 算法原理",{"type":173,"tag":181,"props":257,"children":259},{"id":258},"架构技巧",[260],{"type":179,"value":261},"架构技巧？",{"type":173,"tag":188,"props":263,"children":264},{},[265],{"type":179,"value":266},"爬虫分为抓取、解析和写入三个阶段，所以可以拆分为抓取写入以及读取解析两个程序，分别部署，提高应用以及维护的效率。",{"type":173,"tag":181,"props":268,"children":270},{"id":269},"如何测试网站的抓取极限",[271],{"type":179,"value":272},"如何测试网站的抓取极限？",{"type":173,"tag":188,"props":274,"children":275},{},[276],{"type":179,"value":277},"如果测试每分钟抓 100 次被封了，那么很可能在 80 次就上了监控，所以可以把频次控制在 40 次左右，防止别人的爬虫触发了目标站的反爬虫限制（如 80 次上监控进化为 60 次）。",{"type":173,"tag":174,"props":279,"children":281},{"id":280},"调试工具",[282],{"type":179,"value":280},{"type":173,"tag":284,"props":285,"children":286},"ul",{},[287],{"type":173,"tag":288,"props":289,"children":290},"li",{},[291,298],{"type":173,"tag":248,"props":292,"children":295},{"href":293,"rel":294},"https://github.com/adriancooney/puppeteer-heap-snapshot",[252],[296],{"type":179,"value":297},"puppeteer-heap-snapshot",{"type":179,"value":299},"，根据属性的名字遍历堆内存，查找有这些属性的对象。",{"type":173,"tag":174,"props":301,"children":303},{"id":302},"links",[304],{"type":179,"value":305},"Links",{"type":173,"tag":188,"props":307,"children":308},{},[309],{"type":173,"tag":248,"props":310,"children":313},{"href":311,"rel":312},"https://www.yuanrenxue.com/crawler/why-write-python-crawler.html",[252],[314],{"type":179,"value":315},"TODO，猿人学爬虫教程",{"title":166,"searchDepth":317,"depth":317,"links":318},2,[319,320,321],{"id":176,"depth":317,"text":176},{"id":280,"depth":317,"text":280},{"id":302,"depth":317,"text":305},"markdown","content:6.maps:_web:crawler.md","content","6.maps/_web/crawler.md","6.maps/_web/crawler","md",[329,333],{"_path":330,"title":331,"description":332},"/maps/_web/browser/router","路由技术","Web 前端路由技术详解，包含 Hash 路由、History 路由的实现原理与最佳实践。",{"_path":334,"title":335,"description":336},"/maps/_web/miniapp","小程序","微信小程序开发指南，包含双线程模型、Exparser 组件框架、分包异步化等技术原理和最佳实践。",1750854646209]