[{"data":1,"prerenderedAt":331},["ShallowReactive",2],{"navigation":3,"/maps/_web/crawler":155,"/maps/_web/crawler-surround":322},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":156,"_dir":157,"_draft":158,"_partial":159,"_locale":160,"title":161,"description":162,"body":163,"_type":316,"_id":317,"_source":318,"_file":319,"_stem":320,"_extension":321},"/maps/_web/crawler","_web",false,true,"","爬虫与反爬虫","网络爬虫技术指南，包含常见反爬虫策略分析、多线程爬虫设计、增量爬取实现以及性能优化等实践经验。",{"type":164,"children":165,"toc":310},"root",[166,174,181,187,192,198,203,209,214,220,225,231,236,250,256,261,267,272,277,294,300],{"type":167,"tag":168,"props":169,"children":171},"element","h2",{"id":170},"技术问题",[172],{"type":173,"value":170},"text",{"type":167,"tag":175,"props":176,"children":178},"h4",{"id":177},"有哪些常见的反爬虫策略",[179],{"type":173,"value":180},"有哪些常见的反爬虫策略？",{"type":167,"tag":182,"props":183,"children":184},"p",{},[185],{"type":173,"value":186},"前端主要从 HTML、CSS、JS 的角度去考虑。HTML 和 CSS 的策略较简单，比如 iframe 延迟加载、隐形内容、background 偏移、字体重映射等。JS 加密一般会用于价值较高的项目。服务器端可以分主动防御和被动防御两项，指纹、蜜罐、无头浏览器校验、UA、IP、robots.txt 等等。",{"type":167,"tag":182,"props":188,"children":189},{},[190],{"type":173,"value":191},"通过对规则进行组合可以设计出更严格的的反爬策略，如：先访问某图片才能访问某 URL，否则被计分。",{"type":167,"tag":175,"props":193,"children":195},{"id":194},"js-加密如何破解",[196],{"type":173,"value":197},"JS 加密如何破解？",{"type":167,"tag":182,"props":199,"children":200},{},[201],{"type":173,"value":202},"主要依靠调试，找到加解密的关键 JS 函数。",{"type":167,"tag":175,"props":204,"children":206},{"id":205},"多进程协程多线程如何选择",[207],{"type":173,"value":208},"多进程、协程、多线程如何选择？",{"type":167,"tag":182,"props":210,"children":211},{},[212],{"type":173,"value":213},"爬虫在抓取阶段时是网络密集的，解析数据阶段是 CPU 密集的，写入数据阶段是 IO 密集的。由于大部分开销都花费在了抓取阶段，所以宜选择多线程或协程的方式写爬虫程序。更好的方式可能是非阻塞 IO（异步 IO）。",{"type":167,"tag":175,"props":215,"children":217},{"id":216},"增量爬取是怎么设计的",[218],{"type":173,"value":219},"增量爬取是怎么设计的？",{"type":167,"tag":182,"props":221,"children":222},{},[223],{"type":173,"value":224},"通过网址管理器管理每个 URL 的状态。它维护了如 URL 是否被下载完、下载失败次数、子页面等数据，并能根据需求返回仍未被抓取的页面 URL。",{"type":167,"tag":175,"props":226,"children":228},{"id":227},"如何判断页面的相似性",[229],{"type":173,"value":230},"如何判断页面的相似性？",{"type":167,"tag":182,"props":232,"children":233},{},[234],{"type":173,"value":235},"使用 Google 的 SmithHash 算法。",{"type":167,"tag":182,"props":237,"children":238},{},[239,241],{"type":173,"value":240},"见：",{"type":167,"tag":242,"props":243,"children":247},"a",{"href":244,"rel":245},"https://www.likecs.com/show-204424165.html",[246],"nofollow",[248],{"type":173,"value":249},"SimHash 算法原理",{"type":167,"tag":175,"props":251,"children":253},{"id":252},"架构技巧",[254],{"type":173,"value":255},"架构技巧？",{"type":167,"tag":182,"props":257,"children":258},{},[259],{"type":173,"value":260},"爬虫分为抓取、解析和写入三个阶段，所以可以拆分为抓取写入以及读取解析两个程序，分别部署，提高应用以及维护的效率。",{"type":167,"tag":175,"props":262,"children":264},{"id":263},"如何测试网站的抓取极限",[265],{"type":173,"value":266},"如何测试网站的抓取极限？",{"type":167,"tag":182,"props":268,"children":269},{},[270],{"type":173,"value":271},"如果测试每分钟抓 100 次被封了，那么很可能在 80 次就上了监控，所以可以把频次控制在 40 次左右，防止别人的爬虫触发了目标站的反爬虫限制（如 80 次上监控进化为 60 次）。",{"type":167,"tag":168,"props":273,"children":275},{"id":274},"调试工具",[276],{"type":173,"value":274},{"type":167,"tag":278,"props":279,"children":280},"ul",{},[281],{"type":167,"tag":282,"props":283,"children":284},"li",{},[285,292],{"type":167,"tag":242,"props":286,"children":289},{"href":287,"rel":288},"https://github.com/adriancooney/puppeteer-heap-snapshot",[246],[290],{"type":173,"value":291},"puppeteer-heap-snapshot",{"type":173,"value":293},"，根据属性的名字遍历堆内存，查找有这些属性的对象。",{"type":167,"tag":168,"props":295,"children":297},{"id":296},"links",[298],{"type":173,"value":299},"Links",{"type":167,"tag":182,"props":301,"children":302},{},[303],{"type":167,"tag":242,"props":304,"children":307},{"href":305,"rel":306},"https://www.yuanrenxue.com/crawler/why-write-python-crawler.html",[246],[308],{"type":173,"value":309},"TODO，猿人学爬虫教程",{"title":160,"searchDepth":311,"depth":311,"links":312},2,[313,314,315],{"id":170,"depth":311,"text":170},{"id":274,"depth":311,"text":274},{"id":296,"depth":311,"text":299},"markdown","content:6.maps:_web:crawler.md","content","6.maps/_web/crawler.md","6.maps/_web/crawler","md",[323,327],{"_path":324,"title":325,"description":326},"/maps/_web/browser/router","路由技术","Web 前端路由技术详解，包含 Hash 路由、History 路由的实现原理与最佳实践。",{"_path":328,"title":329,"description":330},"/maps/_web/miniapp","小程序","微信小程序开发指南，包含双线程模型、Exparser 组件框架、分包异步化等技术原理和最佳实践。",1742348682540]