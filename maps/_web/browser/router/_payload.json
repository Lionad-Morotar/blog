[{"data":1,"prerenderedAt":341},["ShallowReactive",2],{"navigation":3,"/maps/_web/browser/router":158,"/maps/_web/browser/router-surround":332},[4,35,89,95,122,128,152],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":45,"_path":46},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":48,"_path":49},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":51,"_path":52},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":54,"_path":55},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":57,"_path":58},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":60,"_path":61},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":63,"_path":64},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":66,"_path":67},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":69,"_path":70},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":72,"_path":73},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":75,"_path":76},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":78,"_path":79},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":81,"_path":82},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":84,"_path":85},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":87,"_path":88},"📝 技术博客归档","/articles/archive",{"title":90,"_path":91,"children":92},"读书笔记 / Notes","/books",[93],{"title":94,"_path":91},"📕 读书笔记",{"title":96,"_path":97,"children":98},"吉他剧场 / Music","/music",[99,101,104,107,110,113,116,119],{"title":100,"_path":97},"🎸 FingerStyle！",{"title":102,"_path":103},"🌬️ 等待的风","/music/wind",{"title":105,"_path":106},"💕 约定的海洋","/music/ocean",{"title":108,"_path":109},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":111,"_path":112},"🌏 残酷天使的行动纲领","/music/eva",{"title":114,"_path":115},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":117,"_path":118},"🍷 Wu Wei","/music/wu-wei",{"title":120,"_path":121},"🌅 无题","/music/untitled",{"title":123,"_path":124,"children":125},"知识地图 / Maps","/maps",[126],{"title":127,"_path":124},"🏁 知识地图",{"title":129,"_path":130,"children":131},"造物 / Make","/tools",[132,134,137,140,143,146,149],{"title":133,"_path":130},"🧰 工具收集",{"title":135,"_path":136},"📕 博客","/tools/blog",{"title":138,"_path":139},"🥥 Coconut","/tools/coconut",{"title":141,"_path":142},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":144,"_path":145},"🌐 AnySort","/tools/anysort",{"title":147,"_path":148},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":150,"_path":151},"👓 Crapto","/tools/crypto-inline",{"title":153,"_path":154,"children":155},"我 / About","/hire",[156],{"title":157,"_path":154},"📬 技术简历",{"_path":159,"_dir":160,"_draft":161,"_partial":162,"_locale":163,"title":164,"description":165,"body":166,"_type":326,"_id":327,"_source":328,"_file":329,"_stem":330,"_extension":331},"/maps/_web/browser/router","browser",false,true,"","路由技术","Web 前端路由技术详解，包含 Hash 路由、History 路由的实现原理与最佳实践。",{"type":167,"children":168,"toc":320},"root",[169,177,183,190,196,202,211,216,221,227,232,239,245,250,273,279,309],{"type":170,"tag":171,"props":172,"children":174},"element","h2",{"id":173},"基础概念",[175],{"type":176,"value":173},"text",{"type":170,"tag":171,"props":178,"children":180},{"id":179},"url",[181],{"type":176,"value":182},"URL",{"type":170,"tag":184,"props":185,"children":187},"h4",{"id":186},"url-由哪些部分组成",[188],{"type":176,"value":189},"URL 由哪些部分组成？",{"type":170,"tag":191,"props":192,"children":193},"p",{},[194],{"type":176,"value":195},"协议头、域名、端口、目录、文件名（index.html）、页面锚、参数。",{"type":170,"tag":184,"props":197,"children":199},{"id":198},"url-与前端框架的大致交互方式是怎样的",[200],{"type":176,"value":201},"URL 与前端框架的大致交互方式是怎样的？",{"type":170,"tag":191,"props":203,"children":204},{},[205],{"type":170,"tag":206,"props":207,"children":210},"img",{"alt":208,"src":209},"滚吧，react-router ——记React前端路由改造","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20221023215703.png?type=win11&w=g",[],{"type":170,"tag":191,"props":212,"children":213},{},[214],{"type":176,"value":215},"pathname 解析为 params 以及对应的页面名，页面名连同哈希参数以及 search 转换为的 query 四种信息，交由 ReactRouter.Provider 处理，根据路由表渲染出指定的组件。",{"type":170,"tag":171,"props":217,"children":219},{"id":218},"路由",[220],{"type":176,"value":218},{"type":170,"tag":184,"props":222,"children":224},{"id":223},"嵌routine-路由是什么",[225],{"type":176,"value":226},"嵌routine 路由是什么？",{"type":170,"tag":191,"props":228,"children":229},{},[230],{"type":176,"value":231},"嵌routine 体现在页面分割为不同的模块，每个模块嵌套在另一个模块。",{"type":170,"tag":191,"props":233,"children":234},{},[235],{"type":170,"tag":206,"props":236,"children":238},{"alt":163,"src":237},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/Kapture-2022-09-21-at-07.41.46.gif",[],{"type":170,"tag":184,"props":240,"children":242},{"id":241},"嵌routine-路由的代码实现",[243],{"type":176,"value":244},"嵌routine 路由的代码实现？",{"type":170,"tag":191,"props":246,"children":247},{},[248],{"type":176,"value":249},"在 React 中，Context.Consumer 总是消费最近的 Context.Provider 提供的值，所以只要 Context.Provider 每次只解析并提供一层由斜线分割的 pathname 就很容易写出递归写法的嵌routine 路由。",{"type":170,"tag":191,"props":251,"children":252},{},[253,255,264,266],{"type":176,"value":254},"见：",{"type":170,"tag":256,"props":257,"children":261},"a",{"href":258,"rel":259},"https://www.tangshuang.net/8594.html#title-3-1",[260],"nofollow",[262],{"type":176,"value":263},"微前端架构中的路由设计#可嵌套的Provider",{"type":176,"value":265},"、",{"type":170,"tag":256,"props":267,"children":270},{"href":268,"rel":269},"https://codesandbox.io/s/nested-views-vue-router-4-examples-hl326",[260],[271],{"type":176,"value":272},"VueRouter Nested@CodeSandBox",{"type":170,"tag":184,"props":274,"children":276},{"id":275},"有哪些常见的路由模式",[277],{"type":176,"value":278},"有哪些常见的路由模式？",{"type":170,"tag":280,"props":281,"children":282},"ul",{},[283,289,294,299,304],{"type":170,"tag":284,"props":285,"children":286},"li",{},[287],{"type":176,"value":288},"内存路由",{"type":170,"tag":284,"props":290,"children":291},{},[292],{"type":176,"value":293},"History 路由",{"type":170,"tag":284,"props":295,"children":296},{},[297],{"type":176,"value":298},"Hash 路由",{"type":170,"tag":284,"props":300,"children":301},{},[302],{"type":176,"value":303},"LocalStorage 本地持久化存储模式",{"type":170,"tag":284,"props":305,"children":306},{},[307],{"type":176,"value":308},"Search 参数路由",{"type":170,"tag":191,"props":310,"children":311},{},[312,313],{"type":176,"value":254},{"type":170,"tag":256,"props":314,"children":317},{"href":315,"rel":316},"https://www.tangshuang.net/7273.html#title-6-1-1",[260],[318],{"type":176,"value":319},"Naultil 路由配置",{"title":163,"searchDepth":321,"depth":321,"links":322},2,[323,324,325],{"id":173,"depth":321,"text":173},{"id":179,"depth":321,"text":182},{"id":218,"depth":321,"text":218},"markdown","content:6.maps:_web:browser:router.md","content","6.maps/_web/browser/router.md","6.maps/_web/browser/router","md",[333,337],{"_path":334,"title":335,"description":336},"/maps/_web/browser/principle","浏览器相关","浏览器相关问题",{"_path":338,"title":339,"description":340},"/maps/_web/crawler","爬虫与反爬虫","网络爬虫技术指南，包含常见反爬虫策略分析、多线程爬虫设计、增量爬取实现以及性能优化等实践经验。",1748756320426]