[{"data":1,"prerenderedAt":344},["ShallowReactive",2],{"navigation":3,"/maps/_web/browser/router":161,"/maps/_web/browser/router-surround":335},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":329,"_id":330,"_source":331,"_file":332,"_stem":333,"_extension":334},"/maps/_web/browser/router","browser",false,true,"","路由技术","Web 前端路由技术详解，包含 Hash 路由、History 路由的实现原理与最佳实践。",{"type":170,"children":171,"toc":323},"root",[172,180,186,193,199,205,214,219,224,230,235,242,248,253,276,282,312],{"type":173,"tag":174,"props":175,"children":177},"element","h2",{"id":176},"基础概念",[178],{"type":179,"value":176},"text",{"type":173,"tag":174,"props":181,"children":183},{"id":182},"url",[184],{"type":179,"value":185},"URL",{"type":173,"tag":187,"props":188,"children":190},"h4",{"id":189},"url-由哪些部分组成",[191],{"type":179,"value":192},"URL 由哪些部分组成？",{"type":173,"tag":194,"props":195,"children":196},"p",{},[197],{"type":179,"value":198},"协议头、域名、端口、目录、文件名（index.html）、页面锚、参数。",{"type":173,"tag":187,"props":200,"children":202},{"id":201},"url-与前端框架的大致交互方式是怎样的",[203],{"type":179,"value":204},"URL 与前端框架的大致交互方式是怎样的？",{"type":173,"tag":194,"props":206,"children":207},{},[208],{"type":173,"tag":209,"props":210,"children":213},"img",{"alt":211,"src":212},"滚吧，react-router ——记React前端路由改造","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20221023215703.png?type=win11&w=g",[],{"type":173,"tag":194,"props":215,"children":216},{},[217],{"type":179,"value":218},"pathname 解析为 params 以及对应的页面名，页面名连同哈希参数以及 search 转换为的 query 四种信息，交由 ReactRouter.Provider 处理，根据路由表渲染出指定的组件。",{"type":173,"tag":174,"props":220,"children":222},{"id":221},"路由",[223],{"type":179,"value":221},{"type":173,"tag":187,"props":225,"children":227},{"id":226},"嵌routine-路由是什么",[228],{"type":179,"value":229},"嵌routine 路由是什么？",{"type":173,"tag":194,"props":231,"children":232},{},[233],{"type":179,"value":234},"嵌routine 体现在页面分割为不同的模块，每个模块嵌套在另一个模块。",{"type":173,"tag":194,"props":236,"children":237},{},[238],{"type":173,"tag":209,"props":239,"children":241},{"alt":166,"src":240},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/Kapture-2022-09-21-at-07.41.46.gif",[],{"type":173,"tag":187,"props":243,"children":245},{"id":244},"嵌routine-路由的代码实现",[246],{"type":179,"value":247},"嵌routine 路由的代码实现？",{"type":173,"tag":194,"props":249,"children":250},{},[251],{"type":179,"value":252},"在 React 中，Context.Consumer 总是消费最近的 Context.Provider 提供的值，所以只要 Context.Provider 每次只解析并提供一层由斜线分割的 pathname 就很容易写出递归写法的嵌routine 路由。",{"type":173,"tag":194,"props":254,"children":255},{},[256,258,267,269],{"type":179,"value":257},"见：",{"type":173,"tag":259,"props":260,"children":264},"a",{"href":261,"rel":262},"https://www.tangshuang.net/8594.html#title-3-1",[263],"nofollow",[265],{"type":179,"value":266},"微前端架构中的路由设计#可嵌套的Provider",{"type":179,"value":268},"、",{"type":173,"tag":259,"props":270,"children":273},{"href":271,"rel":272},"https://codesandbox.io/s/nested-views-vue-router-4-examples-hl326",[263],[274],{"type":179,"value":275},"VueRouter Nested@CodeSandBox",{"type":173,"tag":187,"props":277,"children":279},{"id":278},"有哪些常见的路由模式",[280],{"type":179,"value":281},"有哪些常见的路由模式？",{"type":173,"tag":283,"props":284,"children":285},"ul",{},[286,292,297,302,307],{"type":173,"tag":287,"props":288,"children":289},"li",{},[290],{"type":179,"value":291},"内存路由",{"type":173,"tag":287,"props":293,"children":294},{},[295],{"type":179,"value":296},"History 路由",{"type":173,"tag":287,"props":298,"children":299},{},[300],{"type":179,"value":301},"Hash 路由",{"type":173,"tag":287,"props":303,"children":304},{},[305],{"type":179,"value":306},"LocalStorage 本地持久化存储模式",{"type":173,"tag":287,"props":308,"children":309},{},[310],{"type":179,"value":311},"Search 参数路由",{"type":173,"tag":194,"props":313,"children":314},{},[315,316],{"type":179,"value":257},{"type":173,"tag":259,"props":317,"children":320},{"href":318,"rel":319},"https://www.tangshuang.net/7273.html#title-6-1-1",[263],[321],{"type":179,"value":322},"Naultil 路由配置",{"title":166,"searchDepth":324,"depth":324,"links":325},2,[326,327,328],{"id":176,"depth":324,"text":176},{"id":182,"depth":324,"text":185},{"id":221,"depth":324,"text":221},"markdown","content:6.maps:_web:browser:router.md","content","6.maps/_web/browser/router.md","6.maps/_web/browser/router","md",[336,340],{"_path":337,"title":338,"description":339},"/maps/_web/browser/principle","浏览器相关","浏览器相关问题",{"_path":341,"title":342,"description":343},"/maps/_web/crawler","爬虫与反爬虫","网络爬虫技术指南，包含常见反爬虫策略分析、多线程爬虫设计、增量爬取实现以及性能优化等实践经验。",1749721440059]