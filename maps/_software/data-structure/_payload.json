[{"data":1,"prerenderedAt":304},["ShallowReactive",2],{"navigation":3,"/maps/_software/data-structure":155,"/maps/_software/data-structure-surround":295},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":156,"_dir":157,"_draft":158,"_partial":159,"_locale":160,"title":161,"description":162,"body":163,"_type":289,"_id":290,"_source":291,"_file":292,"_stem":293,"_extension":294},"/maps/_software/data-structure","_software",false,true,"","Data Structure","数据结构基础知识，包含二叉树遍历、B 树和 B+树原理等核心概念的详细解析。",{"type":164,"children":165,"toc":285},"root",[166,174,201,207,213,224,229,234,252,257],{"type":167,"tag":168,"props":169,"children":171},"element","h2",{"id":170},"树",[172],{"type":173,"value":170},"text",{"type":167,"tag":175,"props":176,"children":177},"ul",{},[178,191],{"type":167,"tag":179,"props":180,"children":181},"li",{},[182],{"type":167,"tag":183,"props":184,"children":188},"a",{"href":185,"rel":186},"https://zhuanlan.zhihu.com/p/101321696",[187],"nofollow",[189],{"type":173,"value":190},"神级遍历——morris",{"type":167,"tag":179,"props":192,"children":193},{},[194],{"type":167,"tag":183,"props":195,"children":198},{"href":196,"rel":197},"https://www.cnblogs.com/anniekim/archive/2013/06/15/morristraversal.html",[187],[199],{"type":173,"value":200},"Morris Traversal 方法遍历二叉树（非递归，不用栈，O(1) 空间） ",{"type":167,"tag":202,"props":203,"children":205},"h4",{"id":204},"二叉树的删除",[206],{"type":173,"value":204},{"type":167,"tag":208,"props":209,"children":210},"p",{},[211],{"type":173,"value":212},"如果是排序树，节点的删除分为三种情况：如果被删除的是叶子节点，那么直接删除；如果被删除的节点只有左子树或右子树，那么用子树替换该节点；不然，使用左值树最大值节点或右子树最小值节点替换该节点。",{"type":167,"tag":202,"props":214,"children":216},{"id":215},"彻底理解-b-树和-b树为何它们常用在数据库中",[217],{"type":167,"tag":183,"props":218,"children":221},{"href":219,"rel":220},"https://www.bilibili.com/video/BV1UC4y1p7zm",[187],[222],{"type":173,"value":223},"彻底理解 B 树和 B+树！为何它们常用在数据库中？",{"type":167,"tag":208,"props":225,"children":226},{},[227],{"type":173,"value":228},"B-tree 是 M-way-Tree 的约束版本。在创建 M-way 的 B-tree 时，需要持续往一个目标节点塞入 M-1 个元素。如果目标节点塞不下，则分裂出一个新节点存放新元素，并将目标节点中部分元素取出，另新建一个低层节点置于目标节点和新节点的上层，并连接。每次分裂出节点时，所有改变了元素的节点都需要重新调整其子节点的指向。",{"type":167,"tag":208,"props":230,"children":231},{},[232],{"type":173,"value":233},"B+-tree 相比 B-tree 有几点改变：",{"type":167,"tag":175,"props":235,"children":236},{},[237,242,247],{"type":167,"tag":179,"props":238,"children":239},{},[240],{"type":173,"value":241},"B+-tree 允许重复索引值的元素，底层节点的所有元素都能在高层节点找到一份拷贝，这也意味着 B+-tree 的叶子是全索引。",{"type":167,"tag":179,"props":243,"children":244},{},[245],{"type":173,"value":246},"B-tree 每一个元素都携带了指针指向索引物理位置，而 B+-tree 的指针位于叶子节点。",{"type":167,"tag":179,"props":248,"children":249},{},[250],{"type":173,"value":251},"B+-tree 的叶子节点作为链表相连。",{"type":167,"tag":208,"props":253,"children":254},{},[255],{"type":173,"value":256},"原始的 B-tree 是面向磁盘设计的：",{"type":167,"tag":175,"props":258,"children":259},{},[260,265,270,275,280],{"type":167,"tag":179,"props":261,"children":262},{},[263],{"type":173,"value":264},"有序、平衡的多级储存结构",{"type":167,"tag":179,"props":266,"children":267},{},[268],{"type":173,"value":269},"面向磁盘设计，每一个节点都是磁盘块",{"type":167,"tag":179,"props":271,"children":272},{},[273],{"type":173,"value":274},"查找性能好，适合读密集负载",{"type":167,"tag":179,"props":276,"children":277},{},[278],{"type":173,"value":279},"就地更新（In-Place Update）",{"type":167,"tag":179,"props":281,"children":282},{},[283],{"type":173,"value":284},"写入性能差，分裂、合并等操作都是随机写",{"title":160,"searchDepth":286,"depth":286,"links":287},2,[288],{"id":170,"depth":286,"text":170},"markdown","content:6.maps:_software:data-structure.md","content","6.maps/_software/data-structure.md","6.maps/_software/data-structure","md",[296,300],{"_path":297,"title":298,"description":299},"/maps/_software/algorithm","算法","经典算法原理与实现，包含快速排序等常用算法的详细解析和代码示例。",{"_path":301,"title":302,"description":303},"/maps/_software/design-patterns","设计模式","设计模式是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。",1742745239454]