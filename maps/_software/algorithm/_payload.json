[{"data":1,"prerenderedAt":251},["ShallowReactive",2],{"navigation":3,"/maps/_software/algorithm":158,"/maps/_software/algorithm-surround":242},[4,35,89,95,122,128,152],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🌪️ tailwind4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":45,"_path":46},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":48,"_path":49},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":51,"_path":52},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":54,"_path":55},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":57,"_path":58},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":60,"_path":61},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":63,"_path":64},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":66,"_path":67},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":69,"_path":70},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":72,"_path":73},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":75,"_path":76},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":78,"_path":79},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":81,"_path":82},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":84,"_path":85},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":87,"_path":88},"📝 技术博客归档","/articles/archive",{"title":90,"_path":91,"children":92},"读书笔记 / Notes","/books",[93],{"title":94,"_path":91},"📕 读书笔记",{"title":96,"_path":97,"children":98},"吉他剧场 / Music","/music",[99,101,104,107,110,113,116,119],{"title":100,"_path":97},"🎸 FingerStyle！",{"title":102,"_path":103},"🌬️ 等待的风","/music/wind",{"title":105,"_path":106},"💕 约定的海洋","/music/ocean",{"title":108,"_path":109},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":111,"_path":112},"🌏 残酷天使的行动纲领","/music/eva",{"title":114,"_path":115},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":117,"_path":118},"🍷 Wu Wei","/music/wu-wei",{"title":120,"_path":121},"🌅 无题","/music/untitled",{"title":123,"_path":124,"children":125},"知识地图 / Maps","/maps",[126],{"title":127,"_path":124},"🏁 知识地图",{"title":129,"_path":130,"children":131},"造物 / Make","/tools",[132,134,137,140,143,146,149],{"title":133,"_path":130},"🧰 工具收集",{"title":135,"_path":136},"📕 博客","/tools/blog",{"title":138,"_path":139},"🥥 Coconut","/tools/coconut",{"title":141,"_path":142},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":144,"_path":145},"🌐 AnySort","/tools/anysort",{"title":147,"_path":148},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":150,"_path":151},"👓 Crapto","/tools/crypto-inline",{"title":153,"_path":154,"children":155},"我 / About","/hire",[156],{"title":157,"_path":154},"📬 技术简历",{"_path":159,"_dir":160,"_draft":161,"_partial":162,"_locale":163,"title":164,"description":165,"body":166,"_type":236,"_id":237,"_source":238,"_file":239,"_stem":240,"_extension":241},"/maps/_software/algorithm","_software",false,true,"","算法","经典算法原理与实现，包含快速排序等常用算法的详细解析和代码示例。",{"type":167,"children":168,"toc":233},"root",[169,178,184,189,203,208],{"type":170,"tag":171,"props":172,"children":174},"element","h4",{"id":173},"快速排序是什么",[175],{"type":176,"value":177},"text","快速排序是什么？",{"type":170,"tag":179,"props":180,"children":181},"p",{},[182],{"type":176,"value":183},"快速排序是冒泡的一种改进，其基本原理是在数组中随机取一个哨兵，然后拣选出比哨兵小和比哨兵大两拨数组，继续对这两拨数组快速排序，是一个分治算法。",{"type":170,"tag":179,"props":185,"children":186},{},[187],{"type":176,"value":188},"最简单的实现是递归，常用的性能更好的实现使用了快慢指针。",{"type":170,"tag":179,"props":190,"children":191},{},[192,194],{"type":176,"value":193},"见：",{"type":170,"tag":195,"props":196,"children":200},"a",{"href":197,"rel":198},"https://github.com/Lionad-Morotar/read-source-code/blob/master/algorithm/quicksort.js",[199],"nofollow",[201],{"type":176,"value":202},"QuickSort @read-source-code",{"type":170,"tag":171,"props":204,"children":206},{"id":205},"多人协作系统",[207],{"type":176,"value":205},{"type":170,"tag":209,"props":210,"children":211},"ul",{},[212,223],{"type":170,"tag":213,"props":214,"children":215},"li",{},[216],{"type":170,"tag":195,"props":217,"children":220},{"href":218,"rel":219},"https://www.figma.com/blog/how-figmas-multiplayer-technology-works/",[199],[221],{"type":176,"value":222},"How Figma’s multiplayer technology works",{"type":170,"tag":213,"props":224,"children":225},{},[226],{"type":170,"tag":195,"props":227,"children":230},{"href":228,"rel":229},"https://myblackboxrecorder.com/how-figmas-multiplayer-technology-works/",[199],[231],{"type":176,"value":232},"中：Figma 是如何实现多人协作的",{"title":163,"searchDepth":234,"depth":234,"links":235},2,[],"markdown","content:6.maps:_software:algorithm.md","content","6.maps/_software/algorithm.md","6.maps/_software/algorithm","md",[243,247],{"_path":244,"title":245,"description":246},"/maps/_server/nodejs/source/require","NodeJS Require","NodeJS 模块导入的源码解析",{"_path":248,"title":249,"description":250},"/maps/_software/data-structure","Data Structure","数据结构基础知识，包含二叉树遍历、B 树和 B+树原理等核心概念的详细解析。",1742808189746]