[{"data":1,"prerenderedAt":248},["ShallowReactive",2],{"navigation":3,"/maps/_software/algorithm":155,"/maps/_software/algorithm-surround":239},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":156,"_dir":157,"_draft":158,"_partial":159,"_locale":160,"title":161,"description":162,"body":163,"_type":233,"_id":234,"_source":235,"_file":236,"_stem":237,"_extension":238},"/maps/_software/algorithm","_software",false,true,"","算法","经典算法原理与实现，包含快速排序等常用算法的详细解析和代码示例。",{"type":164,"children":165,"toc":230},"root",[166,175,181,186,200,205],{"type":167,"tag":168,"props":169,"children":171},"element","h4",{"id":170},"快速排序是什么",[172],{"type":173,"value":174},"text","快速排序是什么？",{"type":167,"tag":176,"props":177,"children":178},"p",{},[179],{"type":173,"value":180},"快速排序是冒泡的一种改进，其基本原理是在数组中随机取一个哨兵，然后拣选出比哨兵小和比哨兵大两拨数组，继续对这两拨数组快速排序，是一个分治算法。",{"type":167,"tag":176,"props":182,"children":183},{},[184],{"type":173,"value":185},"最简单的实现是递归，常用的性能更好的实现使用了快慢指针。",{"type":167,"tag":176,"props":187,"children":188},{},[189,191],{"type":173,"value":190},"见：",{"type":167,"tag":192,"props":193,"children":197},"a",{"href":194,"rel":195},"https://github.com/Lionad-Morotar/read-source-code/blob/master/algorithm/quicksort.js",[196],"nofollow",[198],{"type":173,"value":199},"QuickSort @read-source-code",{"type":167,"tag":168,"props":201,"children":203},{"id":202},"多人协作系统",[204],{"type":173,"value":202},{"type":167,"tag":206,"props":207,"children":208},"ul",{},[209,220],{"type":167,"tag":210,"props":211,"children":212},"li",{},[213],{"type":167,"tag":192,"props":214,"children":217},{"href":215,"rel":216},"https://www.figma.com/blog/how-figmas-multiplayer-technology-works/",[196],[218],{"type":173,"value":219},"How Figma’s multiplayer technology works",{"type":167,"tag":210,"props":221,"children":222},{},[223],{"type":167,"tag":192,"props":224,"children":227},{"href":225,"rel":226},"https://myblackboxrecorder.com/how-figmas-multiplayer-technology-works/",[196],[228],{"type":173,"value":229},"中：Figma 是如何实现多人协作的",{"title":160,"searchDepth":231,"depth":231,"links":232},2,[],"markdown","content:6.maps:_software:algorithm.md","content","6.maps/_software/algorithm.md","6.maps/_software/algorithm","md",[240,244],{"_path":241,"title":242,"description":243},"/maps/_server/nodejs/source/require","NodeJS Require","NodeJS 模块导入的源码解析",{"_path":245,"title":246,"description":247},"/maps/_software/data-structure","Data Structure","数据结构基础知识，包含二叉树遍历、B 树和 B+树原理等核心概念的详细解析。",1742348684323]