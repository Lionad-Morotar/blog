[{"data":1,"prerenderedAt":408},["ShallowReactive",2],{"navigation":3,"/maps/_oop/oop":155,"/maps/_oop/oop-surround":399},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":156,"_dir":157,"_draft":158,"_partial":159,"_locale":160,"title":161,"description":162,"body":163,"_type":393,"_id":394,"_source":395,"_file":396,"_stem":397,"_extension":398},"/maps/_oop/oop","_oop",false,true,"","面相对象编程","面向对象编程是一种编程范式，它将数据和操作封装在对象中，对象之间通过消息传递进行通信。",{"type":164,"children":165,"toc":385},"root",[166,175,181,197,203,208,218,225,230,265,274,282,287,292,297,302,325,331,336,354,359,364,372,377],{"type":167,"tag":168,"props":169,"children":171},"element","h4",{"id":170},"面向对象主要关注哪些方面",[172],{"type":173,"value":174},"text","面向对象主要关注哪些方面？",{"type":167,"tag":176,"props":177,"children":178},"p",{},[179],{"type":173,"value":180},"四个核心概念：封装（Encapsulation）、继承（Inheritance）、多态（Polymorphism）、抽象（Abstraction）。",{"type":167,"tag":176,"props":182,"children":183},{},[184,186,195],{"type":173,"value":185},"见：",{"type":167,"tag":187,"props":188,"children":192},"a",{"href":189,"rel":190},"https://www.bilibili.com/video/BV1gb411w7eW",[191],"nofollow",[193],{"type":173,"value":194},"JavaScript OOP 面向对象编程 @Mosh",{"type":173,"value":196},"，非常基础，适合新手入门",{"type":167,"tag":168,"props":198,"children":200},{"id":199},"面相对象和设计模式的关系",[201],{"type":173,"value":202},"面相对象和设计模式的关系？",{"type":167,"tag":176,"props":204,"children":205},{},[206],{"type":173,"value":207},"一般意义上的设计模式指的是在 OOP 编程范式的实践下总结出来的一些用来解决特定问题的代码设计经验。",{"type":167,"tag":176,"props":209,"children":210},{},[211,212],{"type":173,"value":185},{"type":167,"tag":187,"props":213,"children":215},{"href":214},"/maps/_software/design-patterns",[216],{"type":173,"value":217},"设计模式",{"type":167,"tag":219,"props":220,"children":222},"h2",{"id":221},"uml",[223],{"type":173,"value":224},"UML",{"type":167,"tag":176,"props":226,"children":227},{},[228],{"type":173,"value":229},"类之间的关系总的来说可以包含这几种：",{"type":167,"tag":231,"props":232,"children":233},"ul",{},[234,240,245,250,255,260],{"type":167,"tag":235,"props":236,"children":237},"li",{},[238],{"type":173,"value":239},"A 依赖 B：对类 B 的修改会影响到类 A",{"type":167,"tag":235,"props":241,"children":242},{},[243],{"type":173,"value":244},"A 关联 B：对象 A 知道对象 B，类 A 依赖于类 B",{"type":167,"tag":235,"props":246,"children":247},{},[248],{"type":173,"value":249},"A 聚合 B：对象 A 由 B 构成，类 A 依赖于类 B",{"type":167,"tag":235,"props":251,"children":252},{},[253],{"type":173,"value":254},"A 组合 B：对象 A 由 B 构成且管理 B 的生命周期，类 A 依赖于类 B",{"type":167,"tag":235,"props":256,"children":257},{},[258],{"type":173,"value":259},"A 实现 B：对象 A 可视为对象 B，类 A 定义了接口 B 声明的方法，类 A 依赖于类 B",{"type":167,"tag":235,"props":261,"children":262},{},[263],{"type":173,"value":264},"A 继承 B：对象 A 可视为对象 B，类 A 继承类 B 的接口和实现，还可以对其扩展，类 A 依赖于类 B",{"type":167,"tag":176,"props":266,"children":267},{},[268],{"type":167,"tag":269,"props":270,"children":273},"img",{"alt":271,"src":272},"Class Relations","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/b3612320-5822-48fc-8041-ead5c269f8e5.svg",[],{"type":167,"tag":176,"props":275,"children":276},{},[277],{"type":167,"tag":269,"props":278,"children":281},{"alt":279,"src":280},"Object Relations","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/cff33e77-e9aa-48eb-ae0d-01dd1561abd0.svg",[],{"type":167,"tag":219,"props":283,"children":285},{"id":284},"设计原则",[286],{"type":173,"value":284},{"type":167,"tag":176,"props":288,"children":289},{},[290],{"type":173,"value":291},"什么是优秀的软件设计？",{"type":167,"tag":176,"props":293,"children":294},{},[295],{"type":173,"value":296},"显然，在不同的公司、不同的项目，软件设计并没有一个恒定的标准，不过总的来说我们会讨论代码复用以及代码的扩展性。",{"type":167,"tag":176,"props":298,"children":299},{},[300],{"type":173,"value":301},"有几个基础的设计准则能帮助你做到这两点：",{"type":167,"tag":231,"props":303,"children":304},{},[305,310,315,320],{"type":167,"tag":235,"props":306,"children":307},{},[308],{"type":173,"value":309},"封装变化：找到程序中易变的内容并将其和不变的内容区分开来",{"type":167,"tag":235,"props":311,"children":312},{},[313],{"type":173,"value":314},"面向接口：依赖抽象通常优于依赖具体",{"type":167,"tag":235,"props":316,"children":317},{},[318],{"type":173,"value":319},"优先组合：组合优于继承，因为继承有着挺多保守诟病之处",{"type":167,"tag":235,"props":321,"children":322},{},[323],{"type":173,"value":324},"SOLID 原则",{"type":167,"tag":326,"props":327,"children":329},"h3",{"id":328},"组合优于继承",[330],{"type":173,"value":328},{"type":167,"tag":176,"props":332,"children":333},{},[334],{"type":173,"value":335},"继承通常会引发大量问题：",{"type":167,"tag":231,"props":337,"children":338},{},[339,344,349],{"type":167,"tag":235,"props":340,"children":341},{},[342],{"type":173,"value":343},"子类不能减少父类的接口，并且需要保证兼容",{"type":167,"tag":235,"props":345,"children":346},{},[347],{"type":173,"value":348},"继承使状态逃离了父类的封装，子类和父类关系过于紧密",{"type":167,"tag":235,"props":350,"children":351},{},[352],{"type":173,"value":353},"继承经常被滥用，导致平行继承体系的出现",{"type":167,"tag":176,"props":355,"children":356},{},[357],{"type":173,"value":358},"假设你在售卖一些计算机，这些计算机包含笔记本，台式电脑以及算盘！",{"type":167,"tag":176,"props":360,"children":361},{},[362],{"type":173,"value":363},"如果使用继承的思路组织代码，你很可能对得到以下结构：",{"type":167,"tag":176,"props":365,"children":366},{},[367],{"type":167,"tag":269,"props":368,"children":371},{"alt":369,"src":370},"Computer Structure V1","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/348faf14-874b-410d-b4b9-ff00b04ab14e.svg",[],{"type":167,"tag":176,"props":373,"children":374},{},[375],{"type":173,"value":376},"使用组合可以方便地把不同的“维度”之间的并行关联拆分出来，降低代码复杂度：",{"type":167,"tag":176,"props":378,"children":379},{},[380],{"type":167,"tag":269,"props":381,"children":384},{"alt":382,"src":383},"Computer Structure V2","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/6cbffe1a-8efd-4de6-9ed3-bfef8392bab5.svg",[],{"title":160,"searchDepth":386,"depth":386,"links":387},2,[388,389],{"id":221,"depth":386,"text":224},{"id":284,"depth":386,"text":284,"children":390},[391],{"id":328,"depth":392,"text":328},3,"markdown","content:6.maps:_oop:oop.md","content","6.maps/_oop/oop.md","6.maps/_oop/oop","md",[400,404],{"_path":401,"title":402,"description":403},"/maps/_medicine/medicine","医疗","常见医疗知识、疾病、药物等。",{"_path":405,"title":406,"description":407},"/maps/_person","人物","包括虚拟人物在内的重要人物或角色",1742745239392]