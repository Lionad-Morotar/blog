[{"data":1,"prerenderedAt":390},["ShallowReactive",2],{"navigation":3,"/maps/_fe-framework/fe-framework":161,"/maps/_fe-framework/fe-framework-surround":384},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":378,"_id":379,"_source":380,"_file":381,"_stem":382,"_extension":383},"/maps/_fe-framework/fe-framework","_fe-framework",false,true,"","前端框架","前端框架是在前端开发不同阶段，用以简化开发的工具集合。它们提供了一种组织代码的方式，使得开发者可以专注于业务逻辑，而不是底层的技术细节。",{"type":170,"children":171,"toc":373},"root",[172,216,222,243,256,262,321,326,334,339,344],{"type":173,"tag":174,"props":175,"children":176},"element","ul",{},[177,189,198,207],{"type":173,"tag":178,"props":179,"children":180},"li",{},[181],{"type":173,"tag":182,"props":183,"children":185},"a",{"href":184},"/maps/_fe-framework/ui/vue",[186],{"type":187,"value":188},"text","Vue",{"type":173,"tag":178,"props":190,"children":191},{},[192],{"type":173,"tag":182,"props":193,"children":195},{"href":194},"/maps/_fe-framework/ui/react",[196],{"type":187,"value":197},"React",{"type":173,"tag":178,"props":199,"children":200},{},[201],{"type":173,"tag":182,"props":202,"children":204},{"href":203},"/maps/_fe-framework/ui/angular",[205],{"type":187,"value":206},"Angular",{"type":173,"tag":178,"props":208,"children":209},{},[210],{"type":173,"tag":182,"props":211,"children":213},{"href":212},"/maps/_fe-framework/nuxt/nuxt",[214],{"type":187,"value":215},"Nuxt",{"type":173,"tag":217,"props":218,"children":220},"h2",{"id":219},"隔离方案",[221],{"type":187,"value":219},{"type":173,"tag":174,"props":223,"children":224},{},[225,234],{"type":173,"tag":178,"props":226,"children":227},{},[228],{"type":173,"tag":182,"props":229,"children":231},{"href":230},"/maps/_fe-framework/micro-fe",[232],{"type":187,"value":233},"Micro FrontEnd",{"type":173,"tag":178,"props":235,"children":236},{},[237],{"type":173,"tag":182,"props":238,"children":240},{"href":239},"/maps/_fe-framework/web-components",[241],{"type":187,"value":242},"Web Components",{"type":173,"tag":244,"props":245,"children":247},"h4",{"id":246},"sharing-state-with-islands-architecture",[248],{"type":173,"tag":182,"props":249,"children":253},{"href":250,"rel":251},"https://frontendatscale.com/blog/islands-architecture-state/",[252],"nofollow",[254],{"type":187,"value":255},"Sharing State with Islands Architecture",{"type":173,"tag":257,"props":258,"children":259},"p",{},[260],{"type":187,"value":261},"MAXI FERREIRA 阐述的在岛模式组件中管理状态的思路也可以用于低代码场景。",{"type":173,"tag":257,"props":263,"children":264},{},[265],{"type":173,"tag":266,"props":267,"children":268},"q",{},[269,271,283,285,292,294,301,303,310,312,319],{"type":187,"value":270},"We have several options for choosing a store. Astro recommends the ",{"type":173,"tag":182,"props":272,"children":275},{"href":273,"rel":274},"https://github.com/nanostores/nanostores",[252],[276],{"type":173,"tag":277,"props":278,"children":280},"code",{"className":279},[],[281],{"type":187,"value":282},"nanostores",{"type":187,"value":284}," library in their documentation, which is what we’ll use for our example, but several UI frameworks already come with a built-in solution—Svelte has ",{"type":173,"tag":182,"props":286,"children":289},{"href":287,"rel":288},"https://svelte.dev/docs/svelte-store",[252],[290],{"type":187,"value":291},"Stores",{"type":187,"value":293},", Preact has ",{"type":173,"tag":182,"props":295,"children":298},{"href":296,"rel":297},"https://preactjs.com/guide/v10/signals/",[252],[299],{"type":187,"value":300},"Signals",{"type":187,"value":302}," (as does ",{"type":173,"tag":182,"props":304,"children":307},{"href":305,"rel":306},"https://www.solidjs.com/docs/latest#basic-reactivity",[252],[308],{"type":187,"value":309},"Solid",{"type":187,"value":311},"), and Vue has the ",{"type":173,"tag":182,"props":313,"children":316},{"href":314,"rel":315},"https://vuejs.org/guide/scaling-up/state-management.html#simple-state-management-with-reactivity-api",[252],[317],{"type":187,"value":318},"Reactivity API",{"type":187,"value":320},".",{"type":173,"tag":257,"props":322,"children":323},{},[324],{"type":187,"value":325},"第一次见到有人在公开场合说 Vue 的 Reactive API 是可以用于管理状态的。",{"type":173,"tag":257,"props":327,"children":328},{},[329],{"type":173,"tag":330,"props":331,"children":333},"img",{"alt":166,"src":332},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20231010125234.png",[],{"type":173,"tag":257,"props":335,"children":336},{},[337],{"type":187,"value":338},"新的状态管理办法结合了事件通知和统一的状态管理库。一种替代的版本是使用回调函数。",{"type":173,"tag":217,"props":340,"children":342},{"id":341},"框架类库",[343],{"type":187,"value":341},{"type":173,"tag":174,"props":345,"children":346},{},[347,356,365],{"type":173,"tag":178,"props":348,"children":349},{},[350],{"type":173,"tag":182,"props":351,"children":353},{"href":352},"/maps/_fe-framework/assets/iconify",[354],{"type":187,"value":355},"Iconify",{"type":173,"tag":178,"props":357,"children":358},{},[359],{"type":173,"tag":182,"props":360,"children":362},{"href":361},"/maps/_fe-framework/schema/zod",[363],{"type":187,"value":364},"Zod",{"type":173,"tag":178,"props":366,"children":367},{},[368],{"type":173,"tag":182,"props":369,"children":370},{"href":43},[371],{"type":187,"value":372},"Blockies Animate",{"title":166,"searchDepth":374,"depth":374,"links":375},2,[376,377],{"id":219,"depth":374,"text":219},{"id":341,"depth":374,"text":341},"markdown","content:6.maps:_fe-framework:fe-framework.md","content","6.maps/_fe-framework/fe-framework.md","6.maps/_fe-framework/fe-framework","md",[385,387],{"_path":352,"title":355,"description":386},"Iconify 是一个图标库，提供了多种图标集合的访问和使用方式。",{"_path":230,"title":388,"description":389},"微前端","微前端是一种架构风格，是一种将前端应用拆分成更小、更独立的部分，然后将这些部分组合在一起的技术方案。微前端的目标是将单体应用拆分成多个小型应用，每个小型应用都可以独立开发、独立部署。",1749721429776]