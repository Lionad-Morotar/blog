[{"data":1,"prerenderedAt":388},["ShallowReactive",2],{"navigation":3,"/maps/_fe-framework/fe-framework":158,"/maps/_fe-framework/fe-framework-surround":380},[4,35,89,95,122,128,152],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🌪️ tailwind4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":45,"_path":46},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":48,"_path":49},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":51,"_path":52},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":54,"_path":55},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":57,"_path":58},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":60,"_path":61},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":63,"_path":64},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":66,"_path":67},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":69,"_path":70},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":72,"_path":73},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":75,"_path":76},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":78,"_path":79},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":81,"_path":82},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":84,"_path":85},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":87,"_path":88},"📝 技术博客归档","/articles/archive",{"title":90,"_path":91,"children":92},"读书笔记 / Notes","/books",[93],{"title":94,"_path":91},"📕 读书笔记",{"title":96,"_path":97,"children":98},"吉他剧场 / Music","/music",[99,101,104,107,110,113,116,119],{"title":100,"_path":97},"🎸 FingerStyle！",{"title":102,"_path":103},"🌬️ 等待的风","/music/wind",{"title":105,"_path":106},"💕 约定的海洋","/music/ocean",{"title":108,"_path":109},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":111,"_path":112},"🌏 残酷天使的行动纲领","/music/eva",{"title":114,"_path":115},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":117,"_path":118},"🍷 Wu Wei","/music/wu-wei",{"title":120,"_path":121},"🌅 无题","/music/untitled",{"title":123,"_path":124,"children":125},"知识地图 / Maps","/maps",[126],{"title":127,"_path":124},"🏁 知识地图",{"title":129,"_path":130,"children":131},"造物 / Make","/tools",[132,134,137,140,143,146,149],{"title":133,"_path":130},"🧰 工具收集",{"title":135,"_path":136},"📕 博客","/tools/blog",{"title":138,"_path":139},"🥥 Coconut","/tools/coconut",{"title":141,"_path":142},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":144,"_path":145},"🌐 AnySort","/tools/anysort",{"title":147,"_path":148},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":150,"_path":151},"👓 Crapto","/tools/crypto-inline",{"title":153,"_path":154,"children":155},"我 / About","/hire",[156],{"title":157,"_path":154},"📬 技术简历",{"_path":159,"_dir":160,"_draft":161,"_partial":162,"_locale":163,"title":164,"description":165,"body":166,"_type":374,"_id":375,"_source":376,"_file":377,"_stem":378,"_extension":379},"/maps/_fe-framework/fe-framework","_fe-framework",false,true,"","前端框架","前端框架是在前端开发不同阶段，用以简化开发的工具集合。它们提供了一种组织代码的方式，使得开发者可以专注于业务逻辑，而不是底层的技术细节。",{"type":167,"children":168,"toc":367},"root",[169,178,211,216,237,250,256,315,320,328,333,338,350,355],{"type":170,"tag":171,"props":172,"children":174},"element","h2",{"id":173},"ui-框架",[175],{"type":176,"value":177},"text","UI 框架",{"type":170,"tag":179,"props":180,"children":181},"ul",{},[182,193,202],{"type":170,"tag":183,"props":184,"children":185},"li",{},[186],{"type":170,"tag":187,"props":188,"children":190},"a",{"href":189},"/maps/_fe-framework/ui/vue",[191],{"type":176,"value":192},"Vue",{"type":170,"tag":183,"props":194,"children":195},{},[196],{"type":170,"tag":187,"props":197,"children":199},{"href":198},"/maps/_fe-framework/ui/react",[200],{"type":176,"value":201},"React",{"type":170,"tag":183,"props":203,"children":204},{},[205],{"type":170,"tag":187,"props":206,"children":208},{"href":207},"/maps/_fe-framework/ui/angular",[209],{"type":176,"value":210},"Angular",{"type":170,"tag":171,"props":212,"children":214},{"id":213},"隔离方案",[215],{"type":176,"value":213},{"type":170,"tag":179,"props":217,"children":218},{},[219,228],{"type":170,"tag":183,"props":220,"children":221},{},[222],{"type":170,"tag":187,"props":223,"children":225},{"href":224},"/maps/_fe-framework/micro-fe",[226],{"type":176,"value":227},"Micro FrontEnd",{"type":170,"tag":183,"props":229,"children":230},{},[231],{"type":170,"tag":187,"props":232,"children":234},{"href":233},"/maps/_fe-framework/web-components",[235],{"type":176,"value":236},"Web Components",{"type":170,"tag":238,"props":239,"children":241},"h4",{"id":240},"sharing-state-with-islands-architecture",[242],{"type":170,"tag":187,"props":243,"children":247},{"href":244,"rel":245},"https://frontendatscale.com/blog/islands-architecture-state/",[246],"nofollow",[248],{"type":176,"value":249},"Sharing State with Islands Architecture",{"type":170,"tag":251,"props":252,"children":253},"p",{},[254],{"type":176,"value":255},"MAXI FERREIRA 阐述的在岛模式组件中管理状态的思路也可以用于低代码场景。",{"type":170,"tag":251,"props":257,"children":258},{},[259],{"type":170,"tag":260,"props":261,"children":262},"q",{},[263,265,277,279,286,288,295,297,304,306,313],{"type":176,"value":264},"We have several options for choosing a store. Astro recommends the ",{"type":170,"tag":187,"props":266,"children":269},{"href":267,"rel":268},"https://github.com/nanostores/nanostores",[246],[270],{"type":170,"tag":271,"props":272,"children":274},"code",{"className":273},[],[275],{"type":176,"value":276},"nanostores",{"type":176,"value":278}," library in their documentation, which is what we’ll use for our example, but several UI frameworks already come with a built-in solution—Svelte has ",{"type":170,"tag":187,"props":280,"children":283},{"href":281,"rel":282},"https://svelte.dev/docs/svelte-store",[246],[284],{"type":176,"value":285},"Stores",{"type":176,"value":287},", Preact has ",{"type":170,"tag":187,"props":289,"children":292},{"href":290,"rel":291},"https://preactjs.com/guide/v10/signals/",[246],[293],{"type":176,"value":294},"Signals",{"type":176,"value":296}," (as does ",{"type":170,"tag":187,"props":298,"children":301},{"href":299,"rel":300},"https://www.solidjs.com/docs/latest#basic-reactivity",[246],[302],{"type":176,"value":303},"Solid",{"type":176,"value":305},"), and Vue has the ",{"type":170,"tag":187,"props":307,"children":310},{"href":308,"rel":309},"https://vuejs.org/guide/scaling-up/state-management.html#simple-state-management-with-reactivity-api",[246],[311],{"type":176,"value":312},"Reactivity API",{"type":176,"value":314},".",{"type":170,"tag":251,"props":316,"children":317},{},[318],{"type":176,"value":319},"第一次见到有人在公开场合说 Vue 的 Reactive API 是可以用于管理状态的。",{"type":170,"tag":251,"props":321,"children":322},{},[323],{"type":170,"tag":324,"props":325,"children":327},"img",{"alt":163,"src":326},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20231010125234.png",[],{"type":170,"tag":251,"props":329,"children":330},{},[331],{"type":176,"value":332},"新的状态管理办法结合了事件通知和统一的状态管理库。一种替代的版本是使用回调函数。",{"type":170,"tag":171,"props":334,"children":336},{"id":335},"元框架",[337],{"type":176,"value":335},{"type":170,"tag":179,"props":339,"children":340},{},[341],{"type":170,"tag":183,"props":342,"children":343},{},[344],{"type":170,"tag":187,"props":345,"children":347},{"href":346},"/maps/_fe-framework/nuxt/nuxt",[348],{"type":176,"value":349},"Nuxt",{"type":170,"tag":171,"props":351,"children":353},{"id":352},"插件和库",[354],{"type":176,"value":352},{"type":170,"tag":179,"props":356,"children":357},{},[358],{"type":170,"tag":183,"props":359,"children":360},{},[361],{"type":170,"tag":187,"props":362,"children":364},{"href":363},"/maps/_fe-framework/schema/zod",[365],{"type":176,"value":366},"Zod",{"title":163,"searchDepth":368,"depth":368,"links":369},2,[370,371,372,373],{"id":173,"depth":368,"text":177},{"id":213,"depth":368,"text":213},{"id":335,"depth":368,"text":335},{"id":352,"depth":368,"text":352},"markdown","content:6.maps:_fe-framework:fe-framework.md","content","6.maps/_fe-framework/fe-framework.md","6.maps/_fe-framework/fe-framework","md",[381,385],{"_path":382,"title":383,"description":384},"/maps/_devops/version-control","版本管理","版本管理是一种软件开发过程中的管理方法，它通过对软件的版本号进行管理，以便于开发者和用户了解软件的变动情况。",{"_path":224,"title":386,"description":387},"微前端","微前端是一种架构风格，是一种将前端应用拆分成更小、更独立的部分，然后将这些部分组合在一起的技术方案。微前端的目标是将单体应用拆分成多个小型应用，每个小型应用都可以独立开发、独立部署。",1742808187607]