[{"data":1,"prerenderedAt":388},["ShallowReactive",2],{"navigation":3,"/maps/_fe-framework/fe-framework":158,"/maps/_fe-framework/fe-framework-surround":382},[4,35,89,95,122,128,152],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":45,"_path":46},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":48,"_path":49},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":51,"_path":52},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":54,"_path":55},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":57,"_path":58},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":60,"_path":61},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":63,"_path":64},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":66,"_path":67},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":69,"_path":70},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":72,"_path":73},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":75,"_path":76},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":78,"_path":79},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":81,"_path":82},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":84,"_path":85},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":87,"_path":88},"📝 技术博客归档","/articles/archive",{"title":90,"_path":91,"children":92},"读书笔记 / Notes","/books",[93],{"title":94,"_path":91},"📕 读书笔记",{"title":96,"_path":97,"children":98},"吉他剧场 / Music","/music",[99,101,104,107,110,113,116,119],{"title":100,"_path":97},"🎸 FingerStyle！",{"title":102,"_path":103},"🌬️ 等待的风","/music/wind",{"title":105,"_path":106},"💕 约定的海洋","/music/ocean",{"title":108,"_path":109},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":111,"_path":112},"🌏 残酷天使的行动纲领","/music/eva",{"title":114,"_path":115},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":117,"_path":118},"🍷 Wu Wei","/music/wu-wei",{"title":120,"_path":121},"🌅 无题","/music/untitled",{"title":123,"_path":124,"children":125},"知识地图 / Maps","/maps",[126],{"title":127,"_path":124},"🏁 知识地图",{"title":129,"_path":130,"children":131},"造物 / Make","/tools",[132,134,137,140,143,146,149],{"title":133,"_path":130},"🧰 工具收集",{"title":135,"_path":136},"📕 博客","/tools/blog",{"title":138,"_path":139},"🥥 Coconut","/tools/coconut",{"title":141,"_path":142},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":144,"_path":145},"🌐 AnySort","/tools/anysort",{"title":147,"_path":148},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":150,"_path":151},"👓 Crapto","/tools/crypto-inline",{"title":153,"_path":154,"children":155},"我 / About","/hire",[156],{"title":157,"_path":154},"📬 技术简历",{"_path":159,"_dir":160,"_draft":161,"_partial":162,"_locale":163,"title":164,"description":165,"body":166,"_type":376,"_id":377,"_source":378,"_file":379,"_stem":380,"_extension":381},"/maps/_fe-framework/fe-framework","_fe-framework",false,true,"","前端框架","前端框架是在前端开发不同阶段，用以简化开发的工具集合。它们提供了一种组织代码的方式，使得开发者可以专注于业务逻辑，而不是底层的技术细节。",{"type":167,"children":168,"toc":370},"root",[169,213,219,240,253,259,318,323,331,336,341,353,358],{"type":170,"tag":171,"props":172,"children":173},"element","ul",{},[174,186,195,204],{"type":170,"tag":175,"props":176,"children":177},"li",{},[178],{"type":170,"tag":179,"props":180,"children":182},"a",{"href":181},"/maps/_fe-framework/ui/vue",[183],{"type":184,"value":185},"text","Vue",{"type":170,"tag":175,"props":187,"children":188},{},[189],{"type":170,"tag":179,"props":190,"children":192},{"href":191},"/maps/_fe-framework/ui/react",[193],{"type":184,"value":194},"React",{"type":170,"tag":175,"props":196,"children":197},{},[198],{"type":170,"tag":179,"props":199,"children":201},{"href":200},"/maps/_fe-framework/ui/angular",[202],{"type":184,"value":203},"Angular",{"type":170,"tag":175,"props":205,"children":206},{},[207],{"type":170,"tag":179,"props":208,"children":210},{"href":209},"/maps/_fe-framework/nuxt/nuxt",[211],{"type":184,"value":212},"Nuxt",{"type":170,"tag":214,"props":215,"children":217},"h2",{"id":216},"隔离方案",[218],{"type":184,"value":216},{"type":170,"tag":171,"props":220,"children":221},{},[222,231],{"type":170,"tag":175,"props":223,"children":224},{},[225],{"type":170,"tag":179,"props":226,"children":228},{"href":227},"/maps/_fe-framework/micro-fe",[229],{"type":184,"value":230},"Micro FrontEnd",{"type":170,"tag":175,"props":232,"children":233},{},[234],{"type":170,"tag":179,"props":235,"children":237},{"href":236},"/maps/_fe-framework/web-components",[238],{"type":184,"value":239},"Web Components",{"type":170,"tag":241,"props":242,"children":244},"h4",{"id":243},"sharing-state-with-islands-architecture",[245],{"type":170,"tag":179,"props":246,"children":250},{"href":247,"rel":248},"https://frontendatscale.com/blog/islands-architecture-state/",[249],"nofollow",[251],{"type":184,"value":252},"Sharing State with Islands Architecture",{"type":170,"tag":254,"props":255,"children":256},"p",{},[257],{"type":184,"value":258},"MAXI FERREIRA 阐述的在岛模式组件中管理状态的思路也可以用于低代码场景。",{"type":170,"tag":254,"props":260,"children":261},{},[262],{"type":170,"tag":263,"props":264,"children":265},"q",{},[266,268,280,282,289,291,298,300,307,309,316],{"type":184,"value":267},"We have several options for choosing a store. Astro recommends the ",{"type":170,"tag":179,"props":269,"children":272},{"href":270,"rel":271},"https://github.com/nanostores/nanostores",[249],[273],{"type":170,"tag":274,"props":275,"children":277},"code",{"className":276},[],[278],{"type":184,"value":279},"nanostores",{"type":184,"value":281}," library in their documentation, which is what we’ll use for our example, but several UI frameworks already come with a built-in solution—Svelte has ",{"type":170,"tag":179,"props":283,"children":286},{"href":284,"rel":285},"https://svelte.dev/docs/svelte-store",[249],[287],{"type":184,"value":288},"Stores",{"type":184,"value":290},", Preact has ",{"type":170,"tag":179,"props":292,"children":295},{"href":293,"rel":294},"https://preactjs.com/guide/v10/signals/",[249],[296],{"type":184,"value":297},"Signals",{"type":184,"value":299}," (as does ",{"type":170,"tag":179,"props":301,"children":304},{"href":302,"rel":303},"https://www.solidjs.com/docs/latest#basic-reactivity",[249],[305],{"type":184,"value":306},"Solid",{"type":184,"value":308},"), and Vue has the ",{"type":170,"tag":179,"props":310,"children":313},{"href":311,"rel":312},"https://vuejs.org/guide/scaling-up/state-management.html#simple-state-management-with-reactivity-api",[249],[314],{"type":184,"value":315},"Reactivity API",{"type":184,"value":317},".",{"type":170,"tag":254,"props":319,"children":320},{},[321],{"type":184,"value":322},"第一次见到有人在公开场合说 Vue 的 Reactive API 是可以用于管理状态的。",{"type":170,"tag":254,"props":324,"children":325},{},[326],{"type":170,"tag":327,"props":328,"children":330},"img",{"alt":163,"src":329},"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20231010125234.png",[],{"type":170,"tag":254,"props":332,"children":333},{},[334],{"type":184,"value":335},"新的状态管理办法结合了事件通知和统一的状态管理库。一种替代的版本是使用回调函数。",{"type":170,"tag":214,"props":337,"children":339},{"id":338},"小型框架",[340],{"type":184,"value":338},{"type":170,"tag":171,"props":342,"children":343},{},[344],{"type":170,"tag":175,"props":345,"children":346},{},[347],{"type":170,"tag":179,"props":348,"children":350},{"href":349},"/maps/_fe-framework/assets/iconify",[351],{"type":184,"value":352},"Iconify",{"type":170,"tag":214,"props":354,"children":356},{"id":355},"插件和库",[357],{"type":184,"value":355},{"type":170,"tag":171,"props":359,"children":360},{},[361],{"type":170,"tag":175,"props":362,"children":363},{},[364],{"type":170,"tag":179,"props":365,"children":367},{"href":366},"/maps/_fe-framework/schema/zod",[368],{"type":184,"value":369},"Zod",{"title":163,"searchDepth":371,"depth":371,"links":372},2,[373,374,375],{"id":216,"depth":371,"text":216},{"id":338,"depth":371,"text":338},{"id":355,"depth":371,"text":355},"markdown","content:6.maps:_fe-framework:fe-framework.md","content","6.maps/_fe-framework/fe-framework.md","6.maps/_fe-framework/fe-framework","md",[383,385],{"_path":349,"title":352,"description":384},"Iconify 是一个图标库，提供了多种图标集合的访问和使用方式。",{"_path":227,"title":386,"description":387},"微前端","微前端是一种架构风格，是一种将前端应用拆分成更小、更独立的部分，然后将这些部分组合在一起的技术方案。微前端的目标是将单体应用拆分成多个小型应用，每个小型应用都可以独立开发、独立部署。",1748756310069]