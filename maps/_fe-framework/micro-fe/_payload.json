[{"data":1,"prerenderedAt":312},["ShallowReactive",2],{"navigation":3,"/maps/_fe-framework/micro-fe":155,"/maps/_fe-framework/micro-fe-surround":303},[4,35,86,92,119,125,149],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"读书笔记 / Notes","/books",[90],{"title":91,"_path":88},"📕 读书笔记",{"title":93,"_path":94,"children":95},"吉他剧场 / Music","/music",[96,98,101,104,107,110,113,116],{"title":97,"_path":94},"🎸 FingerStyle！",{"title":99,"_path":100},"🌬️ 等待的风","/music/wind",{"title":102,"_path":103},"💕 约定的海洋","/music/ocean",{"title":105,"_path":106},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":108,"_path":109},"🌏 残酷天使的行动纲领","/music/eva",{"title":111,"_path":112},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":114,"_path":115},"🍷 Wu Wei","/music/wu-wei",{"title":117,"_path":118},"🌅 无题","/music/untitled",{"title":120,"_path":121,"children":122},"知识地图 / Maps","/maps",[123],{"title":124,"_path":121},"🏁 知识地图",{"title":126,"_path":127,"children":128},"造物 / Make","/tools",[129,131,134,137,140,143,146],{"title":130,"_path":127},"🧰 工具收集",{"title":132,"_path":133},"📕 博客","/tools/blog",{"title":135,"_path":136},"🥥 Coconut","/tools/coconut",{"title":138,"_path":139},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":141,"_path":142},"🌐 AnySort","/tools/anysort",{"title":144,"_path":145},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":147,"_path":148},"👓 Crapto","/tools/crypto-inline",{"title":150,"_path":151,"children":152},"我 / About","/hire",[153],{"title":154,"_path":151},"📬 技术简历",{"_path":156,"_dir":157,"_draft":158,"_partial":159,"_locale":160,"title":161,"description":162,"body":163,"_type":297,"_id":298,"_source":299,"_file":300,"_stem":301,"_extension":302},"/maps/_fe-framework/micro-fe","_fe-framework",false,true,"","微前端","微前端是一种架构风格，是一种将前端应用拆分成更小、更独立的部分，然后将这些部分组合在一起的技术方案。微前端的目标是将单体应用拆分成多个小型应用，每个小型应用都可以独立开发、独立部署。",{"type":164,"children":165,"toc":294},"root",[166,175,181,190,196,201,246,252,280],{"type":167,"tag":168,"props":169,"children":171},"element","h4",{"id":170},"微前端解决什么问题",[172],{"type":173,"value":174},"text","微前端解决什么问题？",{"type":167,"tag":176,"props":177,"children":178},"p",{},[179],{"type":173,"value":180},"主要应对一个单体应用在相对长的时间跨度下，由于参与人数、团队的增多和变迁，从一个普通应用演变为了巨石应用，随之带来的难以维护的问题。",{"type":167,"tag":176,"props":182,"children":183},{},[184],{"type":167,"tag":185,"props":186,"children":189},"img",{"alt":187,"src":188},"单体应用、前后端分离和微前端","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20221023230253.png",[],{"type":167,"tag":168,"props":191,"children":193},{"id":192},"微前端技术要点",[194],{"type":173,"value":195},"微前端技术要点？",{"type":167,"tag":176,"props":197,"children":198},{},[199],{"type":173,"value":200},"做到技术栈无关的同时提供以下技术能力支持：",{"type":167,"tag":202,"props":203,"children":204},"ul",{},[205,211,216,221,226,231,236,241],{"type":167,"tag":206,"props":207,"children":208},"li",{},[209],{"type":173,"value":210},"JS 沙箱：子应用全局变量、事件不互相影响",{"type":167,"tag":206,"props":212,"children":213},{},[214],{"type":173,"value":215},"CSS 隔离：子应用之间的样式不互相影响",{"type":167,"tag":206,"props":217,"children":218},{},[219],{"type":173,"value":220},"公共依赖加载：不同子应用都用到的资源怎么加载",{"type":167,"tag":206,"props":222,"children":223},{},[224],{"type":173,"value":225},"父子应用通讯：子应用如何调用父应用方法、父应用如何下发状态",{"type":167,"tag":206,"props":227,"children":228},{},[229],{"type":173,"value":230},"按需加载",{"type":167,"tag":206,"props":232,"children":233},{},[234],{"type":173,"value":235},"预加载",{"type":167,"tag":206,"props":237,"children":238},{},[239],{"type":173,"value":240},"子应用嵌套",{"type":167,"tag":206,"props":242,"children":243},{},[244],{"type":173,"value":245},"子应用并行",{"type":167,"tag":168,"props":247,"children":249},{"id":248},"微前端的方案选择",[250],{"type":173,"value":251},"微前端的方案选择？",{"type":167,"tag":202,"props":253,"children":254},{},[255,260,265,270,275],{"type":167,"tag":206,"props":256,"children":257},{},[258],{"type":173,"value":259},"基座方案：主应用中预先注册子应用，然后监听路由变化，加载匹配到的子应用资源。",{"type":167,"tag":206,"props":261,"children":262},{},[263],{"type":173,"value":264},"iframe：接入简单并且有完美的隔离效果，但是在共享资源如 URL、Cookie 时不好处理，再者是加载慢。",{"type":167,"tag":206,"props":266,"children":267},{},[268],{"type":173,"value":269},"Web Components：Custom Elements、Shadow DOM、HTML Templates 等规范的集合，需调查兼容性。",{"type":167,"tag":206,"props":271,"children":272},{},[273],{"type":173,"value":274},"Module Federation：没有基座，打包时使用模块联邦注册远程模块，使用时用 import 导入模块。",{"type":167,"tag":206,"props":276,"children":277},{},[278],{"type":173,"value":279},"ESM：微前端的无技术栈限制、应用单独开发，多应用整合三个特性都能很好支持，需调查兼容性，以及 ESM 语法有传染性。",{"type":167,"tag":176,"props":281,"children":282},{},[283,285],{"type":173,"value":284},"表格总结见：",{"type":167,"tag":286,"props":287,"children":291},"a",{"href":288,"rel":289},"https://zhuanlan.zhihu.com/p/556422347",[290],"nofollow",[292],{"type":173,"value":293},"一文读懂 5 种微前端常用方案",{"title":160,"searchDepth":295,"depth":295,"links":296},2,[],"markdown","content:6.maps:_fe-framework:micro-fe:index.md","content","6.maps/_fe-framework/micro-fe/index.md","6.maps/_fe-framework/micro-fe/index","md",[304,308],{"_path":305,"title":306,"description":307},"/maps/_fe-framework/fe-framework","前端框架","前端框架是在前端开发不同阶段，用以简化开发的工具集合。它们提供了一种组织代码的方式，使得开发者可以专注于业务逻辑，而不是底层的技术细节。",{"_path":309,"title":310,"description":311},"/maps/_fe-framework/nuxt/nuxt","Nuxt","Nuxt 是一个基于 Vue.js 全栈框架",1742745247510]