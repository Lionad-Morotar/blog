[{"data":1,"prerenderedAt":868},["ShallowReactive",2],{"navigation":3,"/maps/_fe-framework/ui/react":161,"/maps/_fe-framework/ui/react-surround":860},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":854,"_id":855,"_source":856,"_file":857,"_stem":858,"_extension":859},"/maps/_fe-framework/ui/react","ui",false,true,"","React Mind Map","React 是一个经典的用户界面框架。",{"type":170,"children":171,"toc":849},"root",[172,180,187,193,443,449,454,468,474,479,485,490,496,501,510,521,527,532,706,712,717,723,728,734,739,745,750,755,761,796,801,807,812,832,838,843],{"type":173,"tag":174,"props":175,"children":177},"element","h2",{"id":176},"架构",[178],{"type":179,"value":176},"text",{"type":173,"tag":181,"props":182,"children":184},"h4",{"id":183},"fiber-是什么怎么实现的",[185],{"type":179,"value":186},"Fiber 是什么，怎么实现的？",{"type":173,"tag":188,"props":189,"children":190},"p",{},[191],{"type":179,"value":192},"在 React 15 之前更新 VDom 树时，React 会找到所有差异并一次性地同步更新它们，这可能会导致卡顿。使用 Fiber 后，React 把树的遍历转换为从父节点，到子节点，到兄弟节点，再回到父节点这一流程，使得遍历是可以中断的，分批异步更新 DOM 成为可能。React 可以在浏览器有动画、用户输入任务等高优先级任务时，先执行高优先级任务。直到有空闲才继续执行 Diff 操作。",{"type":173,"tag":194,"props":195,"children":199},"pre",{"className":196,"code":197,"language":198,"meta":166,"style":166},"language-js shiki shiki-themes material-theme-lighter github-light github-dark monokai","const tasks = []\nfunction diff (time) {\n  while (time > 0 & task.length) {\n    doHighLevelWork()\n  }\n  if (task.length) {\n    requestIdelCallBack(diff)\n  }\n}\nrequestIdelCallBack(render)\n","js",[200],{"type":173,"tag":201,"props":202,"children":203},"code",{"__ignoreMap":166},[204,234,271,331,345,354,388,412,420,429],{"type":173,"tag":205,"props":206,"children":209},"span",{"class":207,"line":208},"line",1,[210,216,222,228],{"type":173,"tag":205,"props":211,"children":213},{"style":212},"--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic",[214],{"type":179,"value":215},"const",{"type":173,"tag":205,"props":217,"children":219},{"style":218},"--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[220],{"type":179,"value":221}," tasks",{"type":173,"tag":205,"props":223,"children":225},{"style":224},"--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[226],{"type":179,"value":227}," =",{"type":173,"tag":205,"props":229,"children":231},{"style":230},"--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[232],{"type":179,"value":233}," []\n",{"type":173,"tag":205,"props":235,"children":237},{"class":207,"line":236},2,[238,243,249,255,261,266],{"type":173,"tag":205,"props":239,"children":240},{"style":212},[241],{"type":179,"value":242},"function",{"type":173,"tag":205,"props":244,"children":246},{"style":245},"--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[247],{"type":179,"value":248}," diff",{"type":173,"tag":205,"props":250,"children":252},{"style":251},"--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[253],{"type":179,"value":254}," (",{"type":173,"tag":205,"props":256,"children":258},{"style":257},"--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic",[259],{"type":179,"value":260},"time",{"type":173,"tag":205,"props":262,"children":263},{"style":251},[264],{"type":179,"value":265},")",{"type":173,"tag":205,"props":267,"children":268},{"style":251},[269],{"type":179,"value":270}," {\n",{"type":173,"tag":205,"props":272,"children":274},{"class":207,"line":273},3,[275,281,286,290,295,301,306,311,316,321,326],{"type":173,"tag":205,"props":276,"children":278},{"style":277},"--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit",[279],{"type":179,"value":280},"  while",{"type":173,"tag":205,"props":282,"children":284},{"style":283},"--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[285],{"type":179,"value":254},{"type":173,"tag":205,"props":287,"children":288},{"style":230},[289],{"type":179,"value":260},{"type":173,"tag":205,"props":291,"children":292},{"style":224},[293],{"type":179,"value":294}," >",{"type":173,"tag":205,"props":296,"children":298},{"style":297},"--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[299],{"type":179,"value":300}," 0",{"type":173,"tag":205,"props":302,"children":303},{"style":224},[304],{"type":179,"value":305}," &",{"type":173,"tag":205,"props":307,"children":308},{"style":230},[309],{"type":179,"value":310}," task",{"type":173,"tag":205,"props":312,"children":313},{"style":251},[314],{"type":179,"value":315},".",{"type":173,"tag":205,"props":317,"children":318},{"style":218},[319],{"type":179,"value":320},"length",{"type":173,"tag":205,"props":322,"children":323},{"style":283},[324],{"type":179,"value":325},") ",{"type":173,"tag":205,"props":327,"children":328},{"style":251},[329],{"type":179,"value":330},"{\n",{"type":173,"tag":205,"props":332,"children":334},{"class":207,"line":333},4,[335,340],{"type":173,"tag":205,"props":336,"children":337},{"style":245},[338],{"type":179,"value":339},"    doHighLevelWork",{"type":173,"tag":205,"props":341,"children":342},{"style":283},[343],{"type":179,"value":344},"()\n",{"type":173,"tag":205,"props":346,"children":348},{"class":207,"line":347},5,[349],{"type":173,"tag":205,"props":350,"children":351},{"style":251},[352],{"type":179,"value":353},"  }\n",{"type":173,"tag":205,"props":355,"children":357},{"class":207,"line":356},6,[358,363,367,372,376,380,384],{"type":173,"tag":205,"props":359,"children":360},{"style":277},[361],{"type":179,"value":362},"  if",{"type":173,"tag":205,"props":364,"children":365},{"style":283},[366],{"type":179,"value":254},{"type":173,"tag":205,"props":368,"children":369},{"style":230},[370],{"type":179,"value":371},"task",{"type":173,"tag":205,"props":373,"children":374},{"style":251},[375],{"type":179,"value":315},{"type":173,"tag":205,"props":377,"children":378},{"style":218},[379],{"type":179,"value":320},{"type":173,"tag":205,"props":381,"children":382},{"style":283},[383],{"type":179,"value":325},{"type":173,"tag":205,"props":385,"children":386},{"style":251},[387],{"type":179,"value":330},{"type":173,"tag":205,"props":389,"children":391},{"class":207,"line":390},7,[392,397,402,407],{"type":173,"tag":205,"props":393,"children":394},{"style":245},[395],{"type":179,"value":396},"    requestIdelCallBack",{"type":173,"tag":205,"props":398,"children":399},{"style":283},[400],{"type":179,"value":401},"(",{"type":173,"tag":205,"props":403,"children":404},{"style":230},[405],{"type":179,"value":406},"diff",{"type":173,"tag":205,"props":408,"children":409},{"style":283},[410],{"type":179,"value":411},")\n",{"type":173,"tag":205,"props":413,"children":415},{"class":207,"line":414},8,[416],{"type":173,"tag":205,"props":417,"children":418},{"style":251},[419],{"type":179,"value":353},{"type":173,"tag":205,"props":421,"children":423},{"class":207,"line":422},9,[424],{"type":173,"tag":205,"props":425,"children":426},{"style":251},[427],{"type":179,"value":428},"}\n",{"type":173,"tag":205,"props":430,"children":432},{"class":207,"line":431},10,[433,438],{"type":173,"tag":205,"props":434,"children":435},{"style":245},[436],{"type":179,"value":437},"requestIdelCallBack",{"type":173,"tag":205,"props":439,"children":440},{"style":230},[441],{"type":179,"value":442},"(render)\n",{"type":173,"tag":181,"props":444,"children":446},{"id":445},"syntheticevent-是什么",[447],{"type":179,"value":448},"SyntheticEvent 是什么？",{"type":173,"tag":188,"props":450,"children":451},{},[452],{"type":179,"value":453},"合成事件（SyntheticEvent）是 React 17 以前的事件系统设计思路，它是 DOM 事件上的一层封装。合成事件解决了浏览器兼容性问题，并且通过池化技术减少了内存消耗。不过，池化技术会在事件回收时，将对象属性重置为空，所以合成事件用于异步时，需要提前将值缓存或者使用 event.persist 将事件持久化。",{"type":173,"tag":188,"props":455,"children":456},{},[457,459],{"type":179,"value":458},"见：",{"type":173,"tag":460,"props":461,"children":465},"a",{"href":462,"rel":463},"https://reactjs.org/docs/events.html",[464],"nofollow",[466],{"type":179,"value":467},"SyntheticEvent",{"type":173,"tag":181,"props":469,"children":471},{"id":470},"purecomponent-是怎么更新视图的",[472],{"type":179,"value":473},"PureComponent 是怎么更新视图的？",{"type":173,"tag":188,"props":475,"children":476},{},[477],{"type":179,"value":478},"React.PureComponent 中默认在 shouldComponentUpdate 中实现了 state 和 props 的浅比较，以达到性能提升的目的。",{"type":173,"tag":181,"props":480,"children":482},{"id":481},"受控组件和非受控组件有什么区别",[483],{"type":179,"value":484},"受控组件和非受控组件有什么区别？",{"type":173,"tag":188,"props":486,"children":487},{},[488],{"type":179,"value":489},"受控组件通过绑定 value state 以及 onChange 事件来控制表单的状态，使用 HOC 能轻松创建受控组件。非受控组件则直接通过 ref 拿到表单的值。后者的代码要简单不少。",{"type":173,"tag":181,"props":491,"children":493},{"id":492},"react-的生命周期是怎么样的",[494],{"type":179,"value":495},"React 的生命周期是怎么样的？",{"type":173,"tag":188,"props":497,"children":498},{},[499],{"type":179,"value":500},"组件的生命周期分为 Mount、Update 和 Unmount 三个阶段，每个阶段又可以划分出渲染、预提交和提交三个过程。未挂载的组件会在实例创建好后，调 render 函数更新 DOM 节点，最后触发 componentDidMount 钩子，组件更新时则是根据 props 和 states 通过 shouldComponentUpdate 钩子来判断是否要调用 render 函数。",{"type":173,"tag":188,"props":502,"children":503},{},[504],{"type":173,"tag":505,"props":506,"children":509},"img",{"alt":507,"src":508},"React 16.4 Lifecycles","https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220627111627.png",[],{"type":173,"tag":188,"props":511,"children":512},{},[513,514],{"type":179,"value":458},{"type":173,"tag":460,"props":515,"children":518},{"href":516,"rel":517},"https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/",[464],[519],{"type":179,"value":520},"React Lifecycles",{"type":173,"tag":181,"props":522,"children":524},{"id":523},"getderivedstatefromprops-是做什么的",[525],{"type":179,"value":526},"getDerivedStateFromProps 是做什么的？",{"type":173,"tag":188,"props":528,"children":529},{},[530],{"type":179,"value":531},"getDerivedStateFromProps 是 React 16.3 后引入的生命周期，用来替代 componentWillReceiveProps。它用来接受来自 props 的更新，以更新当前组件的 States。在 getDerivedStateFromProps 之后，states 和 props 的改变都会走 shouldComponentUpdate 来确定是否跳过渲染。",{"type":173,"tag":194,"props":533,"children":535},{"className":196,"code":534,"language":198,"meta":166,"style":166},"static getDerivedStateFromProps(nextProps, prevState) {\n  const { type } = nextProps\n  if (type !== prevState.type) {\n    return {\n      type,\n    }\n  }\n  return null\n}\n",[536],{"type":173,"tag":201,"props":537,"children":538},{"__ignoreMap":166},[539,571,603,645,657,670,678,685,699],{"type":173,"tag":205,"props":540,"children":541},{"class":207,"line":208},[542,547,552,557,562,567],{"type":173,"tag":205,"props":543,"children":544},{"style":230},[545],{"type":179,"value":546},"static ",{"type":173,"tag":205,"props":548,"children":549},{"style":245},[550],{"type":179,"value":551},"getDerivedStateFromProps",{"type":173,"tag":205,"props":553,"children":554},{"style":230},[555],{"type":179,"value":556},"(nextProps",{"type":173,"tag":205,"props":558,"children":559},{"style":251},[560],{"type":179,"value":561},",",{"type":173,"tag":205,"props":563,"children":564},{"style":230},[565],{"type":179,"value":566}," prevState) ",{"type":173,"tag":205,"props":568,"children":569},{"style":251},[570],{"type":179,"value":330},{"type":173,"tag":205,"props":572,"children":573},{"class":207,"line":236},[574,579,584,589,594,598],{"type":173,"tag":205,"props":575,"children":576},{"style":212},[577],{"type":179,"value":578},"  const",{"type":173,"tag":205,"props":580,"children":581},{"style":251},[582],{"type":179,"value":583}," {",{"type":173,"tag":205,"props":585,"children":586},{"style":218},[587],{"type":179,"value":588}," type",{"type":173,"tag":205,"props":590,"children":591},{"style":251},[592],{"type":179,"value":593}," }",{"type":173,"tag":205,"props":595,"children":596},{"style":224},[597],{"type":179,"value":227},{"type":173,"tag":205,"props":599,"children":600},{"style":230},[601],{"type":179,"value":602}," nextProps\n",{"type":173,"tag":205,"props":604,"children":605},{"class":207,"line":273},[606,610,614,619,624,629,633,637,641],{"type":173,"tag":205,"props":607,"children":608},{"style":277},[609],{"type":179,"value":362},{"type":173,"tag":205,"props":611,"children":612},{"style":283},[613],{"type":179,"value":254},{"type":173,"tag":205,"props":615,"children":616},{"style":230},[617],{"type":179,"value":618},"type",{"type":173,"tag":205,"props":620,"children":621},{"style":224},[622],{"type":179,"value":623}," !==",{"type":173,"tag":205,"props":625,"children":626},{"style":230},[627],{"type":179,"value":628}," prevState",{"type":173,"tag":205,"props":630,"children":631},{"style":251},[632],{"type":179,"value":315},{"type":173,"tag":205,"props":634,"children":635},{"style":230},[636],{"type":179,"value":618},{"type":173,"tag":205,"props":638,"children":639},{"style":283},[640],{"type":179,"value":325},{"type":173,"tag":205,"props":642,"children":643},{"style":251},[644],{"type":179,"value":330},{"type":173,"tag":205,"props":646,"children":647},{"class":207,"line":333},[648,653],{"type":173,"tag":205,"props":649,"children":650},{"style":277},[651],{"type":179,"value":652},"    return",{"type":173,"tag":205,"props":654,"children":655},{"style":251},[656],{"type":179,"value":270},{"type":173,"tag":205,"props":658,"children":659},{"class":207,"line":347},[660,665],{"type":173,"tag":205,"props":661,"children":662},{"style":230},[663],{"type":179,"value":664},"      type",{"type":173,"tag":205,"props":666,"children":667},{"style":251},[668],{"type":179,"value":669},",\n",{"type":173,"tag":205,"props":671,"children":672},{"class":207,"line":356},[673],{"type":173,"tag":205,"props":674,"children":675},{"style":251},[676],{"type":179,"value":677},"    }\n",{"type":173,"tag":205,"props":679,"children":680},{"class":207,"line":390},[681],{"type":173,"tag":205,"props":682,"children":683},{"style":251},[684],{"type":179,"value":353},{"type":173,"tag":205,"props":686,"children":687},{"class":207,"line":414},[688,693],{"type":173,"tag":205,"props":689,"children":690},{"style":277},[691],{"type":179,"value":692},"  return",{"type":173,"tag":205,"props":694,"children":696},{"style":695},"--shiki-light:#39ADB5;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[697],{"type":179,"value":698}," null\n",{"type":173,"tag":205,"props":700,"children":701},{"class":207,"line":422},[702],{"type":173,"tag":205,"props":703,"children":704},{"style":251},[705],{"type":179,"value":428},{"type":173,"tag":181,"props":707,"children":709},{"id":708},"为什么在-componentdidmount-而不是其它生命周期中取请求数据",[710],{"type":179,"value":711},"为什么在 componentDidMount 而不是其它生命周期中取请求数据？",{"type":173,"tag":188,"props":713,"children":714},{},[715],{"type":179,"value":716},"其它生命周期可能执行多次，比如说 componentWillMount 会在服务端和客户端各执行一次。",{"type":173,"tag":181,"props":718,"children":720},{"id":719},"类组件和函数组件有什么不同",[721],{"type":179,"value":722},"类组件和函数组件有什么不同？",{"type":173,"tag":188,"props":724,"children":725},{},[726],{"type":179,"value":727},"类组件是面向对象的，函数组件是函数式的，了解前者主要需要知道继承、生命周期概念，后者则是 state、无副作用和引用透明。类组件依靠 shouldComponentUpdate 来优化性能，函数组件使用 React.memo。",{"type":173,"tag":181,"props":729,"children":731},{"id":730},"setstate-是同步的还是异步的",[732],{"type":179,"value":733},"setState 是同步的还是异步的？",{"type":173,"tag":188,"props":735,"children":736},{},[737],{"type":179,"value":738},"在大部分情况下 setState 是异步的。多次 setState 的状态会被合并，直到当前宏任务跑完才会触发重新渲染。这和 Taro 的思路是一致的。",{"type":173,"tag":181,"props":740,"children":742},{"id":741},"react-和-vue-有什么异同",[743],{"type":179,"value":744},"React 和 Vue 有什么异同？",{"type":173,"tag":188,"props":746,"children":747},{},[748],{"type":179,"value":749},"相同的地方在于他们都是渐进式的框架，都有自己的脚手架和最佳实践的模板；在框架层面，数据流都是自顶向下的，都引入了 VDom 的概念。",{"type":173,"tag":188,"props":751,"children":752},{},[753],{"type":179,"value":754},"不同的地方在于 Vue 的数据和视图是双向绑定的，React 推崇不可变数据，并且需要手动优化，所以 Vue 模板有利于静态优化。",{"type":173,"tag":174,"props":756,"children":758},{"id":757},"hooks",[759],{"type":179,"value":760},"Hooks",{"type":173,"tag":762,"props":763,"children":764},"ul",{},[765,776,786],{"type":173,"tag":766,"props":767,"children":768},"li",{},[769],{"type":173,"tag":460,"props":770,"children":773},{"href":771,"rel":772},"https://usehooks.com/",[464],[774],{"type":179,"value":775},"useHooks(🐠)",{"type":173,"tag":766,"props":777,"children":778},{},[779],{"type":173,"tag":460,"props":780,"children":783},{"href":781,"rel":782},"https://juejin.cn/post/6844903991730503687",[464],[784],{"type":179,"value":785},"精读《Hooks 取数 - swr 源码》",{"type":173,"tag":766,"props":787,"children":788},{},[789],{"type":173,"tag":460,"props":790,"children":793},{"href":791,"rel":792},"https://my.oschina.net/wsafight/blog/3133057",[464],[794],{"type":179,"value":795},"从 UX 与 DX 来谈一谈 React SWR",{"type":173,"tag":174,"props":797,"children":799},{"id":798},"应用",[800],{"type":179,"value":798},{"type":173,"tag":181,"props":802,"children":804},{"id":803},"什么是-hoc",[805],{"type":179,"value":806},"什么是 HOC？",{"type":173,"tag":188,"props":808,"children":809},{},[810],{"type":179,"value":811},"高阶组件是一种使用 React 组件的组合特性，把某种组件转换成另一种组件的设计模式，可以用来处理有横切关系的组件。",{"type":173,"tag":188,"props":813,"children":814},{},[815,816,823,825],{"type":179,"value":458},{"type":173,"tag":460,"props":817,"children":820},{"href":818,"rel":819},"https://zh-hans.reactjs.org/docs/higher-order-components.html",[464],[821],{"type":179,"value":822},"高阶组件",{"type":179,"value":824},"、",{"type":173,"tag":460,"props":826,"children":829},{"href":827,"rel":828},"https://zhuanlan.zhihu.com/p/24776678",[464],[830],{"type":179,"value":831},"TODO 深入理解 React 高阶组件",{"type":173,"tag":181,"props":833,"children":835},{"id":834},"什么是组件横切关系",[836],{"type":179,"value":837},"什么是组件横切关系？",{"type":173,"tag":188,"props":839,"children":840},{},[841],{"type":179,"value":842},"横切关系是那些和程序中大部分模块都有联系的部分，它们形成了切面开发的基础单元。",{"type":173,"tag":844,"props":845,"children":846},"style",{},[847],{"type":179,"value":848},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":166,"searchDepth":236,"depth":236,"links":850},[851,852,853],{"id":176,"depth":236,"text":176},{"id":757,"depth":236,"text":760},{"id":798,"depth":236,"text":798},"markdown","content:6.maps:_fe-framework:ui:react.md","content","6.maps/_fe-framework/ui/react.md","6.maps/_fe-framework/ui/react","md",[861,864],{"_path":862,"title":863,"description":166},"/maps/_fe-framework/ui/angular","Angular",{"_path":865,"title":866,"description":867},"/maps/_fe-framework/ui/vue","Vue","Vue 是一套用于构建用户界面的渐进式框架，它的核心库只关注视图层，易于上手，同时也便于与第三方库或既有项目整合。",1754391512744]