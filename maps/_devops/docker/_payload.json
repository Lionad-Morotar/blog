[{"data":1,"prerenderedAt":748},["ShallowReactive",2],{"navigation":3,"/maps/_devops/docker":384,"/maps/_devops/docker-surround":739},[4,35,86,105,132,138,144,150,378],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":45,"_path":46},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":48,"_path":49},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":51,"_path":52},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":54,"_path":55},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":57,"_path":58},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":60,"_path":61},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":63,"_path":64},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":66,"_path":67},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":69,"_path":70},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":72,"_path":73},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":75,"_path":76},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":78,"_path":79},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":81,"_path":82},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":84,"_path":85},"📝 技术博客归档","/articles/archive",{"title":87,"_path":88,"children":89},"造物 / Make","/tools",[90,93,96,99,102],{"title":91,"_path":92},"🥥 Coconut","/tools/coconut",{"title":94,"_path":95},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":97,"_path":98},"🌐 AnySort","/tools/anysort",{"title":100,"_path":101},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":103,"_path":104},"👓 Crapto","/tools/crypto-inline",{"title":106,"_path":107,"children":108},"吉他剧场 / Music","/music",[109,111,114,117,120,123,126,129],{"title":110,"_path":107},"🎸 FingerStyle！",{"title":112,"_path":113},"🌬️ 等待的风","/music/wind",{"title":115,"_path":116},"💕 约定的海洋","/music/ocean",{"title":118,"_path":119},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":121,"_path":122},"🌏 残酷天使的行动纲领","/music/eva",{"title":124,"_path":125},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":127,"_path":128},"🍷 Wu Wei","/music/wu-wei",{"title":130,"_path":131},"🌅 无题","/music/untitled",{"title":133,"_path":134,"children":135},"画点什么 / Paint","/paint",[136],{"title":137,"_path":134},"🚧 正在施工",{"title":139,"_path":140,"children":141},"读书笔记 / Notes","/books",[142],{"title":143,"_path":140},"📕 读书笔记",{"title":145,"_path":146,"children":147},"知识地图 / Maps","/maps",[148],{"title":149,"_path":146},"🏁 知识地图",{"title":151,"_path":152,"children":153},"零散的笔记 / Gists","/gists",[154,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375],{"title":155,"_path":152},"🧊 Gists",{"title":157,"_path":158},"网站的可访问性","/gists/accessibility",{"title":160,"_path":161},"Bit","/gists/bit",{"title":163,"_path":164},"图片模糊","/gists/blur",{"title":166,"_path":167},"渲染相关笔记","/gists/c4d",{"title":169,"_path":170},"CDN 问题记录","/gists/cdn",{"title":172,"_path":173},"消毒剂","/gists/cleaner",{"title":175,"_path":176},"Windows Command","/gists/cmd",{"title":178,"_path":179},"Command","/gists/command",{"title":181,"_path":182},"复杂科学","/gists/complexity-science",{"title":184,"_path":185},"GitHub Copilot","/gists/copilot",{"title":187,"_path":188},"宇宙","/gists/cosmos",{"title":190,"_path":191},"C++","/gists/cpp",{"title":193,"_path":194},"DEPRESSION","/gists/depression",{"title":196,"_path":197},"Developer Experience","/gists/developer-experience",{"title":199,"_path":200},"Device Metrics","/gists/device-metrix",{"title":202,"_path":203},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":205,"_path":206},"正则表达式","/gists/eegex",{"title":208,"_path":209},"Emoji","/gists/emoji",{"title":211,"_path":212},"工程","/gists/engineering",{"title":214,"_path":215},"熵","/gists/entropy",{"title":217,"_path":218},"Environment","/gists/environment",{"title":220,"_path":221},"Erlang","/gists/erlang",{"title":223,"_path":224},"逃离塔克夫","/gists/escape-from-tarkov",{"title":226,"_path":227},"ESNext (ES6-ES11)","/gists/esnext",{"title":229,"_path":230},"Eval！","/gists/eval",{"title":232,"_path":233},"Flutter","/gists/flutter",{"title":235,"_path":236},"字体","/gists/font",{"title":238,"_path":239},"JS 函数式编程","/gists/functional",{"title":241,"_path":242},"游戏化","/gists/gamification",{"title":244,"_path":245},"Google C++ Standard","/gists/google-cpp-standard",{"title":247,"_path":248},"双向链接完全体","/gists/graph",{"title":250,"_path":251},"Hardwares","/gists/hardwares",{"title":253,"_path":254},"哈希冲突","/gists/hash-collision",{"title":256,"_path":257},"信息设计","/gists/information-design",{"title":259,"_path":260},"InstantPage","/gists/instant.page",{"title":262,"_path":263},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":265,"_path":266},"KVStore","/gists/key-value-db",{"title":268,"_path":269},"Kubernetes","/gists/kubernetes",{"title":271,"_path":272},"Makefile","/gists/makefile",{"title":274,"_path":275},"Markdown Inline Style","/gists/markdown-nice",{"title":277,"_path":278},"减小页面快照体积","/gists/minify-html",{"title":280,"_path":281},"mklink","/gists/mklink",{"title":283,"_path":284},"Mock","/gists/mock",{"title":286,"_path":287},"多人协作系统","/gists/multiplayer",{"title":289,"_path":290},"多端应用","/gists/multy-end-app",{"title":292,"_path":293},"神经科学","/gists/neuroscience",{"title":295,"_path":296},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":298,"_path":299},"PInvoke","/gists/pinvoke",{"title":301,"_path":302},"像素","/gists/pixel",{"title":304,"_path":305},"PowerShell","/gists/powershell",{"title":307,"_path":308},"量子","/gists/quantum",{"title":310,"_path":311},"保持好奇心","/gists/questions",{"title":313,"_path":314},"React Native","/gists/react-native",{"title":316,"_path":317},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":319,"_path":320},"SEO","/gists/seo",{"title":322,"_path":323},"Shader","/gists/shader",{"title":325,"_path":326},"Shape Up","/gists/shape-up",{"title":328,"_path":329},"睡觉","/gists/sleep",{"title":331,"_path":332},"记录奇怪的问题","/gists/solved",{"title":334,"_path":335},"States","/gists/states",{"title":337,"_path":338},"Storage","/gists/storage",{"title":340,"_path":341},"音视频流处理","/gists/stream-cli",{"title":343,"_path":344},"Symbol","/gists/symbol",{"title":346,"_path":347},"系统论","/gists/systems-theory",{"title":349,"_path":350},"任务切片","/gists/task-slice",{"title":352,"_path":353},"技术偏好","/gists/tech-dudge",{"title":355,"_path":356},"Untitled","/gists/untitled",{"title":358,"_path":359},"可变字体","/gists/variable-font",{"title":361,"_path":362},"视觉错觉","/gists/visual-illusion",{"title":364,"_path":365},"SS(SSR)","/gists/vpn",{"title":367,"_path":368},"VS Code 插件开发","/gists/vscode-plugin",{"title":370,"_path":371},"Web Components","/gists/web-components",{"title":373,"_path":374},"Windows","/gists/windows",{"title":376,"_path":377},"查缺补漏","/gists/wrong",{"title":379,"_path":380,"children":381},"我 / About","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"_path":385,"_dir":386,"_draft":387,"_partial":388,"_locale":389,"title":390,"description":391,"body":392,"_type":733,"_id":734,"_source":735,"_file":736,"_stem":737,"_extension":738},"/maps/_devops/docker","_devops",false,true,"","Docker","Docker 是一种容器管理工具，通过对系统资源的控制与隔离，把软件、软件运行时、系统工具、系统库和配置打包到一个镜像中，运行在有有独立命名空间的容器进程内，可以使软件的所有依赖都标准化。",{"type":393,"children":394,"toc":722},"root",[395,403,410,416,422,427,432,453,458,463,468,473,498,503,508,513,518,523,528,533,623,628,664,675,680,691],{"type":396,"tag":397,"props":398,"children":400},"element","h2",{"id":399},"简介",[401],{"type":402,"value":399},"text",{"type":396,"tag":404,"props":405,"children":407},"h4",{"id":406},"docker-是什么",[408],{"type":402,"value":409},"Docker 是什么？",{"type":396,"tag":411,"props":412,"children":413},"p",{},[414],{"type":402,"value":415},"Docker 本身不是容器，而是容器标准的一种实现及其管理工具。",{"type":396,"tag":404,"props":417,"children":419},{"id":418},"容器是什么",[420],{"type":402,"value":421},"容器是什么？",{"type":396,"tag":411,"props":423,"children":424},{},[425],{"type":402,"value":426},"容器是一种软件打包的技术。通过对系统资源的控制与隔离，把软件、软件运行时、系统工具、系统库和配置打包到一个镜像中，运行在有有独立命名空间的容器进程内，可以使软件的所有依赖都标准化。所以使用容器技术能方便地将软件打包成标准单元。",{"type":396,"tag":397,"props":428,"children":430},{"id":429},"原理",[431],{"type":402,"value":429},{"type":396,"tag":411,"props":433,"children":434},{},[435,437,451],{"type":402,"value":436},"Docker 和虚拟机都希望能提供一个虚拟、完整、独立的运行时环境，通过提高虚拟环境的隔离型，以便管理。一般来说，虚拟机的原理是模拟硬件环境，所以需要安装客户端操作系统",{"type":396,"tag":438,"props":439,"children":440},"sup",{},[441],{"type":396,"tag":442,"props":443,"children":448},"a",{"href":444,"ariaDescribedBy":445,"dataFootnoteRef":389,"id":447},"#user-content-fn-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6",[446],"footnote-label","user-content-fnref-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6",[449],{"type":402,"value":450},"1",{"type":402,"value":452},"，而 Docker 并不需要这层客户端操作系统，所以 Docker 更加轻量，硬件利用率也更高。",{"type":396,"tag":411,"props":454,"children":455},{},[456],{"type":402,"value":457},"虚拟机使用 Hypervisor 实现操作系统级别的模拟，而 Docker 通过操作系统的文件系统、命名空间、控制组实现进程级别的模拟。",{"type":396,"tag":411,"props":459,"children":460},{},[461],{"type":402,"value":462},"命名空间：所有 Linux 的进程都从 init 进程 fork 派生。Linux 容器的一个主要组件是新的命名空间下的一个 init 进程，所以我们有能力去创建一个不影响外界的进程树出来。",{"type":396,"tag":411,"props":464,"children":465},{},[466],{"type":402,"value":467},"控制组：通过控制组，我们能限制进程对 CPU、磁盘、内存的使用。",{"type":396,"tag":397,"props":469,"children":471},{"id":470},"概念",[472],{"type":402,"value":470},{"type":396,"tag":474,"props":475,"children":476},"ol",{},[477,483,488,493],{"type":396,"tag":478,"props":479,"children":480},"li",{},[481],{"type":402,"value":482},"隔离环境：虚拟文件系统；POSIX API；文件的只读和屏蔽；命名空间、环境变量等；",{"type":396,"tag":478,"props":484,"children":485},{},[486],{"type":402,"value":487},"生命周期：created、running、pausing、paused、stopped；可以通过 update 动态调整硬件资源使用率",{"type":396,"tag":478,"props":489,"children":490},{},[491],{"type":402,"value":492},"数据卷：数据卷由自己的独立的生命周期",{"type":396,"tag":478,"props":494,"children":495},{},[496],{"type":402,"value":497},"网络：独立的网络命名空间、共享其他实例的网络命名空间、共享主机的网络命名空间",{"type":396,"tag":397,"props":499,"children":501},{"id":500},"架构",[502],{"type":402,"value":500},{"type":396,"tag":411,"props":504,"children":505},{},[506],{"type":402,"value":507},"Docker 引擎实际上由 Dockerd、Containerd、RunC 等组件构成",{"type":396,"tag":411,"props":509,"children":510},{},[511],{"type":402,"value":512},"Dockerd：容器管理 -> 编排管理和集群管理。它接受来自外部的 HTTP 请求并作为 API 调用执行，对内与 Containerd 进行通讯。",{"type":396,"tag":411,"props":514,"children":515},{},[516],{"type":402,"value":517},"Containerd：对镜像、容器的管理提供了一个更进一步的抽象，提供了内容、快照、差异、容器、镜像、任务等更加细粒度的概念。",{"type":396,"tag":411,"props":519,"children":520},{},[521],{"type":402,"value":522},"Container 包含 Containerd-shim，用于正确处理由操作系统发送过来的信号。",{"type":396,"tag":411,"props":524,"children":525},{},[526],{"type":402,"value":527},"RunC：Containerd 提供的容器管理等 API 的执行者是 RunC。",{"type":396,"tag":397,"props":529,"children":531},{"id":530},"常见指令",[532],{"type":402,"value":530},{"type":396,"tag":534,"props":535,"children":536},"ul",{},[537,555,572,589,606],{"type":396,"tag":478,"props":538,"children":539},{},[540,547,549],{"type":396,"tag":541,"props":542,"children":544},"code",{"className":543},[],[545],{"type":402,"value":546},"ps",{"type":402,"value":548},"：列表，如 ",{"type":396,"tag":541,"props":550,"children":552},{"className":551},[],[553],{"type":402,"value":554},"docker ps",{"type":396,"tag":478,"props":556,"children":557},{},[558,564,566],{"type":396,"tag":541,"props":559,"children":561},{"className":560},[],[562],{"type":402,"value":563},"build",{"type":402,"value":565},"：打包镜像，如 ",{"type":396,"tag":541,"props":567,"children":569},{"className":568},[],[570],{"type":402,"value":571},"docker build -t test . -f Dockerfile",{"type":396,"tag":478,"props":573,"children":574},{},[575,581,583],{"type":396,"tag":541,"props":576,"children":578},{"className":577},[],[579],{"type":402,"value":580},"run",{"type":402,"value":582},"：运行镜像，如 ",{"type":396,"tag":541,"props":584,"children":586},{"className":585},[],[587],{"type":402,"value":588},"docker run -it test",{"type":396,"tag":478,"props":590,"children":591},{},[592,598,600],{"type":396,"tag":541,"props":593,"children":595},{"className":594},[],[596],{"type":402,"value":597},"exec",{"type":402,"value":599},"：执行容器指令，如 ",{"type":396,"tag":541,"props":601,"children":603},{"className":602},[],[604],{"type":402,"value":605},"docker exec -it xxx bash",{"type":396,"tag":478,"props":607,"children":608},{},[609,615,617],{"type":396,"tag":541,"props":610,"children":612},{"className":611},[],[613],{"type":402,"value":614},"copy",{"type":402,"value":616},"：复制文件到 Docker 中，如 ",{"type":396,"tag":541,"props":618,"children":620},{"className":619},[],[621],{"type":402,"value":622},"docker cp d://test dockerID:dockerPath",{"type":396,"tag":397,"props":624,"children":626},{"id":625},"调试流程",[627],{"type":402,"value":625},{"type":396,"tag":474,"props":629,"children":630},{},[631,642,653],{"type":396,"tag":478,"props":632,"children":633},{},[634,636],{"type":402,"value":635},"拉远端镜像：",{"type":396,"tag":541,"props":637,"children":639},{"className":638},[],[640],{"type":402,"value":641},"docker pull registry.gitlab.p-ray.cn/moe:75150",{"type":396,"tag":478,"props":643,"children":644},{},[645,647],{"type":402,"value":646},"启动容器：",{"type":396,"tag":541,"props":648,"children":650},{"className":649},[],[651],{"type":402,"value":652},"docker run -p 8081:7001 -it \u003CimageID> sleep 999m",{"type":396,"tag":478,"props":654,"children":655},{},[656,658],{"type":402,"value":657},"进入并调试：",{"type":396,"tag":541,"props":659,"children":661},{"className":660},[],[662],{"type":402,"value":663},"docker exec -it \u003CinstanceName> /bin/bash",{"type":396,"tag":411,"props":665,"children":666},{},[667,673],{"type":396,"tag":541,"props":668,"children":670},{"className":669},[],[671],{"type":402,"value":672},"-p 8081:7001",{"type":402,"value":674},"，把本机的 8081 端口绑定到 Container 的 7001 端口。",{"type":396,"tag":397,"props":676,"children":678},{"id":677},"常见问题",[679],{"type":402,"value":677},{"type":396,"tag":411,"props":681,"children":682},{},[683,685],{"type":402,"value":684},"关闭 Hyper-V：",{"type":396,"tag":541,"props":686,"children":688},{"className":687},[],[689],{"type":402,"value":690},"bcdedit /set hypervisorlaunchtype off",{"type":396,"tag":692,"props":693,"children":696},"section",{"className":694,"dataFootnotes":389},[695],"footnotes",[697,704],{"type":396,"tag":397,"props":698,"children":701},{"className":699,"id":446},[700],"sr-only",[702],{"type":402,"value":703},"Footnotes",{"type":396,"tag":474,"props":705,"children":706},{},[707],{"type":396,"tag":478,"props":708,"children":710},{"id":709},"user-content-fn-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6",[711,713],{"type":402,"value":712},"虚拟机一般有三种模拟方式，裸机型（硬件 + 虚拟 OS + 虚拟 APP）、托管型（OS + Hypervisor + 虚拟 OS + 虚拟 APP）和操作系统虚拟化（OS + 容器 + 虚拟 APP）。 ",{"type":396,"tag":442,"props":714,"children":719},{"href":715,"ariaLabel":716,"className":717,"dataFootnoteBackref":389},"#user-content-fnref-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6","Back to reference 1",[718],"data-footnote-backref",[720],{"type":402,"value":721},"↩",{"title":389,"searchDepth":723,"depth":723,"links":724},2,[725,726,727,728,729,730,731,732],{"id":399,"depth":723,"text":399},{"id":429,"depth":723,"text":429},{"id":470,"depth":723,"text":470},{"id":500,"depth":723,"text":500},{"id":530,"depth":723,"text":530},{"id":625,"depth":723,"text":625},{"id":677,"depth":723,"text":677},{"id":446,"depth":723,"text":703},"markdown","content:6.maps:_devops:docker.md","content","6.maps/_devops/docker.md","6.maps/_devops/docker","md",[740,744],{"_path":741,"title":742,"description":743},"/maps/_devops/devops","DevOps","DevOps 是一种开发理论，它致力于将大量自动化操作整合进开发到交付过程中，以消除各个团队（如开发、安全、运维）之间的隔阂，使需求尽快交付，并得到质量反馈。",{"_path":745,"title":746,"description":747},"/maps/_devops/git/dorothy","Dorothy","Dorothy 是我的 Git Commit Message 的约定。",1742039256605]