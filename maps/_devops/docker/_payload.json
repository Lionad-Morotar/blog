[{"data":1,"prerenderedAt":682},["Reactive",2],{"navigation":3,"/maps/_devops/docker":389,"/maps/_devops/docker-surround":675},[4,32,83,99,126,132,138,372,378,384],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🌃 长夜梦","/flows/long-night-dream",{"title":15,"_path":16},"🌌 万物联结与幸福感","/flows/everything",{"title":18,"_path":19},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":21,"_path":22},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":24,"_path":25},"🌧️ 我的腼腆","/flows/shy",{"title":27,"_path":28},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":30,"_path":31},"📝 心流归档","/flows/fold",{"title":33,"_path":34,"children":35},"技术博客 / Coder","/articles",[36,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80],{"title":37,"_path":34},"🦁 为什么我要写博客",{"title":39,"_path":40},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":42,"_path":43},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":45,"_path":46},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":48,"_path":49},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":51,"_path":52},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":54,"_path":55},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":57,"_path":58},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":60,"_path":61},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":63,"_path":64},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":66,"_path":67},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":69,"_path":70},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":72,"_path":73},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":75,"_path":76},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":78,"_path":79},"🚝 四十二篇系列","/articles/fourty-two",{"title":81,"_path":82},"📝 技术博客归档","/articles/fold",{"title":84,"_path":85,"children":86},"造物 / Make","/tools",[87,90,93,96],{"title":88,"_path":89},"🌐 AnySort","/tools/anysort",{"title":91,"_path":92},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":94,"_path":95},"👓 Crapto","/tools/crypto-inline",{"title":97,"_path":98},"🖨️ any-to-base64","/tools/any-to-base64",{"title":100,"_path":101,"children":102},"吉他剧场 / Music","/music",[103,105,108,111,114,117,120,123],{"title":104,"_path":101},"🎸 FingerStyle！",{"title":106,"_path":107},"🌬️ 等待的风","/music/wind",{"title":109,"_path":110},"💕 约定的海洋","/music/ocean",{"title":112,"_path":113},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":115,"_path":116},"🌏 残酷天使的行动纲领","/music/eva",{"title":118,"_path":119},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":121,"_path":122},"🍷 Wu Wei","/music/wu-wei",{"title":124,"_path":125},"🌅 无题","/music/untitled",{"title":127,"_path":128,"children":129},"画点什么 / Paint","/paint",[130],{"title":131,"_path":128},"🚧 正在施工",{"title":133,"_path":134,"children":135},"知识地图 / Maps","/maps",[136],{"title":137,"_path":134},"🏁 知识地图",{"title":139,"_path":140,"children":141},"零散的笔记 / Gists","/gists",[142,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369],{"title":143,"_path":140},"🧊 Gists",{"title":145,"_path":146},"网站的可访问性","/gists/accessibility",{"title":148,"_path":149},"Bit","/gists/bit",{"title":151,"_path":152},"图片模糊","/gists/blur",{"title":154,"_path":155},"渲染相关笔记","/gists/c4d",{"title":157,"_path":158},"CDN 问题记录","/gists/cdn",{"title":160,"_path":161},"消毒剂","/gists/cleaner",{"title":163,"_path":164},"Windows Command","/gists/cmd",{"title":166,"_path":167},"Command","/gists/command",{"title":169,"_path":170},"复杂科学","/gists/complexity-science",{"title":172,"_path":173},"宇宙","/gists/cosmos",{"title":175,"_path":176},"C++","/gists/cpp",{"title":178,"_path":179},"Data Structure","/gists/data-structure",{"title":181,"_path":182},"DEPRESSION","/gists/depression",{"title":184,"_path":185},"设计模式","/gists/design-patterns",{"title":187,"_path":188},"Developer Experience","/gists/developer-experience",{"title":190,"_path":191},"Device Metrics","/gists/device-metrix",{"title":193,"_path":194},"ECMAScript Language Specification","/gists/ecmascript-specification",{"title":196,"_path":197},"正则表达式","/gists/eegex",{"title":199,"_path":200},"Emoji","/gists/emoji",{"title":202,"_path":203},"工程","/gists/engineering",{"title":205,"_path":206},"熵","/gists/entropy",{"title":208,"_path":209},"Environment","/gists/environment",{"title":211,"_path":212},"Erlang","/gists/erlang",{"title":214,"_path":215},"逃离塔克夫","/gists/escape-from-tarkov",{"title":217,"_path":218},"ESNext (ES6-ES11)","/gists/esnext",{"title":220,"_path":221},"Eval！","/gists/eval",{"title":223,"_path":224},"Flutter","/gists/flutter",{"title":226,"_path":227},"字体","/gists/font",{"title":229,"_path":230},"JS 函数式编程","/gists/functional",{"title":232,"_path":233},"Google C++ Standard","/gists/google-cpp-standard",{"title":235,"_path":236},"双向链接完全体","/gists/graph",{"title":238,"_path":239},"Hardwares","/gists/hardwares",{"title":241,"_path":242},"哈希冲突","/gists/hash-collision",{"title":244,"_path":245},"信息设计","/gists/information-design",{"title":247,"_path":248},"InstantPage","/gists/instant.page",{"title":250,"_path":251},"ISUX 遇见大数据可视化系列","/gists/isux-data-visualization",{"title":253,"_path":254},"KVStore","/gists/key-value-db",{"title":256,"_path":257},"Kubernetes","/gists/kubernetes",{"title":259,"_path":260},"Makefile","/gists/makefile",{"title":262,"_path":263},"Markdown Inline Style","/gists/markdown-nice",{"title":265,"_path":266},"小程序","/gists/miniapp",{"title":268,"_path":269},"减小页面快照体积","/gists/minify-html",{"title":271,"_path":272},"mklink","/gists/mklink",{"title":274,"_path":275},"Mock","/gists/mock",{"title":277,"_path":278},"多端应用","/gists/multy-end-app",{"title":280,"_path":281},"神经科学","/gists/neuroscience",{"title":283,"_path":284},"OO","/gists/oo",{"title":286,"_path":287},"Opinioned Personal Folder","/gists/opinioned-personal-folder",{"title":289,"_path":290},"人物","/gists/person",{"title":292,"_path":293},"PInvoke","/gists/pinvoke",{"title":295,"_path":296},"像素","/gists/pixel",{"title":298,"_path":299},"PowerShell","/gists/powershell",{"title":301,"_path":302},"量子","/gists/quantum",{"title":304,"_path":305},"保持好奇心","/gists/questions",{"title":307,"_path":308},"React Native","/gists/react-native",{"title":310,"_path":311},"博客改版碰到的浏览器平滑滚动问题","/gists/scroll",{"title":313,"_path":314},"SEO","/gists/seo",{"title":316,"_path":317},"Shader","/gists/shader",{"title":319,"_path":320},"Shape Up","/gists/shape-up",{"title":322,"_path":323},"睡觉","/gists/sleep",{"title":325,"_path":326},"States","/gists/states",{"title":328,"_path":329},"Storage","/gists/storage",{"title":331,"_path":332},"音视频流处理","/gists/stream-cli",{"title":334,"_path":335},"Symbol","/gists/symbol",{"title":337,"_path":338},"系统论","/gists/systems-theory",{"title":340,"_path":341},"Taro","/gists/taro",{"title":343,"_path":344},"任务切片","/gists/task-slice",{"title":346,"_path":347},"技术偏好","/gists/tech-dudge",{"title":349,"_path":350},"Untitled","/gists/untitled",{"title":352,"_path":353},"可变字体","/gists/variable-font",{"title":355,"_path":356},"视觉错觉","/gists/visual-illusion",{"title":358,"_path":359},"SS(SSR)","/gists/vpn",{"title":361,"_path":362},"VS Code 插件开发","/gists/vscode-plugin",{"title":364,"_path":365},"Web Components","/gists/web-components",{"title":367,"_path":368},"Windows","/gists/windows",{"title":370,"_path":371},"查缺补漏","/gists/wrong",{"title":373,"_path":374,"children":375},"代码笔记 / Gists","/source-code",[376],{"title":377,"_path":374},"🚄 代码笔记",{"title":379,"_path":380,"children":381},"我 / Abount","/hire",[382],{"title":383,"_path":380},"📬 技术简历",{"title":385,"_path":386,"children":387},"todo","/todo",[388],{"title":385,"_path":386},{"_path":390,"_dir":391,"_draft":392,"_partial":393,"_locale":394,"title":395,"description":394,"body":396,"_type":670,"_id":671,"_source":672,"_file":673,"_extension":674},"/maps/_devops/docker","_devops",false,true,"","Docker",{"type":397,"children":398,"toc":659},"root",[399,407,413,420,426,432,437,442,447,468,473,478,483,488,513,518,523,528,533,538,543,548,577,582,600,612,617,628],{"type":400,"tag":401,"props":402,"children":404},"element","h1",{"id":403},"docker",[405],{"type":406,"value":395},"text",{"type":400,"tag":408,"props":409,"children":411},"h2",{"id":410},"简介",[412],{"type":406,"value":410},{"type":400,"tag":414,"props":415,"children":417},"h4",{"id":416},"docker-是什么",[418],{"type":406,"value":419},"Docker 是什么？",{"type":400,"tag":421,"props":422,"children":423},"p",{},[424],{"type":406,"value":425},"Docker 本身不是容器，而是容器的一种实现以及容器管理工具。",{"type":400,"tag":414,"props":427,"children":429},{"id":428},"容器是什么",[430],{"type":406,"value":431},"容器是什么？",{"type":400,"tag":421,"props":433,"children":434},{},[435],{"type":406,"value":436},"容器是一种软件打包的技术。通过对系统资源的控制与隔离，把软件、软件运行时、系统工具、系统库和配置打包到一个镜像中，运行在有有独立命名空间的容器进程内，可以使软件的所有依赖都标准化。所以使用容器技术能方便地将软件打包成标准单元。",{"type":400,"tag":421,"props":438,"children":439},{},[440],{"type":406,"value":441},"TODO",{"type":400,"tag":408,"props":443,"children":445},{"id":444},"原理",[446],{"type":406,"value":444},{"type":400,"tag":421,"props":448,"children":449},{},[450,452,466],{"type":406,"value":451},"Docker 和虚拟机都希望能提供一个虚拟、完整、独立的运行时环境，通过提高虚拟环境的隔离型，以便管理。一般来说，虚拟机的原理是模拟硬件环境，所以需要安装客户端操作系统",{"type":400,"tag":453,"props":454,"children":455},"sup",{},[456],{"type":400,"tag":457,"props":458,"children":463},"a",{"href":459,"ariaDescribedBy":460,"dataFootnoteRef":394,"id":462},"#user-content-fn-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6",[461],"footnote-label","user-content-fnref-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6",[464],{"type":406,"value":465},"1",{"type":406,"value":467},"，而 Docker 并不需要这层客户端操作系统，所以 Docker 更加轻量，硬件利用率也更高。",{"type":400,"tag":421,"props":469,"children":470},{},[471],{"type":406,"value":472},"虚拟机使用 Hypervisor 实现操作系统级别的模拟，而 Docker 通过操作系统的文件系统、命名空间、控制组实现进程级别的模拟。",{"type":400,"tag":421,"props":474,"children":475},{},[476],{"type":406,"value":477},"命名空间：所有 Linux 的进程都从 init 进程 fork 派生。Linux 容器的一个主要组件是新的命名空间下的一个 init 进程，所以我们有能力去创建一个不影响外界的进程树出来。",{"type":400,"tag":421,"props":479,"children":480},{},[481],{"type":406,"value":482},"控制组：通过控制组，我们能限制进程对 CPU、磁盘、内存的使用。",{"type":400,"tag":408,"props":484,"children":486},{"id":485},"概念",[487],{"type":406,"value":485},{"type":400,"tag":489,"props":490,"children":491},"ol",{},[492,498,503,508],{"type":400,"tag":493,"props":494,"children":495},"li",{},[496],{"type":406,"value":497},"隔离环境：虚拟文件系统；POSIX API；文件的只读和屏蔽；命名空间、环境变量等；",{"type":400,"tag":493,"props":499,"children":500},{},[501],{"type":406,"value":502},"生命周期：created、running、pausing、paused、stopped；可以通过 update 动态调整硬件资源使用率",{"type":400,"tag":493,"props":504,"children":505},{},[506],{"type":406,"value":507},"数据卷：数据卷由自己的独立的生命周期",{"type":400,"tag":493,"props":509,"children":510},{},[511],{"type":406,"value":512},"网络：独立的网络命名空间、共享其他实例的网络命名空间、共享主机的网络命名空间",{"type":400,"tag":408,"props":514,"children":516},{"id":515},"架构",[517],{"type":406,"value":515},{"type":400,"tag":421,"props":519,"children":520},{},[521],{"type":406,"value":522},"Docker 引擎实际上由 Dockerd、Containerd、RunC 等组件构成",{"type":400,"tag":421,"props":524,"children":525},{},[526],{"type":406,"value":527},"Dockerd：容器管理 -> 编排管理和集群管理。它接受来自外部的 HTTP 请求并作为 API 调用执行，对内与 Containerd 进行通讯。",{"type":400,"tag":421,"props":529,"children":530},{},[531],{"type":406,"value":532},"Containerd：对镜像、容器的管理提供了一个更进一步的抽象，提供了内容、快照、差异、容器、镜像、任务等更加细粒度的概念。",{"type":400,"tag":421,"props":534,"children":535},{},[536],{"type":406,"value":537},"Container 包含 Containerd-shim，用于正确处理由操作系统发送过来的信号。",{"type":400,"tag":421,"props":539,"children":540},{},[541],{"type":406,"value":542},"RunC：Containerd 提供的容器管理等 API 的执行者是 RunC。",{"type":400,"tag":408,"props":544,"children":546},{"id":545},"常见指令",[547],{"type":406,"value":545},{"type":400,"tag":549,"props":550,"children":551},"ul",{},[552,557,562,567,572],{"type":400,"tag":493,"props":553,"children":554},{},[555],{"type":406,"value":556},"Build：打包镜像，如 docker build -t test . -f Dockerfile；",{"type":400,"tag":493,"props":558,"children":559},{},[560],{"type":406,"value":561},"Exec：执行容器指令，如 docker exec -it xxx bash；",{"type":400,"tag":493,"props":563,"children":564},{},[565],{"type":406,"value":566},"Run：运行镜像，如 docker run -it test；",{"type":400,"tag":493,"props":568,"children":569},{},[570],{"type":406,"value":571},"Ps：列表，如 docker ps；",{"type":400,"tag":493,"props":573,"children":574},{},[575],{"type":406,"value":576},"Copy：复制文件到 Docker 中，如 docker cp d://test dockerID:dockerPath",{"type":400,"tag":408,"props":578,"children":580},{"id":579},"调试流程",[581],{"type":406,"value":579},{"type":400,"tag":489,"props":583,"children":584},{},[585,590,595],{"type":400,"tag":493,"props":586,"children":587},{},[588],{"type":406,"value":589},"拉远端镜像：docker pull registry.gitlab.baixing.cn/fenlei/midway-fe:75150",{"type":400,"tag":493,"props":591,"children":592},{},[593],{"type":406,"value":594},"启动容器：docker run -p 8081:7001 -it 5d0c03824600 sleep 999m",{"type":400,"tag":493,"props":596,"children":597},{},[598],{"type":406,"value":599},"进入并调试：docker exec -it name /bin/bash",{"type":400,"tag":421,"props":601,"children":602},{},[603,610],{"type":400,"tag":604,"props":605,"children":607},"code",{"className":606},[],[608],{"type":406,"value":609},"-p 8081:7001",{"type":406,"value":611},"，把本机的 8081 端口绑定到 Container 的 7001 端口。",{"type":400,"tag":408,"props":613,"children":615},{"id":614},"常见问题",[616],{"type":406,"value":614},{"type":400,"tag":421,"props":618,"children":619},{},[620,622],{"type":406,"value":621},"关闭 Hyper-V：",{"type":400,"tag":604,"props":623,"children":625},{"className":624},[],[626],{"type":406,"value":627},"bcdedit /set hypervisorlaunchtype off",{"type":400,"tag":629,"props":630,"children":633},"section",{"className":631,"dataFootnotes":394},[632],"footnotes",[634,641],{"type":400,"tag":408,"props":635,"children":638},{"className":636,"id":461},[637],"sr-only",[639],{"type":406,"value":640},"Footnotes",{"type":400,"tag":489,"props":642,"children":643},{},[644],{"type":400,"tag":493,"props":645,"children":647},{"id":646},"user-content-fn-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6",[648,650],{"type":406,"value":649},"虚拟机一般有三种模拟方式，裸机型（硬件 + 虚拟 OS + 虚拟 APP）、托管型（OS + Hypervisor + 虚拟 OS + 虚拟 APP）和操作系统虚拟化（OS + 容器 + 虚拟 APP）。 ",{"type":400,"tag":457,"props":651,"children":656},{"href":652,"ariaLabel":653,"className":654,"dataFootnoteBackref":394},"#user-content-fnref-%E6%A8%A1%E6%8B%9F%E7%A1%AC%E4%BB%B6","Back to reference 1",[655],"data-footnote-backref",[657],{"type":406,"value":658},"↩",{"title":394,"searchDepth":660,"depth":660,"links":661},2,[662,663,664,665,666,667,668,669],{"id":410,"depth":660,"text":410},{"id":444,"depth":660,"text":444},{"id":485,"depth":660,"text":485},{"id":515,"depth":660,"text":515},{"id":545,"depth":660,"text":545},{"id":579,"depth":660,"text":579},{"id":614,"depth":660,"text":614},{"id":461,"depth":660,"text":640},"markdown","content:6.maps:_devops:docker.md","content","6.maps/_devops/docker.md","md",[676,679],{"_path":677,"title":678,"description":394},"/maps/_devops/deploy","部署",{"_path":680,"title":681,"description":394},"/maps/_devops/git","Git Mind Map",1718183408548]