[{"data":1,"prerenderedAt":314},["ShallowReactive",2],{"navigation":3,"/maps/_devops/version-control":161,"/maps/_devops/version-control-surround":305},[4,35,92,98,125,131,155],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🖌️ Blockies Animation","/maps/_fe-framework/motion/blockies-animation",{"title":45,"_path":46},"🌪️ Tailwind v4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":48,"_path":49},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":51,"_path":52},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":54,"_path":55},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":57,"_path":58},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":60,"_path":61},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":63,"_path":64},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":66,"_path":67},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":69,"_path":70},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":72,"_path":73},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":75,"_path":76},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":78,"_path":79},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":81,"_path":82},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":84,"_path":85},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":87,"_path":88},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":90,"_path":91},"📝 技术博客归档","/articles/archive",{"title":93,"_path":94,"children":95},"读书笔记 / Notes","/books",[96],{"title":97,"_path":94},"📕 读书笔记",{"title":99,"_path":100,"children":101},"吉他剧场 / Music","/music",[102,104,107,110,113,116,119,122],{"title":103,"_path":100},"🎸 FingerStyle！",{"title":105,"_path":106},"🌬️ 等待的风","/music/wind",{"title":108,"_path":109},"💕 约定的海洋","/music/ocean",{"title":111,"_path":112},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":114,"_path":115},"🌏 残酷天使的行动纲领","/music/eva",{"title":117,"_path":118},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":120,"_path":121},"🍷 Wu Wei","/music/wu-wei",{"title":123,"_path":124},"🌅 无题","/music/untitled",{"title":126,"_path":127,"children":128},"知识地图 / Maps","/maps",[129],{"title":130,"_path":127},"🏁 知识地图",{"title":132,"_path":133,"children":134},"造物 / Make","/tools",[135,137,140,143,146,149,152],{"title":136,"_path":133},"🧰 工具收集",{"title":138,"_path":139},"📕 博客","/tools/blog",{"title":141,"_path":142},"🥥 Coconut","/tools/coconut",{"title":144,"_path":145},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":147,"_path":148},"🌐 AnySort","/tools/anysort",{"title":150,"_path":151},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":153,"_path":154},"👓 Crapto","/tools/crypto-inline",{"title":156,"_path":157,"children":158},"我 / About","/hire",[159],{"title":160,"_path":157},"📬 技术简历",{"_path":162,"_dir":163,"_draft":164,"_partial":165,"_locale":166,"title":167,"description":168,"body":169,"_type":299,"_id":300,"_source":301,"_file":302,"_stem":303,"_extension":304},"/maps/_devops/version-control","_devops",false,true,"","版本管理","版本管理是一种软件开发过程中的管理方法，它通过对软件的版本号进行管理，以便于开发者和用户了解软件的变动情况。",{"type":170,"children":171,"toc":294},"root",[172,180,204,218,223,230,235,247,253,258,272,278,283],{"type":173,"tag":174,"props":175,"children":177},"element","h2",{"id":176},"源码管理",[178],{"type":179,"value":176},"text",{"type":173,"tag":181,"props":182,"children":183},"ul",{},[184,195],{"type":173,"tag":185,"props":186,"children":187},"li",{},[188],{"type":173,"tag":189,"props":190,"children":192},"a",{"href":191},"/maps/_devops/git",[193],{"type":179,"value":194},"Git",{"type":173,"tag":185,"props":196,"children":197},{},[198],{"type":173,"tag":189,"props":199,"children":201},{"href":200},"/maps/_devops/git/gitflow",[202],{"type":179,"value":203},"Gitflow",{"type":173,"tag":205,"props":206,"children":207},"p",{},[208,210],{"type":179,"value":209},"TODO：",{"type":173,"tag":189,"props":211,"children":215},{"href":212,"rel":213},"https://sapling-scm.com/docs/introduction/differences-git",[214],"nofollow",[216],{"type":179,"value":217},"Sapling",{"type":173,"tag":174,"props":219,"children":221},{"id":220},"版本号管理",[222],{"type":179,"value":220},{"type":173,"tag":224,"props":225,"children":227},"h4",{"id":226},"语义化版本是什么",[228],{"type":179,"value":229},"语义化版本是什么？",{"type":173,"tag":205,"props":231,"children":232},{},[233],{"type":179,"value":234},"语义化版本（Semantic Version）是一种版本号码标记方法，它要求版本号由“主版本号。次版本号。修订号”组成，分别代表不兼容的 API 改动、向下兼容的功能性改动或新增、向下兼容的问题修正。",{"type":173,"tag":205,"props":236,"children":237},{},[238,240],{"type":179,"value":239},"见：",{"type":173,"tag":189,"props":241,"children":244},{"href":242,"rel":243},"https://semver.org/lang/zh-CN/",[214],[245],{"type":179,"value":246},"语义化版本 @semver.org",{"type":173,"tag":224,"props":248,"children":250},{"id":249},"语义化版本解决了什么问题",[251],{"type":179,"value":252},"语义化版本解决了什么问题？",{"type":173,"tag":205,"props":254,"children":255},{},[256],{"type":179,"value":257},"Semver 被设计用来解决依赖地狱的问题，常用于定义了公共 API 的项目，因为其各个版本号的意义都和 API 的变动挂钩。但 Semver 从某种意义上来说过于理想化，主要因为实际开发中代码变动没用绝对意义上的 no breaking change 这么一说。bug 和 breaking change 的界限本身就很模糊，所以实际上，任何改动都可能带来意料之外的 breaking change。",{"type":173,"tag":205,"props":259,"children":260},{},[261,263,270],{"type":179,"value":262},"许多项目并不遵循 Semver，如 TS 的开发者声称，其 minor 版本可能引入 Breaking Change，见：",{"type":173,"tag":189,"props":264,"children":267},{"href":265,"rel":266},"https://github.com/microsoft/TypeScript/issues/14116",[214],[268],{"type":179,"value":269},"TypeScript should follow semantic versioning @GitHub",{"type":179,"value":271},"。",{"type":173,"tag":224,"props":273,"children":275},{"id":274},"如何解决版本号膨胀问题",[276],{"type":179,"value":277},"如何解决版本号膨胀问题？",{"type":173,"tag":205,"props":279,"children":280},{},[281],{"type":179,"value":282},"在单仓多包项目中，如果遵循语义化版本，那么版本同步会使版本号迅速膨胀。一个好的方案是现在其他项目使用 0.x 版本号开发，等 API 稳定后再合并到单仓中升级成为 1.0.0 版本。",{"type":173,"tag":205,"props":284,"children":285},{},[286,287],{"type":179,"value":239},{"type":173,"tag":189,"props":288,"children":291},{"href":289,"rel":290},"https://medium.com/netscape/the-case-for-monorepos-907c1361708a",[214],[292],{"type":179,"value":293},"The Case for MonoreposJJJ",{"title":166,"searchDepth":295,"depth":295,"links":296},2,[297,298],{"id":176,"depth":295,"text":176},{"id":220,"depth":295,"text":220},"markdown","content:6.maps:_devops:version-control.md","content","6.maps/_devops/version-control.md","6.maps/_devops/version-control","md",[306,310],{"_path":307,"title":308,"description":309},"/maps/_devops/gitlab","GitLab","GitLab 是一个基于 Git 的 DevOps 平台，提供了代码仓库、CI/CD、Issue 管理等功能",{"_path":311,"title":312,"description":313},"/maps/_fe-framework/assets/iconify","Iconify","Iconify 是一个图标库，提供了多种图标集合的访问和使用方式。",1750854648733]