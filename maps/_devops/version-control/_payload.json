[{"data":1,"prerenderedAt":311},["ShallowReactive",2],{"navigation":3,"/maps/_devops/version-control":158,"/maps/_devops/version-control-surround":302},[4,35,89,95,122,128,152],{"title":5,"_path":6,"children":7},"心流思绪 / Heart Flows","/flows",[8,11,14,17,20,23,26,29,32],{"title":9,"_path":10},"📕 狮子的书单推荐","/flows/books",{"title":12,"_path":13},"🚝 四十二篇系列","/flows/fourty-two",{"title":15,"_path":16},"🌃 长夜梦","/flows/long-night-dream",{"title":18,"_path":19},"🌌 万物联结与幸福感","/flows/everything",{"title":21,"_path":22},"⌛ 偷取时间","/flows/stealing-time-from-god",{"title":24,"_path":25},"🌆 表达和孤独","/flows/expression-and-loneliness",{"title":27,"_path":28},"🌧️ 我的腼腆","/flows/shy",{"title":30,"_path":31},"🥛 新工作，喝新饮料","/flows/drinking-while-thinking",{"title":33,"_path":34},"📝 心流归档","/flows/archive",{"title":36,"_path":37,"children":38},"技术博客 / Coder","/articles",[39,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86],{"title":40,"_path":37},"🦁 欢迎",{"title":42,"_path":43},"🌪️ tailwind4 如何兼容预处理器","/articles/tailwind4-with-sass",{"title":45,"_path":46},"🥞 在 tailwind 中使用现代化 CSS Layers","/articles/tailwind-sass-and-css-layer",{"title":48,"_path":49},"💻 本地部署 Qwen 翻译网页","/articles/local-translator",{"title":51,"_path":52},"🧊 模板解析器轻考古","/articles/micro-templating",{"title":54,"_path":55},"Ⓜ️ Mini CSS Parser","/articles/mini-css-parser",{"title":57,"_path":58},"🚩 向AI咨询前端问题","/articles/use-gpt-learn-complex-frontend",{"title":60,"_path":61},"⛸️ 怎样定制复杂组件的自定义滚动条？","/articles/use-scrollbars",{"title":63,"_path":64},"⚖️ 统一多组件库的层叠顺序","/articles/zindex-manager",{"title":66,"_path":67},"🕷️ 滑动验证码破解思路","/articles/crack-the-slider",{"title":69,"_path":70},"🌟 探秘 CSS 光影效果","/articles/css-light-travel",{"title":72,"_path":73},"🍲 设计模式与 JS 魔法锅","/articles/design-patterns-and-js-magic-pot",{"title":75,"_path":76},"🌐 Anysort：灵活、优雅的多属性排序","/articles/anysort-2th",{"title":78,"_path":79},"💫 CSS 幻术 | 抗锯齿","/articles/css-poaa",{"title":81,"_path":82},"❓ 用纯CSS判断鼠标进入的方向","/articles/css-judge-direction",{"title":84,"_path":85},"📝 你本可以少写些 if-else","/articles/no-more-if-else",{"title":87,"_path":88},"📝 技术博客归档","/articles/archive",{"title":90,"_path":91,"children":92},"读书笔记 / Notes","/books",[93],{"title":94,"_path":91},"📕 读书笔记",{"title":96,"_path":97,"children":98},"吉他剧场 / Music","/music",[99,101,104,107,110,113,116,119],{"title":100,"_path":97},"🎸 FingerStyle！",{"title":102,"_path":103},"🌬️ 等待的风","/music/wind",{"title":105,"_path":106},"💕 约定的海洋","/music/ocean",{"title":108,"_path":109},"🎼 Wings~You are the Hero！","/music/wings-you-are-the-hero",{"title":111,"_path":112},"🌏 残酷天使的行动纲领","/music/eva",{"title":114,"_path":115},"🏔️ 奇跡の山","/music/miracle-mountain",{"title":117,"_path":118},"🍷 Wu Wei","/music/wu-wei",{"title":120,"_path":121},"🌅 无题","/music/untitled",{"title":123,"_path":124,"children":125},"知识地图 / Maps","/maps",[126],{"title":127,"_path":124},"🏁 知识地图",{"title":129,"_path":130,"children":131},"造物 / Make","/tools",[132,134,137,140,143,146,149],{"title":133,"_path":130},"🧰 工具收集",{"title":135,"_path":136},"📕 博客","/tools/blog",{"title":138,"_path":139},"🥥 Coconut","/tools/coconut",{"title":141,"_path":142},"🧶 网易云音乐歌单排序","/tools/netease-sorter",{"title":144,"_path":145},"🌐 AnySort","/tools/anysort",{"title":147,"_path":148},"⛸️ UseScrollbar","/tools/use-scrollbar",{"title":150,"_path":151},"👓 Crapto","/tools/crypto-inline",{"title":153,"_path":154,"children":155},"我 / About","/hire",[156],{"title":157,"_path":154},"📬 技术简历",{"_path":159,"_dir":160,"_draft":161,"_partial":162,"_locale":163,"title":164,"description":165,"body":166,"_type":296,"_id":297,"_source":298,"_file":299,"_stem":300,"_extension":301},"/maps/_devops/version-control","_devops",false,true,"","版本管理","版本管理是一种软件开发过程中的管理方法，它通过对软件的版本号进行管理，以便于开发者和用户了解软件的变动情况。",{"type":167,"children":168,"toc":291},"root",[169,177,201,215,220,227,232,244,250,255,269,275,280],{"type":170,"tag":171,"props":172,"children":174},"element","h2",{"id":173},"源码管理",[175],{"type":176,"value":173},"text",{"type":170,"tag":178,"props":179,"children":180},"ul",{},[181,192],{"type":170,"tag":182,"props":183,"children":184},"li",{},[185],{"type":170,"tag":186,"props":187,"children":189},"a",{"href":188},"/maps/_devops/git",[190],{"type":176,"value":191},"Git",{"type":170,"tag":182,"props":193,"children":194},{},[195],{"type":170,"tag":186,"props":196,"children":198},{"href":197},"/maps/_devops/git/gitflow",[199],{"type":176,"value":200},"Gitflow",{"type":170,"tag":202,"props":203,"children":204},"p",{},[205,207],{"type":176,"value":206},"TODO：",{"type":170,"tag":186,"props":208,"children":212},{"href":209,"rel":210},"https://sapling-scm.com/docs/introduction/differences-git",[211],"nofollow",[213],{"type":176,"value":214},"Sapling",{"type":170,"tag":171,"props":216,"children":218},{"id":217},"版本号管理",[219],{"type":176,"value":217},{"type":170,"tag":221,"props":222,"children":224},"h4",{"id":223},"语义化版本是什么",[225],{"type":176,"value":226},"语义化版本是什么？",{"type":170,"tag":202,"props":228,"children":229},{},[230],{"type":176,"value":231},"语义化版本（Semantic Version）是一种版本号码标记方法，它要求版本号由“主版本号。次版本号。修订号”组成，分别代表不兼容的 API 改动、向下兼容的功能性改动或新增、向下兼容的问题修正。",{"type":170,"tag":202,"props":233,"children":234},{},[235,237],{"type":176,"value":236},"见：",{"type":170,"tag":186,"props":238,"children":241},{"href":239,"rel":240},"https://semver.org/lang/zh-CN/",[211],[242],{"type":176,"value":243},"语义化版本 @semver.org",{"type":170,"tag":221,"props":245,"children":247},{"id":246},"语义化版本解决了什么问题",[248],{"type":176,"value":249},"语义化版本解决了什么问题？",{"type":170,"tag":202,"props":251,"children":252},{},[253],{"type":176,"value":254},"Semver 被设计用来解决依赖地狱的问题，常用于定义了公共 API 的项目，因为其各个版本号的意义都和 API 的变动挂钩。但 Semver 从某种意义上来说过于理想化，主要因为实际开发中代码变动没用绝对意义上的 no breaking change 这么一说。bug 和 breaking change 的界限本身就很模糊，所以实际上，任何改动都可能带来意料之外的 breaking change。",{"type":170,"tag":202,"props":256,"children":257},{},[258,260,267],{"type":176,"value":259},"许多项目并不遵循 Semver，如 TS 的开发者声称，其 minor 版本可能引入 Breaking Change，见：",{"type":170,"tag":186,"props":261,"children":264},{"href":262,"rel":263},"https://github.com/microsoft/TypeScript/issues/14116",[211],[265],{"type":176,"value":266},"TypeScript should follow semantic versioning @GitHub",{"type":176,"value":268},"。",{"type":170,"tag":221,"props":270,"children":272},{"id":271},"如何解决版本号膨胀问题",[273],{"type":176,"value":274},"如何解决版本号膨胀问题？",{"type":170,"tag":202,"props":276,"children":277},{},[278],{"type":176,"value":279},"在单仓多包项目中，如果遵循语义化版本，那么版本同步会使版本号迅速膨胀。一个好的方案是现在其他项目使用 0.x 版本号开发，等 API 稳定后再合并到单仓中升级成为 1.0.0 版本。",{"type":170,"tag":202,"props":281,"children":282},{},[283,284],{"type":176,"value":236},{"type":170,"tag":186,"props":285,"children":288},{"href":286,"rel":287},"https://medium.com/netscape/the-case-for-monorepos-907c1361708a",[211],[289],{"type":176,"value":290},"The Case for MonoreposJJJ",{"title":163,"searchDepth":292,"depth":292,"links":293},2,[294,295],{"id":173,"depth":292,"text":173},{"id":217,"depth":292,"text":217},"markdown","content:6.maps:_devops:version-control.md","content","6.maps/_devops/version-control.md","6.maps/_devops/version-control","md",[303,307],{"_path":304,"title":305,"description":306},"/maps/_devops/gitlab","GitLab","GitLab 是一个基于 Git 的 DevOps 平台，提供了代码仓库、CI/CD、Issue 管理等功能",{"_path":308,"title":309,"description":310},"/maps/_fe-framework/fe-framework","前端框架","前端框架是在前端开发不同阶段，用以简化开发的工具集合。它们提供了一种组织代码的方式，使得开发者可以专注于业务逻辑，而不是底层的技术细节。",1742958681980]