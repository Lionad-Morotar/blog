(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{971:function(t,r,a){"use strict";a.r(r);var e=a(0),s=Object(e.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"typescript"}},[t._v("TypeScript")]),t._v(" "),r("nav",{staticClass:"table-of-contents"},[r("ol",[r("li",[r("a",{attrs:{href:"#typescript"}},[t._v("TypeScript")]),r("ol",[r("li",[r("a",{attrs:{href:"#简介"}},[t._v("简介")]),r("ol",[r("li",[r("a",{attrs:{href:"#如何理解-interface-和-type-的异同"}},[t._v("如何理解 Interface 和 Type 的异同")])]),r("li",[r("a",{attrs:{href:"#裸类型是什么"}},[t._v("裸类型是什么？")])])])]),r("li",[r("a",{attrs:{href:"#高级类型"}},[t._v("高级类型")]),r("ol",[r("li",[r("a",{attrs:{href:"#iterable-和-array-是什么关系"}},[t._v("Iterable 和 Array 是什么关系？")])])])]),r("li",[r("a",{attrs:{href:"#应用"}},[t._v("应用")]),r("ol",[r("li",[r("a",{attrs:{href:"#怎么给-window-新增属性"}},[t._v("怎么给 Window 新增属性？")])]),r("li",[r("a",{attrs:{href:"#links"}},[t._v("Links")])])])]),r("li",[r("a",{attrs:{href:"#类型体操"}},[t._v("类型体操")]),r("ol",[r("li",[r("a",{attrs:{href:"#什么是类型体操"}},[t._v("什么是类型体操？")])]),r("li",[r("a",{attrs:{href:"#什么是图灵完备"}},[t._v("什么是图灵完备？")])]),r("li",[r("a",{attrs:{href:"#memo"}},[t._v("Memo")])])])])])])])]),r("h2",{attrs:{id:"简介"}},[t._v("简介")]),t._v(" "),r("h4",{attrs:{id:"如何理解-interface-和-type-的异同"}},[t._v("如何理解 Interface 和 Type 的异同")]),t._v(" "),r("p",[t._v("类型（Type）不可以合并，但接口（Interface）可以合并。可以理解为某个函数可以实现多个接口，但是作为变量，它只有一种类型。")]),t._v(" "),r("h4",{attrs:{id:"裸类型是什么"}},[t._v("裸类型是什么？")]),t._v(" "),r("p",[t._v("TODO，裸类型在带入运算时会自动展开，非裸类型则不会。")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[t._v("type WrapNaked"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("any")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("o")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" never\ntype WrapUnNaked"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("o")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("any")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("o")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" never\n\ntype Foo "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" WrapNaked"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" number "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" boolean"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { o: string } | { o: number } | { o: boolean }")]),t._v("\n\ntype Bar "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" WrapUnNaked"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" number "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" boolean"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { o: string | number | boolean }")]),t._v("\n")])])]),r("h2",{attrs:{id:"高级类型"}},[t._v("高级类型")]),t._v(" "),r("h4",{attrs:{id:"iterable-和-array-是什么关系"}},[t._v("Iterable 和 Array 是什么关系？")]),t._v(" "),r("p",[t._v("实现了 Symbol.iterator 接口的对象都视为是 Iterable 的对象，所以 Array、Map、Set、String、Int32Array 等都是 Iterable 的。")]),t._v(" "),r("p",[t._v("见："),r("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/iterators-and-generators.html#iterables",target:"_blank",rel:"noopener noreferrer"}},[t._v("Iterators and Generators")])]),t._v(" "),r("h2",{attrs:{id:"应用"}},[t._v("应用")]),t._v(" "),r("h4",{attrs:{id:"怎么给-window-新增属性"}},[t._v("怎么给 Window 新增属性？")]),t._v(" "),r("p",[t._v("同名接口会自动合并，所以写一个新的 Window 对象的接口就好了。")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[t._v("declare "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Window")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("propertyA")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h3",{attrs:{id:"links"}},[t._v("Links")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.typescriptlang.org/play?#code/C4TwDgpgBAggjFAvFA3lCAPCBjGAKASgC4oAhBAXwChRIyFk1MdTCT4pqqAbCYKAIbsGqKlHRZcUNvVHjxAJz4BXBQDs588c2ylpBTVsUr1UYAAsAlgGdBt5WoDWagPYB3DQNvwxR6lv9OKi4AehCoAHkAaQAaM3AIFwAzQSgbWDgqASRBKjCoAAFgawBaTEhsYDKFBRcFKAAjHAFla2hsgBMIJMs1CA67KGtgAWBLbHi6H2zkAQA6HXwCPPDouNpElIa023IePkac+cXCKjPz-f4wbmUAc17bRkESAHIBF6CNqAAFG-u1R6TTZQa53B5nJIOSqWFwaW4QNQAHgAKgA+PDXW7WEjIgwoXxKYCqDT4rSY6wxXzaSSIgCq6IECixJFpeKp8kJxKg8KRyIAZPS8KSjOI5mLyZSRaKxYysezxBRlgFfNQuLx+AIAEw5HkYv4PZZao6arKaubkuYCU3GhaSIUNIgvBovRUrQrFMoYCpVCA1Oo-WqQBSgKBOj4dFwQWyufiYGz8WFA0NoIRDYAKXq3ADcnBec1N5u4WLmDUujW1szNOiF2Ed2Bdy3y0SoDTNFuwZy+AFkBI4ICjUTlheScZKJDg6QymdioKySD2+yiBajgmd1YIAMzz3v935ggGD5C60H-ayGjdHDdZDeF4tWgQX2Y36soB1h135Iqlco4H1++rfIGvohmGUARlGUAxhI8ZQImXwvCmJDDBmajZrm+YPre1glmWAgACyXraOA1nWDZus2+FYXMHZAA",target:"_blank",rel:"noopener noreferrer"}},[t._v("TODO，伪动态类型")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/104565681",target:"_blank",rel:"noopener noreferrer"}},[t._v("TODO，详解 TypeScript 里的 This")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://stackoverflow.com/questions/69635559/in-typescript-why-is-boolean-string-different-from-boolean-string/69653332#69653332",target:"_blank",rel:"noopener noreferrer"}},[t._v("TODO，In typescript, why is "),r("code",[t._v("[boolean, string?]")]),t._v(" different from "),r("code",[t._v("[boolean, string] | [boolean]")]),t._v("?")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://stackoverflow.com/questions/56346520/typescript-error-type-number-is-not-assignable-to-type-0-1-2-why-am",target:"_blank",rel:"noopener noreferrer"}},[t._v("TODO，TypeScript error: \"Type 'number' is not assignable to type '0 | 1 | 2' \". Why am I getting this error?")])]),t._v(" "),r("h2",{attrs:{id:"类型体操"}},[t._v("类型体操")]),t._v(" "),r("h4",{attrs:{id:"什么是类型体操"}},[t._v("什么是类型体操？")]),t._v(" "),r("p",[t._v("TypeScript 的类型系统是图灵完备的，这意味着能用 JavaScript 解决的问题，用 TypeScript 的类型系统同样能解决，只是实现方式不一样。尽管完成某种“实现”的方式可能非常复杂，但人们就像玩玩具一样喜欢玩它，或是把它看作某种脑力运动。充满技巧，有乐趣，复杂，又花里胡哨，所以是体操咯。")]),t._v(" "),r("h4",{attrs:{id:"什么是图灵完备"}},[t._v("什么是图灵完备？")]),t._v(" "),r("p",[t._v("图灵完备通常指一门编程语言，这意味着这门语言能完成所有图灵机能做的工作。图灵机简单来说，是一个带有无限长度纸带的机器，纸带上有规律组成的 0 和 1，而图灵机通过读写纸带，就可以模拟任何可以实现的计算。")]),t._v(" "),r("p",[t._v("见："),r("a",{attrs:{href:"https://www.bilibili.com/video/BV18L4y15786/",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是图灵完备 @bili")]),t._v("，"),r("a",{attrs:{href:"https://www.zhihu.com/question/20115374",target:"_blank",rel:"noopener noreferrer"}},[t._v("TODO，什么是图灵完备 @zhihu")])]),t._v(" "),r("h4",{attrs:{id:"memo"}},[t._v("Memo")]),t._v(" "),r("p",[t._v("见："),r("RouterLink",{attrs:{to:"/maps/typescript/type-gymnastics.html"}},[t._v("TODO，类型体操")])],1)])}),[],!1,null,null,null);r.default=s.exports}}]);