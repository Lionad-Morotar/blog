(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{968:function(t,e,i){"use strict";i.r(e);var l=i(0),v=Object(l.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"evil-js"}},[t._v("Evil.js")]),t._v(" "),e("nav",{staticClass:"table-of-contents"},[e("ol",[e("li",[e("a",{attrs:{href:"#evil-js"}},[t._v("Evil.js")]),e("ol",[e("li",[e("a",{attrs:{href:"#如何阻止类似-evil-js-的投毒"}},[t._v("如何阻止类似 evil.js 的投毒？")])])])])])]),e("h4",{attrs:{id:"如何阻止类似-evil-js-的投毒"}},[t._v("如何阻止类似 evil.js 的投毒？")]),t._v(" "),e("ul",[e("li",[t._v("使用 Function.toString 检测函数是否经过篡改（但是 toString 本身可以被篡改）")]),t._v(" "),e("li",[t._v("使用 iFrame 获取相对干净的全局对象（但是 appendChild 和 toString 本身可以被篡改）")]),t._v(" "),e("li",[t._v("使用 NodeJS VM 模块获得干净的运行环境")]),t._v(" "),e("li",[t._v("使用 ShadowRealm 获得干净的运行环境")]),t._v(" "),e("li",[t._v("在代码最上层使用 Object.freeze 冻结全局对象的原型（这会导致依赖改动原型的框架失效，比如 Vue2 修改了数组原型）")]),t._v(" "),e("li",[t._v("在代码最上层缓存原型方法的引用，在使用的时候进行对比")]),t._v(" "),e("li",[t._v("使用万能的 Proxy")])]),t._v(" "),e("p",[t._v("见："),e("a",{attrs:{href:"https://www.bilibili.com/video/BV1fe4y1o7kV",target:"_blank",rel:"noopener noreferrer"}},[t._v("怎么防止 Evil.js 代码投毒")])])])}),[],!1,null,null,null);e.default=v.exports}}]);