(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{948:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css-mind-map"}},[t._v("CSS Mind Map")]),t._v(" "),a("nav",{staticClass:"table-of-contents"},[a("ol",[a("li",[a("a",{attrs:{href:"#css-mind-map"}},[t._v("CSS Mind Map")]),a("ol",[a("li",[a("a",{attrs:{href:"#概念"}},[t._v("概念")]),a("ol",[a("li",[a("a",{attrs:{href:"#辨析规则与规则集"}},[t._v("辨析“规则”与“规则集”")])]),a("li",[a("a",{attrs:{href:"#块级元素-block-level-elements-与内联元素-inline-level-elements"}},[t._v("块级元素（Block-level elements）与内联元素（Inline-level elements）")])]),a("li",[a("a",{attrs:{href:"#替换元素-replaced-elements-与非替换元素-non-replaced-elements"}},[t._v("替换元素（Replaced elements）与非替换元素（Non-Replaced elements）")])]),a("li",[a("a",{attrs:{href:"#内在盒子-inner-display-type-与外在盒子-outer-display-type"}},[t._v("内在盒子（Inner Display Type）与外在盒子（Outer Display Type）")])])])]),a("li",[a("a",{attrs:{href:"#选择器"}},[t._v("选择器")]),a("ol",[a("li",[a("a",{attrs:{href:"#css-大小写敏感吗"}},[t._v("CSS 大小写敏感吗？")])]),a("li",[a("a",{attrs:{href:"#伪类和伪元素用单冒号还是双冒号"}},[t._v("伪类和伪元素用单冒号还是双冒号？")])]),a("li",[a("a",{attrs:{href:"#empty-选择器的巧用"}},[t._v(":empty 选择器的巧用")])]),a("li",[a("a",{attrs:{href:"#通配符的优先级问题"}},[t._v("通配符的优先级问题")])]),a("li",[a("a",{attrs:{href:"#哪些属性可以继承"}},[t._v("哪些属性可以继承？")])]),a("li",[a("a",{attrs:{href:"#text-decoration-可以继承吗"}},[t._v("text-decoration 可以继承吗？")])]),a("li",[a("a",{attrs:{href:"#继承得到的属性优先级是多少"}},[t._v("继承得到的属性优先级是多少？")])]),a("li",[a("a",{attrs:{href:"#听说过-lvht-吗"}},[t._v("听说过 LVHT 吗？")])])])]),a("li",[a("a",{attrs:{href:"#视觉格式化模型"}},[t._v("视觉格式化模型")]),a("ol",[a("li",[a("a",{attrs:{href:"#元素类型如何影响盒子类型"}},[t._v("元素类型如何影响盒子类型？")])]),a("li",[a("a",{attrs:{href:"#box-sizing-如何影响盒子尺寸"}},[t._v("box-sizing 如何影响盒子尺寸？")])]),a("li",[a("a",{attrs:{href:"#display-属性如何影响盒子的类型"}},[t._v("display 属性如何影响盒子的类型？")])]),a("li",[a("a",{attrs:{href:"#position-与流的关系有几种"}},[t._v("position 与流的关系有几种？")])]),a("li",[a("a",{attrs:{href:"#bfc-该怎么理解和使用"}},[t._v("BFC 该怎么理解和使用？")])]),a("li",[a("a",{attrs:{href:"#ifc-该怎么理解和使用"}},[t._v("IFC 该怎么理解和使用？")])]),a("li",[a("a",{attrs:{href:"#浮动相关问题"}},[t._v("浮动相关问题")])]),a("li",[a("a",{attrs:{href:"#怎么解决浮动塌陷问题"}},[t._v("怎么解决浮动塌陷问题？")])]),a("li",[a("a",{attrs:{href:"#简单介绍一下-flex-布局"}},[t._v("简单介绍一下 flex 布局？")])]),a("li",[a("a",{attrs:{href:"#元素的层叠顺序是怎样的"}},[t._v("元素的层叠顺序是怎样的？")])])])]),a("li",[a("a",{attrs:{href:"#文本"}},[t._v("文本")]),a("ol",[a("li",[a("a",{attrs:{href:"#vertical-align-默认对齐哪里"}},[t._v("vertical-align 默认对齐哪里？")])]),a("li",[a("a",{attrs:{href:"#letter-spacing-与-word-spacing-的区别"}},[t._v("letter-spacing 与 word-spacing 的区别？")])])])]),a("li",[a("a",{attrs:{href:"#字体"}},[t._v("字体")]),a("ol",[a("li",[a("a",{attrs:{href:"#unicode-range-的巧用"}},[t._v("unicode-range 的巧用")])]),a("li",[a("a",{attrs:{href:"#字体属性使用建议"}},[t._v("字体属性使用建议")])])])]),a("li",[a("a",{attrs:{href:"#css-new"}},[t._v("CSS New")]),a("ol",[a("li",[a("a",{attrs:{href:"#js-如何与-css-变量交互"}},[t._v("JS 如何与 CSS 变量交互？")])]),a("li",[a("a",{attrs:{href:"#css-变量如何赋默认值"}},[t._v("CSS 变量如何赋默认值？")])]),a("li",[a("a",{attrs:{href:"#css-变量的与门和或门逻辑"}},[t._v("CSS 变量的与门和或门逻辑？")])]),a("li",[a("a",{attrs:{href:"#houdini-是什么"}},[t._v("Houdini 是什么？")])]),a("li",[a("a",{attrs:{href:"#properties-and-values-api-有什么用"}},[t._v("Properties and Values API 有什么用？")])]),a("li",[a("a",{attrs:{href:"#怎么实现字符转换的动画效果"}},[t._v("怎么实现字符转换的动画效果？")])])])]),a("li",[a("a",{attrs:{href:"#工程"}},[t._v("工程")]),a("ol",[a("li",[a("a",{attrs:{href:"#怎么解决命名冲突问题"}},[t._v("怎么解决命名冲突问题？")])]),a("li",[a("a",{attrs:{href:"#怎么管理样式的继承关系"}},[t._v("怎么管理样式的继承关系？")])]),a("li",[a("a",{attrs:{href:"#有哪些水平居中方案"}},[t._v("有哪些水平居中方案？")])]),a("li",[a("a",{attrs:{href:"#有哪些垂直居中方案"}},[t._v("有哪些垂直居中方案？")])]),a("li",[a("a",{attrs:{href:"#水平且垂直居中要怎么实现"}},[t._v("水平且垂直居中要怎么实现？")])]),a("li",[a("a",{attrs:{href:"#多行文本截断怎么做"}},[t._v("多行文本截断怎么做？")])]),a("li",[a("a",{attrs:{href:"#移动端适配有了解么"}},[t._v("移动端适配有了解么？")])]),a("li",[a("a",{attrs:{href:"#移动端为什么会有-1px-问题"}},[t._v("移动端为什么会有 1px 问题？")])]),a("li",[a("a",{attrs:{href:"#在移动端为什么不能直接使用-0-5px-解决-1px-问题"}},[t._v("在移动端为什么不能直接使用 0.5px 解决 1px 问题？")])]),a("li",[a("a",{attrs:{href:"#有哪些移动端-1px-的方案"}},[t._v("有哪些移动端 1px 的方案？")])])])]),a("li",[a("a",{attrs:{href:"#调试"}},[t._v("调试")]),a("ol",[a("li",[a("a",{attrs:{href:"#怎么调试打印页面样式"}},[t._v("怎么调试打印页面样式？")])]),a("li",[a("a",{attrs:{href:"#怎么发现页面渲染的性能瓶颈"}},[t._v("怎么发现页面渲染的性能瓶颈？")])]),a("li",[a("a",{attrs:{href:"#怎么快速调试盒子尺寸和其它属性"}},[t._v("怎么快速调试盒子尺寸和其它属性？")])])])]),a("li",[a("a",{attrs:{href:"#magic"}},[t._v("Magic")]),a("ol",[a("li",[a("a",{attrs:{href:"#怎么实现随机效果"}},[t._v("怎么实现随机效果？")])]),a("li",[a("a",{attrs:{href:"#怎么给背景图案做抗锯齿"}},[t._v("怎么给背景图案做抗锯齿？")])])])])])])])]),a("h2",{attrs:{id:"概念"}},[t._v("概念")]),t._v(" "),a("h4",{attrs:{id:"辨析-规则-与-规则集"}},[t._v("辨析“规则”与“规则集”")]),t._v(" "),a("p",[a("abbr",{attrs:{title:"rule"}},[t._v("规则")]),t._v("是由"),a("abbr",{attrs:{title:"property"}},[t._v("属性")]),t._v("和"),a("abbr",{attrs:{title:"value"}},[t._v("值")]),t._v("组成的"),a("abbr",{attrs:{title:"declaration"}},[t._v("声明")]),t._v("、声明与括号形成的"),a("abbr",{attrs:{title:"declaration block"}},[t._v("声明块")]),t._v("再加上"),a("abbr",{attrs:{title:"selector"}},[t._v("选择器")]),t._v("组成，而一条或多条规则组合成了"),a("abbr",{attrs:{title:"rule sets"}},[t._v("规则集")]),t._v("。")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200625022018.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("规则&规则集")])]),t._v(" "),a("h4",{attrs:{id:"块级元素-block-level-elements-与内联元素-inline-level-elements"}},[t._v("块级元素（Block-level elements）与内联元素（Inline-level elements）")]),t._v(" "),a("p",[t._v("类似 div、ul、p、h1 这些都是块级元素。一般来说，块级元素会生成一个默认填满父容器的内容区域。其后的兄弟元素将会被“换行显示”；内联元素会在一个文本行中生成元素框，它不会打断这行文本。内联元素常也译为“行内级元素”，在一些文章中，也被称为“行内元素”。")]),t._v(" "),a("h4",{attrs:{id:"替换元素-replaced-elements-与非替换元素-non-replaced-elements"}},[t._v("替换元素（Replaced elements）与非替换元素（Non-Replaced elements）")]),t._v(" "),a("p",[t._v("除了如 img、input、iframe 等元素，大多数元素都是非替换元素。替换元素的内容区域会被替换为其指向的外部对象。比如，如果 img 元素不带 src 属性的话，它不指向任何内容，在文档中没有意义，也就不是替换元素；如果 img 的 src 链接了外部图片，那么它的内容区域将被图片替换，此时就是替换元素。")]),t._v(" "),a("h4",{attrs:{id:"内在盒子-inner-display-type-与外在盒子-outer-display-type"}},[t._v("内在盒子（Inner Display Type）与外在盒子（Outer Display Type）")]),t._v(" "),a("p",[t._v("内在盒子描述元素和其子元素的行为，外在盒子描述了元素与父元素以及兄弟元素间的行为。举个例子：")]),t._v(" "),a("ul",[a("li",[t._v("display: block 的盒子由外在块级盒子和内在块级容器盒子组成")]),t._v(" "),a("li",[t._v("display: inline-block 的盒子由外在内联盒子和内在块级容器盒子组成")]),t._v(" "),a("li",[t._v("display: inline 的盒子由外在内联盒子和内在内联盒子组成")])]),t._v(" "),a("h2",{attrs:{id:"选择器"}},[t._v("选择器")]),t._v(" "),a("h4",{attrs:{id:"css-大小写敏感吗"}},[t._v("CSS 大小写敏感吗？")]),t._v(" "),a("p",[t._v("选择器大小写敏感，但 CSS 其它部分大小写并不敏感。所以 Display: NONE 和 display: none 是等价的。")]),t._v(" "),a("h4",{attrs:{id:"伪类和伪元素用单冒号还是双冒号"}},[t._v("伪类和伪元素用单冒号还是双冒号？")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("伪元素表示通过选取 DOM Tree 中不存在的元素")]),t._v("。它是一种概念或范围，所以可以对伪元素样式修改，如首字母（::first-letter）。")]),t._v(" "),a("li",[a("strong",[t._v("伪类表示元素的一种状态")]),t._v("，如激活状态（:active）。同一个元素，多个状态之间可以并存，如激活悬浮状态（:active:hover）。为什么 :hover、:focus 等和用户操作相关的状态也是伪类呢？因为用户操作导致元素状态改变。")])]),t._v(" "),a("h4",{attrs:{id:"empty-选择器的巧用"}},[t._v(":empty 选择器的巧用")]),t._v(" "),a("p",[t._v("前阵子看一篇文章，有一位老哥用 :empty 选择器来处理文字逻辑的：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("姓名："),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("张三"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("性别："),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("手机："),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("邮箱："),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("dd:empty::before")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'暂无'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200629211938.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v(":empty 伪类占位逻辑")])]),t._v(" "),a("p",[t._v("这只能体现 CSS 的可能性，但在项目中运用则是一种错误的做法。比如，如果考虑项目后期要做国际化，那么写在 CSS 中这些内容的可维护性就非常差了。JS 处理逻辑，CSS 负责样式，关注点别搞混了。")]),t._v(" "),a("h4",{attrs:{id:"通配符的优先级问题"}},[t._v("通配符的优先级问题")]),t._v(" "),a("p",[t._v("通配符的优先级要比默认高，所以在 CSS Reset 的时候要注意。")]),t._v(" "),a("h4",{attrs:{id:"哪些属性可以继承"}},[t._v("哪些属性可以继承？")]),t._v(" "),a("p",[t._v("CSS 中的继承理念很符合直觉，大部分属性如边框、边距、填充等盒子的样式不能继承，而文字相关的如字体、颜色等属性就可以继承。")]),t._v(" "),a("p",[t._v("可继承的属性以下列出：")]),t._v(" "),a("ul",[a("li",[t._v("交互样式相关属性：visibility、cursor")]),t._v(" "),a("li",[t._v("文字排版相关属性：letter-spacing、word-spacing、white-space、line-height、color、font-*、text-*")]),t._v(" "),a("li",[t._v("列表排版相关属性：list-style、list-style-type、list-style-position、list-style-image")]),t._v(" "),a("li",[t._v("表格排版相关属性：border-collapse")])]),t._v(" "),a("h4",{attrs:{id:"text-decoration-可以继承吗"}},[t._v("text-decoration 可以继承吗？")]),t._v(" "),a("p",[t._v("text-* 开头的属性大都可以继承，然而 text-decoration-* 是个例外。在下面这个例子中，“子元素”看起来像是继承了来自父元素的 underline 属性。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token special-attr"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),a("span",{pre:!0,attrs:{class:"token value css language-css"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-decoration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" underline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  父元素 |\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token special-attr"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),a("span",{pre:!0,attrs:{class:"token value css language-css"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-decoration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" line-through"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    子元素 text-decoration: line-through\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  | 父元素\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",{staticClass:"m0",staticStyle:{"text-decoration":"underline"}},[t._v("父元素 | "),a("span",{staticStyle:{"text-decoration":"line-through"}},[t._v("子元素 text-decoration: line-through")]),t._v(" | 父元素")]),t._v(" "),a("h4",{attrs:{id:"继承得到的属性优先级是多少"}},[t._v("继承得到的属性优先级是多少？")]),t._v(" "),a("p",[t._v("继承得来的值优先级是 0，和通配符一样。很遗憾，其实并不是。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("This is my heading."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("asdf"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #bbb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("h1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #333"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200625025101.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("继承得来的值得特殊性不比 0，0，0，0 要高")])]),t._v(" "),a("h4",{attrs:{id:"听说过-lvht-吗"}},[t._v("听说过 LVHT 吗？")]),t._v(" "),a("p",[t._v("“LVHT”指的是我们写 CSS 时常使用的“a:link、a:visited、a:hover、a:active”顺序，主要是依靠级联的最后一条规则“声明出现在文档中的顺序越后，权重越大”。")]),t._v(" "),a("p",[t._v("一般来说，我们不会使用“a:active:hover、a:hover:link”等选择器。由于我们总是这四个状态的重要性依次递增，所以推荐“LVHT”顺序，也可以记为“Love&Hate”。")]),t._v(" "),a("h2",{attrs:{id:"视觉格式化模型"}},[t._v("视觉格式化模型")]),t._v(" "),a("p",[t._v("视觉格式化模型，即“Visual Formatting Model”。一般 CSS 使用自上而下，从左至右的布局。盒子是其中的最基础的渲染单位，代表了元素的展现方式以及它们同周围元素的相互作用。渲染时，所有元素都会依据 VFM 来判定其大小，位置以及属性。VFM 决定了浏览器如何处理文档树，将元素转化为用户看到的内容。")]),t._v(" "),a("ul",[a("li",[t._v("盒子尺寸，受元素类型、box-sizing 影响")]),t._v(" "),a("li",[t._v("盒子类型，受 display、float 影响")]),t._v(" "),a("li",[t._v("定位方案，受 position 影响")]),t._v(" "),a("li",[t._v("子元素及兄弟元素")]),t._v(" "),a("li",[t._v("Viewport 尺寸及位置")]),t._v(" "),a("li",[t._v("内在尺寸（如果是替换元素的话，需要考虑元素的内在尺寸，如图片宽度）")])]),t._v(" "),a("h4",{attrs:{id:"元素类型如何影响盒子类型"}},[t._v("元素类型如何影响盒子类型？")]),t._v(" "),a("p",[t._v("每一个块级元素都会按照 VFM 生成至少一个主块级盒子（Principle Block-level Box）。说“至少”是因为一些块级元素能生成额外的盒子，如 li 会生成标记盒子（就是列表项前面的那个点点）。")]),t._v(" "),a("p",[t._v("除非一个块级盒子是表盒（Table Box）或替换元素的主盒，块级盒子也是一个块容器盒子（Block Container Box）。当一个盒子既是块级盒子，也是块容器盒子时，它也是块盒子（Block Box）。见下图左。")]),t._v(" "),a("p",[t._v("一般情况下，一个块容器盒子要么只包括块级盒子，要么只包含内联级盒子（行内级盒子）。")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200702000624.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("Block Box")])]),t._v(" "),a("p",[t._v("内联元素（Inline-level Elements）不会为内容形成新的块，它的内容只能以“行”的形式布局。每一个内联元素都会生成一个内联盒子，这个盒子要么是行内盒子（Inline Box），要么是原子内联盒子（Atomic Inline-level Box）。行内盒子及其内容会直接参与 IFC，而原子内联盒子以“单一不透明盒子”的形式参与 IFC。")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200702004940.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("Inline-level Box")])]),t._v(" "),a("details",[a("summary",[t._v("原子内联盒子示例")]),t._v(" "),a("p",{staticClass:"b1 m0 p10",staticStyle:{resize:"horizontal",overflow:"auto"}},[t._v("通过 Resizer 改变父元素的宽度，能发现 Inline Block Elements 会像块级元素一样在放不下时整个换行，不像文本一样拆分作多行 "),a("span",{staticClass:"b1 p010",staticStyle:{display:"inline-block"}},[t._v("Inline Block Elements")])])]),t._v(" "),a("h4",{attrs:{id:"box-sizing-如何影响盒子尺寸"}},[t._v("box-sizing 如何影响盒子尺寸？")]),t._v(" "),a("p",[t._v("Box Sizing 用来标记盒子的内容区宽高的计算方式。《CSS 世界》提到：属性 Box Sizing 发明的初衷可能是用于解决替换元素的宽度自适应的问题。比如输入框的宽度默认情况下的 100% 往往会超过父容器。所以建议这样写样式重置：")]),t._v(" "),a("div",{staticClass:"language-SCSS extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("input, textarea, img, video, object ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"display-属性如何影响盒子的类型"}},[t._v("display 属性如何影响盒子的类型？")]),t._v(" "),a("ul",[a("li",[t._v("display: block，生成一个主块盒子")]),t._v(" "),a("li",[t._v("display: inline-block，生成一个主内联盒容器（自身按照块盒子进行格式化布局，内容则按照原子内联盒子布局）")]),t._v(" "),a("li",[t._v("display: inline，生成一个或多个行内盒子")]),t._v(" "),a("li",[t._v("display: none，自身及内容都会在布局时被移除，不会生成任何盒子")]),t._v(" "),a("li",[t._v("display: content，会保留盒子、子元素以及其自身伪元素，只是浏览器不会渲染盒子的边界")])]),t._v(" "),a("h4",{attrs:{id:"position-与流的关系有几种"}},[t._v("position 与流的关系有几种？")]),t._v(" "),a("p",[t._v("CSS2.2 的定位方案就三种，普通流定位，浮动定位或是绝对定位。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("普通流定位")]),t._v("，按普通流的规则排列盒子，Position 属性的值为 static")]),t._v(" "),a("li",[a("strong",[t._v("浮动定位")]),t._v("，脱离文档流（Out of Flow），Float 属性的值不为 none")]),t._v(" "),a("li",[a("strong",[t._v("绝对定位")]),t._v("，脱离文档流，Position 属性的值为 static | fixed")])]),t._v(" "),a("p",[t._v("在普通流中，盒子默认按从左至右、自上而下的规则排列；可以使用相关属性改变流的方向，下图是阿拉伯使用的搜索引擎主页，见 HTML 元素上定义的 DIR 属性：")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200629195939.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("阿拉伯搜索引擎")])]),t._v(" "),a("h4",{attrs:{id:"bfc-该怎么理解和使用"}},[t._v("BFC 该怎么理解和使用？")]),t._v(" "),a("p",[t._v("布局时，VFM 依据盒子的类型生成格式化上下文，有 BFC（Block Formatting Context） 或是 IFC 等。格式化上下文使盒子在界面上形成一个独立的，不影响外界的容器。")]),t._v(" "),a("p",[t._v("最直观的感受肯定是 HTML 元素，即根元素，它是浏览器中最重要的一个独立的不影响外界的容器。根元素会创建 BFC，在一些情况下，其它元素也会。这里有 MDN 的一份创建 BFC 方法的"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context",target:"_blank",rel:"noopener noreferrer"}},[t._v("清单")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("根元素")]),t._v(" "),a("li",[t._v("浮动元素")]),t._v(" "),a("li",[t._v("绝对定位元素")]),t._v(" "),a("li",[t._v("Overflow 不为 Visible 的块级元素")]),t._v(" "),a("li",[t._v("CSS3 中新增了一种 display: flowRoot 可以用来创建无副作用的 BFC。")]),t._v(" "),a("li",[t._v("行内块元素，弹性元素，网格元素")]),t._v(" "),a("li",[t._v("表格单元格，表格标题")])]),t._v(" "),a("p",[t._v("BFC 的副作用主要和浮动元素以及内部子元素相关：")]),t._v(" "),a("ul",[a("li",[t._v("BFC 不会和外部浮动元素重叠。")]),t._v(" "),a("li",[t._v("BFC 内部的相邻的块级盒子的垂直外边距会折叠。")]),t._v(" "),a("li",[t._v("计算 BFC 的高度时，内部浮动的盒子也会参与计算。")])]),t._v(" "),a("details",[a("summary",[t._v("BFC 不会和外部浮动元素重叠")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"b1"},[a("div",{staticClass:"b1 bg-gray",staticStyle:{margin:"auto",float:"left",height:"100px",width:"100px"}},[t._v("Float1")]),t._v("DIV")]),t._v(" "),a("div",{staticClass:"b1 bg-gray",staticStyle:{margin:"auto",float:"left",height:"100px",width:"100px"}},[t._v("Float2")]),t._v(" "),a("div",{staticClass:"dib b1 bg-gray",staticStyle:{height:"100px",width:"100px"}},[t._v("BFC")])])])]),t._v(" "),a("details",[a("summary",[t._v("BFC 内部的相邻的块级盒子的垂直外边距会折叠")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"dib b1 vm"},[a("div",{staticClass:"bb p010 b1 bg-gray",staticStyle:{"margin-bottom":"1em",height:"2em"}},[t._v("Height 2em & Margin Bottom 1em")]),t._v(" "),a("div",{staticClass:"bb p010 b1 bg-gray",staticStyle:{"margin-top":"1em",height:"2em"}},[t._v("Height 2em & Margin Top 1em")])])])])]),t._v(" "),a("details",[a("summary",[t._v("计算 BFC 的高度时，内部浮动的盒子也会参与计算")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"dib b1 vm"},[a("div",{staticClass:"b1 bg-gray",staticStyle:{margin:"auto",float:"left",height:"100px",width:"100px"}},[t._v("Float")]),t._v("BFC")])])])]),t._v(" "),a("h4",{attrs:{id:"ifc-该怎么理解和使用"}},[t._v("IFC 该怎么理解和使用？")]),t._v(" "),a("p",[t._v("如果一个块级盒内部只有行内盒子，那么会创建一个 IFC，块级盒子内部的盒子就会按照 IFC 的规则排列。在 IFC 中，需要注意：")]),t._v(" "),a("ul",[a("li",[t._v("内部的盒子一个接着一个地排列，起点是包含块的顶点。")]),t._v(" "),a("li",[t._v("如果一行放不下内容，那么会被“拆”开放到下一行。")]),t._v(" "),a("li",[t._v("只有水平方向上的 Margin 会在盒子中保留。")]),t._v(" "),a("li",[t._v("Padding 和 Border 不会撑开行高。")])]),t._v(" "),a("h4",{attrs:{id:"浮动相关问题"}},[t._v("浮动相关问题")]),t._v(" "),a("ul",[a("li",[t._v("父容器塌陷问题")])]),t._v(" "),a("p",[t._v("浮动元素，尤其是浮动的图片，很适合用来进行图文混合排版。但是由于脱离了正常文档流，非 BFC 容器不会计算内部浮动元素的高度，所以会引起父容器塌陷的问题。")]),t._v(" "),a("br"),t._v(" "),a("div",{staticClass:"b1"},[a("div",{staticClass:"b1 bg-gray",staticStyle:{margin:"auto",float:"left",height:"100px",width:"100px"}},[t._v("FLOAT")]),t._v("IM PARENT DIV")]),t._v(" "),a("div",{staticStyle:{clear:"both"}}),t._v(" "),a("ul",[a("li",[t._v("浮动错位问题")])]),t._v(" "),a("p",[t._v("HTML 中两个向右浮动的元素，分别为 ONE 和 TWO，在浏览器渲染出来确实 ONE 在右侧，TWO 在左侧。")]),t._v(" "),a("br"),t._v(" "),a("div",{staticClass:"b1",staticStyle:{overflow:"auto"}},[a("div",{staticClass:"b1 bg-gray",staticStyle:{margin:"auto",float:"right",height:"100px",width:"100px"}},[t._v("FLOAT ONE")]),t._v(" "),a("div",{staticClass:"b1 bg-gray",staticStyle:{margin:"auto",float:"right",height:"100px",width:"100px"}},[t._v("FLOAT TWO")])]),t._v(" "),a("p",[t._v("一个浮动的元素会脱离正常的文档流，然后依据 Float 属性向左或者向右浮动，"),a("strong",[t._v("直到碰到父容器的边框或者另一个浮动元素的边框为止")]),t._v("。所以，浮动错位问题是“特性”，不是“BUG”...")]),t._v(" "),a("h4",{attrs:{id:"怎么解决浮动塌陷问题"}},[t._v("怎么解决浮动塌陷问题？")]),t._v(" "),a("p",[t._v("有几种常见的解决塌陷问题的方法，记录如下：")]),t._v(" "),a("ul",[a("li",[t._v("使用 Clear 属性：\n"),a("ul",[a("li",[t._v("给父容器的伪元素应用 Clear: Both；（推荐）")]),t._v(" "),a("li",[t._v("添加一个额外的标签，应用 Clear: Both；")])])]),t._v(" "),a("li",[t._v("触发父容器的 BFC:\n"),a("ul",[a("li",[t._v("父元素设置 Display: FlowRoot | Flex | Grid；")]),t._v(" "),a("li",[t._v("父元素设置 Overflow: Hidden | Visible；")]),t._v(" "),a("li",[t._v("父元素也浮动；")])])]),t._v(" "),a("li",[t._v("给父元素定高；")]),t._v(" "),a("li",[t._v("...")])]),t._v(" "),a("h4",{attrs:{id:"简单介绍一下-flex-布局"}},[t._v("简单介绍一下 flex 布局？")]),t._v(" "),a("p",[t._v("Flex 是一种非常灵活的一维布局方式，它使子元素按照主轴方向排列，并根据交叉轴来设置对齐。")]),t._v(" "),a("details",[a("summary",[t._v("Flex 容器可以应用的属性")]),t._v(" "),a("ul",[a("li",[t._v("flex-direction，用于控制子元素在主轴的排列方向")]),t._v(" "),a("li",[a("img",{staticClass:"vm",attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200628061842.png"}})]),t._v(" "),a("li",[t._v("flex-wrap，规定子元素超出 Flex 容器边界时是否允许折行")]),t._v(" "),a("li",[t._v("justify-content，主轴对齐方式。")]),t._v(" "),a("li",[t._v("align-items，主轴对齐方式。")]),t._v(" "),a("li",[t._v("...")])])]),t._v(" "),a("details",[a("summary",[t._v("Flex 容器的子元素可以应用的属性")]),t._v(" "),a("ul",[a("li",[t._v("align-self，设置子元素在副轴的对齐方式，会覆盖父容器的 align-items 属性的值")]),t._v(" "),a("li",[t._v("order，子元素在主轴的排列顺序，数值越小越靠前，可以为负数")]),t._v(" "),a("li",[t._v("flex-basis，伸缩基准值，将会覆盖 Width 属性的值")]),t._v(" "),a("li",[t._v("flex-grow，扩展比率。相对其它子元素的 flex-grow 之和的比例，代表将“占据”父容器剩余空间的份数。")]),t._v(" "),a("li",[t._v("flex-shrink，收缩比率。作用正好相反于 flex-grow，相对于其它子元素的 flex-shrink 之和的比例，代表将“收缩”超过父容器的空间的份数。")]),t._v(" "),a("li",[t._v("...")])])]),t._v(" "),a("p",[t._v("flex-grow 光看概念有些难懂，这里用数值说明一下：假设父容器宽度 100px，子元素只有 1 个，宽度为 50px，flex-grow: .5，那么，子元素就会占据 100px-50px 剩余空间的“自身 flex-grow 数值 / 所有子项 flex-grow 之和”的值的百分比（.5 / .5 = 100%）。")]),t._v(" "),a("p",[t._v("所以，当父容器只含有一个子元素时，给子元素设置 flex-grow: 1 能使它填充满整个父容器：")]),t._v(" "),a("div",{staticClass:"b1",attrs:{stype:"display: flex; height: 50px;"}},[a("div",{staticClass:"bb p010 bg-gray tac",staticStyle:{margin:"1px",border:"1px dashed","flex-grow":"1",height:"50px","line-height":"50px"}},[t._v("DASHED-ITEM")])]),t._v(" "),a("p",[t._v("前几天在群里有老哥问：怎么在 Flex 布局中强制换行啊？")]),t._v(" "),a("p",[t._v("我心里一惊，Flex 不是这样用的。谨记："),a("strong",[t._v("尽管有主轴和副轴之分，但 Flex 是一维布局")]),t._v("。不过，强制换行也可以做到，有很多种方法，以下展示通过子元素设置 flex-basis: 100% 达到强制换行的示例：")]),t._v(" "),a("div",{staticClass:"b1",attrs:{stype:"display: flex; flex-wrap: wrap;"}},[a("div",{staticClass:"bb p010 bg-gray tac",staticStyle:{margin:"1px",border:"1px dashed",height:"50px","line-height":"50px"}},[t._v("DASHED-ITEM")]),t._v(" "),a("div",{staticStyle:{"flex-basis":"100%"}}),t._v(" "),a("div",{staticClass:"bb p010 bg-gray tac",staticStyle:{margin:"1px",border:"1px dashed",height:"50px","line-height":"50px"}},[t._v("DASHED-ITEM")])]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200628071523.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("FFC 强制换行")])]),t._v(" "),a("h4",{attrs:{id:"元素的层叠顺序是怎样的"}},[t._v("元素的层叠顺序是怎样的？")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20220619191531.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("CSS Stacking Order")])]),t._v(" "),a("h2",{attrs:{id:"文本"}},[t._v("文本")]),t._v(" "),a("p",[t._v("Line Height & Vertical Align，先挖坑，以后再跳。想要详细了解的话，可以先康康《CSS 世界》，"),a("a",{attrs:{href:"https://www.cssworld.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接直达")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"vertical-align-默认对齐哪里"}},[t._v("vertical-align 默认对齐哪里？")]),t._v(" "),a("p",[t._v("vertical-align 必须在内联元素中才能起作用，默认值是 baseline，将对齐父元素的基线，即字母x的底端。")]),t._v(" "),a("h4",{attrs:{id:"letter-spacing-与-word-spacing-的区别"}},[t._v("letter-spacing 与 word-spacing 的区别？")]),t._v(" "),a("ul",[a("li",[t._v("前者指字母之间的间隔；后者指空格的额外大小。")]),t._v(" "),a("li",[t._v("word-spacing 非常适合用来调整中英文混合时的排版间隙，无需修改元素的 Margin 值。")])]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/CUFmqr7DAI.gif",alt:"",loading:"lazy"}}),a("figcaption",[t._v("调整 word-spacing")])]),t._v(" "),a("h2",{attrs:{id:"字体"}},[t._v("字体")]),t._v(" "),a("h4",{attrs:{id:"unicode-range-的巧用"}},[t._v("unicode-range 的巧用")]),t._v(" "),a("p",[t._v("比如我把博客字体中所有弯引号的映射都改成了直角引号，见下图：")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200629204104.png",alt:"",loading:"lazy"}})]),t._v(" "),a("p",[t._v("其实原理比较简单，直接康康定义的 CSS：")]),t._v(" "),a("div",{staticClass:"language-SCSS extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@font-face")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Quote'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("unicode-range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" U+201c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" U+201d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" U+300C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" U+300D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@font-face")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Noto Serif CJK'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(":root ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("--font-text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Quote'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Noto Serif CJK'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("article ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--font-text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("也就是定义了一个只包含了引号 Unicode 映射的字体“Quote”，而中文字符或是英文字符在这个字体中找不到对应的映射，则回退至“Noto Serif CJK”中进行匹配。")]),t._v(" "),a("h4",{attrs:{id:"字体属性使用建议"}},[t._v("字体属性使用建议")]),t._v(" "),a("details",[a("summary",[t._v("不使用 font-size: larger | smaller")]),t._v(" "),a("ul",[a("li",[t._v("相对值不仅改变字体大小没有统一的标准（在我的浏览器中，larger 字体大小要比父元素大 1.2 倍），但是在其它浏览器中不一定是 1.2 倍；同时，它会改变行高（我没有得出改变行高具体的规律）。下段有两个字体大小为 50px 的“字”。右侧哪一个应用了 font-size: larger。黑色边框代表字宽，字宽宽度就是字体大小。你可以尝试用鼠标选中两个字，对比它们的行高及字宽。")]),t._v(" "),a("li",[a("p",{staticClass:"ls0",staticStyle:{"font-size":"50px"}},[a("span",{staticClass:"b1"},[t._v("字")]),a("span",{staticClass:"b1",staticStyle:{"margin-left":"8px","font-size":"larger"}},[t._v("字")])])])])]),t._v(" "),a("h2",{attrs:{id:"css-new"}},[t._v("CSS New")]),t._v(" "),a("h4",{attrs:{id:"js-如何与-css-变量交互"}},[t._v("JS 如何与 CSS 变量交互？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置变量")]),t._v("\n$elm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--var'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"css-变量如何赋默认值"}},[t._v("CSS 变量如何赋默认值？")]),t._v(" "),a("p",[t._v("CSS 变量的第二个值为默认值，如果想兼容不支持 CSS 变量的浏览器，需要新增一个同名属性作为使用了 CSS 变量的属性的回退方案。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("button "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 80px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 80px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Less 代码可以使用正则替换来实现简单的替换效果。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("@button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 80px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("@property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" @imp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@imp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@([^() ]+)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@{$1}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ig'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  @"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@imp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@([^() ]+)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'var(--$1, @{$1})'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ig'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("button "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@button-default-width'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("见："),a("a",{attrs:{href:"https://codepen.io/Lionad/pen/MWVYRzL",target:"_blank",rel:"noopener noreferrer"}},[t._v("use CSS variable with fallback in Less")])]),t._v(" "),a("h4",{attrs:{id:"css-变量的与门和或门逻辑"}},[t._v("CSS 变量的与门和或门逻辑？")]),t._v(" "),a("p",[t._v("可以利用 CSS 变量的空值来运算与逻辑和或逻辑。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* --tog1 --tog2 --tog3 同时为空值时是 red */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("--red-if-and")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--tog1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--tog2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--tog3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* --tog1 --tog2 --tog3 任意为空值时是 red */")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("--red-if-or")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--tog1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--tog2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--tog3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"houdini-是什么"}},[t._v("Houdini 是什么？")]),t._v(" "),a("p",[t._v("Houdini 包含一系列的底层 API，使开发者有能力访问 CSSOM，对自定义属性提供解析、渲染支持。")]),t._v(" "),a("h4",{attrs:{id:"properties-and-values-api-有什么用"}},[t._v("Properties and Values API 有什么用？")]),t._v(" "),a("p",[t._v("它提供了 CSS.registerProperty 接口以及 @property at-rule，使 JS、CSS 有能力自定义 CSS 变量，并提供变量的初始值、语法（值类型）和可继承性的的定义。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@supports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("paint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("houdini"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@property")]),t._v(" --stop")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("syntax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<percentage>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("inherits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" false"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("initial-value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 40%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".anim")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* fallback */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("--stop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 40%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("linear-gradient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pink "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--stop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--stop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" + 20%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Article-A200903-Transition"),t._v(" "),a("p",[t._v("见："),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@property",target:"_blank",rel:"noopener noreferrer"}},[t._v("@property @MDN")]),t._v("、"),a("a",{attrs:{href:"https://web.dev/at-property/",target:"_blank",rel:"noopener noreferrer"}},[t._v("@property: giving superpowers to CSS variables")])]),t._v(" "),a("h4",{attrs:{id:"怎么实现字符转换的动画效果"}},[t._v("怎么实现字符转换的动画效果？")]),t._v(" "),a("p",[t._v("CSS 数字变量有过渡效果，如果同时配合 counter 的格式化参数，可以把数字过渡效果转换成字符的过渡效果！")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@property")]),t._v(" --num")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("syntax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<integer>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("initial-value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2541"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("inherits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" false"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".css-variable-transition")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("counter-set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("--num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid 1px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-weight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bold"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" --num .3s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("cursor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pointer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("&:hover")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("--num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 17049"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("&::after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lower-alpha"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("&::after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lower-alpha"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("Article-A210920-Transition"),t._v(" "),a("p",[t._v("见："),a("a",{attrs:{href:"https://css-tricks.com/animating-number-counters",target:"_blank",rel:"noopener noreferrer"}},[t._v("Animating Number Counters")])]),t._v(" "),a("h2",{attrs:{id:"工程"}},[t._v("工程")]),t._v(" "),a("h4",{attrs:{id:"怎么解决命名冲突问题"}},[t._v("怎么解决命名冲突问题？")]),t._v(" "),a("p",[t._v("CSS 命名方案可以解决命名冲突和复用两大问题，可以尝试使用：CSS Module、Tailwind、BEM 等方案。")]),t._v(" "),a("h4",{attrs:{id:"怎么管理样式的继承关系"}},[t._v("怎么管理样式的继承关系？")]),t._v(" "),a("p",[t._v("ITCSS 使用倒立的三角形表示项目的样式继承关系。三角中的每一层都代表一类样式，而每一层都会被下一层更高的优先级覆盖。所以实践 ITCSS 意味着，随着层级自上而下，选择器特殊性递增，能影响的 DOM 数量也越来越少，我们可以轻易修改特定样式，而不影响其它样式，或是导致样式继承的崩塌这种连锁效应。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200628214218.png?type=win11",alt:"ITCSS（Inverted Triangle CSS）",loading:"lazy"}})]),t._v(" "),a("p",[t._v("见："),a("RouterLink",{attrs:{to:"/maps/css/inverted-triangle-css.html"}},[t._v("ITCSS")])],1),t._v(" "),a("h4",{attrs:{id:"有哪些水平居中方案"}},[t._v("有哪些水平居中方案？")]),t._v(" "),a("details",[a("summary",[t._v("行内级元素（如 Inline，Inline Block）")]),t._v(" "),a("ul",[a("li",[t._v("可以在父元素上使用 Text Align: Center")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray",staticStyle:{padding:"10px","text-align":"center"}},[t._v("\n              Anonymous Box & "),a("span",[t._v("Inline")]),t._v(" & "),a("button",{staticClass:"no-outline"},[t._v("Inline Block")])]),t._v(" "),a("p")])]),t._v(" "),a("details",[a("summary",[t._v("单个块级元素（如 Block）")]),t._v(" "),a("ul",[a("li",[t._v("如果块级元素没有设置 Width，那么它会充满父容器，也算是一种“居中”吧")]),t._v(" "),a("li",[t._v("若固定了 Width，那么可以通过给 Margin Left 和 Margin Right 设置 Auto 值，那么 Margin 会自动填充满“能填充的部分”")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray",staticStyle:{padding:"10px"}},[a("div",{staticStyle:{margin:"auto",width:"30%",height:"45px","line-height":"45px","text-align":"center",border:"1px solid"}},[t._v("\n                    Block\n                ")])]),t._v(" "),a("p")])]),t._v(" "),a("details",[a("summary",[t._v("多个块级元素")]),t._v(" "),a("ul",[a("li",[t._v("一般来说，可以改变块级元素的 Display，改为 Inline Block，于是我们又可以通过 Text Align 居中了")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray",staticStyle:{padding:"10px","text-align":"center"}},[a("div",{staticStyle:{display:"inline-block",width:"30%",height:"45px","line-height":"45px","text-align":"center",border:"1px solid"}},[t._v("Block")]),t._v(" "),a("div",{staticStyle:{display:"inline-block",width:"30%",height:"45px","line-height":"45px","text-align":"center",border:"1px solid"}},[t._v("Block")])]),t._v(" "),a("p"),t._v(" "),a("li",[t._v("更简单（同时省心）的做法是，使用 Flex 布局，通过调整主轴方向上元素的对齐方式进行居中。同时，还可以给父容器设置 Margin 或是给子项设置 Margin，以作更详细的调整。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray",staticStyle:{padding:"10px",display:"flex","justify-content":"center"}},[a("div",{staticStyle:{width:"30%",height:"45px","line-height":"45px","text-align":"center",border:"1px solid"}},[t._v("Block")]),t._v(" "),a("div",{staticStyle:{"margin-left":"8px",width:"30%",height:"45px","line-height":"45px","text-align":"center",border:"1px solid"}},[t._v("Block")])]),t._v(" "),a("p")])]),t._v(" "),a("h4",{attrs:{id:"有哪些垂直居中方案"}},[t._v("有哪些垂直居中方案？")]),t._v(" "),a("details",[a("summary",[t._v("单行行内级元素")]),t._v(" "),a("ul",[a("li",[t._v("将 Line Height 设置为和父元素 Height 等同。注意，精确地说，这是一种“"),a("em",[t._v("近似")]),t._v("居中”，简便起见，以下都作“居中”。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray oh nowrap",staticStyle:{padding:"10px",height:"150px","line-height":"150px"}},[t._v("\n                单行垂直居中：Anonymous Box & "),a("span",[t._v("Inline")]),t._v(" & "),a("span",{staticClass:"dib"},[t._v("Inline Block")])]),t._v(" "),a("p"),t._v(" "),a("li",[t._v("当父容器上下 Padding 相同时，也能使子元素居中。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray oh nowrap",staticStyle:{padding:"60px 10px"}},[t._v("\n                单行垂直居中：Anonymous Box & "),a("span",[t._v("Inline")]),t._v(" & "),a("span",{staticClass:"dib"},[t._v("Inline Block")])]),t._v(" "),a("p"),t._v(" "),a("li",[t._v("Flex... 把主轴方向改为 Column，并调整子项在主轴方向的对齐位置就行。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray",staticStyle:{padding:"10px",display:"flex","justify-content":"center","flex-direction":"column",height:"150px"}},[a("p",{staticClass:"m0"},[t._v("单行垂直居中：Anonymous Box & "),a("span",[t._v("Inline")]),t._v(" & "),a("span",{staticClass:"dib"},[t._v("Inline Block")])])]),t._v(" "),a("p")])]),t._v(" "),a("details",[a("summary",[t._v("多行行内级元素")]),t._v(" "),a("ul",[a("li",[t._v("单行居中的方法也是用与多行居中。不过有一种出乎意料的方法：给父容器设置一个高度为 100% 的 Inline Block 伪元素，并同时给伪元素和内容设置 Vertical Align: Middle 就可以垂直居中了。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray ghost-center",staticStyle:{padding:"10px",height:"280px"}},[a("p",{staticClass:"dib m0 vm"},[t._v("垂直居中：Anonymous Box & "),a("span",[t._v("Inline")]),t._v(" & "),a("span",{staticClass:"dib"},[t._v("Inline Block")]),t._v(" Anonymous Box & "),a("span",[t._v("Inline")]),t._v(" & "),a("span",{staticClass:"dib"},[t._v("Inline Block")]),t._v(" Anonymous Box & "),a("span",[t._v("Inline")]),t._v(" & "),a("span",{staticClass:"dib"},[t._v("Inline Block")])])]),t._v(" "),a("p")])]),t._v(" "),a("details",[a("summary",[t._v("块级元素")]),t._v(" "),a("ul",[a("li",[t._v("若元素高度未知的话，可以使用 TranslateY 垂直居中。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray",staticStyle:{padding:"10px",height:"100px"}},[a("div",{staticClass:"pr b1 p010 h50",staticStyle:{top:"50%",transform:"translateY(-50%)",height:"50px","line-height":"48px"}},[t._v("Top: 50% & TranslateY: -50%")])]),t._v(" "),a("p")])]),t._v(" "),a("h4",{attrs:{id:"水平且垂直居中要怎么实现"}},[t._v("水平且垂直居中要怎么实现？")]),t._v(" "),a("details",[a("summary",[t._v("水平且垂直居中无非就是上两种方案的整合版本。")]),t._v(" "),a("ul",[a("li",[t._v("如果知道子项的宽度和高度，请不要疑惑，使用 Margin 就行。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray",staticStyle:{padding:"10px",height:"100px"}},[a("div",{staticClass:"bb b1 p010 h50 tac",staticStyle:{"margin-top":"25px","margin-left":"25%",width:"50%",height:"50px","line-height":"48px"}},[t._v("Block & Margin")])]),t._v(" "),a("p"),t._v(" "),a("li",[t._v("如果子项宽度和高度未知，Translate 能解决问题。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray",staticStyle:{padding:"10px",height:"100px"}},[a("div",{staticClass:"bb pr b1 p010 h50 tac",staticStyle:{transform:"translate(-50%,-50%)",top:"50%",left:"50%",width:"50%",height:"50px","line-height":"48px"}},[t._v("Block & Translate")])]),t._v(" "),a("p"),t._v(" "),a("li",[t._v("你当然可以选择 Flex 布局。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray flex-cc",staticStyle:{padding:"10px",height:"100px"}},[a("div",{staticStyle:{width:"50%",height:"45px","line-height":"45px","text-align":"center",border:"1px solid"}},[t._v("Flex is God")])]),t._v(" "),a("p"),t._v(" "),a("li",[t._v("Grid 布局，略有兼容性问题，但是会成为今后的二维布局最佳解决方案。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray grid",staticStyle:{padding:"10px",height:"100px"}},[a("div",{staticStyle:{margin:"auto",width:"50%",height:"45px","line-height":"45px","text-align":"center",border:"1px solid"}},[t._v("Grid is God")])]),t._v(" "),a("p")])]),t._v(" "),a("h4",{attrs:{id:"多行文本截断怎么做"}},[t._v("多行文本截断怎么做？")]),t._v(" "),a("details",[a("summary",[t._v("使用 Line Clamp 属性")]),t._v(" "),a("ul",[a("li",[t._v("使用 -webkit-line-clamp 属性可以指定块容器内容的行数，同时容器需要设置 display: -webkit-box | -webkit-inline-box 且 -webkit-box-orient: vertical")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray elipsis-2"},[t._v("\n                Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline\n            ")]),t._v(" "),a("p"),t._v(" "),a("li",[t._v("需要注意的是，父元素使用 LineClamp，子元素不能设置 Padding。")]),t._v(" "),a("p"),a("div",{staticClass:"bg-gray p010 elipsis-2",staticStyle:{padding:"30px 10px"}},[t._v("\n                Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline\n            ")]),t._v(" "),a("img",{staticClass:"mt1em b1",attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200629210937.png"}}),t._v(" "),a("p")])]),t._v(" "),a("details",[a("summary",[t._v("模拟截断")]),t._v(" "),a("ul",[a("li",[t._v("父元素定高，然后设置一个渐变背景的伪元素。")]),t._v(" "),a("p"),a("div",{staticClass:"p010 bg-gray elipsis-h-2",staticStyle:{"--line-height":"1.85","--bg-color":"var(--light-gray)","--dot-color":"#bbb"}},[t._v("\n                Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline Anonymous Box & Multiline\n            ")]),t._v(" "),a("p")])]),t._v(" "),a("h4",{attrs:{id:"移动端适配有了解么"}},[t._v("移动端适配有了解么？")]),t._v(" "),a("p",[t._v("因为不同设备的像素及 DPR 不同，所以按照 CSS 像素写出来的页面在不同浏览器渲染的效果不一样。简单解决可以使用 rem 方案，更现代化的方案是使用响应式单位如 vw、vh 或者 viewport。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("meta name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"viewport"')]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v('"\n  width'),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("device"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("scalable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  initial"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("scale"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  maximum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("scale"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  minimum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("scale"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v('"'),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h4",{attrs:{id:"移动端为什么会有-1px-问题"}},[t._v("移动端为什么会有 1px 问题？")]),t._v(" "),a("p",[t._v("随着硬件更迭，设备的分辨率越来越高，渲染页面会变得吃力。但由于屏幕尺寸未发生改变，渲染更高的分辨率并没有带来可观的视觉效果提升，所以许多移动设备在渲染页面时不会使用真实像素作为渲染的单位，而是渲染一个低分辨率的页面，其中一个像素可能对应多个物理像素。这个比叫 DPR（Device Pixel Ratio）。在 DPR 为 2 的设备中，1px 的边框会渲染为物理像素 2px 的边框，看起来和 UI 稿不符，不美观，这个问题俗称“移动端 1px 问题”。")]),t._v(" "),a("h4",{attrs:{id:"在移动端为什么不能直接使用-0-5px-解决-1px-问题"}},[t._v("在移动端为什么不能直接使用 0.5px 解决 1px 问题？")]),t._v(" "),a("p",[t._v("【首先】设备的 DPR 不一定为 2，所以需要协同 JS 设置 data 属性来辅助 CSS 计算“0.5px”，这违反了 JS 和 CSS 的关注分离原则。【其次】带小数点的像素单位在不同的移动端浏览器中表现不一，很难预料。")]),t._v(" "),a("h4",{attrs:{id:"有哪些移动端-1px-的方案"}},[t._v("有哪些移动端 1px 的方案？")]),t._v(" "),a("ol",[a("li",[t._v("@media query")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@media")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("only")]),t._v(" screen "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-device-pixel-ratio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v('#component[data-dpr="2"]')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("transform")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v('#component[data-dpr="2"]')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" relative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v('#component[data-dpr="2"]::after')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform-origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid #333"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("viewport 缩放")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("initial-scale=0.5, maximum-scale=0.5, minimum-scale=0.5, user-scalable=no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"调试"}},[t._v("调试")]),t._v(" "),a("h4",{attrs:{id:"怎么调试打印页面样式"}},[t._v("怎么调试打印页面样式？")]),t._v(" "),a("p",[t._v("在 Rendering 选项卡中将浏览器的媒体类型改为 Print。")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/LUFiDK36Jo1.gif",alt:"",loading:"lazy"}}),a("figcaption",[t._v("浏览器媒体类型")])]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200629215312.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("预览打印")])]),t._v(" "),a("h4",{attrs:{id:"怎么发现页面渲染的性能瓶颈"}},[t._v("怎么发现页面渲染的性能瓶颈？")]),t._v(" "),a("p",[t._v("在 Rendering 选项卡启用一下设置：")]),t._v(" "),a("ul",[a("li",[t._v("FPS Meter，即时查看页面帧率")]),t._v(" "),a("li",[t._v("Paint Flashing，即时查看页面重绘的区域")])]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/20200629220655.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("FPS Meter & Paint Flashing")])]),t._v(" "),a("h4",{attrs:{id:"怎么快速调试盒子尺寸和其它属性"}},[t._v("怎么快速调试盒子尺寸和其它属性？")]),t._v(" "),a("p",[t._v("通过控制台的 Styles 选项卡能看到元素具体的属性及属性继承关系，不过比较麻烦，不够直观。")]),t._v(" "),a("p",[t._v("用 "),a("a",{attrs:{href:"https://chrome.google.com/webstore/detail/visbug/cdockenadnadldjbbgcallicgledbeoc",target:"_blank",rel:"noopener noreferrer"}},[t._v("Visbug")]),t._v(" 要比浏览器自带的强多了：")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/sp20200629_221459_063.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("Visbug Inspect")])]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/200621/sp20200629_221046_051.png",alt:"",loading:"lazy"}}),a("figcaption",[t._v("Visbug 标尺")])]),t._v(" "),a("h2",{attrs:{id:"magic"}},[t._v("Magic")]),t._v(" "),a("h4",{attrs:{id:"怎么实现随机效果"}},[t._v("怎么实现随机效果？")]),t._v(" "),a("p",[t._v("伪随机可使用“禅原则”，通过重复 13、17 等质数防止数字的倍数发生重叠。同理把动画分成多个子动画，赋予其不同的动画时间，也能达到伪随机效果。真随机需要借助 JS，比如可以通过 CSS 变量或者 data 属性把随机数传递给 CSS。")]),t._v(" "),a("p",[t._v("见："),a("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2017/02/%e8%9d%89%e5%8e%9f%e5%88%99-background-border-radius/",target:"_blank",rel:"noopener noreferrer"}},[t._v("禅原则")]),t._v("，"),a("a",{attrs:{href:"https://codesandbox.io/s/3vrw5mzw7m",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS 真随机数")])]),t._v(" "),a("h4",{attrs:{id:"怎么给背景图案做抗锯齿"}},[t._v("怎么给背景图案做抗锯齿？")]),t._v(" "),a("p",[t._v("见："),a("RouterLink",{attrs:{to:"/articles/css-poaa.html"}},[t._v("CSS POAA")])],1)],1)}),[],!1,null,null,null);a.default=e.exports}}]);