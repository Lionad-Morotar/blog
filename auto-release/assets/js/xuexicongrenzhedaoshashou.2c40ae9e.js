(window.webpackJsonp=window.webpackJsonp||[]).push([[260],{351:function(t,a,s){},448:function(t,a,s){"use strict";s(351)},743:function(t,a,s){"use strict";s.r(a);s(448);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"🏆-学习-js-从忍者到杀手"}},[t._v("🏆 学习 JS，从忍者到杀手")]),t._v(" "),a("p",[t._v("相信大家对《JS 忍者秘籍》一定非常熟悉。想要成为忍者，必须"),a("del",[t._v("自宫")]),t._v("对原型、闭包、函数、作用域等概念极其熟悉，对各种语言核心概念倒背如流。如果你有幸能将这些原理应用到实战，创建各种精巧的原型，并通过社区的考验，那才能获得忍者勋章。")]),t._v(" "),a("p",[t._v("不过，杀手和忍者不同，杀手天生就追求每一个细节。确切的说，JS 杀手追求回归 JS 语言本身（而不是编程实践）。")]),t._v(" "),a("p",[t._v("以下，我准备了一些 JS 难题，它们和某些 JS 核心概念相关。每一个 JS 杀手，或者想成为 JS 杀手的开发都可以来试试，看看自己对 JS 的掌握程度。如果回答不出来的话也请不要气馁，因为其中涉及的内容和日常编程实践相差甚远。")]),t._v(" "),a("p",[t._v("前置说明：")]),t._v(" "),a("ul",[a("li",[t._v("代码执行以 ES6 语言规范为标准。")]),t._v(" "),a("li",[t._v("每一个代码片段都以全局代码的形式运行。")]),t._v(" "),a("li",[t._v("每一个题目都互相独立，其变量互不干涉。")])]),t._v(" "),a("p",[a("strong",[t._v("准备好了吗？杀手试炼开始了！")])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("1.")]),t._v("通常，杀手在出门前会先做个热身运动~")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exercise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exercise\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exercise\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exercise\n")])])]),a("form",{attrs:{id:"js-100-1",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"1",value:"A"}}),t._v("undefined"),t._v(" "),a("input",{attrs:{type:"radio",name:"1",value:"B"}}),t._v("null"),t._v(" "),a("input",{attrs:{type:"radio",name:"1",value:"C"}}),t._v("栈溢出错误"),t._v(" "),a("input",{attrs:{type:"radio",name:"1",value:"D"}}),t._v("语法错误"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("热身运动完成~")]),a("span",{staticClass:"wrong"},[t._v("啊呀，大E了鸭，一不小心扭到腰了！")])]),t._v(" "),a("p",[t._v("`do` 是 JS 中的关键字，一般用在 `do while` 语句中，这个例子里的代码会在静态分析阶段报语法错误“Uncaught SyntaxError: Unexpected token '='”。")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("保证自始而终的细心是成为杀手的必要素质，你做的很棒！在结束热身之前，也许你想增大一些锻炼强度使自己全面进入状态。请思考，如果把代码中的"),a("code",[t._v("do")]),t._v("替换为"),a("code",[t._v("killer")]),t._v("那么结果又是多少呢？")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("2.")]),t._v("出门前别忘了检查一下防弹衣和弹药~")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AK（AK-103）'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bullet（7.62 x 39mm BP）'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("form",{attrs:{id:"js-100-2",action:"",onsubmit:"return false"}},[a("label",[t._v("请填写答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"2",value:"A"}}),t._v("true,true"),t._v(" "),a("input",{attrs:{type:"radio",name:"2",value:"B"}}),t._v("false,true"),t._v(" "),a("input",{attrs:{type:"radio",name:"2",value:"C"}}),t._v("false,false"),t._v(" "),a("input",{attrs:{type:"radio",name:"2",value:"D"}}),t._v("true,false"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("弹药补充完毕！")]),a("span",{staticClass:"wrong"},[t._v("弹夹空的，赶紧重新装填！")])]),t._v(" "),a("p",[t._v("总的来说，isNaN 会对传入的值进行 toNumber 转换，而 Number.isNaN 不会。Number.isNaN 是一种比 isNaN 语义更“正确”的版本。具体算法见"),a("a",{attrs:{href:"https://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan",target:"_blank",rel:"nofollow"}},[t._v("规范")]),t._v("。")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("背好 AKM，往荷包里塞几个弹匣。万事俱备，准备出发啦！")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("3.")]),t._v("插上钥匙，打开车门~")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("where"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" where")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" where"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'L'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sun'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'R'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("where"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" where")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" where"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'L'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sun'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'R'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("form",{attrs:{id:"js-100-3",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"3",value:"A"}}),t._v("undefined，错误"),t._v(" "),a("input",{attrs:{type:"radio",name:"3",value:"B"}}),t._v("sunR，错误"),t._v(" "),a("input",{attrs:{type:"radio",name:"3",value:"C"}}),t._v("sunL，错误"),t._v(" "),a("input",{attrs:{type:"radio",name:"3",value:"D"}}),t._v("sunR，sunR"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("汽车启动，坐稳了！")]),a("span",{staticClass:"wrong"},[t._v("太阳太刺眼了，再回去拿下太阳镜吧~")])]),t._v(" "),a("p",[t._v("参数类型的绑定行为类似变量声明（VarDeclaration），后绑定的标识符会覆盖先绑定的标识符。此外，"),a("a",{attrs:{href:"#sec-function-definitions-static-semantics-early-errors",target:"_blank",rel:"nofollow"}},[t._v("规范还提到")]),t._v("，只有持有简单参数列表的函数（没有参数默认值）且在非严格模式下运行的代码才支持这种行为。不过需要注意的是 use strict 需要在代码环境开头才有用哦~")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("不管怎么说，你正确启动了汽车，接下来一脚把油门踩到底吧！")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("4.")]),t._v("正在加速，坐稳了！")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" acceleration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" speed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" acceleration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("form",{attrs:{id:"js-100-4",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"4",value:"A"}}),t._v("0"),t._v(" "),a("input",{attrs:{type:"radio",name:"4",value:"B"}}),t._v("1"),t._v(" "),a("input",{attrs:{type:"radio",name:"4",value:"C"}}),t._v("2"),t._v(" "),a("input",{attrs:{type:"radio",name:"4",value:"D"}}),t._v("3"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("时速 80！")]),a("span",{staticClass:"wrong"},[t._v("糟糕，发动机好像在冒烟！")])]),t._v(" "),a("p",[t._v("函数实例化时未传入参数，所以 arguments 为空，累加得 0。")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("时速 80 对专业的杀手——你来说太简单了，也许你在寻求一些额外挑战？请在阅读"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-functiondeclarationinstantiation",target:"_blank",rel:"nofollow"}},[t._v("相关规范")]),t._v("后，回答以下两行代码运行的结果~\n    "),a("Highlight",[t._v("\n      /* First */\n      (function(){ var arguments; console.log(arguments) })();\n      /* Second */\n      (function(x = 1){ var arguments; console.log(arguments) })();\n    ")])],1)])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("5.")]),t._v("一边开车，一边寻找目标~")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n")])])]),a("form",{attrs:{id:"js-100-5",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"5",value:"A"}}),t._v("0"),t._v(" "),a("input",{attrs:{type:"radio",name:"5",value:"B"}}),t._v("1"),t._v(" "),a("input",{attrs:{type:"radio",name:"5",value:"C"}}),t._v("2"),t._v(" "),a("input",{attrs:{type:"radio",name:"5",value:"D"}}),t._v("3"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("哈哈！风景不错~")]),a("span",{staticClass:"wrong"},[t._v("糟糕，好像迷路了！")])]),t._v(" "),a("p",[t._v("原型链相关内容是忍者和杀手都要熟练掌握，并刻在脑子里的内容。具体可以康康 "),a("a",{attrs:{href:"https://www.google.com.hk/search?q=JS+prototype+%2B+Hursh+Jain&tbm=isch&oq=JS+prototype+%2B+Hursh+Jain",target:"_blank",rel:"nofollow"}},[t._v("Hursh Jain 的 JS 原型链图片")]),t._v("，非常清晰，能为你打开新世界的大门。")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("偶然间，你看到穿黑衣服的目标在巷子门口一闪而过。事不宜迟，赶紧跟上去~")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("6.")]),t._v("终于找到目标了！")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("seen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'haha'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("form",{attrs:{id:"js-100-6",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"6",value:"A"}}),t._v("true"),t._v(" "),a("input",{attrs:{type:"radio",name:"6",value:"B"}}),t._v("false"),t._v(" "),a("input",{attrs:{type:"radio",name:"6",value:"C"}}),t._v("错误"),t._v(" "),a("input",{attrs:{type:"radio",name:"6",value:"D"}}),t._v("undefined"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("有了高倍镜，你能看清目标周围的情况。")]),a("span",{staticClass:"wrong"},[t._v("跟丢了！黑衣服的目标消失在了人群中！")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-identifiers-runtime-semantics-evaluation",target:"_blank",rel:"nofollow"}},[t._v("规范中提到")]),t._v("，对 target.seen 这种标识符，表达式将返回“值”。这个“值”不会携带计算时上下文信息。可以想象为先把 target.seen 赋值给一个变量，然后单独调用该变量，所以 this 指向 window 而不是 target。")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("定位目标后，你觉得还是应该先破坏掉周围的安保系统为妙。")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("7.")]),t._v("破坏警铃~")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 注意：浏览器环境，两块代码分开执行，防止变量提升 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先执行这三行（破坏左边的警铃）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("alert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" alert\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再执行这三行（破坏右边的警铃）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("alert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" alert\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("form",{attrs:{id:"js-100-7",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"7",value:"A"}}),t._v("undefined，undefined"),t._v(" "),a("input",{attrs:{type:"radio",name:"7",value:"B"}}),t._v("undefined，function"),t._v(" "),a("input",{attrs:{type:"radio",name:"7",value:"C"}}),t._v("function，undefined"),t._v(" "),a("input",{attrs:{type:"radio",name:"7",value:"D"}}),t._v("undefined，错误"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("一枪打爆了警铃！")]),a("span",{staticClass:"wrong"},[t._v("没打中警铃，再补一枪吧！")])]),t._v(" "),a("p",[t._v("在全局代码中声明的变量，分两种情况：一是如果全局对象没有这个属性，就正常走变量声明流程，所以第二个输出为 function；第二点则比较少的老哥知道了，如果全局对象有这个属性，则通过环境记录（Environment Record，可以理解为引擎提供的用于记录声明的变量这么一个东西）其内部属性 VarNames 将声明的标识符于其值的绑定记录下来。这个记录和正常变量声明不同，是可修改的，可以通过以下代码验证：\n    ")]),t._v(" "),a("Highlight",[t._v("\n      // 在新开的控制台测试\n      var alert = (...args) => console.log(args)\n      Object.getOwnPropertyDescriptor(window, 'alert')\n      // >>> {writable: true, enumerable: true, configurable: true, value: ƒ}\n    ")]),t._v(" "),a("p",[t._v("相关规范有："),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-createglobalvarbinding",target:"_blank",rel:"nofollow"}},[t._v("CreateGlobalVarBinding")]),t._v("、"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-delete-operator-runtime-semantics-evaluation",target:"_blank",rel:"nofollow"}},[t._v("Delete Operator")]),t._v("。")]),t._v(" "),a("p",[t._v("多提一句，许多博客说函数的 length 属性具有元属性 DontDelete，DontDelete 为 true，所以不可删除，其实不是这样滴~ 从 ES5 开始 DontDelete 就被内部属性 Configurable 等价替换掉了。从最新的规范中可以找到，"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-functioninitialize",target:"_blank",rel:"nofollow"}},[t._v("函数初始化时")]),t._v("，length 属性当前的内部属性 Configurable 实为 true，所以是“可删除的”。你可以打开浏览器控制台，试试创建一个函数，并删除他的 length 属性，就会发现会返回 true。")]),t._v(" "),a("p",{staticClass:"wrong"},[t._v("想要成为杀手果然一定要先把细节操练一百遍呐！当你准备好了的时候，我们再继续吧。")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("杀手的世界，容不得半点马虎。不过雇主肯定很放心，因为你是个专业的杀手。")])],1)]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("8.")]),t._v("计算距离，瞄准目标！")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" killer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("y")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("z")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("killer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" killer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" killer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("form",{attrs:{id:"js-100-8",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"8",value:"A"}}),t._v("false,false"),t._v(" "),a("input",{attrs:{type:"radio",name:"8",value:"B"}}),t._v("true,true"),t._v(" "),a("input",{attrs:{type:"radio",name:"8",value:"C"}}),t._v("true,false"),t._v(" "),a("input",{attrs:{type:"radio",name:"8",value:"D"}}),t._v("false,true"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("目标，锁定~")]),a("span",{staticClass:"wrong"},[t._v("风有点大，现在开枪子弹会偏得离谱，再等等吧。")])]),t._v(" "),a("p",[t._v("需要注意两点，"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",target:"_blank",rel:"nofollow"}},[t._v("运算符结合性")]),t._v("和隐式转换。关系运算符是左结合性的而赋值运算符是右结合性的，所以 1<2<3 的运算顺序是 (1<2)<3，而 x=y=z 的运算顺序是 x=(y=z)。从赋值语句得，target 和 killer 指向同一个对象，所以在赋值语句中 target.x 即 killer.x，killer.x 得到了“target 被赋值为 1”的“值（即 target）”，target 被赋为 1。所以赋值结束后，killer.x 值为 1，target 值为 1。最终的输出其实是在比较 1<2<3 以及 undefined<undefined<undefined，前者结果为 true，后者为 false。\n    ")]),a("p",{staticClass:"correct"},[t._v("锁定目标了，开枪！")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("9.")]),t._v("BANG！")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"killer\'s target"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" down"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"killer\'s target"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n")])])]),a("form",{attrs:{id:"js-100-9",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"9",value:"A"}}),t._v("0"),t._v(" "),a("input",{attrs:{type:"radio",name:"9",value:"B"}}),t._v("1"),t._v(" "),a("input",{attrs:{type:"radio",name:"9",value:"C"}}),t._v("2"),t._v(" "),a("input",{attrs:{type:"radio",name:"9",value:"D"}}),t._v("3"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("正中目标！Target Down！")]),a("span",{staticClass:"wrong"},[t._v("我们未能击穿他的装甲（指防弹衣）！")])]),t._v(" "),a("p",[t._v("Void 运算符最后会返回 undefined，不过和 typeof down 返回的字符串 undefined 是不相等的，所以第一行 false 没跑了。从规范 "),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-delete-operator-runtime-semantics-evaluation",target:"_blank",rel:"nofollow"}},[t._v("Delete")]),t._v("、"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-undefined",target:"_blank",rel:"nofollow"}},[t._v("Undefined")]),t._v(" 可以找到，删除 null（值）返回 true，删除 undefined 返回 false，第三行 false 没跑了。难的是第二行：delete undefined 不能直接删除，是因为 delete 运算符会先找到 undefined 的描述符，看到它的内部属性 Configurable 为 false，所以不能删。而 void 'string' 返回的 undefined，却是 undefined 的“值”。听起来有些抽象，我们以以下代码为例：")]),t._v(" "),a("Highlight",[t._v("\n      delete NaN; // false\n      +'string'; // NaN\n      delete +'string'; // true\n    ")]),t._v(" "),a("p",[t._v("NaN 是不可删除的，但是我们的表达式 +'string' 返回的是 NaN 这种“值”，所以 delete +'string' 回退为“删除某个值”这种操作，按照规范直接返回 true。题中的 delete void \"killer's target\" 与此原理相同，需要先清空一下大脑再去理解。")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("好，最难的部分解决了！不过按照三流小说的剧情套路来看，杀手总是在行动后，因为回忆起某些抑郁的往事，陷入恐慌与不安。接下来，需要你独自面对并解决这种情绪，也就是——你的“心魔”。")])],1)]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("10.")]),t._v("“邪恶”的情绪在内心滋生！")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 附：heart 和 ghost 是从未定义过的变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("typeof typeof ghost === typeof ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" heart"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("form",{attrs:{id:"js-100-10",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"10",value:"A"}}),t._v("错误"),t._v(" "),a("input",{attrs:{type:"radio",name:"10",value:"B"}}),t._v("undefined"),t._v(" "),a("input",{attrs:{type:"radio",name:"10",value:"C"}}),t._v("true"),t._v(" "),a("input",{attrs:{type:"radio",name:"10",value:"D"}}),t._v("false"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("看来血腥场面甚至不能引起你的情绪波动。")]),a("span",{staticClass:"wrong"},[t._v("子弹击中目标的血腥场面使你有些反胃，你感觉自己的手在摇摇晃晃。")])]),t._v(" "),a("p",[t._v('typeof 右侧表达式如果是无效引用（不可解决的引用，UnresolvableReference）或是 undefined，都会返回 "undefined"。详见规范：'),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-typeof-operator",target:"_blank",rel:"nofollow"}},[t._v("Typeof")]),t._v('。不过请注意，这个 "undefined" 是字符串哇~ 模板字符串实例化的结果会变成 “typeof typeof ghost === typeof undefined”，所以结果为 false。')]),t._v(" "),a("p",{staticClass:"correct"},[t._v("杀手成功战胜了心魔，继续前行~")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("11.")]),t._v("前行路上，心魔又一次袭来 😈，它会淹没你吗？")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" heart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alive'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("evalAttack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" eval "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eval\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ghost "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eval\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" heart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dead'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'console.log(heart)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'console.log(heart)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ghost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'console.log(heart)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("form",{attrs:{id:"js-100-11",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"11",value:"A"}}),t._v("dead alive dead"),t._v(" "),a("input",{attrs:{type:"radio",name:"11",value:"B"}}),t._v("dead alive alive"),t._v(" "),a("input",{attrs:{type:"radio",name:"11",value:"C"}}),t._v("alive dead alive"),t._v(" "),a("input",{attrs:{type:"radio",name:"11",value:"D"}}),t._v("alive dead dead"),t._v("\n 21\n  "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("把“心魔”两个字从杀手的字典里划掉了。")]),a("span",{staticClass:"wrong"},[t._v("精神状态更糟糕了，你仿佛看到了目标的幽灵在身边晃动。")])]),t._v(" "),a("p",[t._v("简单来说，eval 函数分为“直接调用”或“间接调用”两种形式，形如“eval()”的 eval 函数被称为“直接调用”，而“(0, eval)()”则是“间接调用”，两者的不同之处在于变量环境和 this 指向。kangax 的"),a("a",{attrs:{href:"http://perfectionkills.com/global-eval-what-are-the-options/",target:"_blank",rel:"nofollow"}},[t._v("《Global eval. What are the options?》")]),t._v("详细描述了如何区分两者，可以作为指南。规范中则有更详细的算法，见相关章节："),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-function-calls-runtime-semantics-evaluation",target:"_blank",rel:"nofollow"}},[t._v("Function Calls Evaluation")]),t._v("、"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-performeval",target:"_blank",rel:"nofollow"}},[t._v("Runtime Semantics: PerformEval")])]),t._v(" "),a("p",{staticClass:"correct"},[t._v("恭喜你，连续两次平复了内心的情绪波动。现在，你决定把目标搬上车带回家。出于好奇，你翻了翻他的钱包确认身份。等等！他的钱包里怎么会有一张你未婚妻的照片！？")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("12.")]),t._v("SAN 值（理智）狂减！")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// finally 中的 console.log 会输出么？")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return 语句会返回么？")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" san "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("san\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" san\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("san\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("san"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("form",{attrs:{id:"js-100-12",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"12",value:"A"}}),t._v("输出 1，返回 2"),t._v(" "),a("input",{attrs:{type:"radio",name:"12",value:"B"}}),t._v("输出 1，不返回"),t._v(" "),a("input",{attrs:{type:"radio",name:"12",value:"C"}}),t._v("输出 1，返回 1"),t._v(" "),a("input",{attrs:{type:"radio",name:"12",value:"D"}}),t._v("不输出，返回 2"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("冷静下来，把手上的事儿办完再说。")]),a("span",{staticClass:"wrong"},[t._v("接连的打击使你眼前的世界逐渐转为黑白！")])]),t._v(" "),a("p",[t._v(" 这个问题应该是最稀奇古怪的那个品种了。以正常的程序思维是不能理解这种代码的，还是得回到杀手训练营（语言规范）寻找解决办法。\n    "),a("br"),t._v("一般会认为执行到 return 也就会“结束函数运行”，但是这样会破坏“finally”的概念完整性（即：无论如何都要运行）。所以，规范描述 try finally 语句的执行行为的前两步骤，就是分别执行 try 中语句以及 finally 中的语句，然后才是根据两者的返回类型（如抛错、Break、正常返回）来确定整个 try finally 最终返回啥。而执行时，try 中的 return 的值已经确定，所以 finally 中对 san 做出的修改并不会对 try 中的 return 有影响。更详细的内容请查看规范相关章节："),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-try-statement-runtime-semantics-evaluation",target:"_blank",rel:"nofollow"}},[t._v("TryStatement")]),t._v("。\n    "),a("br"),t._v("额外插一句，JS 中不仅仅只有表达式有“值”的概念，其实语句也有（虽然两者的“值”不是同一个东西）。为了方便理解，你可以把 return 语句的“值”想象为“{ type: 'return', value: '...' }”，JS 本身并没有啥 API 能够获取语句的“值”中的 type 属性，你只可以通过形如“eval('\"string\"')”这种语句拿到语句的“值”的值（即 value 属性）。只要你能理解在 JS 中语句也有“值”这种概念，那么就可以想想引擎可以把 return 语句的结果保存下来并传来传去了。")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("来，深呼吸...慢慢地...平静下来。你得继续。")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("13.")]),t._v("来做道数学题吧，恢复一下理智~")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// killer have to be careful")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_SAFE_INTEGER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_SAFE_INTEGER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n")])])]),a("form",{attrs:{id:"js-100-13",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"13",value:"A"}}),t._v("0"),t._v(" "),a("input",{attrs:{type:"radio",name:"13",value:"B"}}),t._v("1"),t._v(" "),a("input",{attrs:{type:"radio",name:"13",value:"C"}}),t._v("2"),t._v(" "),a("input",{attrs:{type:"radio",name:"13",value:"D"}}),t._v("3"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("“做数学题能恢复理智”曾经是数学老师告诉你的办法。啊不过... 不管怎么说，至少这个方法目前为止还是有用的。")]),a("span",{staticClass:"wrong"},[t._v("!(看到数学题，脑袋变得理智啦)~")])]),t._v(" "),a("p",[t._v("第一个问题非常经典，同时也不仅仅只有 JS 中有这种问题。一句话解释就是：JS 的数值系统采用 IEEE 754 双精度浮点数标准来储存浮点数，共 64 位，所以某些十进制对应的二进制位数如果很长则不能存得下。这就意味着，我们在 REPL 中输入的十进制数对应的在引擎内中真实存储的值要偏大或偏小一些。所以我们实际上是在比较：一个约等于 0.1 的数加一个约等于 0.2 的数是否为一个约等于 0.3 的数。至于结果呢，你应该手动计算一下~\n    "),a("br"),t._v("第二个、第三个问题也非常经典（废话），更多细节见 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER",target:"_blank",rel:"nofollow"}},[t._v("MDN Number.MAX_SAFE_INTEGER")]),t._v("、"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE",target:"_blank",rel:"nofollow"}},[t._v("MDN Number.MAX_VALUE")]),t._v("。")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("14.")]),t._v("把“行李”搬到后备箱，回家！")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("drivetime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nisArived "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'go'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isArived "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("drivetime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isArived"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'home'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("form",{attrs:{id:"js-100-14",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"14",value:"A"}}),t._v("'go','home'"),t._v(" "),a("input",{attrs:{type:"radio",name:"14",value:"B"}}),t._v("'go'"),t._v(" "),a("input",{attrs:{type:"radio",name:"14",value:"C"}}),t._v("'home'"),t._v(" "),a("input",{attrs:{type:"radio",name:"14",value:"D"}}),t._v("Empty Log"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("钥匙插上，回归 80 迈！")]),a("span",{staticClass:"wrong"},[t._v("街对面似乎传来警笛声，握紧方向盘的手心冒出了汗。")])]),t._v(" "),a("p",[t._v("事件循环（Event Loop），老生常谈的话题了，网上能找到一堆解释："),a("a",{attrs:{href:"https://github.com/stephentian/33-js-concepts#17-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF",target:"_blank",rel:"nofollow"}},[t._v("《JS 开发者应懂的33个概念：消息队列和事件循环》")]),t._v("。有意思的一点是，它是 HTML5 规范定义的，而不是 ES 规范。细想一番倒也能理解，因为计时器是由宿主环境提供的，和 JavaScript 语言本身无关。")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("目前为止你都很棒，杀手！再回答最后一个问题，你就能安全到家了。")])])]),t._v(" "),a("p",[a("b",[a("span",{staticClass:"label-idx"},[t._v("15.")]),t._v("开车时需要避开路上的井盖！")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DEX + 100！")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hole'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hole'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n")])])]),a("form",{attrs:{id:"js-100-15",action:"",onsubmit:"return false"}},[a("label",[t._v("请选择答案：")]),t._v(" "),a("input",{attrs:{type:"radio",name:"15",value:"A"}}),t._v("0"),t._v(" "),a("input",{attrs:{type:"radio",name:"15",value:"B"}}),t._v("1"),t._v(" "),a("input",{attrs:{type:"radio",name:"15",value:"C"}}),t._v("2"),t._v(" "),a("input",{attrs:{type:"radio",name:"15",value:"D"}}),t._v("3"),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[a("span",{staticClass:"correct"},[t._v("到家啦，任务完成！")]),a("span",{staticClass:"wrong"},[t._v("车子卡在了某个神奇的角落。不出一会儿，你就被警察逮住了~")])]),t._v(" "),a("p",[t._v("数值比较时，正负零相等；转为字符串，不会带符号，所以第二条也为 true；NaN 不等于 NaN，第三条为 false；Infinity 不等于 -Infinity，最后一条为 false。如果你想在 JS 中区分中某个“零”是正零还是负零，那么就可以使用第四条代码演示的除法规则。")]),t._v(" "),a("p",{staticClass:"correct"},[t._v("恭喜你，杀手，成功通过试炼！")])])]),t._v(" "),a("h2",{attrs:{id:"阅读更多"}},[t._v("阅读更多")]),t._v(" "),a("p",[t._v("Hi，还好吗，"),a("del",[t._v("多喝热水")]),t._v("感觉如何？有没有喜欢上这种风格别具一格的挑战呢？")]),t._v(" "),a("p",[t._v("虽然说试炼中的每道题背后的语言细节可能只是规范中一个段落，一句话，甚至一行标准所描述的内容，和编程实践几乎毫不相干，但实际上我只是想引起你对语言规范的兴趣。语言规范十分有意思，学习规范也可以帮助你更深入理解这门语言，理解引擎的工作机理、AST 的具体表现以及各类框架代码中的黑科技，而不仅仅只是成为语言本身的使用者。 共勉。")]),t._v(" "),a("p",[t._v("如果你仍意犹未尽，可以继续试试这些难题（内内，别忘了先给我点赞投币关注三连呐）：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://perfectionkills.com/javascript-quiz/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript Quiz（2013）")])]),t._v(" "),a("li",[a("a",{attrs:{href:"http://javascript-puzzlers.herokuapp.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript Puzzlers")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);