(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{868:function(a,t,e){"use strict";e.r(t);var r=e(0),s=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"面向对象"}},[a._v("面向对象")]),a._v(" "),t("nav",{staticClass:"table-of-contents"},[t("ol",[t("li",[t("a",{attrs:{href:"#面向对象"}},[a._v("面向对象")]),t("ol",[t("li",[t("a",{attrs:{href:"#uml"}},[a._v("UML")])]),t("li",[t("a",{attrs:{href:"#设计原则"}},[a._v("设计原则")]),t("ol",[t("li",[t("a",{attrs:{href:"#组合优于继承"}},[a._v("组合优于继承")])])])])])])])]),t("h2",{attrs:{id:"uml"}},[a._v("UML")]),a._v(" "),t("p",[a._v("类之间的关系总的来说可以包含这几种：")]),a._v(" "),t("ul",[t("li",[a._v("A依赖B：对类B的修改会影响到类A")]),a._v(" "),t("li",[a._v("A关联B：对象A知道对象B，类A依赖于类B")]),a._v(" "),t("li",[a._v("A聚合B：对象A由B构成，类A依赖于类B")]),a._v(" "),t("li",[a._v("A组合B：对象A由B构成且管理B的生命周期，类A依赖于类B")]),a._v(" "),t("li",[a._v("A实现B：对象A可视为对象B，类A定义了接口B声明的方法，类A依赖于类B")]),a._v(" "),t("li",[a._v("A继承B：对象A可视为对象B，类A继承类B的接口和实现，还可以对其扩展，类A依赖于类B")])]),a._v(" "),t("figure",{attrs:{"data-type":"image"}},[t("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/b3612320-5822-48fc-8041-ead5c269f8e5.svg",alt:"",loading:"lazy"}}),t("figcaption",[t("a",{attrs:{href:"https://www.processon.com/diagraming/614de5c01efad403f3727f1c",target:"_blank",rel:"noopener noreferrer"}},[a._v("Class Relations")])])]),a._v(" "),t("figure",{attrs:{"data-type":"image"}},[t("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/cff33e77-e9aa-48eb-ae0d-01dd1561abd0.svg",alt:"",loading:"lazy"}}),t("figcaption",[t("a",{attrs:{href:"https://www.processon.com/diagraming/614df346e0b34d7b34328c22",target:"_blank",rel:"noopener noreferrer"}},[a._v("Object Relations")])])]),a._v(" "),t("h2",{attrs:{id:"设计原则"}},[a._v("设计原则")]),a._v(" "),t("p",[a._v("什么是优秀的软件设计？")]),a._v(" "),t("p",[a._v("显然，在不同的公司、不同的项目，软件设计并没有一个恒定的标准，不过总的来说我们会讨论代码复用以及代码的扩展性。")]),a._v(" "),t("p",[a._v("有几个基础的设计准则能帮助你做到这两点：")]),a._v(" "),t("ul",[t("li",[a._v("封装变化：找到程序中易变的内容并将其和不变的内容区分开来")]),a._v(" "),t("li",[a._v("面向接口：依赖抽象通常优于依赖具体")]),a._v(" "),t("li",[a._v("优先组合：组合优于继承，因为继承有着挺多保守诟病之处")]),a._v(" "),t("li",[a._v("SOLID原则")])]),a._v(" "),t("h3",{attrs:{id:"组合优于继承"}},[a._v("组合优于继承")]),a._v(" "),t("p",[a._v("继承通常会引发大量问题：")]),a._v(" "),t("ul",[t("li",[a._v("子类不能减少父类的接口，并且需要保证兼容")]),a._v(" "),t("li",[a._v("继承使状态逃离了父类的封装，子类和父类关系过于紧密")]),a._v(" "),t("li",[a._v("继承经常被滥用，导致平行继承体系的出现")])]),a._v(" "),t("p",[a._v("假设你在售卖一些计算机，这些计算机包含笔记本，台式电脑以及算盘！")]),a._v(" "),t("p",[a._v("如果使用继承的思路组织代码，你很可能对得到以下结构：")]),a._v(" "),t("figure",{attrs:{"data-type":"image"}},[t("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/348faf14-874b-410d-b4b9-ff00b04ab14e.svg",alt:"",loading:"lazy"}}),t("figcaption",[t("a",{attrs:{href:"https://www.processon.com/diagraming/614e0c510791290c0c424dc2",target:"_blank",rel:"noopener noreferrer"}},[a._v("Computor Structure V1")])])]),a._v(" "),t("p",[a._v("使用组合可以方便地把不同的“维度”之间的并行关联拆分出来，降低代码复杂度：")]),a._v(" "),t("figure",{attrs:{"data-type":"image"}},[t("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/6cbffe1a-8efd-4de6-9ed3-bfef8392bab5.svg",alt:"",loading:"lazy"}}),t("figcaption",[t("a",{attrs:{href:"https://www.processon.com/diagraming/614e080b637689481b658be2",target:"_blank",rel:"noopener noreferrer"}},[a._v("Computor Structure V2")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);