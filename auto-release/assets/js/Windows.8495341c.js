(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{924:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"windows"}},[t._v("Windows")]),t._v(" "),a("nav",{staticClass:"table-of-contents"},[a("ol",[a("li",[a("a",{attrs:{href:"#windows"}},[t._v("Windows")]),a("ol",[a("li",[a("a",{attrs:{href:"#操作系统"}},[t._v("操作系统")]),a("ol",[a("li",[a("a",{attrs:{href:"#硬链接-软链接-符号链接"}},[t._v("硬链接、软链接、符号链接")])])])]),a("li",[a("a",{attrs:{href:"#环境变量"}},[t._v("环境变量")]),a("ol",[a("li",[a("a",{attrs:{href:"#怎样才能直接运行环境变量path中目录的子目录中的程序"}},[t._v("《怎样才能直接运行环境变量Path中目录的子目录中的程序》")])])])])])])])]),a("h2",{attrs:{id:"操作系统"}},[t._v("操作系统")]),t._v(" "),a("h3",{attrs:{id:"硬链接、软链接、符号链接"}},[t._v("硬链接、软链接、符号链接")]),t._v(" "),a("p",[t._v("🔗 硬链接使得一个一个文件有多个访问入口。当所有入口被删除时，文件才真正被删除。")]),t._v(" "),a("p",[t._v("👍：兼容性好、不受盘符影响\n"),a("br"),t._v("\n👎：不支持文件夹、只支持本地驱动器的相同分区")]),t._v(" "),a("p",[t._v("🔗 软链接（如 Junction）将对文件夹进行重定向。类似于环境变量，外部程序并不会知道自己在处理一个软链接。")]),t._v(" "),a("p",[t._v("👍：兼容性不错、支持文件夹和文件（Junction 支持文件夹）、支持跨分区\n"),a("br"),t._v("\n👎：不支持相对路径、受盘符影响、某些系统的核心文件夹不支持软链接")]),t._v(" "),a("p",[t._v("🔗 符号链接是软链接的升级版。")]),t._v(" "),a("p",[t._v("👍：支持任意路径，甚至是不存在的路径\n"),a("br"),t._v("\n👎：兼容性较差、需要管理员权限")]),t._v(" "),a("h2",{attrs:{id:"环境变量"}},[t._v("环境变量")]),t._v(" "),a("h5",{attrs:{id:"《怎样才能直接运行环境变量path中目录的子目录中的程序》"}},[a("Link",{attrs:{type:"h5",to:"https://mgear-file.oss-cn-shanghai.aliyuncs.com/%E6%80%8E%E6%A0%B7%E6%89%8D%E8%83%BD%E7%9B%B4%E6%8E%A5%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8FPath%E4%B8%AD%E7%9B%AE%E5%BD%95%E7%9A%84%E5%AD%90%E7%9B%AE%E5%BD%95%E4%B8%AD%E7%9A%84%E7%A8%8B%E5%BA%8F_CSDN%E7%A4%BE%E5%8C%BA.html",source:"https://bbs.csdn.net/topics/390354388"}},[t._v("《怎样才能直接运行环境变量Path中目录的子目录中的程序》")])],1),t._v(" "),a("p",[t._v("怎么样在 cmd 中直接访问某文件夹及其子文件夹下所有程序呢？当然是把它们添加到环境变量里面啦~")]),t._v(" "),a("p",[t._v("文中有一段简单的 cmd 脚本用来递归查找文件夹下所有目录，这之后可以把这些目录添加的 Path 中，这样，目录下的程序就可以直接访问了。")]),t._v(" "),a("p",[a("strong",[t._v("自动设置环境变量脚本")]),t._v("：我的需求和文章描述的不太一样。首先我在 OneDrive 里有一个 Code 的文件夹，装了诸如 Python2、Python3、NodeJS 等许许多多的依赖文件，我想通过脚本一次性全部将他们加入 CodeBin 变量下。以下是我的代码，十分简陋，仅供参考思路。")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210917151711.png?type=win11",alt:"",loading:"lazy"}}),a("figcaption",[t._v("C:\\Users\\lionad\\OneDrive\\Code")])]),t._v(" "),a("p",[t._v("首先，在“文档\\WindowsPowerShell”目录下新建“Custom\\Set-Env.ps1”脚本，写好设置环境变量的函数。")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("param")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v(" = $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'全局变量键名必填'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$path")]),t._v(" = $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'路径必填'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否覆盖源键值对")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$overwrite")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$False")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name='),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path='),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$path")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"overwrite='),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$overwrite")]),t._v('"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取所有子文件夹")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$values")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test-path")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get-ChildItem")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$path")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Where-Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-ne")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FileInfo'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ForEach-Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FullName "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$path")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否合并原有数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$old")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[environment]")]),t._v("::GetEnvironmentVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Machine'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$val")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$overwrite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$values")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-join")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("';'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$old")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$values")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-join")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("';'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 去除重复")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$washed")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("';'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sort-Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("unique"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-join")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("';'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write-Output")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[Set-Env] "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$washed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置环境变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[environment]")]),t._v("::SetEnvironmentVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$washed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Machine'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("然后，修改“文档\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1”文件。这个文件会在打开 PowerShell 时自动执行，我把它理解为用户的全局配置。")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行脚本并等待结果")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" Execution "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$scripts")]),t._v(" = @"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$jobs")]),t._v(" = @"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$script")]),t._v(" in "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$scripts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$jobs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start-Job")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("FilePath "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ArgumentList "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("args\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Wait-Job")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$jobs")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$job")]),t._v(" in "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 60\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Receive Job Script output:"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Receive-Job")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$job")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置环境变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Set-Env")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[String]")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v(" = $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Args Error, env keyname should be an String"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[String]")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),t._v("= $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Args Error, path should be an String"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Boolean]")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$overwrite")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$False")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$customdir")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Join-Path")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Path "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$profiledir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ChildPath "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Custom/'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$script")]),t._v(" = @"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    path = "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Join-Path")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Path "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$customdir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ChildPath "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Set-Env.ps1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    args = @"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$overwrite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  Execution"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这之后，保存并重启 PowerShell，就可以愉快的调用 set-env 函数了。")]),t._v(" "),a("p",[t._v("测试一下我们的脚本能不能跑通。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("env "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C:\\\\Users\\\\18062\\\\OneDrive\\\\WebSaver"')]),t._v("\n")])])]),a("p",[t._v("脚本返回了内容，再查看一下环境变量，也没啥问题~")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210917152840.png?type=win11-square",alt:"",loading:"lazy"}}),a("figcaption",[t._v("test")])]),t._v(" "),a("p",[a("strong",[t._v("防止单个环境变量过于臃肿")]),t._v("：我没记错的话，单个环境变量的值长度是有限的，很容易就超过了。所以一半不会直接把一段常常的文本记录到 Path 变量下，而是在 Path 下再引用一个新的环境变量。")]),t._v(" "),a("p",[t._v("我在 Path 变量下引用了 CodeBin 变量：")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210917150802.png?type=win11",alt:"",loading:"lazy"}}),a("figcaption",[t._v("Path")])]),t._v(" "),a("p",[t._v("在 CodeBin 变量里面塞满其它路径，不至于撑爆 Path 变量：")]),t._v(" "),a("figure",{attrs:{"data-type":"image"}},[a("img",{attrs:{src:"https://mgear-image.oss-cn-shanghai.aliyuncs.com/image/other/20210917150717.png?type=win11",alt:"",loading:"lazy"}}),a("figcaption",[t._v("CodeBin")])])])}),[],!1,null,null,null);a.default=e.exports}}]);